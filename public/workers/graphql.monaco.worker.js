parcelRequire = (function (e, r, t, n) {
  var i,
    o = 'function' == typeof parcelRequire && parcelRequire,
    u = 'function' == typeof require && require;
  function f(t, n) {
    if (!r[t]) {
      if (!e[t]) {
        var i = 'function' == typeof parcelRequire && parcelRequire;
        if (!n && i) return i(t, !0);
        if (o) return o(t, !0);
        if (u && 'string' == typeof t) return u(t);
        var c = new Error("Cannot find module '" + t + "'");
        throw ((c.code = 'MODULE_NOT_FOUND'), c);
      }
      (p.resolve = function (r) {
        return e[t][1][r] || r;
      }),
        (p.cache = {});
      var l = (r[t] = new f.Module(t));
      e[t][0].call(l.exports, p, l, l.exports, this);
    }
    return r[t].exports;
    function p(e) {
      return f(p.resolve(e));
    }
  }
  (f.isParcelRequire = !0),
    (f.Module = function (e) {
      (this.id = e), (this.bundle = f), (this.exports = {});
    }),
    (f.modules = e),
    (f.cache = r),
    (f.parent = o),
    (f.register = function (r, t) {
      e[r] = [
        function (e, r) {
          r.exports = t;
        },
        {},
      ];
    });
  for (var c = 0; c < t.length; c++)
    try {
      f(t[c]);
    } catch (e) {
      i || (i = e);
    }
  if (t.length) {
    var l = f(t[t.length - 1]);
    'object' == typeof exports && 'undefined' != typeof module
      ? (module.exports = l)
      : 'function' == typeof define && define.amd
      ? define(function () {
          return l;
        })
      : n && (this[n] = l);
  }
  if (((parcelRequire = f), i)) throw i;
  return f;
})(
  {
    g5IB: [
      function (require, module, exports) {
        var t,
          e,
          n = (module.exports = {});
        function r() {
          throw new Error('setTimeout has not been defined');
        }
        function o() {
          throw new Error('clearTimeout has not been defined');
        }
        function i(e) {
          if (t === setTimeout) return setTimeout(e, 0);
          if ((t === r || !t) && setTimeout)
            return (t = setTimeout), setTimeout(e, 0);
          try {
            return t(e, 0);
          } catch (n) {
            try {
              return t.call(null, e, 0);
            } catch (n) {
              return t.call(this, e, 0);
            }
          }
        }
        function u(t) {
          if (e === clearTimeout) return clearTimeout(t);
          if ((e === o || !e) && clearTimeout)
            return (e = clearTimeout), clearTimeout(t);
          try {
            return e(t);
          } catch (n) {
            try {
              return e.call(null, t);
            } catch (n) {
              return e.call(this, t);
            }
          }
        }
        !(function () {
          try {
            t = 'function' == typeof setTimeout ? setTimeout : r;
          } catch (n) {
            t = r;
          }
          try {
            e = 'function' == typeof clearTimeout ? clearTimeout : o;
          } catch (n) {
            e = o;
          }
        })();
        var c,
          s = [],
          l = !1,
          a = -1;
        function f() {
          l &&
            c &&
            ((l = !1),
            c.length ? (s = c.concat(s)) : (a = -1),
            s.length && h());
        }
        function h() {
          if (!l) {
            var t = i(f);
            l = !0;
            for (var e = s.length; e; ) {
              for (c = s, s = []; ++a < e; ) c && c[a].run();
              (a = -1), (e = s.length);
            }
            (c = null), (l = !1), u(t);
          }
        }
        function m(t, e) {
          (this.fun = t), (this.array = e);
        }
        function p() {}
        (n.nextTick = function (t) {
          var e = new Array(arguments.length - 1);
          if (arguments.length > 1)
            for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
          s.push(new m(t, e)), 1 !== s.length || l || i(h);
        }),
          (m.prototype.run = function () {
            this.fun.apply(null, this.array);
          }),
          (n.title = 'browser'),
          (n.env = {}),
          (n.argv = []),
          (n.version = ''),
          (n.versions = {}),
          (n.on = p),
          (n.addListener = p),
          (n.once = p),
          (n.off = p),
          (n.removeListener = p),
          (n.removeAllListeners = p),
          (n.emit = p),
          (n.prependListener = p),
          (n.prependOnceListener = p),
          (n.listeners = function (t) {
            return [];
          }),
          (n.binding = function (t) {
            throw new Error('process.binding is not supported');
          }),
          (n.cwd = function () {
            return '/';
          }),
          (n.chdir = function (t) {
            throw new Error('process.chdir is not supported');
          }),
          (n.umask = function () {
            return 0;
          });
      },
      {},
    ],
    P4Xe: [
      function (require, module, exports) {
        var process = require('process');
        var global = arguments[3];
        var define;
        var e,
          t = require('process'),
          n = arguments[3];
        function r(e, t) {
          if (e) {
            if ('string' == typeof e) return i(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return (
              'Object' === n && e.constructor && (n = e.constructor.name),
              'Map' === n || 'Set' === n
                ? Array.from(n)
                : 'Arguments' === n ||
                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                ? i(e, t)
                : void 0
            );
          }
        }
        function i(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
          return r;
        }
        function o(e) {
          var t = 0;
          if ('undefined' == typeof Symbol || null == e[Symbol.iterator]) {
            if (Array.isArray(e) || (e = r(e)))
              return function () {
                return t >= e.length
                  ? { done: !0 }
                  : { done: !1, value: e[t++] };
              };
            throw new TypeError(
              'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
            );
          }
          return (t = e[Symbol.iterator]()).next.bind(t);
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.initialize = On),
          (exports.importScript = exports.BaseWorker = void 0);
        var s = (function () {
          function e(e, t) {
            (this.ctx = void 0),
              (this.options = void 0),
              (this.ctx = e),
              (this.options = t);
          }
          var t = e.prototype;
          return (
            (t.getModels = function () {
              return this.ctx.getMirrorModels();
            }),
            (t.getModel = function (e) {
              for (
                var t,
                  n = function () {
                    var n = t.value;
                    if (n.uri.toString() === e)
                      return (
                        Object.assign(n, {
                          getFullModelRange: function () {
                            return {
                              startLineNumber: 1,
                              endLineNumber: n.getLineCount(),
                              startColumn: 1,
                              endColumn:
                                n.getLineContent(n.getLineCount() - 1).length +
                                1,
                            };
                          },
                        }),
                        { v: n }
                      );
                  },
                  r = o(this.getModels());
                !(t = r()).done;

              ) {
                var i = n();
                if ('object' == typeof i) return i.v;
              }
              return null;
            }),
            (t.getText = function (e) {
              var t;
              return (
                (null === (t = this.getModel(e)) || void 0 === t
                  ? void 0
                  : t.getValue()) || ''
              );
            }),
            (t.provide = function (e, t) {
              var n = 'provide' + e.charAt(0).toUpperCase() + e.slice(1);
              if (this[n]) {
                for (
                  var r,
                    i = arguments.length,
                    o = new Array(i > 2 ? i - 2 : 0),
                    s = 2;
                  s < i;
                  s++
                )
                  o[s - 2] = arguments[s];
                return (r = this)[n].apply(r, [this.getModel(t)].concat(o));
              }
              return console.error('No provider for ' + e), null;
            }),
            (t.resolve = function (e, t) {
              var n = 'resolve' + e.charAt(0).toUpperCase() + e.slice(1);
              if (this[n]) {
                for (
                  var r,
                    i = arguments.length,
                    o = new Array(i > 2 ? i - 2 : 0),
                    s = 2;
                  s < i;
                  s++
                )
                  o[s - 2] = arguments[s];
                return (r = this)[n].apply(r, [this.getModel(t)].concat(o));
              }
              return console.error('No resolver for ' + e), null;
            }),
            e
          );
        })();
        exports.BaseWorker = s;
        var u = (function () {
            function e() {
              (this.listeners = []),
                (this.unexpectedErrorHandler = function (e) {
                  setTimeout(function () {
                    if (e.stack) throw new Error(e.message + '\n\n' + e.stack);
                    throw e;
                  }, 0);
                });
            }
            return (
              (e.prototype.emit = function (e) {
                this.listeners.forEach(function (t) {
                  t(e);
                });
              }),
              (e.prototype.onUnexpectedError = function (e) {
                this.unexpectedErrorHandler(e), this.emit(e);
              }),
              (e.prototype.onUnexpectedExternalError = function (e) {
                this.unexpectedErrorHandler(e);
              }),
              e
            );
          })(),
          a = new u();
        function l(e) {
          c(e) || a.onUnexpectedError(e);
        }
        function h(e) {
          return e instanceof Error
            ? {
                $isError: !0,
                name: e.name,
                message: e.message,
                stack: e.stacktrace || e.stack,
              }
            : e;
        }
        var f = 'Canceled';
        function c(e) {
          return e instanceof Error && e.name === f && e.message === f;
        }
        function d(e) {
          return e;
        }
        function m(e) {
          return Array.isArray(e)
            ? (e.forEach(function (e) {
                e && e.dispose();
              }),
              [])
            : e
            ? (e.dispose(), e)
            : void 0;
        }
        function p() {
          for (var e = [], t = 0; t < arguments.length; t++)
            e[t] = arguments[t];
          return d({
            dispose: function () {
              return m(e);
            },
          });
        }
        function g(e) {
          return d({
            dispose: function () {
              e();
            },
          });
        }
        var _ = (function () {
            function e() {
              (this._toDispose = new Set()), (this._isDisposed = !1);
            }
            return (
              (e.prototype.dispose = function () {
                this._isDisposed || ((this._isDisposed = !0), this.clear());
              }),
              (e.prototype.clear = function () {
                this._toDispose.forEach(function (e) {
                  return e.dispose();
                }),
                  this._toDispose.clear();
              }),
              (e.prototype.add = function (e) {
                if (!e) return e;
                if (e === this)
                  throw new Error('Cannot register a disposable on itself!');
                return (
                  this._isDisposed
                    ? console.warn(
                        new Error(
                          'Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!'
                        ).stack
                      )
                    : this._toDispose.add(e),
                  e
                );
              }),
              e
            );
          })(),
          v = (function () {
            function e() {
              this._store = new _();
            }
            return (
              (e.prototype.dispose = function () {
                this._store.dispose();
              }),
              (e.prototype._register = function (e) {
                if (e === this)
                  throw new Error('Cannot register a disposable on itself!');
                return this._store.add(e);
              }),
              (e.None = Object.freeze({ dispose: function () {} })),
              e
            );
          })(),
          y = (function () {
            function e() {
              this._isDisposed = !1;
            }
            return (
              Object.defineProperty(e.prototype, 'value', {
                get: function () {
                  return this._isDisposed ? void 0 : this._value;
                },
                set: function (e) {
                  this._isDisposed ||
                    e === this._value ||
                    (this._value && this._value.dispose(), (this._value = e));
                },
                enumerable: !0,
                configurable: !0,
              }),
              (e.prototype.clear = function () {
                this.value = void 0;
              }),
              (e.prototype.dispose = function () {
                (this._isDisposed = !0),
                  this._value && this._value.dispose(),
                  (this._value = void 0);
              }),
              e
            );
          })(),
          C = 'en',
          b = !1,
          L = !1,
          N = !1,
          E = !1,
          S = void 0,
          w = C,
          A = void 0,
          O = void 0,
          M =
            void 0 !== t &&
            void 0 !== t.versions &&
            void 0 !== t.versions.electron &&
            'renderer' === t.type;
        if ('object' != typeof navigator || M) {
          if ('object' == typeof t) {
            (b = 'win32' === t.platform),
              (L = 'darwin' === t.platform),
              (N = 'linux' === t.platform),
              (S = C),
              (w = C);
            var x = '{"locale":"en","availableLanguages":{}}';
            if (x)
              try {
                var P = JSON.parse(x),
                  T = P.availableLanguages['*'];
                (S = P.locale), (w = T || C), (A = P._translationsConfigFile);
              } catch (Mn) {}
          }
        } else
          (b = (O = navigator.userAgent).indexOf('Windows') >= 0),
            (L = O.indexOf('Macintosh') >= 0),
            (E =
              O.indexOf('Macintosh') >= 0 &&
              !!navigator.maxTouchPoints &&
              navigator.maxTouchPoints > 0),
            (N = O.indexOf('Linux') >= 0),
            (w = S = navigator.language);
        var I = b,
          R = 'object' == typeof self ? self : 'object' == typeof n ? n : {},
          k = R,
          U = (function () {
            if (k.setImmediate) return k.setImmediate.bind(k);
            if ('function' == typeof k.postMessage && !k.importScripts) {
              var e = [];
              k.addEventListener('message', function (t) {
                if (t.data && t.data.vscodeSetImmediateId)
                  for (var n = 0, r = e.length; n < r; n++) {
                    var i = e[n];
                    if (i.id === t.data.vscodeSetImmediateId)
                      return e.splice(n, 1), void i.callback();
                  }
              });
              var n = 0;
              return function (t) {
                var r = ++n;
                e.push({ id: r, callback: t }),
                  k.postMessage({ vscodeSetImmediateId: r }, '*');
              };
            }
            if (void 0 !== t && 'function' == typeof t.nextTick)
              return t.nextTick.bind(t);
            var r = Promise.resolve();
            return function (e) {
              return r.then(e);
            };
          })();
        function D(e) {
          for (
            var t = [], n = Object.getPrototypeOf(e);
            Object.prototype !== n;

          )
            (t = t.concat(Object.getOwnPropertyNames(n))),
              (n = Object.getPrototypeOf(n));
          return t;
        }
        function F(e) {
          for (var t = [], n = 0, r = D(e); n < r.length; n++) {
            var i = r[n];
            'function' == typeof e[i] && t.push(i);
          }
          return t;
        }
        function K(e, t) {
          for (
            var n = function (e) {
                return function () {
                  var n = Array.prototype.slice.call(arguments, 0);
                  return t(e, n);
                };
              },
              r = {},
              i = 0,
              o = e;
            i < o.length;
            i++
          ) {
            var s = o[i];
            r[s] = n(s);
          }
          return r;
        }
        var q = (function () {
            var e = function (t, n) {
              return (e =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (e, t) {
                    e.__proto__ = t;
                  }) ||
                function (e, t) {
                  for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                })(t, n);
            };
            return function (t, n) {
              function r() {
                this.constructor = t;
              }
              e(t, n),
                (t.prototype =
                  null === n
                    ? Object.create(n)
                    : ((r.prototype = n.prototype), new r()));
            };
          })(),
          W = '$initialize',
          B = (function () {
            function e(e) {
              (this._workerId = -1),
                (this._handler = e),
                (this._lastSentReq = 0),
                (this._pendingReplies = Object.create(null));
            }
            return (
              (e.prototype.setWorkerId = function (e) {
                this._workerId = e;
              }),
              (e.prototype.sendMessage = function (e, t) {
                var n = this,
                  r = String(++this._lastSentReq);
                return new Promise(function (i, o) {
                  (n._pendingReplies[r] = { resolve: i, reject: o }),
                    n._send({
                      vsWorker: n._workerId,
                      req: r,
                      method: e,
                      args: t,
                    });
                });
              }),
              (e.prototype.handleMessage = function (e) {
                e &&
                  e.vsWorker &&
                  ((-1 !== this._workerId && e.vsWorker !== this._workerId) ||
                    this._handleMessage(e));
              }),
              (e.prototype._handleMessage = function (e) {
                var t = this;
                if (e.seq) {
                  var n = e;
                  if (!this._pendingReplies[n.seq])
                    return void console.warn('Got reply to unknown seq');
                  var r = this._pendingReplies[n.seq];
                  if ((delete this._pendingReplies[n.seq], n.err)) {
                    var i = n.err;
                    return (
                      n.err.$isError &&
                        (((i = new Error()).name = n.err.name),
                        (i.message = n.err.message),
                        (i.stack = n.err.stack)),
                      void r.reject(i)
                    );
                  }
                  r.resolve(n.res);
                } else {
                  var o = e,
                    s = o.req;
                  this._handler.handleMessage(o.method, o.args).then(
                    function (e) {
                      t._send({
                        vsWorker: t._workerId,
                        seq: s,
                        res: e,
                        err: void 0,
                      });
                    },
                    function (e) {
                      e.detail instanceof Error && (e.detail = h(e.detail)),
                        t._send({
                          vsWorker: t._workerId,
                          seq: s,
                          res: void 0,
                          err: h(e),
                        });
                    }
                  );
                }
              }),
              (e.prototype._send = function (e) {
                var t = [];
                if (e.req)
                  for (var n = e, r = 0; r < n.args.length; r++)
                    n.args[r] instanceof ArrayBuffer && t.push(n.args[r]);
                else (n = e).res instanceof ArrayBuffer && t.push(n.res);
                this._handler.sendMessage(e, t);
              }),
              e
            );
          })(),
          H = (function (e) {
            function t(t, n, r) {
              var i = e.call(this) || this,
                o = null;
              (i._worker = i._register(
                t.create(
                  'vs/base/common/worker/simpleWorker',
                  function (e) {
                    i._protocol.handleMessage(e);
                  },
                  function (e) {
                    o && o(e);
                  }
                )
              )),
                (i._protocol = new B({
                  sendMessage: function (e, t) {
                    i._worker.postMessage(e, t);
                  },
                  handleMessage: function (e, t) {
                    if ('function' != typeof r[e])
                      return Promise.reject(
                        new Error(
                          'Missing method ' + e + ' on main thread host.'
                        )
                      );
                    try {
                      return Promise.resolve(r[e].apply(r, t));
                    } catch (Mn) {
                      return Promise.reject(Mn);
                    }
                  },
                })),
                i._protocol.setWorkerId(i._worker.getId());
              var s = null;
              void 0 !== self.require &&
              'function' == typeof self.require.getConfig
                ? (s = self.require.getConfig())
                : void 0 !== self.requirejs &&
                  (s = self.requirejs.s.contexts._.config);
              var u = F(r);
              i._onModuleLoaded = i._protocol.sendMessage(W, [
                i._worker.getId(),
                JSON.parse(JSON.stringify(s)),
                n,
                u,
              ]);
              var a = function (e, t) {
                return i._request(e, t);
              };
              return (
                (i._lazyProxy = new Promise(function (e, t) {
                  (o = t),
                    i._onModuleLoaded.then(
                      function (t) {
                        e(K(t, a));
                      },
                      function (e) {
                        t(e), i._onError('Worker failed to load ' + n, e);
                      }
                    );
                })),
                i
              );
            }
            return (
              q(t, e),
              (t.prototype.getProxyObject = function () {
                return this._lazyProxy;
              }),
              (t.prototype._request = function (e, t) {
                var n = this;
                return new Promise(function (r, i) {
                  n._onModuleLoaded.then(function () {
                    n._protocol.sendMessage(e, t).then(r, i);
                  }, i);
                });
              }),
              (t.prototype._onError = function (e, t) {
                console.error(e), console.info(t);
              }),
              t
            );
          })(v),
          Y = (function () {
            function e(e, t) {
              var n = this;
              (this._requestHandlerFactory = t),
                (this._requestHandler = null),
                (this._protocol = new B({
                  sendMessage: function (t, n) {
                    e(t, n);
                  },
                  handleMessage: function (e, t) {
                    return n._handleMessage(e, t);
                  },
                }));
            }
            return (
              (e.prototype.onmessage = function (e) {
                this._protocol.handleMessage(e);
              }),
              (e.prototype._handleMessage = function (e, t) {
                if (e === W) return this.initialize(t[0], t[1], t[2], t[3]);
                if (
                  !this._requestHandler ||
                  'function' != typeof this._requestHandler[e]
                )
                  return Promise.reject(
                    new Error('Missing requestHandler or method: ' + e)
                  );
                try {
                  return Promise.resolve(
                    this._requestHandler[e].apply(this._requestHandler, t)
                  );
                } catch (Mn) {
                  return Promise.reject(Mn);
                }
              }),
              (e.prototype.initialize = function (e, t, n, r) {
                var i = this;
                this._protocol.setWorkerId(e);
                var o = K(r, function (e, t) {
                  return i._protocol.sendMessage(e, t);
                });
                return this._requestHandlerFactory
                  ? ((this._requestHandler = this._requestHandlerFactory(o)),
                    Promise.resolve(F(this._requestHandler)))
                  : (t &&
                      (void 0 !== t.baseUrl && delete t.baseUrl,
                      void 0 !== t.paths &&
                        void 0 !== t.paths.vs &&
                        delete t.paths.vs,
                      (t.catchError = !0),
                      self.require.config(t)),
                    new Promise(function (e, t) {
                      self.require(
                        [n],
                        function (n) {
                          (i._requestHandler = n.create(o)),
                            i._requestHandler
                              ? e(F(i._requestHandler))
                              : t(new Error('No RequestHandler!'));
                        },
                        t
                      );
                    }));
              }),
              e
            );
          })();
        function j(e, t) {
          return G(e, t, 0, e.length - 1, []), e;
        }
        function V(e, t, n, r, i, o) {
          for (var s = n, u = r + 1, a = n; a <= i; a++) o[a] = e[a];
          for (a = n; a <= i; a++)
            s > r
              ? (e[a] = o[u++])
              : u > i
              ? (e[a] = o[s++])
              : t(o[u], o[s]) < 0
              ? (e[a] = o[u++])
              : (e[a] = o[s++]);
        }
        function G(e, t, n, r, i) {
          if (!(r <= n)) {
            var o = (n + (r - n) / 2) | 0;
            G(e, t, n, o, i),
              G(e, t, o + 1, r, i),
              t(e[o], e[o + 1]) <= 0 || V(e, t, n, o, r, i);
          }
        }
        var z = (function () {
          function e(e, t, n, r) {
            (this.originalStart = e),
              (this.originalLength = t),
              (this.modifiedStart = n),
              (this.modifiedLength = r);
          }
          return (
            (e.prototype.getOriginalEnd = function () {
              return this.originalStart + this.originalLength;
            }),
            (e.prototype.getModifiedEnd = function () {
              return this.modifiedStart + this.modifiedLength;
            }),
            e
          );
        })();
        function Q(e, t) {
          return ((t << 5) - t + e) | 0;
        }
        function X(e, t) {
          t = Q(149417, t);
          for (var n = 0, r = e.length; n < r; n++) t = Q(e.charCodeAt(n), t);
          return t;
        }
        var Z = (function () {
          function e(e) {
            this.source = e;
          }
          return (
            (e.prototype.getElements = function () {
              for (
                var e = this.source,
                  t = new Int32Array(e.length),
                  n = 0,
                  r = e.length;
                n < r;
                n++
              )
                t[n] = e.charCodeAt(n);
              return t;
            }),
            e
          );
        })();
        function J(e, t, n) {
          return new re(new Z(e), new Z(t)).ComputeDiff(n).changes;
        }
        var $,
          ee = (function () {
            function e() {}
            return (
              (e.Assert = function (e, t) {
                if (!e) throw new Error(t);
              }),
              e
            );
          })(),
          te = (function () {
            function e() {}
            return (
              (e.Copy = function (e, t, n, r, i) {
                for (var o = 0; o < i; o++) n[r + o] = e[t + o];
              }),
              (e.Copy2 = function (e, t, n, r, i) {
                for (var o = 0; o < i; o++) n[r + o] = e[t + o];
              }),
              e
            );
          })(),
          ne = (function () {
            function e() {
              (this.m_changes = []),
                (this.m_originalStart = 1073741824),
                (this.m_modifiedStart = 1073741824),
                (this.m_originalCount = 0),
                (this.m_modifiedCount = 0);
            }
            return (
              (e.prototype.MarkNextChange = function () {
                (this.m_originalCount > 0 || this.m_modifiedCount > 0) &&
                  this.m_changes.push(
                    new z(
                      this.m_originalStart,
                      this.m_originalCount,
                      this.m_modifiedStart,
                      this.m_modifiedCount
                    )
                  ),
                  (this.m_originalCount = 0),
                  (this.m_modifiedCount = 0),
                  (this.m_originalStart = 1073741824),
                  (this.m_modifiedStart = 1073741824);
              }),
              (e.prototype.AddOriginalElement = function (e, t) {
                (this.m_originalStart = Math.min(this.m_originalStart, e)),
                  (this.m_modifiedStart = Math.min(this.m_modifiedStart, t)),
                  this.m_originalCount++;
              }),
              (e.prototype.AddModifiedElement = function (e, t) {
                (this.m_originalStart = Math.min(this.m_originalStart, e)),
                  (this.m_modifiedStart = Math.min(this.m_modifiedStart, t)),
                  this.m_modifiedCount++;
              }),
              (e.prototype.getChanges = function () {
                return (
                  (this.m_originalCount > 0 || this.m_modifiedCount > 0) &&
                    this.MarkNextChange(),
                  this.m_changes
                );
              }),
              (e.prototype.getReverseChanges = function () {
                return (
                  (this.m_originalCount > 0 || this.m_modifiedCount > 0) &&
                    this.MarkNextChange(),
                  this.m_changes.reverse(),
                  this.m_changes
                );
              }),
              e
            );
          })(),
          re = (function () {
            function e(t, n, r) {
              void 0 === r && (r = null),
                (this.ContinueProcessingPredicate = r);
              var i = e._getElements(t),
                o = i[0],
                s = i[1],
                u = i[2],
                a = e._getElements(n),
                l = a[0],
                h = a[1],
                f = a[2];
              (this._hasStrings = u && f),
                (this._originalStringElements = o),
                (this._originalElementsOrHash = s),
                (this._modifiedStringElements = l),
                (this._modifiedElementsOrHash = h),
                (this.m_forwardHistory = []),
                (this.m_reverseHistory = []);
            }
            return (
              (e._isStringArray = function (e) {
                return e.length > 0 && 'string' == typeof e[0];
              }),
              (e._getElements = function (t) {
                var n = t.getElements();
                if (e._isStringArray(n)) {
                  for (
                    var r = new Int32Array(n.length), i = 0, o = n.length;
                    i < o;
                    i++
                  )
                    r[i] = X(n[i], 0);
                  return [n, r, !0];
                }
                return n instanceof Int32Array
                  ? [[], n, !1]
                  : [[], new Int32Array(n), !1];
              }),
              (e.prototype.ElementsAreEqual = function (e, t) {
                return (
                  this._originalElementsOrHash[e] ===
                    this._modifiedElementsOrHash[t] &&
                  (!this._hasStrings ||
                    this._originalStringElements[e] ===
                      this._modifiedStringElements[t])
                );
              }),
              (e.prototype.OriginalElementsAreEqual = function (e, t) {
                return (
                  this._originalElementsOrHash[e] ===
                    this._originalElementsOrHash[t] &&
                  (!this._hasStrings ||
                    this._originalStringElements[e] ===
                      this._originalStringElements[t])
                );
              }),
              (e.prototype.ModifiedElementsAreEqual = function (e, t) {
                return (
                  this._modifiedElementsOrHash[e] ===
                    this._modifiedElementsOrHash[t] &&
                  (!this._hasStrings ||
                    this._modifiedStringElements[e] ===
                      this._modifiedStringElements[t])
                );
              }),
              (e.prototype.ComputeDiff = function (e) {
                return this._ComputeDiff(
                  0,
                  this._originalElementsOrHash.length - 1,
                  0,
                  this._modifiedElementsOrHash.length - 1,
                  e
                );
              }),
              (e.prototype._ComputeDiff = function (e, t, n, r, i) {
                var o = [!1],
                  s = this.ComputeDiffRecursive(e, t, n, r, o);
                return (
                  i && (s = this.PrettifyChanges(s)),
                  { quitEarly: o[0], changes: s }
                );
              }),
              (e.prototype.ComputeDiffRecursive = function (e, t, n, r, i) {
                for (
                  i[0] = !1;
                  e <= t && n <= r && this.ElementsAreEqual(e, n);

                )
                  e++, n++;
                for (; t >= e && r >= n && this.ElementsAreEqual(t, r); )
                  t--, r--;
                if (e > t || n > r) {
                  var o = void 0;
                  return (
                    n <= r
                      ? (ee.Assert(
                          e === t + 1,
                          'originalStart should only be one more than originalEnd'
                        ),
                        (o = [new z(e, 0, n, r - n + 1)]))
                      : e <= t
                      ? (ee.Assert(
                          n === r + 1,
                          'modifiedStart should only be one more than modifiedEnd'
                        ),
                        (o = [new z(e, t - e + 1, n, 0)]))
                      : (ee.Assert(
                          e === t + 1,
                          'originalStart should only be one more than originalEnd'
                        ),
                        ee.Assert(
                          n === r + 1,
                          'modifiedStart should only be one more than modifiedEnd'
                        ),
                        (o = [])),
                    o
                  );
                }
                var s = [0],
                  u = [0],
                  a = this.ComputeRecursionPoint(e, t, n, r, s, u, i),
                  l = s[0],
                  h = u[0];
                if (null !== a) return a;
                if (!i[0]) {
                  var f = this.ComputeDiffRecursive(e, l, n, h, i),
                    c = [];
                  return (
                    (c = i[0]
                      ? [new z(l + 1, t - (l + 1) + 1, h + 1, r - (h + 1) + 1)]
                      : this.ComputeDiffRecursive(l + 1, t, h + 1, r, i)),
                    this.ConcatenateChanges(f, c)
                  );
                }
                return [new z(e, t - e + 1, n, r - n + 1)];
              }),
              (e.prototype.WALKTRACE = function (
                e,
                t,
                n,
                r,
                i,
                o,
                s,
                u,
                a,
                l,
                h,
                f,
                c,
                d,
                m,
                p,
                g,
                _
              ) {
                var v,
                  y = null,
                  C = new ne(),
                  b = t,
                  L = n,
                  N = c[0] - p[0] - r,
                  E = -1073741824,
                  S = this.m_forwardHistory.length - 1;
                do {
                  (M = N + e) === b || (M < L && a[M - 1] < a[M + 1])
                    ? ((d = (h = a[M + 1]) - N - r),
                      h < E && C.MarkNextChange(),
                      (E = h),
                      C.AddModifiedElement(h + 1, d),
                      (N = M + 1 - e))
                    : ((d = (h = a[M - 1] + 1) - N - r),
                      h < E && C.MarkNextChange(),
                      (E = h - 1),
                      C.AddOriginalElement(h, d + 1),
                      (N = M - 1 - e)),
                    S >= 0 &&
                      ((e = (a = this.m_forwardHistory[S])[0]),
                      (b = 1),
                      (L = a.length - 1));
                } while (--S >= -1);
                if (((v = C.getReverseChanges()), _[0])) {
                  var w = c[0] + 1,
                    A = p[0] + 1;
                  if (null !== v && v.length > 0) {
                    var O = v[v.length - 1];
                    (w = Math.max(w, O.getOriginalEnd())),
                      (A = Math.max(A, O.getModifiedEnd()));
                  }
                  y = [new z(w, f - w + 1, A, m - A + 1)];
                } else {
                  (C = new ne()),
                    (b = o),
                    (L = s),
                    (N = c[0] - p[0] - u),
                    (E = 1073741824),
                    (S = g
                      ? this.m_reverseHistory.length - 1
                      : this.m_reverseHistory.length - 2);
                  do {
                    var M;
                    (M = N + i) === b || (M < L && l[M - 1] >= l[M + 1])
                      ? ((d = (h = l[M + 1] - 1) - N - u),
                        h > E && C.MarkNextChange(),
                        (E = h + 1),
                        C.AddOriginalElement(h + 1, d + 1),
                        (N = M + 1 - i))
                      : ((d = (h = l[M - 1]) - N - u),
                        h > E && C.MarkNextChange(),
                        (E = h),
                        C.AddModifiedElement(h + 1, d + 1),
                        (N = M - 1 - i)),
                      S >= 0 &&
                        ((i = (l = this.m_reverseHistory[S])[0]),
                        (b = 1),
                        (L = l.length - 1));
                  } while (--S >= -1);
                  y = C.getChanges();
                }
                return this.ConcatenateChanges(v, y);
              }),
              (e.prototype.ComputeRecursionPoint = function (
                e,
                t,
                n,
                r,
                i,
                o,
                s
              ) {
                var u = 0,
                  a = 0,
                  l = 0,
                  h = 0,
                  f = 0,
                  c = 0;
                e--,
                  n--,
                  (i[0] = 0),
                  (o[0] = 0),
                  (this.m_forwardHistory = []),
                  (this.m_reverseHistory = []);
                var d = t - e + (r - n),
                  m = d + 1,
                  p = new Int32Array(m),
                  g = new Int32Array(m),
                  _ = r - n,
                  v = t - e,
                  y = e - n,
                  C = t - r,
                  b = (v - _) % 2 == 0;
                (p[_] = e), (g[v] = t), (s[0] = !1);
                for (var L = 1; L <= d / 2 + 1; L++) {
                  var N = 0,
                    E = 0;
                  (l = this.ClipDiagonalBound(_ - L, L, _, m)),
                    (h = this.ClipDiagonalBound(_ + L, L, _, m));
                  for (var S = l; S <= h; S += 2) {
                    a =
                      (u =
                        S === l || (S < h && p[S - 1] < p[S + 1])
                          ? p[S + 1]
                          : p[S - 1] + 1) -
                      (S - _) -
                      y;
                    for (
                      var w = u;
                      u < t && a < r && this.ElementsAreEqual(u + 1, a + 1);

                    )
                      u++, a++;
                    if (
                      ((p[S] = u),
                      u + a > N + E && ((N = u), (E = a)),
                      !b && Math.abs(S - v) <= L - 1 && u >= g[S])
                    )
                      return (
                        (i[0] = u),
                        (o[0] = a),
                        w <= g[S] && L <= 1448
                          ? this.WALKTRACE(
                              _,
                              l,
                              h,
                              y,
                              v,
                              f,
                              c,
                              C,
                              p,
                              g,
                              u,
                              t,
                              i,
                              a,
                              r,
                              o,
                              b,
                              s
                            )
                          : null
                      );
                  }
                  var A = (N - e + (E - n) - L) / 2;
                  if (
                    null !== this.ContinueProcessingPredicate &&
                    !this.ContinueProcessingPredicate(N, A)
                  )
                    return (
                      (s[0] = !0),
                      (i[0] = N),
                      (o[0] = E),
                      A > 0 && L <= 1448
                        ? this.WALKTRACE(
                            _,
                            l,
                            h,
                            y,
                            v,
                            f,
                            c,
                            C,
                            p,
                            g,
                            u,
                            t,
                            i,
                            a,
                            r,
                            o,
                            b,
                            s
                          )
                        : [new z(++e, t - e + 1, ++n, r - n + 1)]
                    );
                  (f = this.ClipDiagonalBound(v - L, L, v, m)),
                    (c = this.ClipDiagonalBound(v + L, L, v, m));
                  for (S = f; S <= c; S += 2) {
                    a =
                      (u =
                        S === f || (S < c && g[S - 1] >= g[S + 1])
                          ? g[S + 1] - 1
                          : g[S - 1]) -
                      (S - v) -
                      C;
                    for (w = u; u > e && a > n && this.ElementsAreEqual(u, a); )
                      u--, a--;
                    if (((g[S] = u), b && Math.abs(S - _) <= L && u <= p[S]))
                      return (
                        (i[0] = u),
                        (o[0] = a),
                        w >= p[S] && L <= 1448
                          ? this.WALKTRACE(
                              _,
                              l,
                              h,
                              y,
                              v,
                              f,
                              c,
                              C,
                              p,
                              g,
                              u,
                              t,
                              i,
                              a,
                              r,
                              o,
                              b,
                              s
                            )
                          : null
                      );
                  }
                  if (L <= 1447) {
                    var O = new Int32Array(h - l + 2);
                    (O[0] = _ - l + 1),
                      te.Copy2(p, l, O, 1, h - l + 1),
                      this.m_forwardHistory.push(O),
                      ((O = new Int32Array(c - f + 2))[0] = v - f + 1),
                      te.Copy2(g, f, O, 1, c - f + 1),
                      this.m_reverseHistory.push(O);
                  }
                }
                return this.WALKTRACE(
                  _,
                  l,
                  h,
                  y,
                  v,
                  f,
                  c,
                  C,
                  p,
                  g,
                  u,
                  t,
                  i,
                  a,
                  r,
                  o,
                  b,
                  s
                );
              }),
              (e.prototype.PrettifyChanges = function (e) {
                for (var t = 0; t < e.length; t++) {
                  for (
                    var n = e[t],
                      r =
                        t < e.length - 1
                          ? e[t + 1].originalStart
                          : this._originalElementsOrHash.length,
                      i =
                        t < e.length - 1
                          ? e[t + 1].modifiedStart
                          : this._modifiedElementsOrHash.length,
                      o = n.originalLength > 0,
                      s = n.modifiedLength > 0;
                    n.originalStart + n.originalLength < r &&
                    n.modifiedStart + n.modifiedLength < i &&
                    (!o ||
                      this.OriginalElementsAreEqual(
                        n.originalStart,
                        n.originalStart + n.originalLength
                      )) &&
                    (!s ||
                      this.ModifiedElementsAreEqual(
                        n.modifiedStart,
                        n.modifiedStart + n.modifiedLength
                      ));

                  )
                    n.originalStart++, n.modifiedStart++;
                  var u = [null];
                  t < e.length - 1 &&
                    this.ChangesOverlap(e[t], e[t + 1], u) &&
                    ((e[t] = u[0]), e.splice(t + 1, 1), t--);
                }
                for (t = e.length - 1; t >= 0; t--) {
                  (n = e[t]), (r = 0), (i = 0);
                  if (t > 0) {
                    var a = e[t - 1];
                    a.originalLength > 0 &&
                      (r = a.originalStart + a.originalLength),
                      a.modifiedLength > 0 &&
                        (i = a.modifiedStart + a.modifiedLength);
                  }
                  (o = n.originalLength > 0), (s = n.modifiedLength > 0);
                  for (
                    var l = 0,
                      h = this._boundaryScore(
                        n.originalStart,
                        n.originalLength,
                        n.modifiedStart,
                        n.modifiedLength
                      ),
                      f = 1;
                    ;
                    f++
                  ) {
                    var c = n.originalStart - f,
                      d = n.modifiedStart - f;
                    if (c < r || d < i) break;
                    if (
                      o &&
                      !this.OriginalElementsAreEqual(c, c + n.originalLength)
                    )
                      break;
                    if (
                      s &&
                      !this.ModifiedElementsAreEqual(d, d + n.modifiedLength)
                    )
                      break;
                    var m = this._boundaryScore(
                      c,
                      n.originalLength,
                      d,
                      n.modifiedLength
                    );
                    m > h && ((h = m), (l = f));
                  }
                  (n.originalStart -= l), (n.modifiedStart -= l);
                }
                return e;
              }),
              (e.prototype._OriginalIsBoundary = function (e) {
                return (
                  e <= 0 ||
                  e >= this._originalElementsOrHash.length - 1 ||
                  (this._hasStrings &&
                    /^\s*$/.test(this._originalStringElements[e]))
                );
              }),
              (e.prototype._OriginalRegionIsBoundary = function (e, t) {
                if (
                  this._OriginalIsBoundary(e) ||
                  this._OriginalIsBoundary(e - 1)
                )
                  return !0;
                if (t > 0) {
                  var n = e + t;
                  if (
                    this._OriginalIsBoundary(n - 1) ||
                    this._OriginalIsBoundary(n)
                  )
                    return !0;
                }
                return !1;
              }),
              (e.prototype._ModifiedIsBoundary = function (e) {
                return (
                  e <= 0 ||
                  e >= this._modifiedElementsOrHash.length - 1 ||
                  (this._hasStrings &&
                    /^\s*$/.test(this._modifiedStringElements[e]))
                );
              }),
              (e.prototype._ModifiedRegionIsBoundary = function (e, t) {
                if (
                  this._ModifiedIsBoundary(e) ||
                  this._ModifiedIsBoundary(e - 1)
                )
                  return !0;
                if (t > 0) {
                  var n = e + t;
                  if (
                    this._ModifiedIsBoundary(n - 1) ||
                    this._ModifiedIsBoundary(n)
                  )
                    return !0;
                }
                return !1;
              }),
              (e.prototype._boundaryScore = function (e, t, n, r) {
                return (
                  (this._OriginalRegionIsBoundary(e, t) ? 1 : 0) +
                  (this._ModifiedRegionIsBoundary(n, r) ? 1 : 0)
                );
              }),
              (e.prototype.ConcatenateChanges = function (e, t) {
                var n = [];
                if (0 === e.length || 0 === t.length)
                  return t.length > 0 ? t : e;
                if (this.ChangesOverlap(e[e.length - 1], t[0], n)) {
                  var r = new Array(e.length + t.length - 1);
                  return (
                    te.Copy(e, 0, r, 0, e.length - 1),
                    (r[e.length - 1] = n[0]),
                    te.Copy(t, 1, r, e.length, t.length - 1),
                    r
                  );
                }
                r = new Array(e.length + t.length);
                return (
                  te.Copy(e, 0, r, 0, e.length),
                  te.Copy(t, 0, r, e.length, t.length),
                  r
                );
              }),
              (e.prototype.ChangesOverlap = function (e, t, n) {
                if (
                  (ee.Assert(
                    e.originalStart <= t.originalStart,
                    'Left change is not less than or equal to right change'
                  ),
                  ee.Assert(
                    e.modifiedStart <= t.modifiedStart,
                    'Left change is not less than or equal to right change'
                  ),
                  e.originalStart + e.originalLength >= t.originalStart ||
                    e.modifiedStart + e.modifiedLength >= t.modifiedStart)
                ) {
                  var r = e.originalStart,
                    i = e.originalLength,
                    o = e.modifiedStart,
                    s = e.modifiedLength;
                  return (
                    e.originalStart + e.originalLength >= t.originalStart &&
                      (i =
                        t.originalStart + t.originalLength - e.originalStart),
                    e.modifiedStart + e.modifiedLength >= t.modifiedStart &&
                      (s =
                        t.modifiedStart + t.modifiedLength - e.modifiedStart),
                    (n[0] = new z(r, i, o, s)),
                    !0
                  );
                }
                return (n[0] = null), !1;
              }),
              (e.prototype.ClipDiagonalBound = function (e, t, n, r) {
                if (e >= 0 && e < r) return e;
                var i = t % 2 == 0;
                return e < 0
                  ? i === (n % 2 == 0)
                    ? 0
                    : 1
                  : i === ((r - n - 1) % 2 == 0)
                  ? r - 1
                  : r - 2;
              }),
              e
            );
          })(),
          ie = (function () {
            var e = function (t, n) {
              return (e =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (e, t) {
                    e.__proto__ = t;
                  }) ||
                function (e, t) {
                  for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                })(t, n);
            };
            return function (t, n) {
              function r() {
                this.constructor = t;
              }
              e(t, n),
                (t.prototype =
                  null === n
                    ? Object.create(n)
                    : ((r.prototype = n.prototype), new r()));
            };
          })(),
          oe = { done: !0, value: void 0 };
        !(function (e) {
          var t = {
            next: function () {
              return oe;
            },
          };
          (e.empty = function () {
            return t;
          }),
            (e.single = function (e) {
              var t = !1;
              return {
                next: function () {
                  return t ? oe : ((t = !0), { done: !1, value: e });
                },
              };
            }),
            (e.fromArray = function (e, t, n) {
              return (
                void 0 === t && (t = 0),
                void 0 === n && (n = e.length),
                {
                  next: function () {
                    return t >= n ? oe : { done: !1, value: e[t++] };
                  },
                }
              );
            }),
            (e.fromNativeIterator = function (e) {
              return {
                next: function () {
                  var t = e.next();
                  return t.done ? oe : { done: !1, value: t.value };
                },
              };
            }),
            (e.from = function (t) {
              return t ? (Array.isArray(t) ? e.fromArray(t) : t) : e.empty();
            }),
            (e.map = function (e, t) {
              return {
                next: function () {
                  var n = e.next();
                  return n.done ? oe : { done: !1, value: t(n.value) };
                },
              };
            }),
            (e.filter = function (e, t) {
              return {
                next: function () {
                  for (;;) {
                    var n = e.next();
                    if (n.done) return oe;
                    if (t(n.value)) return { done: !1, value: n.value };
                  }
                },
              };
            }),
            (e.forEach = function (e, t) {
              for (var n = e.next(); !n.done; n = e.next()) t(n.value);
            }),
            (e.collect = function (e, t) {
              void 0 === t && (t = Number.POSITIVE_INFINITY);
              var n = [];
              if (0 === t) return n;
              for (
                var r = 0, i = e.next();
                !(i.done || (n.push(i.value), ++r >= t));
                i = e.next()
              );
              return n;
            }),
            (e.concat = function () {
              for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
              var n = 0;
              return {
                next: function () {
                  if (n >= e.length) return oe;
                  var t = e[n].next();
                  return t.done ? (n++, this.next()) : t;
                },
              };
            }),
            (e.chain = function (e) {
              return new ue(e);
            });
        })($ || ($ = {}));
        var se,
          ue = (function () {
            function e(e) {
              this.it = e;
            }
            return (
              (e.prototype.next = function () {
                return this.it.next();
              }),
              e
            );
          })(),
          ae = (function () {
            function e(e, t, n, r) {
              void 0 === t && (t = 0),
                void 0 === n && (n = e.length),
                void 0 === r && (r = t - 1),
                (this.items = e),
                (this.start = t),
                (this.end = n),
                (this.index = r);
            }
            return (
              (e.prototype.first = function () {
                return (this.index = this.start), this.current();
              }),
              (e.prototype.next = function () {
                return (
                  (this.index = Math.min(this.index + 1, this.end)),
                  this.current()
                );
              }),
              (e.prototype.current = function () {
                return this.index === this.start - 1 || this.index === this.end
                  ? null
                  : this.items[this.index];
              }),
              e
            );
          })(),
          le = (function (e) {
            function t(t, n, r, i) {
              return (
                void 0 === n && (n = 0),
                void 0 === r && (r = t.length),
                void 0 === i && (i = n - 1),
                e.call(this, t, n, r, i) || this
              );
            }
            return (
              ie(t, e),
              (t.prototype.current = function () {
                return e.prototype.current.call(this);
              }),
              (t.prototype.previous = function () {
                return (
                  (this.index = Math.max(this.index - 1, this.start - 1)),
                  this.current()
                );
              }),
              (t.prototype.first = function () {
                return (this.index = this.start), this.current();
              }),
              (t.prototype.last = function () {
                return (this.index = this.end - 1), this.current();
              }),
              (t.prototype.parent = function () {
                return null;
              }),
              t
            );
          })(ae),
          he = (function () {
            var e = function (t, n) {
              return (e =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (e, t) {
                    e.__proto__ = t;
                  }) ||
                function (e, t) {
                  for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                })(t, n);
            };
            return function (t, n) {
              function r() {
                this.constructor = t;
              }
              e(t, n),
                (t.prototype =
                  null === n
                    ? Object.create(n)
                    : ((r.prototype = n.prototype), new r()));
            };
          })(),
          fe = /^\w[\w\d+.-]*$/,
          ce = /^\//,
          de = /^\/\//;
        function me(e, t) {
          if (!e.scheme && t)
            throw new Error(
              '[UriError]: Scheme is missing: {scheme: "", authority: "' +
                e.authority +
                '", path: "' +
                e.path +
                '", query: "' +
                e.query +
                '", fragment: "' +
                e.fragment +
                '"}'
            );
          if (e.scheme && !fe.test(e.scheme))
            throw new Error('[UriError]: Scheme contains illegal characters.');
          if (e.path)
            if (e.authority) {
              if (!ce.test(e.path))
                throw new Error(
                  '[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character'
                );
            } else if (de.test(e.path))
              throw new Error(
                '[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")'
              );
        }
        function pe(e, t) {
          return e || t ? e : 'file';
        }
        function ge(e, t) {
          switch (e) {
            case 'https':
            case 'http':
            case 'file':
              t ? t[0] !== ve && (t = ve + t) : (t = ve);
          }
          return t;
        }
        var _e = '',
          ve = '/',
          ye = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/,
          Ce = (function () {
            function e(e, t, n, r, i, o) {
              void 0 === o && (o = !1),
                'object' == typeof e
                  ? ((this.scheme = e.scheme || _e),
                    (this.authority = e.authority || _e),
                    (this.path = e.path || _e),
                    (this.query = e.query || _e),
                    (this.fragment = e.fragment || _e))
                  : ((this.scheme = pe(e, o)),
                    (this.authority = t || _e),
                    (this.path = ge(this.scheme, n || _e)),
                    (this.query = r || _e),
                    (this.fragment = i || _e),
                    me(this, o));
            }
            return (
              (e.isUri = function (t) {
                return (
                  t instanceof e ||
                  (!!t &&
                    'string' == typeof t.authority &&
                    'string' == typeof t.fragment &&
                    'string' == typeof t.path &&
                    'string' == typeof t.query &&
                    'string' == typeof t.scheme &&
                    'function' == typeof t.fsPath &&
                    'function' == typeof t.with &&
                    'function' == typeof t.toString)
                );
              }),
              Object.defineProperty(e.prototype, 'fsPath', {
                get: function () {
                  return we(this);
                },
                enumerable: !0,
                configurable: !0,
              }),
              (e.prototype.with = function (e) {
                if (!e) return this;
                var t = e.scheme,
                  n = e.authority,
                  r = e.path,
                  i = e.query,
                  o = e.fragment;
                return (
                  void 0 === t ? (t = this.scheme) : null === t && (t = _e),
                  void 0 === n ? (n = this.authority) : null === n && (n = _e),
                  void 0 === r ? (r = this.path) : null === r && (r = _e),
                  void 0 === i ? (i = this.query) : null === i && (i = _e),
                  void 0 === o ? (o = this.fragment) : null === o && (o = _e),
                  t === this.scheme &&
                  n === this.authority &&
                  r === this.path &&
                  i === this.query &&
                  o === this.fragment
                    ? this
                    : new Le(t, n, r, i, o)
                );
              }),
              (e.parse = function (e, t) {
                void 0 === t && (t = !1);
                var n = ye.exec(e);
                return n
                  ? new Le(
                      n[2] || _e,
                      xe(n[4] || _e),
                      xe(n[5] || _e),
                      xe(n[7] || _e),
                      xe(n[9] || _e),
                      t
                    )
                  : new Le(_e, _e, _e, _e, _e);
              }),
              (e.file = function (e) {
                var t = _e;
                if (
                  (I && (e = e.replace(/\\/g, ve)), e[0] === ve && e[1] === ve)
                ) {
                  var n = e.indexOf(ve, 2);
                  -1 === n
                    ? ((t = e.substring(2)), (e = ve))
                    : ((t = e.substring(2, n)), (e = e.substring(n) || ve));
                }
                return new Le('file', t, e, _e, _e);
              }),
              (e.from = function (e) {
                return new Le(
                  e.scheme,
                  e.authority,
                  e.path,
                  e.query,
                  e.fragment
                );
              }),
              (e.prototype.toString = function (e) {
                return void 0 === e && (e = !1), Ae(this, e);
              }),
              (e.prototype.toJSON = function () {
                return this;
              }),
              (e.revive = function (t) {
                if (t) {
                  if (t instanceof e) return t;
                  var n = new Le(t);
                  return (
                    (n._formatted = t.external),
                    (n._fsPath = t._sep === be ? t.fsPath : null),
                    n
                  );
                }
                return t;
              }),
              e
            );
          })(),
          be = I ? 1 : void 0,
          Le = (function (e) {
            function t() {
              var t = (null !== e && e.apply(this, arguments)) || this;
              return (t._formatted = null), (t._fsPath = null), t;
            }
            return (
              he(t, e),
              Object.defineProperty(t.prototype, 'fsPath', {
                get: function () {
                  return (
                    this._fsPath || (this._fsPath = we(this)), this._fsPath
                  );
                },
                enumerable: !0,
                configurable: !0,
              }),
              (t.prototype.toString = function (e) {
                return (
                  void 0 === e && (e = !1),
                  e
                    ? Ae(this, !0)
                    : (this._formatted || (this._formatted = Ae(this, !1)),
                      this._formatted)
                );
              }),
              (t.prototype.toJSON = function () {
                var e = { $mid: 1 };
                return (
                  this._fsPath && ((e.fsPath = this._fsPath), (e._sep = be)),
                  this._formatted && (e.external = this._formatted),
                  this.path && (e.path = this.path),
                  this.scheme && (e.scheme = this.scheme),
                  this.authority && (e.authority = this.authority),
                  this.query && (e.query = this.query),
                  this.fragment && (e.fragment = this.fragment),
                  e
                );
              }),
              t
            );
          })(Ce),
          Ne =
            (((se = {})[58] = '%3A'),
            (se[47] = '%2F'),
            (se[63] = '%3F'),
            (se[35] = '%23'),
            (se[91] = '%5B'),
            (se[93] = '%5D'),
            (se[64] = '%40'),
            (se[33] = '%21'),
            (se[36] = '%24'),
            (se[38] = '%26'),
            (se[39] = '%27'),
            (se[40] = '%28'),
            (se[41] = '%29'),
            (se[42] = '%2A'),
            (se[43] = '%2B'),
            (se[44] = '%2C'),
            (se[59] = '%3B'),
            (se[61] = '%3D'),
            (se[32] = '%20'),
            se);
        function Ee(e, t) {
          for (var n = void 0, r = -1, i = 0; i < e.length; i++) {
            var o = e.charCodeAt(i);
            if (
              (o >= 97 && o <= 122) ||
              (o >= 65 && o <= 90) ||
              (o >= 48 && o <= 57) ||
              45 === o ||
              46 === o ||
              95 === o ||
              126 === o ||
              (t && 47 === o)
            )
              -1 !== r &&
                ((n += encodeURIComponent(e.substring(r, i))), (r = -1)),
                void 0 !== n && (n += e.charAt(i));
            else {
              void 0 === n && (n = e.substr(0, i));
              var s = Ne[o];
              void 0 !== s
                ? (-1 !== r &&
                    ((n += encodeURIComponent(e.substring(r, i))), (r = -1)),
                  (n += s))
                : -1 === r && (r = i);
            }
          }
          return (
            -1 !== r && (n += encodeURIComponent(e.substring(r))),
            void 0 !== n ? n : e
          );
        }
        function Se(e) {
          for (var t = void 0, n = 0; n < e.length; n++) {
            var r = e.charCodeAt(n);
            35 === r || 63 === r
              ? (void 0 === t && (t = e.substr(0, n)), (t += Ne[r]))
              : void 0 !== t && (t += e[n]);
          }
          return void 0 !== t ? t : e;
        }
        function we(e) {
          var t;
          return (
            (t =
              e.authority && e.path.length > 1 && 'file' === e.scheme
                ? '//' + e.authority + e.path
                : 47 === e.path.charCodeAt(0) &&
                  ((e.path.charCodeAt(1) >= 65 && e.path.charCodeAt(1) <= 90) ||
                    (e.path.charCodeAt(1) >= 97 &&
                      e.path.charCodeAt(1) <= 122)) &&
                  58 === e.path.charCodeAt(2)
                ? e.path[1].toLowerCase() + e.path.substr(2)
                : e.path),
            I && (t = t.replace(/\//g, '\\')),
            t
          );
        }
        function Ae(e, t) {
          var n = t ? Se : Ee,
            r = '',
            i = e.scheme,
            o = e.authority,
            s = e.path,
            u = e.query,
            a = e.fragment;
          if (
            (i && ((r += i), (r += ':')),
            (o || 'file' === i) && ((r += ve), (r += ve)),
            o)
          ) {
            var l = o.indexOf('@');
            if (-1 !== l) {
              var h = o.substr(0, l);
              (o = o.substr(l + 1)),
                -1 === (l = h.indexOf(':'))
                  ? (r += n(h, !1))
                  : ((r += n(h.substr(0, l), !1)),
                    (r += ':'),
                    (r += n(h.substr(l + 1), !1))),
                (r += '@');
            }
            -1 === (l = (o = o.toLowerCase()).indexOf(':'))
              ? (r += n(o, !1))
              : ((r += n(o.substr(0, l), !1)), (r += o.substr(l)));
          }
          if (s) {
            if (
              s.length >= 3 &&
              47 === s.charCodeAt(0) &&
              58 === s.charCodeAt(2)
            )
              (f = s.charCodeAt(1)) >= 65 &&
                f <= 90 &&
                (s = '/' + String.fromCharCode(f + 32) + ':' + s.substr(3));
            else if (s.length >= 2 && 58 === s.charCodeAt(1)) {
              var f;
              (f = s.charCodeAt(0)) >= 65 &&
                f <= 90 &&
                (s = String.fromCharCode(f + 32) + ':' + s.substr(2));
            }
            r += n(s, !0);
          }
          return (
            u && ((r += '?'), (r += n(u, !1))),
            a && ((r += '#'), (r += t ? a : Ee(a, !1))),
            r
          );
        }
        function Oe(e) {
          try {
            return decodeURIComponent(e);
          } catch (se) {
            return e.length > 3 ? e.substr(0, 3) + Oe(e.substr(3)) : e;
          }
        }
        var Me = /(%[0-9A-Za-z][0-9A-Za-z])+/g;
        function xe(e) {
          return e.match(Me)
            ? e.replace(Me, function (e) {
                return Oe(e);
              })
            : e;
        }
        var Pe = (function () {
            function e(e, t) {
              (this.lineNumber = e), (this.column = t);
            }
            return (
              (e.prototype.with = function (t, n) {
                return (
                  void 0 === t && (t = this.lineNumber),
                  void 0 === n && (n = this.column),
                  t === this.lineNumber && n === this.column
                    ? this
                    : new e(t, n)
                );
              }),
              (e.prototype.delta = function (e, t) {
                return (
                  void 0 === e && (e = 0),
                  void 0 === t && (t = 0),
                  this.with(this.lineNumber + e, this.column + t)
                );
              }),
              (e.prototype.equals = function (t) {
                return e.equals(this, t);
              }),
              (e.equals = function (e, t) {
                return (
                  (!e && !t) ||
                  (!!e &&
                    !!t &&
                    e.lineNumber === t.lineNumber &&
                    e.column === t.column)
                );
              }),
              (e.prototype.isBefore = function (t) {
                return e.isBefore(this, t);
              }),
              (e.isBefore = function (e, t) {
                return (
                  e.lineNumber < t.lineNumber ||
                  (!(t.lineNumber < e.lineNumber) && e.column < t.column)
                );
              }),
              (e.prototype.isBeforeOrEqual = function (t) {
                return e.isBeforeOrEqual(this, t);
              }),
              (e.isBeforeOrEqual = function (e, t) {
                return (
                  e.lineNumber < t.lineNumber ||
                  (!(t.lineNumber < e.lineNumber) && e.column <= t.column)
                );
              }),
              (e.compare = function (e, t) {
                var n = 0 | e.lineNumber,
                  r = 0 | t.lineNumber;
                return n === r ? (0 | e.column) - (0 | t.column) : n - r;
              }),
              (e.prototype.clone = function () {
                return new e(this.lineNumber, this.column);
              }),
              (e.prototype.toString = function () {
                return '(' + this.lineNumber + ',' + this.column + ')';
              }),
              (e.lift = function (t) {
                return new e(t.lineNumber, t.column);
              }),
              (e.isIPosition = function (e) {
                return (
                  e &&
                  'number' == typeof e.lineNumber &&
                  'number' == typeof e.column
                );
              }),
              e
            );
          })(),
          Te = (function () {
            function e(e, t, n, r) {
              e > n || (e === n && t > r)
                ? ((this.startLineNumber = n),
                  (this.startColumn = r),
                  (this.endLineNumber = e),
                  (this.endColumn = t))
                : ((this.startLineNumber = e),
                  (this.startColumn = t),
                  (this.endLineNumber = n),
                  (this.endColumn = r));
            }
            return (
              (e.prototype.isEmpty = function () {
                return e.isEmpty(this);
              }),
              (e.isEmpty = function (e) {
                return (
                  e.startLineNumber === e.endLineNumber &&
                  e.startColumn === e.endColumn
                );
              }),
              (e.prototype.containsPosition = function (t) {
                return e.containsPosition(this, t);
              }),
              (e.containsPosition = function (e, t) {
                return (
                  !(
                    t.lineNumber < e.startLineNumber ||
                    t.lineNumber > e.endLineNumber
                  ) &&
                  !(
                    t.lineNumber === e.startLineNumber &&
                    t.column < e.startColumn
                  ) &&
                  !(t.lineNumber === e.endLineNumber && t.column > e.endColumn)
                );
              }),
              (e.prototype.containsRange = function (t) {
                return e.containsRange(this, t);
              }),
              (e.containsRange = function (e, t) {
                return (
                  !(
                    t.startLineNumber < e.startLineNumber ||
                    t.endLineNumber < e.startLineNumber
                  ) &&
                  !(
                    t.startLineNumber > e.endLineNumber ||
                    t.endLineNumber > e.endLineNumber
                  ) &&
                  !(
                    t.startLineNumber === e.startLineNumber &&
                    t.startColumn < e.startColumn
                  ) &&
                  !(
                    t.endLineNumber === e.endLineNumber &&
                    t.endColumn > e.endColumn
                  )
                );
              }),
              (e.prototype.strictContainsRange = function (t) {
                return e.strictContainsRange(this, t);
              }),
              (e.strictContainsRange = function (e, t) {
                return (
                  !(
                    t.startLineNumber < e.startLineNumber ||
                    t.endLineNumber < e.startLineNumber
                  ) &&
                  !(
                    t.startLineNumber > e.endLineNumber ||
                    t.endLineNumber > e.endLineNumber
                  ) &&
                  !(
                    t.startLineNumber === e.startLineNumber &&
                    t.startColumn <= e.startColumn
                  ) &&
                  !(
                    t.endLineNumber === e.endLineNumber &&
                    t.endColumn >= e.endColumn
                  )
                );
              }),
              (e.prototype.plusRange = function (t) {
                return e.plusRange(this, t);
              }),
              (e.plusRange = function (t, n) {
                var r, i, o, s;
                return (
                  n.startLineNumber < t.startLineNumber
                    ? ((r = n.startLineNumber), (i = n.startColumn))
                    : n.startLineNumber === t.startLineNumber
                    ? ((r = n.startLineNumber),
                      (i = Math.min(n.startColumn, t.startColumn)))
                    : ((r = t.startLineNumber), (i = t.startColumn)),
                  n.endLineNumber > t.endLineNumber
                    ? ((o = n.endLineNumber), (s = n.endColumn))
                    : n.endLineNumber === t.endLineNumber
                    ? ((o = n.endLineNumber),
                      (s = Math.max(n.endColumn, t.endColumn)))
                    : ((o = t.endLineNumber), (s = t.endColumn)),
                  new e(r, i, o, s)
                );
              }),
              (e.prototype.intersectRanges = function (t) {
                return e.intersectRanges(this, t);
              }),
              (e.intersectRanges = function (t, n) {
                var r = t.startLineNumber,
                  i = t.startColumn,
                  o = t.endLineNumber,
                  s = t.endColumn,
                  u = n.startLineNumber,
                  a = n.startColumn,
                  l = n.endLineNumber,
                  h = n.endColumn;
                return (
                  r < u ? ((r = u), (i = a)) : r === u && (i = Math.max(i, a)),
                  o > l ? ((o = l), (s = h)) : o === l && (s = Math.min(s, h)),
                  r > o ? null : r === o && i > s ? null : new e(r, i, o, s)
                );
              }),
              (e.prototype.equalsRange = function (t) {
                return e.equalsRange(this, t);
              }),
              (e.equalsRange = function (e, t) {
                return (
                  !!e &&
                  !!t &&
                  e.startLineNumber === t.startLineNumber &&
                  e.startColumn === t.startColumn &&
                  e.endLineNumber === t.endLineNumber &&
                  e.endColumn === t.endColumn
                );
              }),
              (e.prototype.getEndPosition = function () {
                return new Pe(this.endLineNumber, this.endColumn);
              }),
              (e.prototype.getStartPosition = function () {
                return new Pe(this.startLineNumber, this.startColumn);
              }),
              (e.prototype.toString = function () {
                return (
                  '[' +
                  this.startLineNumber +
                  ',' +
                  this.startColumn +
                  ' -> ' +
                  this.endLineNumber +
                  ',' +
                  this.endColumn +
                  ']'
                );
              }),
              (e.prototype.setEndPosition = function (t, n) {
                return new e(this.startLineNumber, this.startColumn, t, n);
              }),
              (e.prototype.setStartPosition = function (t, n) {
                return new e(t, n, this.endLineNumber, this.endColumn);
              }),
              (e.prototype.collapseToStart = function () {
                return e.collapseToStart(this);
              }),
              (e.collapseToStart = function (t) {
                return new e(
                  t.startLineNumber,
                  t.startColumn,
                  t.startLineNumber,
                  t.startColumn
                );
              }),
              (e.fromPositions = function (t, n) {
                return (
                  void 0 === n && (n = t),
                  new e(t.lineNumber, t.column, n.lineNumber, n.column)
                );
              }),
              (e.lift = function (t) {
                return t
                  ? new e(
                      t.startLineNumber,
                      t.startColumn,
                      t.endLineNumber,
                      t.endColumn
                    )
                  : null;
              }),
              (e.isIRange = function (e) {
                return (
                  e &&
                  'number' == typeof e.startLineNumber &&
                  'number' == typeof e.startColumn &&
                  'number' == typeof e.endLineNumber &&
                  'number' == typeof e.endColumn
                );
              }),
              (e.areIntersectingOrTouching = function (e, t) {
                return (
                  !(
                    e.endLineNumber < t.startLineNumber ||
                    (e.endLineNumber === t.startLineNumber &&
                      e.endColumn < t.startColumn)
                  ) &&
                  !(
                    t.endLineNumber < e.startLineNumber ||
                    (t.endLineNumber === e.startLineNumber &&
                      t.endColumn < e.startColumn)
                  )
                );
              }),
              (e.areIntersecting = function (e, t) {
                return (
                  !(
                    e.endLineNumber < t.startLineNumber ||
                    (e.endLineNumber === t.startLineNumber &&
                      e.endColumn <= t.startColumn)
                  ) &&
                  !(
                    t.endLineNumber < e.startLineNumber ||
                    (t.endLineNumber === e.startLineNumber &&
                      t.endColumn <= e.startColumn)
                  )
                );
              }),
              (e.compareRangesUsingStarts = function (e, t) {
                if (e && t) {
                  var n = 0 | e.startLineNumber,
                    r = 0 | t.startLineNumber;
                  if (n === r) {
                    var i = 0 | e.startColumn,
                      o = 0 | t.startColumn;
                    if (i === o) {
                      var s = 0 | e.endLineNumber,
                        u = 0 | t.endLineNumber;
                      return s === u
                        ? (0 | e.endColumn) - (0 | t.endColumn)
                        : s - u;
                    }
                    return i - o;
                  }
                  return n - r;
                }
                return (e ? 1 : 0) - (t ? 1 : 0);
              }),
              (e.compareRangesUsingEnds = function (e, t) {
                return e.endLineNumber === t.endLineNumber
                  ? e.endColumn === t.endColumn
                    ? e.startLineNumber === t.startLineNumber
                      ? e.startColumn - t.startColumn
                      : e.startLineNumber - t.startLineNumber
                    : e.endColumn - t.endColumn
                  : e.endLineNumber - t.endLineNumber;
              }),
              (e.spansMultipleLines = function (e) {
                return e.endLineNumber > e.startLineNumber;
              }),
              e
            );
          })();
        function Ie(e) {
          for (var t = 0, n = e.length; t < n; t++) {
            var r = e.charCodeAt(t);
            if (32 !== r && 9 !== r) return t;
          }
          return -1;
        }
        function Re(e, t) {
          void 0 === t && (t = e.length - 1);
          for (var n = t; n >= 0; n--) {
            var r = e.charCodeAt(n);
            if (32 !== r && 9 !== r) return n;
          }
          return -1;
        }
        var ke = (function () {
          function e() {
            this._data = Ue();
          }
          return (
            (e.getInstance = function () {
              return e._INSTANCE || (e._INSTANCE = new e()), e._INSTANCE;
            }),
            (e.prototype.getGraphemeBreakType = function (e) {
              if (e < 32) return 10 === e ? 3 : 13 === e ? 2 : 4;
              if (e < 127) return 0;
              for (var t = this._data, n = t.length / 3, r = 1; r <= n; )
                if (e < t[3 * r]) r *= 2;
                else {
                  if (!(e > t[3 * r + 1])) return t[3 * r + 2];
                  r = 2 * r + 1;
                }
              return 0;
            }),
            (e._INSTANCE = null),
            e
          );
        })();
        function Ue() {
          return JSON.parse(
            '[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]'
          );
        }
        var De = 3;
        function Fe(e, t, n, r) {
          return new re(e, t, n).ComputeDiff(r);
        }
        var Ke = (function () {
            function e(e) {
              for (var t = [], n = [], r = 0, i = e.length; r < i; r++)
                (t[r] = je(e[r], 1)), (n[r] = Ve(e[r], 1));
              (this.lines = e),
                (this._startColumns = t),
                (this._endColumns = n);
            }
            return (
              (e.prototype.getElements = function () {
                for (var e = [], t = 0, n = this.lines.length; t < n; t++)
                  e[t] = this.lines[t].substring(
                    this._startColumns[t] - 1,
                    this._endColumns[t] - 1
                  );
                return e;
              }),
              (e.prototype.getStartLineNumber = function (e) {
                return e + 1;
              }),
              (e.prototype.getEndLineNumber = function (e) {
                return e + 1;
              }),
              (e.prototype.createCharSequence = function (e, t, n) {
                for (var r = [], i = [], o = [], s = 0, u = t; u <= n; u++)
                  for (
                    var a = this.lines[u],
                      l = e ? this._startColumns[u] : 1,
                      h = e ? this._endColumns[u] : a.length + 1,
                      f = l;
                    f < h;
                    f++
                  )
                    (r[s] = a.charCodeAt(f - 1)),
                      (i[s] = u + 1),
                      (o[s] = f),
                      s++;
                return new qe(r, i, o);
              }),
              e
            );
          })(),
          qe = (function () {
            function e(e, t, n) {
              (this._charCodes = e),
                (this._lineNumbers = t),
                (this._columns = n);
            }
            return (
              (e.prototype.getElements = function () {
                return this._charCodes;
              }),
              (e.prototype.getStartLineNumber = function (e) {
                return this._lineNumbers[e];
              }),
              (e.prototype.getStartColumn = function (e) {
                return this._columns[e];
              }),
              (e.prototype.getEndLineNumber = function (e) {
                return this._lineNumbers[e];
              }),
              (e.prototype.getEndColumn = function (e) {
                return this._columns[e] + 1;
              }),
              e
            );
          })(),
          We = (function () {
            function e(e, t, n, r, i, o, s, u) {
              (this.originalStartLineNumber = e),
                (this.originalStartColumn = t),
                (this.originalEndLineNumber = n),
                (this.originalEndColumn = r),
                (this.modifiedStartLineNumber = i),
                (this.modifiedStartColumn = o),
                (this.modifiedEndLineNumber = s),
                (this.modifiedEndColumn = u);
            }
            return (
              (e.createFromDiffChange = function (t, n, r) {
                var i, o, s, u, a, l, h, f;
                return (
                  0 === t.originalLength
                    ? ((i = 0), (o = 0), (s = 0), (u = 0))
                    : ((i = n.getStartLineNumber(t.originalStart)),
                      (o = n.getStartColumn(t.originalStart)),
                      (s = n.getEndLineNumber(
                        t.originalStart + t.originalLength - 1
                      )),
                      (u = n.getEndColumn(
                        t.originalStart + t.originalLength - 1
                      ))),
                  0 === t.modifiedLength
                    ? ((a = 0), (l = 0), (h = 0), (f = 0))
                    : ((a = r.getStartLineNumber(t.modifiedStart)),
                      (l = r.getStartColumn(t.modifiedStart)),
                      (h = r.getEndLineNumber(
                        t.modifiedStart + t.modifiedLength - 1
                      )),
                      (f = r.getEndColumn(
                        t.modifiedStart + t.modifiedLength - 1
                      ))),
                  new e(i, o, s, u, a, l, h, f)
                );
              }),
              e
            );
          })();
        function Be(e) {
          if (e.length <= 1) return e;
          for (var t = [e[0]], n = t[0], r = 1, i = e.length; r < i; r++) {
            var o = e[r],
              s = o.originalStart - (n.originalStart + n.originalLength),
              u = o.modifiedStart - (n.modifiedStart + n.modifiedLength);
            Math.min(s, u) < De
              ? ((n.originalLength =
                  o.originalStart + o.originalLength - n.originalStart),
                (n.modifiedLength =
                  o.modifiedStart + o.modifiedLength - n.modifiedStart))
              : (t.push(o), (n = o));
          }
          return t;
        }
        var He = (function () {
            function e(e, t, n, r, i) {
              (this.originalStartLineNumber = e),
                (this.originalEndLineNumber = t),
                (this.modifiedStartLineNumber = n),
                (this.modifiedEndLineNumber = r),
                (this.charChanges = i);
            }
            return (
              (e.createFromDiffResult = function (t, n, r, i, o, s, u) {
                var a,
                  l,
                  h,
                  f,
                  c = void 0;
                if (
                  (0 === n.originalLength
                    ? ((a = r.getStartLineNumber(n.originalStart) - 1), (l = 0))
                    : ((a = r.getStartLineNumber(n.originalStart)),
                      (l = r.getEndLineNumber(
                        n.originalStart + n.originalLength - 1
                      ))),
                  0 === n.modifiedLength
                    ? ((h = i.getStartLineNumber(n.modifiedStart) - 1), (f = 0))
                    : ((h = i.getStartLineNumber(n.modifiedStart)),
                      (f = i.getEndLineNumber(
                        n.modifiedStart + n.modifiedLength - 1
                      ))),
                  s &&
                    n.originalLength > 0 &&
                    n.originalLength < 20 &&
                    n.modifiedLength > 0 &&
                    n.modifiedLength < 20 &&
                    o())
                ) {
                  var d = r.createCharSequence(
                      t,
                      n.originalStart,
                      n.originalStart + n.originalLength - 1
                    ),
                    m = i.createCharSequence(
                      t,
                      n.modifiedStart,
                      n.modifiedStart + n.modifiedLength - 1
                    ),
                    p = Fe(d, m, o, !0).changes;
                  u && (p = Be(p)), (c = []);
                  for (var g = 0, _ = p.length; g < _; g++)
                    c.push(We.createFromDiffChange(p[g], d, m));
                }
                return new e(a, l, h, f, c);
              }),
              e
            );
          })(),
          Ye = (function () {
            function e(e, t, n) {
              (this.shouldComputeCharChanges = n.shouldComputeCharChanges),
                (this.shouldPostProcessCharChanges =
                  n.shouldPostProcessCharChanges),
                (this.shouldIgnoreTrimWhitespace =
                  n.shouldIgnoreTrimWhitespace),
                (this.shouldMakePrettyDiff = n.shouldMakePrettyDiff),
                (this.originalLines = e),
                (this.modifiedLines = t),
                (this.original = new Ke(e)),
                (this.modified = new Ke(t)),
                (this.continueLineDiff = Ge(n.maxComputationTime)),
                (this.continueCharDiff = Ge(
                  0 === n.maxComputationTime
                    ? 0
                    : Math.min(n.maxComputationTime, 5e3)
                ));
            }
            return (
              (e.prototype.computeDiff = function () {
                if (
                  1 === this.original.lines.length &&
                  0 === this.original.lines[0].length
                )
                  return {
                    quitEarly: !1,
                    changes: [
                      {
                        originalStartLineNumber: 1,
                        originalEndLineNumber: 1,
                        modifiedStartLineNumber: 1,
                        modifiedEndLineNumber: this.modified.lines.length,
                        charChanges: [
                          {
                            modifiedEndColumn: 0,
                            modifiedEndLineNumber: 0,
                            modifiedStartColumn: 0,
                            modifiedStartLineNumber: 0,
                            originalEndColumn: 0,
                            originalEndLineNumber: 0,
                            originalStartColumn: 0,
                            originalStartLineNumber: 0,
                          },
                        ],
                      },
                    ],
                  };
                if (
                  1 === this.modified.lines.length &&
                  0 === this.modified.lines[0].length
                )
                  return {
                    quitEarly: !1,
                    changes: [
                      {
                        originalStartLineNumber: 1,
                        originalEndLineNumber: this.original.lines.length,
                        modifiedStartLineNumber: 1,
                        modifiedEndLineNumber: 1,
                        charChanges: [
                          {
                            modifiedEndColumn: 0,
                            modifiedEndLineNumber: 0,
                            modifiedStartColumn: 0,
                            modifiedStartLineNumber: 0,
                            originalEndColumn: 0,
                            originalEndLineNumber: 0,
                            originalStartColumn: 0,
                            originalStartLineNumber: 0,
                          },
                        ],
                      },
                    ],
                  };
                var e = Fe(
                    this.original,
                    this.modified,
                    this.continueLineDiff,
                    this.shouldMakePrettyDiff
                  ),
                  t = e.changes,
                  n = e.quitEarly;
                if (this.shouldIgnoreTrimWhitespace) {
                  for (var r = [], i = 0, o = t.length; i < o; i++)
                    r.push(
                      He.createFromDiffResult(
                        this.shouldIgnoreTrimWhitespace,
                        t[i],
                        this.original,
                        this.modified,
                        this.continueCharDiff,
                        this.shouldComputeCharChanges,
                        this.shouldPostProcessCharChanges
                      )
                    );
                  return { quitEarly: n, changes: r };
                }
                for (
                  var s = [], u = 0, a = 0, l = ((i = -1), t.length);
                  i < l;
                  i++
                ) {
                  for (
                    var h = i + 1 < l ? t[i + 1] : null,
                      f = h ? h.originalStart : this.originalLines.length,
                      c = h ? h.modifiedStart : this.modifiedLines.length;
                    u < f && a < c;

                  ) {
                    var d = this.originalLines[u],
                      m = this.modifiedLines[a];
                    if (d !== m) {
                      for (var p = je(d, 1), g = je(m, 1); p > 1 && g > 1; ) {
                        if (d.charCodeAt(p - 2) !== m.charCodeAt(g - 2)) break;
                        p--, g--;
                      }
                      (p > 1 || g > 1) &&
                        this._pushTrimWhitespaceCharChange(
                          s,
                          u + 1,
                          1,
                          p,
                          a + 1,
                          1,
                          g
                        );
                      for (
                        var _ = Ve(d, 1),
                          v = Ve(m, 1),
                          y = d.length + 1,
                          C = m.length + 1;
                        _ < y && v < C;

                      ) {
                        if (d.charCodeAt(_ - 1) !== d.charCodeAt(v - 1)) break;
                        _++, v++;
                      }
                      (_ < y || v < C) &&
                        this._pushTrimWhitespaceCharChange(
                          s,
                          u + 1,
                          _,
                          y,
                          a + 1,
                          v,
                          C
                        );
                    }
                    u++, a++;
                  }
                  h &&
                    (s.push(
                      He.createFromDiffResult(
                        this.shouldIgnoreTrimWhitespace,
                        h,
                        this.original,
                        this.modified,
                        this.continueCharDiff,
                        this.shouldComputeCharChanges,
                        this.shouldPostProcessCharChanges
                      )
                    ),
                    (u += h.originalLength),
                    (a += h.modifiedLength));
                }
                return { quitEarly: n, changes: s };
              }),
              (e.prototype._pushTrimWhitespaceCharChange = function (
                e,
                t,
                n,
                r,
                i,
                o,
                s
              ) {
                if (!this._mergeTrimWhitespaceCharChange(e, t, n, r, i, o, s)) {
                  var u = void 0;
                  this.shouldComputeCharChanges &&
                    (u = [new We(t, n, t, r, i, o, i, s)]),
                    e.push(new He(t, t, i, i, u));
                }
              }),
              (e.prototype._mergeTrimWhitespaceCharChange = function (
                e,
                t,
                n,
                r,
                i,
                o,
                s
              ) {
                var u = e.length;
                if (0 === u) return !1;
                var a = e[u - 1];
                return (
                  0 !== a.originalEndLineNumber &&
                  0 !== a.modifiedEndLineNumber &&
                  a.originalEndLineNumber + 1 === t &&
                  a.modifiedEndLineNumber + 1 === i &&
                  ((a.originalEndLineNumber = t),
                  (a.modifiedEndLineNumber = i),
                  this.shouldComputeCharChanges &&
                    a.charChanges &&
                    a.charChanges.push(new We(t, n, t, r, i, o, i, s)),
                  !0)
                );
              }),
              e
            );
          })();
        function je(e, t) {
          var n = Ie(e);
          return -1 === n ? t : n + 1;
        }
        function Ve(e, t) {
          var n = Re(e);
          return -1 === n ? t : n + 2;
        }
        function Ge(e) {
          if (0 === e)
            return function () {
              return !0;
            };
          var t = Date.now();
          return function () {
            return Date.now() - t < e;
          };
        }
        function ze(e) {
          return e < 0 ? 0 : e > 255 ? 255 : 0 | e;
        }
        function Qe(e) {
          return e < 0 ? 0 : e > 4294967295 ? 4294967295 : 0 | e;
        }
        var Xe = (function () {
            return function (e, t) {
              (this.index = e), (this.remainder = t);
            };
          })(),
          Ze = (function () {
            function e(e) {
              (this.values = e),
                (this.prefixSum = new Uint32Array(e.length)),
                (this.prefixSumValidIndex = new Int32Array(1)),
                (this.prefixSumValidIndex[0] = -1);
            }
            return (
              (e.prototype.insertValues = function (e, t) {
                e = Qe(e);
                var n = this.values,
                  r = this.prefixSum,
                  i = t.length;
                return (
                  0 !== i &&
                  ((this.values = new Uint32Array(n.length + i)),
                  this.values.set(n.subarray(0, e), 0),
                  this.values.set(n.subarray(e), e + i),
                  this.values.set(t, e),
                  e - 1 < this.prefixSumValidIndex[0] &&
                    (this.prefixSumValidIndex[0] = e - 1),
                  (this.prefixSum = new Uint32Array(this.values.length)),
                  this.prefixSumValidIndex[0] >= 0 &&
                    this.prefixSum.set(
                      r.subarray(0, this.prefixSumValidIndex[0] + 1)
                    ),
                  !0)
                );
              }),
              (e.prototype.changeValue = function (e, t) {
                return (
                  (e = Qe(e)),
                  (t = Qe(t)),
                  this.values[e] !== t &&
                    ((this.values[e] = t),
                    e - 1 < this.prefixSumValidIndex[0] &&
                      (this.prefixSumValidIndex[0] = e - 1),
                    !0)
                );
              }),
              (e.prototype.removeValues = function (e, t) {
                (e = Qe(e)), (t = Qe(t));
                var n = this.values,
                  r = this.prefixSum;
                if (e >= n.length) return !1;
                var i = n.length - e;
                return (
                  t >= i && (t = i),
                  0 !== t &&
                    ((this.values = new Uint32Array(n.length - t)),
                    this.values.set(n.subarray(0, e), 0),
                    this.values.set(n.subarray(e + t), e),
                    (this.prefixSum = new Uint32Array(this.values.length)),
                    e - 1 < this.prefixSumValidIndex[0] &&
                      (this.prefixSumValidIndex[0] = e - 1),
                    this.prefixSumValidIndex[0] >= 0 &&
                      this.prefixSum.set(
                        r.subarray(0, this.prefixSumValidIndex[0] + 1)
                      ),
                    !0)
                );
              }),
              (e.prototype.getTotalValue = function () {
                return 0 === this.values.length
                  ? 0
                  : this._getAccumulatedValue(this.values.length - 1);
              }),
              (e.prototype.getAccumulatedValue = function (e) {
                return e < 0 ? 0 : ((e = Qe(e)), this._getAccumulatedValue(e));
              }),
              (e.prototype._getAccumulatedValue = function (e) {
                if (e <= this.prefixSumValidIndex[0]) return this.prefixSum[e];
                var t = this.prefixSumValidIndex[0] + 1;
                0 === t && ((this.prefixSum[0] = this.values[0]), t++),
                  e >= this.values.length && (e = this.values.length - 1);
                for (var n = t; n <= e; n++)
                  this.prefixSum[n] = this.prefixSum[n - 1] + this.values[n];
                return (
                  (this.prefixSumValidIndex[0] = Math.max(
                    this.prefixSumValidIndex[0],
                    e
                  )),
                  this.prefixSum[e]
                );
              }),
              (e.prototype.getIndexOf = function (e) {
                (e = Math.floor(e)), this.getTotalValue();
                for (
                  var t = 0, n = this.values.length - 1, r = 0, i = 0, o = 0;
                  t <= n;

                )
                  if (
                    ((r = (t + (n - t) / 2) | 0),
                    e < (o = (i = this.prefixSum[r]) - this.values[r]))
                  )
                    n = r - 1;
                  else {
                    if (!(e >= i)) break;
                    t = r + 1;
                  }
                return new Xe(r, e - o);
              }),
              e
            );
          })(),
          Je = (function () {
            function e(e, t, n, r) {
              (this._uri = e),
                (this._lines = t),
                (this._eol = n),
                (this._versionId = r),
                (this._lineStarts = null);
            }
            return (
              (e.prototype.dispose = function () {
                this._lines.length = 0;
              }),
              (e.prototype.getText = function () {
                return this._lines.join(this._eol);
              }),
              (e.prototype.onEvents = function (e) {
                e.eol &&
                  e.eol !== this._eol &&
                  ((this._eol = e.eol), (this._lineStarts = null));
                for (var t = 0, n = e.changes; t < n.length; t++) {
                  var r = n[t];
                  this._acceptDeleteRange(r.range),
                    this._acceptInsertText(
                      new Pe(r.range.startLineNumber, r.range.startColumn),
                      r.text
                    );
                }
                this._versionId = e.versionId;
              }),
              (e.prototype._ensureLineStarts = function () {
                if (!this._lineStarts) {
                  for (
                    var e = this._eol.length,
                      t = this._lines.length,
                      n = new Uint32Array(t),
                      r = 0;
                    r < t;
                    r++
                  )
                    n[r] = this._lines[r].length + e;
                  this._lineStarts = new Ze(n);
                }
              }),
              (e.prototype._setLineText = function (e, t) {
                (this._lines[e] = t),
                  this._lineStarts &&
                    this._lineStarts.changeValue(
                      e,
                      this._lines[e].length + this._eol.length
                    );
              }),
              (e.prototype._acceptDeleteRange = function (e) {
                if (e.startLineNumber !== e.endLineNumber)
                  this._setLineText(
                    e.startLineNumber - 1,
                    this._lines[e.startLineNumber - 1].substring(
                      0,
                      e.startColumn - 1
                    ) +
                      this._lines[e.endLineNumber - 1].substring(
                        e.endColumn - 1
                      )
                  ),
                    this._lines.splice(
                      e.startLineNumber,
                      e.endLineNumber - e.startLineNumber
                    ),
                    this._lineStarts &&
                      this._lineStarts.removeValues(
                        e.startLineNumber,
                        e.endLineNumber - e.startLineNumber
                      );
                else {
                  if (e.startColumn === e.endColumn) return;
                  this._setLineText(
                    e.startLineNumber - 1,
                    this._lines[e.startLineNumber - 1].substring(
                      0,
                      e.startColumn - 1
                    ) +
                      this._lines[e.startLineNumber - 1].substring(
                        e.endColumn - 1
                      )
                  );
                }
              }),
              (e.prototype._acceptInsertText = function (e, t) {
                if (0 !== t.length) {
                  var n = t.split(/\r\n|\r|\n/);
                  if (1 !== n.length) {
                    (n[n.length - 1] += this._lines[e.lineNumber - 1].substring(
                      e.column - 1
                    )),
                      this._setLineText(
                        e.lineNumber - 1,
                        this._lines[e.lineNumber - 1].substring(
                          0,
                          e.column - 1
                        ) + n[0]
                      );
                    for (
                      var r = new Uint32Array(n.length - 1), i = 1;
                      i < n.length;
                      i++
                    )
                      this._lines.splice(e.lineNumber + i - 1, 0, n[i]),
                        (r[i - 1] = n[i].length + this._eol.length);
                    this._lineStarts &&
                      this._lineStarts.insertValues(e.lineNumber, r);
                  } else
                    this._setLineText(
                      e.lineNumber - 1,
                      this._lines[e.lineNumber - 1].substring(0, e.column - 1) +
                        n[0] +
                        this._lines[e.lineNumber - 1].substring(e.column - 1)
                    );
                }
              }),
              e
            );
          })(),
          $e = '`~!@#$%^&*()-=+[{]}\\|;:\'",.<>/?';
        function et(e) {
          void 0 === e && (e = '');
          for (
            var t = '(-?\\d*\\.\\d\\w*)|([^', n = 0, r = $e;
            n < r.length;
            n++
          ) {
            var i = r[n];
            e.indexOf(i) >= 0 || (t += '\\' + i);
          }
          return (t += '\\s]+)'), new RegExp(t, 'g');
        }
        var tt = et();
        function nt(e) {
          var t = tt;
          if (e && e instanceof RegExp)
            if (e.global) t = e;
            else {
              var n = 'g';
              e.ignoreCase && (n += 'i'),
                e.multiline && (n += 'm'),
                e.unicode && (n += 'u'),
                (t = new RegExp(e.source, n));
            }
          return (t.lastIndex = 0), t;
        }
        function rt(e, t, n, r) {
          var i,
            o = e - 1 - r,
            s = n.lastIndexOf(' ', o - 1) + 1;
          for (t.lastIndex = s; (i = t.exec(n)); ) {
            var u = i.index || 0;
            if (u <= o && t.lastIndex >= o)
              return {
                word: i[0],
                startColumn: r + 1 + u,
                endColumn: r + 1 + t.lastIndex,
              };
          }
          return null;
        }
        function it(e, t, n, r) {
          var i,
            o = e - 1 - r;
          for (t.lastIndex = 0; (i = t.exec(n)); ) {
            var s = i.index || 0;
            if (s > o) return null;
            if (t.lastIndex >= o)
              return {
                word: i[0],
                startColumn: r + 1 + s,
                endColumn: r + 1 + t.lastIndex,
              };
          }
          return null;
        }
        function ot(e, t, n, r) {
          t.lastIndex = 0;
          var i = t.exec(n);
          if (!i) return null;
          var o = i[0].indexOf(' ') >= 0 ? it(e, t, n, r) : rt(e, t, n, r);
          return (t.lastIndex = 0), o;
        }
        var st = (function () {
            function e(t) {
              var n = ze(t);
              (this._defaultValue = n),
                (this._asciiMap = e._createAsciiMap(n)),
                (this._map = new Map());
            }
            return (
              (e._createAsciiMap = function (e) {
                for (var t = new Uint8Array(256), n = 0; n < 256; n++) t[n] = e;
                return t;
              }),
              (e.prototype.set = function (e, t) {
                var n = ze(t);
                e >= 0 && e < 256
                  ? (this._asciiMap[e] = n)
                  : this._map.set(e, n);
              }),
              (e.prototype.get = function (e) {
                return e >= 0 && e < 256
                  ? this._asciiMap[e]
                  : this._map.get(e) || this._defaultValue;
              }),
              e
            );
          })(),
          ut = (function () {
            function e(e, t, n) {
              for (var r = new Uint8Array(e * t), i = 0, o = e * t; i < o; i++)
                r[i] = n;
              (this._data = r), (this.rows = e), (this.cols = t);
            }
            return (
              (e.prototype.get = function (e, t) {
                return this._data[e * this.cols + t];
              }),
              (e.prototype.set = function (e, t, n) {
                this._data[e * this.cols + t] = n;
              }),
              e
            );
          })(),
          at = (function () {
            function e(e) {
              for (var t = 0, n = 0, r = 0, i = e.length; r < i; r++) {
                var o = e[r],
                  s = o[0];
                (l = o[1]) > t && (t = l),
                  s > n && (n = s),
                  (h = o[2]) > n && (n = h);
              }
              var u = new ut(++n, ++t, 0);
              for (r = 0, i = e.length; r < i; r++) {
                var a = e[r],
                  l = ((s = a[0]), a[1]),
                  h = a[2];
                u.set(s, l, h);
              }
              (this._states = u), (this._maxCharCode = t);
            }
            return (
              (e.prototype.nextState = function (e, t) {
                return t < 0 || t >= this._maxCharCode
                  ? 0
                  : this._states.get(e, t);
              }),
              e
            );
          })(),
          lt = null;
        function ht() {
          return (
            null === lt &&
              (lt = new at([
                [1, 104, 2],
                [1, 72, 2],
                [1, 102, 6],
                [1, 70, 6],
                [2, 116, 3],
                [2, 84, 3],
                [3, 116, 4],
                [3, 84, 4],
                [4, 112, 5],
                [4, 80, 5],
                [5, 115, 9],
                [5, 83, 9],
                [5, 58, 10],
                [6, 105, 7],
                [6, 73, 7],
                [7, 108, 8],
                [7, 76, 8],
                [8, 101, 9],
                [8, 69, 9],
                [9, 58, 10],
                [10, 47, 11],
                [11, 47, 12],
              ])),
            lt
          );
        }
        var ft = null;
        function ct() {
          if (null === ft) {
            ft = new st(0);
            for (
              var e = 0;
              e <
              ' \t<>\'"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…'
                .length;
              e++
            )
              ft.set(
                ' \t<>\'"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…'.charCodeAt(
                  e
                ),
                1
              );
            for (e = 0; e < '.,;'.length; e++) ft.set('.,;'.charCodeAt(e), 2);
          }
          return ft;
        }
        var dt = (function () {
          function e() {}
          return (
            (e._createLink = function (e, t, n, r, i) {
              var o = i - 1;
              do {
                var s = t.charCodeAt(o);
                if (2 !== e.get(s)) break;
                o--;
              } while (o > r);
              if (r > 0) {
                var u = t.charCodeAt(r - 1),
                  a = t.charCodeAt(o);
                ((40 === u && 41 === a) ||
                  (91 === u && 93 === a) ||
                  (123 === u && 125 === a)) &&
                  o--;
              }
              return {
                range: {
                  startLineNumber: n,
                  startColumn: r + 1,
                  endLineNumber: n,
                  endColumn: o + 2,
                },
                url: t.substring(r, o + 1),
              };
            }),
            (e.computeLinks = function (t, n) {
              void 0 === n && (n = ht());
              for (
                var r = ct(), i = [], o = 1, s = t.getLineCount();
                o <= s;
                o++
              ) {
                for (
                  var u = t.getLineContent(o),
                    a = u.length,
                    l = 0,
                    h = 0,
                    f = 0,
                    c = 1,
                    d = !1,
                    m = !1,
                    p = !1;
                  l < a;

                ) {
                  var g = !1,
                    _ = u.charCodeAt(l);
                  if (13 === c) {
                    var v = void 0;
                    switch (_) {
                      case 40:
                        (d = !0), (v = 0);
                        break;
                      case 41:
                        v = d ? 0 : 1;
                        break;
                      case 91:
                        (m = !0), (v = 0);
                        break;
                      case 93:
                        v = m ? 0 : 1;
                        break;
                      case 123:
                        (p = !0), (v = 0);
                        break;
                      case 125:
                        v = p ? 0 : 1;
                        break;
                      case 39:
                        v = 34 === f || 96 === f ? 0 : 1;
                        break;
                      case 34:
                        v = 39 === f || 96 === f ? 0 : 1;
                        break;
                      case 96:
                        v = 39 === f || 34 === f ? 0 : 1;
                        break;
                      case 42:
                        v = 42 === f ? 1 : 0;
                        break;
                      case 124:
                        v = 124 === f ? 1 : 0;
                        break;
                      default:
                        v = r.get(_);
                    }
                    1 === v && (i.push(e._createLink(r, u, o, h, l)), (g = !0));
                  } else if (12 === c) {
                    v = void 0;
                    91 === _ ? ((m = !0), (v = 0)) : (v = r.get(_)),
                      1 === v ? (g = !0) : (c = 13);
                  } else 0 === (c = n.nextState(c, _)) && (g = !0);
                  g &&
                    ((c = 1),
                    (d = !1),
                    (m = !1),
                    (p = !1),
                    (h = l + 1),
                    (f = _)),
                    l++;
                }
                13 === c && i.push(e._createLink(r, u, o, h, a));
              }
              return i;
            }),
            e
          );
        })();
        function mt(e) {
          return e &&
            'function' == typeof e.getLineCount &&
            'function' == typeof e.getLineContent
            ? dt.computeLinks(e)
            : [];
        }
        var pt = (function () {
          function e() {
            this._defaultValueSet = [
              ['true', 'false'],
              ['True', 'False'],
              [
                'Private',
                'Public',
                'Friend',
                'ReadOnly',
                'Partial',
                'Protected',
                'WriteOnly',
              ],
              ['public', 'protected', 'private'],
            ];
          }
          return (
            (e.prototype.navigateValueSet = function (e, t, n, r, i) {
              var o;
              if (e && t && (o = this.doNavigateValueSet(t, i)))
                return { range: e, value: o };
              if (n && r && (o = this.doNavigateValueSet(r, i)))
                return { range: n, value: o };
              return null;
            }),
            (e.prototype.doNavigateValueSet = function (e, t) {
              var n = this.numberReplace(e, t);
              return null !== n ? n : this.textReplace(e, t);
            }),
            (e.prototype.numberReplace = function (e, t) {
              var n = Math.pow(10, e.length - (e.lastIndexOf('.') + 1)),
                r = Number(e),
                i = parseFloat(e);
              return isNaN(r) || isNaN(i) || r !== i
                ? null
                : 0 !== r || t
                ? ((r = Math.floor(r * n)), (r += t ? n : -n), String(r / n))
                : null;
            }),
            (e.prototype.textReplace = function (e, t) {
              return this.valueSetsReplace(this._defaultValueSet, e, t);
            }),
            (e.prototype.valueSetsReplace = function (e, t, n) {
              for (var r = null, i = 0, o = e.length; null === r && i < o; i++)
                r = this.valueSetReplace(e[i], t, n);
              return r;
            }),
            (e.prototype.valueSetReplace = function (e, t, n) {
              var r = e.indexOf(t);
              return r >= 0
                ? ((r += n ? 1 : -1) < 0 ? (r = e.length - 1) : (r %= e.length),
                  e[r])
                : null;
            }),
            (e.INSTANCE = new e()),
            e
          );
        })();
        function gt(e) {
          var t,
            n = this,
            r = !1;
          return function () {
            return r ? t : ((r = !0), (t = e.apply(n, arguments)));
          };
        }
        !(function (t, n) {
          'object' == typeof exports && 'undefined' != typeof module
            ? n()
            : 'function' == typeof e && e.amd
            ? e(n)
            : n();
        })(0, function () {
          function e(e) {
            var t = this.constructor;
            return this.then(
              function (n) {
                return t.resolve(e()).then(function () {
                  return n;
                });
              },
              function (n) {
                return t.resolve(e()).then(function () {
                  return t.reject(n);
                });
              }
            );
          }
          var t = setTimeout;
          function r() {}
          function i(e) {
            if (!(this instanceof i))
              throw new TypeError('Promises must be constructed via new');
            if ('function' != typeof e) throw new TypeError('not a function');
            (this._state = 0),
              (this._handled = !1),
              (this._value = void 0),
              (this._deferreds = []),
              h(e, this);
          }
          function o(e, t) {
            for (; 3 === e._state; ) e = e._value;
            0 !== e._state
              ? ((e._handled = !0),
                i._immediateFn(function () {
                  var n = 1 === e._state ? t.onFulfilled : t.onRejected;
                  if (null !== n) {
                    var r;
                    try {
                      r = n(e._value);
                    } catch (Mn) {
                      return void u(t.promise, Mn);
                    }
                    s(t.promise, r);
                  } else (1 === e._state ? s : u)(t.promise, e._value);
                }))
              : e._deferreds.push(t);
          }
          function s(e, t) {
            try {
              if (t === e)
                throw new TypeError(
                  'A promise cannot be resolved with itself.'
                );
              if (t && ('object' == typeof t || 'function' == typeof t)) {
                var n = t.then;
                if (t instanceof i)
                  return (e._state = 3), (e._value = t), void a(e);
                if ('function' == typeof n)
                  return void h(
                    ((r = n),
                    (o = t),
                    function () {
                      r.apply(o, arguments);
                    }),
                    e
                  );
              }
              (e._state = 1), (e._value = t), a(e);
            } catch (Mn) {
              u(e, Mn);
            }
            var r, o;
          }
          function u(e, t) {
            (e._state = 2), (e._value = t), a(e);
          }
          function a(e) {
            2 === e._state &&
              0 === e._deferreds.length &&
              i._immediateFn(function () {
                e._handled || i._unhandledRejectionFn(e._value);
              });
            for (var t = 0, n = e._deferreds.length; t < n; t++)
              o(e, e._deferreds[t]);
            e._deferreds = null;
          }
          function l(e, t, n) {
            (this.onFulfilled = 'function' == typeof e ? e : null),
              (this.onRejected = 'function' == typeof t ? t : null),
              (this.promise = n);
          }
          function h(e, t) {
            var n = !1;
            try {
              e(
                function (e) {
                  n || ((n = !0), s(t, e));
                },
                function (e) {
                  n || ((n = !0), u(t, e));
                }
              );
            } catch (r) {
              if (n) return;
              (n = !0), u(t, r);
            }
          }
          (i.prototype.catch = function (e) {
            return this.then(null, e);
          }),
            (i.prototype.then = function (e, t) {
              var n = new this.constructor(r);
              return o(this, new l(e, t, n)), n;
            }),
            (i.prototype.finally = e),
            (i.all = function (e) {
              return new i(function (t, n) {
                if (!e || void 0 === e.length)
                  throw new TypeError('Promise.all accepts an array');
                var r = Array.prototype.slice.call(e);
                if (0 === r.length) return t([]);
                var i = r.length;
                function o(e, s) {
                  try {
                    if (s && ('object' == typeof s || 'function' == typeof s)) {
                      var u = s.then;
                      if ('function' == typeof u)
                        return void u.call(
                          s,
                          function (t) {
                            o(e, t);
                          },
                          n
                        );
                    }
                    (r[e] = s), 0 == --i && t(r);
                  } catch (a) {
                    n(a);
                  }
                }
                for (var s = 0; s < r.length; s++) o(s, r[s]);
              });
            }),
            (i.resolve = function (e) {
              return e && 'object' == typeof e && e.constructor === i
                ? e
                : new i(function (t) {
                    t(e);
                  });
            }),
            (i.reject = function (e) {
              return new i(function (t, n) {
                n(e);
              });
            }),
            (i.race = function (e) {
              return new i(function (t, n) {
                for (var r = 0, i = e.length; r < i; r++) e[r].then(t, n);
              });
            }),
            (i._immediateFn =
              ('function' == typeof setImmediate &&
                function (e) {
                  setImmediate(e);
                }) ||
              function (e) {
                t(e, 0);
              }),
            (i._unhandledRejectionFn = function (e) {
              'undefined' != typeof console &&
                console &&
                console.warn('Possible Unhandled Promise Rejection:', e);
            });
          var f = (function () {
            if ('undefined' != typeof self) return self;
            if ('undefined' != typeof window) return window;
            if (void 0 !== n) return n;
            throw new Error('unable to locate global object');
          })();
          'Promise' in f
            ? f.Promise.prototype.finally || (f.Promise.prototype.finally = e)
            : (f.Promise = i);
        });
        var _t,
          vt = (function () {
            function e(t) {
              (this.element = t),
                (this.next = e.Undefined),
                (this.prev = e.Undefined);
            }
            return (e.Undefined = new e(void 0)), e;
          })(),
          yt = (function () {
            function e() {
              (this._first = vt.Undefined),
                (this._last = vt.Undefined),
                (this._size = 0);
            }
            return (
              Object.defineProperty(e.prototype, 'size', {
                get: function () {
                  return this._size;
                },
                enumerable: !0,
                configurable: !0,
              }),
              (e.prototype.isEmpty = function () {
                return this._first === vt.Undefined;
              }),
              (e.prototype.clear = function () {
                (this._first = vt.Undefined),
                  (this._last = vt.Undefined),
                  (this._size = 0);
              }),
              (e.prototype.unshift = function (e) {
                return this._insert(e, !1);
              }),
              (e.prototype.push = function (e) {
                return this._insert(e, !0);
              }),
              (e.prototype._insert = function (e, t) {
                var n = this,
                  r = new vt(e);
                if (this._first === vt.Undefined)
                  (this._first = r), (this._last = r);
                else if (t) {
                  var i = this._last;
                  (this._last = r), (r.prev = i), (i.next = r);
                } else {
                  var o = this._first;
                  (this._first = r), (r.next = o), (o.prev = r);
                }
                this._size += 1;
                var s = !1;
                return function () {
                  s || ((s = !0), n._remove(r));
                };
              }),
              (e.prototype.shift = function () {
                if (this._first !== vt.Undefined) {
                  var e = this._first.element;
                  return this._remove(this._first), e;
                }
              }),
              (e.prototype.pop = function () {
                if (this._last !== vt.Undefined) {
                  var e = this._last.element;
                  return this._remove(this._last), e;
                }
              }),
              (e.prototype._remove = function (e) {
                if (e.prev !== vt.Undefined && e.next !== vt.Undefined) {
                  var t = e.prev;
                  (t.next = e.next), (e.next.prev = t);
                } else
                  e.prev === vt.Undefined && e.next === vt.Undefined
                    ? ((this._first = vt.Undefined),
                      (this._last = vt.Undefined))
                    : e.next === vt.Undefined
                    ? ((this._last = this._last.prev),
                      (this._last.next = vt.Undefined))
                    : e.prev === vt.Undefined &&
                      ((this._first = this._first.next),
                      (this._first.prev = vt.Undefined));
                this._size -= 1;
              }),
              (e.prototype.iterator = function () {
                var e,
                  t = this._first;
                return {
                  next: function () {
                    return t === vt.Undefined
                      ? oe
                      : (e
                          ? (e.value = t.element)
                          : (e = { done: !1, value: t.element }),
                        (t = t.next),
                        e);
                  },
                };
              }),
              (e.prototype.toArray = function () {
                for (
                  var e = [], t = this._first;
                  t !== vt.Undefined;
                  t = t.next
                )
                  e.push(t.element);
                return e;
              }),
              e
            );
          })(),
          Ct = (function () {
            var e = function (t, n) {
              return (e =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (e, t) {
                    e.__proto__ = t;
                  }) ||
                function (e, t) {
                  for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                })(t, n);
            };
            return function (t, n) {
              function r() {
                this.constructor = t;
              }
              e(t, n),
                (t.prototype =
                  null === n
                    ? Object.create(n)
                    : ((r.prototype = n.prototype), new r()));
            };
          })();
        !(function (e) {
          function t(e) {
            return function (t, n, r) {
              void 0 === n && (n = null);
              var i,
                o = !1;
              return (
                (i = e(
                  function (e) {
                    if (!o) return i ? i.dispose() : (o = !0), t.call(n, e);
                  },
                  null,
                  r
                )),
                o && i.dispose(),
                i
              );
            };
          }
          function n(e, t) {
            return s(function (n, r, i) {
              return (
                void 0 === r && (r = null),
                e(
                  function (e) {
                    return n.call(r, t(e));
                  },
                  null,
                  i
                )
              );
            });
          }
          function r(e, t) {
            return s(function (n, r, i) {
              return (
                void 0 === r && (r = null),
                e(
                  function (e) {
                    t(e), n.call(r, e);
                  },
                  null,
                  i
                )
              );
            });
          }
          function i(e, t) {
            return s(function (n, r, i) {
              return (
                void 0 === r && (r = null),
                e(
                  function (e) {
                    return t(e) && n.call(r, e);
                  },
                  null,
                  i
                )
              );
            });
          }
          function o(e, t, r) {
            var i = r;
            return n(e, function (e) {
              return (i = t(i, e));
            });
          }
          function s(e) {
            var t,
              n = new Lt({
                onFirstListenerAdd: function () {
                  t = e(n.fire, n);
                },
                onLastListenerRemove: function () {
                  t.dispose();
                },
              });
            return n.event;
          }
          function u(e, t, n, r, i) {
            var o;
            void 0 === n && (n = 100), void 0 === r && (r = !1);
            var s = void 0,
              u = void 0,
              a = 0,
              l = new Lt({
                leakWarningThreshold: i,
                onFirstListenerAdd: function () {
                  o = e(function (e) {
                    a++,
                      (s = t(s, e)),
                      r && !u && (l.fire(s), (s = void 0)),
                      clearTimeout(u),
                      (u = setTimeout(function () {
                        var e = s;
                        (s = void 0),
                          (u = void 0),
                          (!r || a > 1) && l.fire(e),
                          (a = 0);
                      }, n));
                  });
                },
                onLastListenerRemove: function () {
                  o.dispose();
                },
              });
            return l.event;
          }
          function a(e) {
            var t,
              n = !0;
            return i(e, function (e) {
              var r = n || e !== t;
              return (n = !1), (t = e), r;
            });
          }
          (e.None = function () {
            return v.None;
          }),
            (e.once = t),
            (e.map = n),
            (e.forEach = r),
            (e.filter = i),
            (e.signal = function (e) {
              return e;
            }),
            (e.any = function () {
              for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
              return function (t, n, r) {
                return (
                  void 0 === n && (n = null),
                  p.apply(
                    void 0,
                    e.map(function (e) {
                      return e(
                        function (e) {
                          return t.call(n, e);
                        },
                        null,
                        r
                      );
                    })
                  )
                );
              };
            }),
            (e.reduce = o),
            (e.snapshot = s),
            (e.debounce = u),
            (e.stopwatch = function (e) {
              var r = new Date().getTime();
              return n(t(e), function (e) {
                return new Date().getTime() - r;
              });
            }),
            (e.latch = a),
            (e.buffer = function (e, t, n) {
              void 0 === t && (t = !1), void 0 === n && (n = []);
              var r = n.slice(),
                i = e(function (e) {
                  r ? r.push(e) : s.fire(e);
                }),
                o = function () {
                  r &&
                    r.forEach(function (e) {
                      return s.fire(e);
                    }),
                    (r = null);
                },
                s = new Lt({
                  onFirstListenerAdd: function () {
                    i ||
                      (i = e(function (e) {
                        return s.fire(e);
                      }));
                  },
                  onFirstListenerDidAdd: function () {
                    r && (t ? setTimeout(o) : o());
                  },
                  onLastListenerRemove: function () {
                    i && i.dispose(), (i = null);
                  },
                });
              return s.event;
            });
          var l = (function () {
            function e(e) {
              this.event = e;
            }
            return (
              (e.prototype.map = function (t) {
                return new e(n(this.event, t));
              }),
              (e.prototype.forEach = function (t) {
                return new e(r(this.event, t));
              }),
              (e.prototype.filter = function (t) {
                return new e(i(this.event, t));
              }),
              (e.prototype.reduce = function (t, n) {
                return new e(o(this.event, t, n));
              }),
              (e.prototype.latch = function () {
                return new e(a(this.event));
              }),
              (e.prototype.debounce = function (t, n, r, i) {
                return (
                  void 0 === n && (n = 100),
                  void 0 === r && (r = !1),
                  new e(u(this.event, t, n, r, i))
                );
              }),
              (e.prototype.on = function (e, t, n) {
                return this.event(e, t, n);
              }),
              (e.prototype.once = function (e, n, r) {
                return t(this.event)(e, n, r);
              }),
              e
            );
          })();
          (e.chain = function (e) {
            return new l(e);
          }),
            (e.fromNodeEventEmitter = function (e, t, n) {
              void 0 === n &&
                (n = function (e) {
                  return e;
                });
              var r = function () {
                  for (var e = [], t = 0; t < arguments.length; t++)
                    e[t] = arguments[t];
                  return i.fire(n.apply(void 0, e));
                },
                i = new Lt({
                  onFirstListenerAdd: function () {
                    return e.on(t, r);
                  },
                  onLastListenerRemove: function () {
                    return e.removeListener(t, r);
                  },
                });
              return i.event;
            }),
            (e.fromDOMEventEmitter = function (e, t, n) {
              void 0 === n &&
                (n = function (e) {
                  return e;
                });
              var r = function () {
                  for (var e = [], t = 0; t < arguments.length; t++)
                    e[t] = arguments[t];
                  return i.fire(n.apply(void 0, e));
                },
                i = new Lt({
                  onFirstListenerAdd: function () {
                    return e.addEventListener(t, r);
                  },
                  onLastListenerRemove: function () {
                    return e.removeEventListener(t, r);
                  },
                });
              return i.event;
            }),
            (e.fromPromise = function (e) {
              var t = new Lt(),
                n = !1;
              return (
                e
                  .then(void 0, function () {
                    return null;
                  })
                  .then(function () {
                    n
                      ? t.fire(void 0)
                      : setTimeout(function () {
                          return t.fire(void 0);
                        }, 0);
                  }),
                (n = !0),
                t.event
              );
            }),
            (e.toPromise = function (e) {
              return new Promise(function (n) {
                return t(e)(n);
              });
            });
        })(_t || (_t = {}));
        var bt,
          Lt = (function () {
            function e(e) {
              (this._disposed = !1),
                (this._options = e),
                (this._leakageMon = void 0);
            }
            return (
              Object.defineProperty(e.prototype, 'event', {
                get: function () {
                  var t = this;
                  return (
                    this._event ||
                      (this._event = function (n, r, i) {
                        t._listeners || (t._listeners = new yt());
                        var o = t._listeners.isEmpty();
                        o &&
                          t._options &&
                          t._options.onFirstListenerAdd &&
                          t._options.onFirstListenerAdd(t);
                        var s,
                          u,
                          a = t._listeners.push(r ? [n, r] : n);
                        return (
                          o &&
                            t._options &&
                            t._options.onFirstListenerDidAdd &&
                            t._options.onFirstListenerDidAdd(t),
                          t._options &&
                            t._options.onListenerDidAdd &&
                            t._options.onListenerDidAdd(t, n, r),
                          t._leakageMon &&
                            (s = t._leakageMon.check(t._listeners.size)),
                          (u = {
                            dispose: function () {
                              (s && s(), (u.dispose = e._noop), t._disposed) ||
                                (a(),
                                t._options &&
                                  t._options.onLastListenerRemove &&
                                  ((t._listeners && !t._listeners.isEmpty()) ||
                                    t._options.onLastListenerRemove(t)));
                            },
                          }),
                          i instanceof _
                            ? i.add(u)
                            : Array.isArray(i) && i.push(u),
                          u
                        );
                      }),
                    this._event
                  );
                },
                enumerable: !0,
                configurable: !0,
              }),
              (e.prototype.fire = function (e) {
                if (this._listeners) {
                  this._deliveryQueue || (this._deliveryQueue = new yt());
                  for (
                    var t = this._listeners.iterator(), n = t.next();
                    !n.done;
                    n = t.next()
                  )
                    this._deliveryQueue.push([n.value, e]);
                  for (; this._deliveryQueue.size > 0; ) {
                    var r = this._deliveryQueue.shift(),
                      i = r[0],
                      o = r[1];
                    try {
                      'function' == typeof i
                        ? i.call(void 0, o)
                        : i[0].call(i[1], o);
                    } catch (n) {
                      l(n);
                    }
                  }
                }
              }),
              (e.prototype.dispose = function () {
                this._listeners && this._listeners.clear(),
                  this._deliveryQueue && this._deliveryQueue.clear(),
                  this._leakageMon && this._leakageMon.dispose(),
                  (this._disposed = !0);
              }),
              (e._noop = function () {}),
              e
            );
          })(),
          Nt = (function (e) {
            function t(t) {
              var n = e.call(this, t) || this;
              return (
                (n._isPaused = 0),
                (n._eventQueue = new yt()),
                (n._mergeFn = t && t.merge),
                n
              );
            }
            return (
              Ct(t, e),
              (t.prototype.pause = function () {
                this._isPaused++;
              }),
              (t.prototype.resume = function () {
                if (0 !== this._isPaused && 0 == --this._isPaused)
                  if (this._mergeFn) {
                    var t = this._eventQueue.toArray();
                    this._eventQueue.clear(),
                      e.prototype.fire.call(this, this._mergeFn(t));
                  } else
                    for (; !this._isPaused && 0 !== this._eventQueue.size; )
                      e.prototype.fire.call(this, this._eventQueue.shift());
              }),
              (t.prototype.fire = function (t) {
                this._listeners &&
                  (0 !== this._isPaused
                    ? this._eventQueue.push(t)
                    : e.prototype.fire.call(this, t));
              }),
              t
            );
          })(Lt),
          Et = (function () {
            function e() {
              var e = this;
              (this.hasListeners = !1),
                (this.events = []),
                (this.emitter = new Lt({
                  onFirstListenerAdd: function () {
                    return e.onFirstListenerAdd();
                  },
                  onLastListenerRemove: function () {
                    return e.onLastListenerRemove();
                  },
                }));
            }
            return (
              Object.defineProperty(e.prototype, 'event', {
                get: function () {
                  return this.emitter.event;
                },
                enumerable: !0,
                configurable: !0,
              }),
              (e.prototype.add = function (e) {
                var t = this,
                  n = { event: e, listener: null };
                this.events.push(n), this.hasListeners && this.hook(n);
                return g(
                  gt(function () {
                    t.hasListeners && t.unhook(n);
                    var e = t.events.indexOf(n);
                    t.events.splice(e, 1);
                  })
                );
              }),
              (e.prototype.onFirstListenerAdd = function () {
                var e = this;
                (this.hasListeners = !0),
                  this.events.forEach(function (t) {
                    return e.hook(t);
                  });
              }),
              (e.prototype.onLastListenerRemove = function () {
                var e = this;
                (this.hasListeners = !1),
                  this.events.forEach(function (t) {
                    return e.unhook(t);
                  });
              }),
              (e.prototype.hook = function (e) {
                var t = this;
                e.listener = e.event(function (e) {
                  return t.emitter.fire(e);
                });
              }),
              (e.prototype.unhook = function (e) {
                e.listener && e.listener.dispose(), (e.listener = null);
              }),
              (e.prototype.dispose = function () {
                this.emitter.dispose();
              }),
              e
            );
          })(),
          St = (function () {
            function e() {
              var e = this;
              (this.listening = !1),
                (this.inputEvent = _t.None),
                (this.inputEventListener = v.None),
                (this.emitter = new Lt({
                  onFirstListenerDidAdd: function () {
                    (e.listening = !0),
                      (e.inputEventListener = e.inputEvent(
                        e.emitter.fire,
                        e.emitter
                      ));
                  },
                  onLastListenerRemove: function () {
                    (e.listening = !1), e.inputEventListener.dispose();
                  },
                })),
                (this.event = this.emitter.event);
            }
            return (
              Object.defineProperty(e.prototype, 'input', {
                set: function (e) {
                  (this.inputEvent = e),
                    this.listening &&
                      (this.inputEventListener.dispose(),
                      (this.inputEventListener = e(
                        this.emitter.fire,
                        this.emitter
                      )));
                },
                enumerable: !0,
                configurable: !0,
              }),
              (e.prototype.dispose = function () {
                this.inputEventListener.dispose(), this.emitter.dispose();
              }),
              e
            );
          })(),
          wt = Object.freeze(function (e, t) {
            var n = setTimeout(e.bind(t), 0);
            return {
              dispose: function () {
                clearTimeout(n);
              },
            };
          });
        !(function (e) {
          (e.isCancellationToken = function (t) {
            return (
              t === e.None ||
              t === e.Cancelled ||
              t instanceof Ot ||
              (!(!t || 'object' != typeof t) &&
                'boolean' == typeof t.isCancellationRequested &&
                'function' == typeof t.onCancellationRequested)
            );
          }),
            (e.None = Object.freeze({
              isCancellationRequested: !1,
              onCancellationRequested: _t.None,
            })),
            (e.Cancelled = Object.freeze({
              isCancellationRequested: !0,
              onCancellationRequested: wt,
            }));
        })(bt || (bt = {}));
        var At,
          Ot = (function () {
            function e() {
              (this._isCancelled = !1), (this._emitter = null);
            }
            return (
              (e.prototype.cancel = function () {
                this._isCancelled ||
                  ((this._isCancelled = !0),
                  this._emitter &&
                    (this._emitter.fire(void 0), this.dispose()));
              }),
              Object.defineProperty(e.prototype, 'isCancellationRequested', {
                get: function () {
                  return this._isCancelled;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(e.prototype, 'onCancellationRequested', {
                get: function () {
                  return this._isCancelled
                    ? wt
                    : (this._emitter || (this._emitter = new Lt()),
                      this._emitter.event);
                },
                enumerable: !0,
                configurable: !0,
              }),
              (e.prototype.dispose = function () {
                this._emitter &&
                  (this._emitter.dispose(), (this._emitter = null));
              }),
              e
            );
          })(),
          Mt = (function () {
            function e(e) {
              (this._token = void 0),
                (this._parentListener = void 0),
                (this._parentListener =
                  e && e.onCancellationRequested(this.cancel, this));
            }
            return (
              Object.defineProperty(e.prototype, 'token', {
                get: function () {
                  return this._token || (this._token = new Ot()), this._token;
                },
                enumerable: !0,
                configurable: !0,
              }),
              (e.prototype.cancel = function () {
                this._token
                  ? this._token instanceof Ot && this._token.cancel()
                  : (this._token = bt.Cancelled);
              }),
              (e.prototype.dispose = function (e) {
                void 0 === e && (e = !1),
                  e && this.cancel(),
                  this._parentListener && this._parentListener.dispose(),
                  this._token
                    ? this._token instanceof Ot && this._token.dispose()
                    : (this._token = bt.None);
              }),
              e
            );
          })(),
          xt = (function () {
            function e() {
              (this._keyCodeToStr = []),
                (this._strToKeyCode = Object.create(null));
            }
            return (
              (e.prototype.define = function (e, t) {
                (this._keyCodeToStr[e] = t),
                  (this._strToKeyCode[t.toLowerCase()] = e);
              }),
              (e.prototype.keyCodeToStr = function (e) {
                return this._keyCodeToStr[e];
              }),
              (e.prototype.strToKeyCode = function (e) {
                return this._strToKeyCode[e.toLowerCase()] || 0;
              }),
              e
            );
          })(),
          Pt = new xt(),
          Tt = new xt(),
          It = new xt();
        function Rt(e, t) {
          return (e | (((65535 & t) << 16) >>> 0)) >>> 0;
        }
        !(function () {
          function e(e, t, n, r) {
            void 0 === n && (n = t),
              void 0 === r && (r = n),
              Pt.define(e, t),
              Tt.define(e, n),
              It.define(e, r);
          }
          e(0, 'unknown'),
            e(1, 'Backspace'),
            e(2, 'Tab'),
            e(3, 'Enter'),
            e(4, 'Shift'),
            e(5, 'Ctrl'),
            e(6, 'Alt'),
            e(7, 'PauseBreak'),
            e(8, 'CapsLock'),
            e(9, 'Escape'),
            e(10, 'Space'),
            e(11, 'PageUp'),
            e(12, 'PageDown'),
            e(13, 'End'),
            e(14, 'Home'),
            e(15, 'LeftArrow', 'Left'),
            e(16, 'UpArrow', 'Up'),
            e(17, 'RightArrow', 'Right'),
            e(18, 'DownArrow', 'Down'),
            e(19, 'Insert'),
            e(20, 'Delete'),
            e(21, '0'),
            e(22, '1'),
            e(23, '2'),
            e(24, '3'),
            e(25, '4'),
            e(26, '5'),
            e(27, '6'),
            e(28, '7'),
            e(29, '8'),
            e(30, '9'),
            e(31, 'A'),
            e(32, 'B'),
            e(33, 'C'),
            e(34, 'D'),
            e(35, 'E'),
            e(36, 'F'),
            e(37, 'G'),
            e(38, 'H'),
            e(39, 'I'),
            e(40, 'J'),
            e(41, 'K'),
            e(42, 'L'),
            e(43, 'M'),
            e(44, 'N'),
            e(45, 'O'),
            e(46, 'P'),
            e(47, 'Q'),
            e(48, 'R'),
            e(49, 'S'),
            e(50, 'T'),
            e(51, 'U'),
            e(52, 'V'),
            e(53, 'W'),
            e(54, 'X'),
            e(55, 'Y'),
            e(56, 'Z'),
            e(57, 'Meta'),
            e(58, 'ContextMenu'),
            e(59, 'F1'),
            e(60, 'F2'),
            e(61, 'F3'),
            e(62, 'F4'),
            e(63, 'F5'),
            e(64, 'F6'),
            e(65, 'F7'),
            e(66, 'F8'),
            e(67, 'F9'),
            e(68, 'F10'),
            e(69, 'F11'),
            e(70, 'F12'),
            e(71, 'F13'),
            e(72, 'F14'),
            e(73, 'F15'),
            e(74, 'F16'),
            e(75, 'F17'),
            e(76, 'F18'),
            e(77, 'F19'),
            e(78, 'NumLock'),
            e(79, 'ScrollLock'),
            e(80, ';', ';', 'OEM_1'),
            e(81, '=', '=', 'OEM_PLUS'),
            e(82, ',', ',', 'OEM_COMMA'),
            e(83, '-', '-', 'OEM_MINUS'),
            e(84, '.', '.', 'OEM_PERIOD'),
            e(85, '/', '/', 'OEM_2'),
            e(86, '`', '`', 'OEM_3'),
            e(110, 'ABNT_C1'),
            e(111, 'ABNT_C2'),
            e(87, '[', '[', 'OEM_4'),
            e(88, '\\', '\\', 'OEM_5'),
            e(89, ']', ']', 'OEM_6'),
            e(90, "'", "'", 'OEM_7'),
            e(91, 'OEM_8'),
            e(92, 'OEM_102'),
            e(93, 'NumPad0'),
            e(94, 'NumPad1'),
            e(95, 'NumPad2'),
            e(96, 'NumPad3'),
            e(97, 'NumPad4'),
            e(98, 'NumPad5'),
            e(99, 'NumPad6'),
            e(100, 'NumPad7'),
            e(101, 'NumPad8'),
            e(102, 'NumPad9'),
            e(103, 'NumPad_Multiply'),
            e(104, 'NumPad_Add'),
            e(105, 'NumPad_Separator'),
            e(106, 'NumPad_Subtract'),
            e(107, 'NumPad_Decimal'),
            e(108, 'NumPad_Divide');
        })(),
          (function (e) {
            (e.toString = function (e) {
              return Pt.keyCodeToStr(e);
            }),
              (e.fromString = function (e) {
                return Pt.strToKeyCode(e);
              }),
              (e.toUserSettingsUS = function (e) {
                return Tt.keyCodeToStr(e);
              }),
              (e.toUserSettingsGeneral = function (e) {
                return It.keyCodeToStr(e);
              }),
              (e.fromUserSettings = function (e) {
                return Tt.strToKeyCode(e) || It.strToKeyCode(e);
              });
          })(At || (At = {}));
        var kt,
          Ut,
          Dt,
          Ft,
          Kt,
          qt,
          Wt,
          Bt,
          Ht,
          Yt,
          jt,
          Vt,
          Gt,
          zt,
          Qt,
          Xt,
          Zt,
          Jt,
          $t,
          en,
          tn,
          nn,
          rn,
          on,
          sn,
          un,
          an,
          ln,
          hn,
          fn,
          cn,
          dn,
          mn,
          pn = (function () {
            var e = function (t, n) {
              return (e =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (e, t) {
                    e.__proto__ = t;
                  }) ||
                function (e, t) {
                  for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                })(t, n);
            };
            return function (t, n) {
              function r() {
                this.constructor = t;
              }
              e(t, n),
                (t.prototype =
                  null === n
                    ? Object.create(n)
                    : ((r.prototype = n.prototype), new r()));
            };
          })(),
          gn = (function (e) {
            function t(t, n, r, i) {
              var o = e.call(this, t, n, r, i) || this;
              return (
                (o.selectionStartLineNumber = t),
                (o.selectionStartColumn = n),
                (o.positionLineNumber = r),
                (o.positionColumn = i),
                o
              );
            }
            return (
              pn(t, e),
              (t.prototype.toString = function () {
                return (
                  '[' +
                  this.selectionStartLineNumber +
                  ',' +
                  this.selectionStartColumn +
                  ' -> ' +
                  this.positionLineNumber +
                  ',' +
                  this.positionColumn +
                  ']'
                );
              }),
              (t.prototype.equalsSelection = function (e) {
                return t.selectionsEqual(this, e);
              }),
              (t.selectionsEqual = function (e, t) {
                return (
                  e.selectionStartLineNumber === t.selectionStartLineNumber &&
                  e.selectionStartColumn === t.selectionStartColumn &&
                  e.positionLineNumber === t.positionLineNumber &&
                  e.positionColumn === t.positionColumn
                );
              }),
              (t.prototype.getDirection = function () {
                return this.selectionStartLineNumber === this.startLineNumber &&
                  this.selectionStartColumn === this.startColumn
                  ? 0
                  : 1;
              }),
              (t.prototype.setEndPosition = function (e, n) {
                return 0 === this.getDirection()
                  ? new t(this.startLineNumber, this.startColumn, e, n)
                  : new t(e, n, this.startLineNumber, this.startColumn);
              }),
              (t.prototype.getPosition = function () {
                return new Pe(this.positionLineNumber, this.positionColumn);
              }),
              (t.prototype.setStartPosition = function (e, n) {
                return 0 === this.getDirection()
                  ? new t(e, n, this.endLineNumber, this.endColumn)
                  : new t(this.endLineNumber, this.endColumn, e, n);
              }),
              (t.fromPositions = function (e, n) {
                return (
                  void 0 === n && (n = e),
                  new t(e.lineNumber, e.column, n.lineNumber, n.column)
                );
              }),
              (t.liftSelection = function (e) {
                return new t(
                  e.selectionStartLineNumber,
                  e.selectionStartColumn,
                  e.positionLineNumber,
                  e.positionColumn
                );
              }),
              (t.selectionsArrEqual = function (e, t) {
                if ((e && !t) || (!e && t)) return !1;
                if (!e && !t) return !0;
                if (e.length !== t.length) return !1;
                for (var n = 0, r = e.length; n < r; n++)
                  if (!this.selectionsEqual(e[n], t[n])) return !1;
                return !0;
              }),
              (t.isISelection = function (e) {
                return (
                  e &&
                  'number' == typeof e.selectionStartLineNumber &&
                  'number' == typeof e.selectionStartColumn &&
                  'number' == typeof e.positionLineNumber &&
                  'number' == typeof e.positionColumn
                );
              }),
              (t.createWithDirection = function (e, n, r, i, o) {
                return 0 === o ? new t(e, n, r, i) : new t(r, i, e, n);
              }),
              t
            );
          })(Te),
          _n = (function () {
            function e(e, t, n) {
              (this.offset = 0 | e), (this.type = t), (this.language = n);
            }
            return (
              (e.prototype.toString = function () {
                return '(' + this.offset + ', ' + this.type + ')';
              }),
              e
            );
          })();
        !(function (e) {
          (e[(e.Unknown = 0)] = 'Unknown'),
            (e[(e.Disabled = 1)] = 'Disabled'),
            (e[(e.Enabled = 2)] = 'Enabled');
        })(kt || (kt = {})),
          (function (e) {
            (e[(e.KeepWhitespace = 1)] = 'KeepWhitespace'),
              (e[(e.InsertAsSnippet = 4)] = 'InsertAsSnippet');
          })(Ut || (Ut = {})),
          (function (e) {
            (e[(e.Method = 0)] = 'Method'),
              (e[(e.Function = 1)] = 'Function'),
              (e[(e.Constructor = 2)] = 'Constructor'),
              (e[(e.Field = 3)] = 'Field'),
              (e[(e.Variable = 4)] = 'Variable'),
              (e[(e.Class = 5)] = 'Class'),
              (e[(e.Struct = 6)] = 'Struct'),
              (e[(e.Interface = 7)] = 'Interface'),
              (e[(e.Module = 8)] = 'Module'),
              (e[(e.Property = 9)] = 'Property'),
              (e[(e.Event = 10)] = 'Event'),
              (e[(e.Operator = 11)] = 'Operator'),
              (e[(e.Unit = 12)] = 'Unit'),
              (e[(e.Value = 13)] = 'Value'),
              (e[(e.Constant = 14)] = 'Constant'),
              (e[(e.Enum = 15)] = 'Enum'),
              (e[(e.EnumMember = 16)] = 'EnumMember'),
              (e[(e.Keyword = 17)] = 'Keyword'),
              (e[(e.Text = 18)] = 'Text'),
              (e[(e.Color = 19)] = 'Color'),
              (e[(e.File = 20)] = 'File'),
              (e[(e.Reference = 21)] = 'Reference'),
              (e[(e.Customcolor = 22)] = 'Customcolor'),
              (e[(e.Folder = 23)] = 'Folder'),
              (e[(e.TypeParameter = 24)] = 'TypeParameter'),
              (e[(e.Snippet = 25)] = 'Snippet');
          })(Dt || (Dt = {})),
          (function (e) {
            e[(e.Deprecated = 1)] = 'Deprecated';
          })(Ft || (Ft = {})),
          (function (e) {
            (e[(e.Invoke = 0)] = 'Invoke'),
              (e[(e.TriggerCharacter = 1)] = 'TriggerCharacter'),
              (e[(e.TriggerForIncompleteCompletions = 2)] =
                'TriggerForIncompleteCompletions');
          })(Kt || (Kt = {})),
          (function (e) {
            (e[(e.EXACT = 0)] = 'EXACT'),
              (e[(e.ABOVE = 1)] = 'ABOVE'),
              (e[(e.BELOW = 2)] = 'BELOW');
          })(qt || (qt = {})),
          (function (e) {
            (e[(e.NotSet = 0)] = 'NotSet'),
              (e[(e.ContentFlush = 1)] = 'ContentFlush'),
              (e[(e.RecoverFromMarkers = 2)] = 'RecoverFromMarkers'),
              (e[(e.Explicit = 3)] = 'Explicit'),
              (e[(e.Paste = 4)] = 'Paste'),
              (e[(e.Undo = 5)] = 'Undo'),
              (e[(e.Redo = 6)] = 'Redo');
          })(Wt || (Wt = {})),
          (function (e) {
            (e[(e.LF = 1)] = 'LF'), (e[(e.CRLF = 2)] = 'CRLF');
          })(Bt || (Bt = {})),
          (function (e) {
            (e[(e.Text = 0)] = 'Text'),
              (e[(e.Read = 1)] = 'Read'),
              (e[(e.Write = 2)] = 'Write');
          })(Ht || (Ht = {})),
          (function (e) {
            (e[(e.None = 0)] = 'None'),
              (e[(e.Keep = 1)] = 'Keep'),
              (e[(e.Brackets = 2)] = 'Brackets'),
              (e[(e.Advanced = 3)] = 'Advanced'),
              (e[(e.Full = 4)] = 'Full');
          })(Yt || (Yt = {})),
          (function (e) {
            (e[(e.acceptSuggestionOnCommitCharacter = 0)] =
              'acceptSuggestionOnCommitCharacter'),
              (e[(e.acceptSuggestionOnEnter = 1)] = 'acceptSuggestionOnEnter'),
              (e[(e.accessibilitySupport = 2)] = 'accessibilitySupport'),
              (e[(e.accessibilityPageSize = 3)] = 'accessibilityPageSize'),
              (e[(e.ariaLabel = 4)] = 'ariaLabel'),
              (e[(e.autoClosingBrackets = 5)] = 'autoClosingBrackets'),
              (e[(e.autoClosingOvertype = 6)] = 'autoClosingOvertype'),
              (e[(e.autoClosingQuotes = 7)] = 'autoClosingQuotes'),
              (e[(e.autoIndent = 8)] = 'autoIndent'),
              (e[(e.automaticLayout = 9)] = 'automaticLayout'),
              (e[(e.autoSurround = 10)] = 'autoSurround'),
              (e[(e.codeLens = 11)] = 'codeLens'),
              (e[(e.colorDecorators = 12)] = 'colorDecorators'),
              (e[(e.comments = 13)] = 'comments'),
              (e[(e.contextmenu = 14)] = 'contextmenu'),
              (e[(e.copyWithSyntaxHighlighting = 15)] =
                'copyWithSyntaxHighlighting'),
              (e[(e.cursorBlinking = 16)] = 'cursorBlinking'),
              (e[(e.cursorSmoothCaretAnimation = 17)] =
                'cursorSmoothCaretAnimation'),
              (e[(e.cursorStyle = 18)] = 'cursorStyle'),
              (e[(e.cursorSurroundingLines = 19)] = 'cursorSurroundingLines'),
              (e[(e.cursorSurroundingLinesStyle = 20)] =
                'cursorSurroundingLinesStyle'),
              (e[(e.cursorWidth = 21)] = 'cursorWidth'),
              (e[(e.disableLayerHinting = 22)] = 'disableLayerHinting'),
              (e[(e.disableMonospaceOptimizations = 23)] =
                'disableMonospaceOptimizations'),
              (e[(e.dragAndDrop = 24)] = 'dragAndDrop'),
              (e[(e.emptySelectionClipboard = 25)] = 'emptySelectionClipboard'),
              (e[(e.extraEditorClassName = 26)] = 'extraEditorClassName'),
              (e[(e.fastScrollSensitivity = 27)] = 'fastScrollSensitivity'),
              (e[(e.find = 28)] = 'find'),
              (e[(e.fixedOverflowWidgets = 29)] = 'fixedOverflowWidgets'),
              (e[(e.folding = 30)] = 'folding'),
              (e[(e.foldingStrategy = 31)] = 'foldingStrategy'),
              (e[(e.foldingHighlight = 32)] = 'foldingHighlight'),
              (e[(e.fontFamily = 33)] = 'fontFamily'),
              (e[(e.fontInfo = 34)] = 'fontInfo'),
              (e[(e.fontLigatures = 35)] = 'fontLigatures'),
              (e[(e.fontSize = 36)] = 'fontSize'),
              (e[(e.fontWeight = 37)] = 'fontWeight'),
              (e[(e.formatOnPaste = 38)] = 'formatOnPaste'),
              (e[(e.formatOnType = 39)] = 'formatOnType'),
              (e[(e.glyphMargin = 40)] = 'glyphMargin'),
              (e[(e.gotoLocation = 41)] = 'gotoLocation'),
              (e[(e.hideCursorInOverviewRuler = 42)] =
                'hideCursorInOverviewRuler'),
              (e[(e.highlightActiveIndentGuide = 43)] =
                'highlightActiveIndentGuide'),
              (e[(e.hover = 44)] = 'hover'),
              (e[(e.inDiffEditor = 45)] = 'inDiffEditor'),
              (e[(e.letterSpacing = 46)] = 'letterSpacing'),
              (e[(e.lightbulb = 47)] = 'lightbulb'),
              (e[(e.lineDecorationsWidth = 48)] = 'lineDecorationsWidth'),
              (e[(e.lineHeight = 49)] = 'lineHeight'),
              (e[(e.lineNumbers = 50)] = 'lineNumbers'),
              (e[(e.lineNumbersMinChars = 51)] = 'lineNumbersMinChars'),
              (e[(e.links = 52)] = 'links'),
              (e[(e.matchBrackets = 53)] = 'matchBrackets'),
              (e[(e.minimap = 54)] = 'minimap'),
              (e[(e.mouseStyle = 55)] = 'mouseStyle'),
              (e[(e.mouseWheelScrollSensitivity = 56)] =
                'mouseWheelScrollSensitivity'),
              (e[(e.mouseWheelZoom = 57)] = 'mouseWheelZoom'),
              (e[(e.multiCursorMergeOverlapping = 58)] =
                'multiCursorMergeOverlapping'),
              (e[(e.multiCursorModifier = 59)] = 'multiCursorModifier'),
              (e[(e.multiCursorPaste = 60)] = 'multiCursorPaste'),
              (e[(e.occurrencesHighlight = 61)] = 'occurrencesHighlight'),
              (e[(e.overviewRulerBorder = 62)] = 'overviewRulerBorder'),
              (e[(e.overviewRulerLanes = 63)] = 'overviewRulerLanes'),
              (e[(e.parameterHints = 64)] = 'parameterHints'),
              (e[(e.peekWidgetDefaultFocus = 65)] = 'peekWidgetDefaultFocus'),
              (e[(e.quickSuggestions = 66)] = 'quickSuggestions'),
              (e[(e.quickSuggestionsDelay = 67)] = 'quickSuggestionsDelay'),
              (e[(e.readOnly = 68)] = 'readOnly'),
              (e[(e.renderControlCharacters = 69)] = 'renderControlCharacters'),
              (e[(e.renderIndentGuides = 70)] = 'renderIndentGuides'),
              (e[(e.renderFinalNewline = 71)] = 'renderFinalNewline'),
              (e[(e.renderLineHighlight = 72)] = 'renderLineHighlight'),
              (e[(e.renderValidationDecorations = 73)] =
                'renderValidationDecorations'),
              (e[(e.renderWhitespace = 74)] = 'renderWhitespace'),
              (e[(e.revealHorizontalRightPadding = 75)] =
                'revealHorizontalRightPadding'),
              (e[(e.roundedSelection = 76)] = 'roundedSelection'),
              (e[(e.rulers = 77)] = 'rulers'),
              (e[(e.scrollbar = 78)] = 'scrollbar'),
              (e[(e.scrollBeyondLastColumn = 79)] = 'scrollBeyondLastColumn'),
              (e[(e.scrollBeyondLastLine = 80)] = 'scrollBeyondLastLine'),
              (e[(e.selectionClipboard = 81)] = 'selectionClipboard'),
              (e[(e.selectionHighlight = 82)] = 'selectionHighlight'),
              (e[(e.selectOnLineNumbers = 83)] = 'selectOnLineNumbers'),
              (e[(e.showFoldingControls = 84)] = 'showFoldingControls'),
              (e[(e.showUnused = 85)] = 'showUnused'),
              (e[(e.snippetSuggestions = 86)] = 'snippetSuggestions'),
              (e[(e.smoothScrolling = 87)] = 'smoothScrolling'),
              (e[(e.stopRenderingLineAfter = 88)] = 'stopRenderingLineAfter'),
              (e[(e.suggest = 89)] = 'suggest'),
              (e[(e.suggestFontSize = 90)] = 'suggestFontSize'),
              (e[(e.suggestLineHeight = 91)] = 'suggestLineHeight'),
              (e[(e.suggestOnTriggerCharacters = 92)] =
                'suggestOnTriggerCharacters'),
              (e[(e.suggestSelection = 93)] = 'suggestSelection'),
              (e[(e.tabCompletion = 94)] = 'tabCompletion'),
              (e[(e.useTabStops = 95)] = 'useTabStops'),
              (e[(e.wordSeparators = 96)] = 'wordSeparators'),
              (e[(e.wordWrap = 97)] = 'wordWrap'),
              (e[(e.wordWrapBreakAfterCharacters = 98)] =
                'wordWrapBreakAfterCharacters'),
              (e[(e.wordWrapBreakBeforeCharacters = 99)] =
                'wordWrapBreakBeforeCharacters'),
              (e[(e.wordWrapColumn = 100)] = 'wordWrapColumn'),
              (e[(e.wordWrapMinified = 101)] = 'wordWrapMinified'),
              (e[(e.wrappingIndent = 102)] = 'wrappingIndent'),
              (e[(e.wrappingStrategy = 103)] = 'wrappingStrategy'),
              (e[(e.editorClassName = 104)] = 'editorClassName'),
              (e[(e.pixelRatio = 105)] = 'pixelRatio'),
              (e[(e.tabFocusMode = 106)] = 'tabFocusMode'),
              (e[(e.layoutInfo = 107)] = 'layoutInfo'),
              (e[(e.wrappingInfo = 108)] = 'wrappingInfo');
          })(jt || (jt = {})),
          (function (e) {
            (e[(e.TextDefined = 0)] = 'TextDefined'),
              (e[(e.LF = 1)] = 'LF'),
              (e[(e.CRLF = 2)] = 'CRLF');
          })(Vt || (Vt = {})),
          (function (e) {
            (e[(e.LF = 0)] = 'LF'), (e[(e.CRLF = 1)] = 'CRLF');
          })(Gt || (Gt = {})),
          (function (e) {
            (e[(e.None = 0)] = 'None'),
              (e[(e.Indent = 1)] = 'Indent'),
              (e[(e.IndentOutdent = 2)] = 'IndentOutdent'),
              (e[(e.Outdent = 3)] = 'Outdent');
          })(zt || (zt = {})),
          (function (e) {
            (e[(e.Unknown = 0)] = 'Unknown'),
              (e[(e.Backspace = 1)] = 'Backspace'),
              (e[(e.Tab = 2)] = 'Tab'),
              (e[(e.Enter = 3)] = 'Enter'),
              (e[(e.Shift = 4)] = 'Shift'),
              (e[(e.Ctrl = 5)] = 'Ctrl'),
              (e[(e.Alt = 6)] = 'Alt'),
              (e[(e.PauseBreak = 7)] = 'PauseBreak'),
              (e[(e.CapsLock = 8)] = 'CapsLock'),
              (e[(e.Escape = 9)] = 'Escape'),
              (e[(e.Space = 10)] = 'Space'),
              (e[(e.PageUp = 11)] = 'PageUp'),
              (e[(e.PageDown = 12)] = 'PageDown'),
              (e[(e.End = 13)] = 'End'),
              (e[(e.Home = 14)] = 'Home'),
              (e[(e.LeftArrow = 15)] = 'LeftArrow'),
              (e[(e.UpArrow = 16)] = 'UpArrow'),
              (e[(e.RightArrow = 17)] = 'RightArrow'),
              (e[(e.DownArrow = 18)] = 'DownArrow'),
              (e[(e.Insert = 19)] = 'Insert'),
              (e[(e.Delete = 20)] = 'Delete'),
              (e[(e.KEY_0 = 21)] = 'KEY_0'),
              (e[(e.KEY_1 = 22)] = 'KEY_1'),
              (e[(e.KEY_2 = 23)] = 'KEY_2'),
              (e[(e.KEY_3 = 24)] = 'KEY_3'),
              (e[(e.KEY_4 = 25)] = 'KEY_4'),
              (e[(e.KEY_5 = 26)] = 'KEY_5'),
              (e[(e.KEY_6 = 27)] = 'KEY_6'),
              (e[(e.KEY_7 = 28)] = 'KEY_7'),
              (e[(e.KEY_8 = 29)] = 'KEY_8'),
              (e[(e.KEY_9 = 30)] = 'KEY_9'),
              (e[(e.KEY_A = 31)] = 'KEY_A'),
              (e[(e.KEY_B = 32)] = 'KEY_B'),
              (e[(e.KEY_C = 33)] = 'KEY_C'),
              (e[(e.KEY_D = 34)] = 'KEY_D'),
              (e[(e.KEY_E = 35)] = 'KEY_E'),
              (e[(e.KEY_F = 36)] = 'KEY_F'),
              (e[(e.KEY_G = 37)] = 'KEY_G'),
              (e[(e.KEY_H = 38)] = 'KEY_H'),
              (e[(e.KEY_I = 39)] = 'KEY_I'),
              (e[(e.KEY_J = 40)] = 'KEY_J'),
              (e[(e.KEY_K = 41)] = 'KEY_K'),
              (e[(e.KEY_L = 42)] = 'KEY_L'),
              (e[(e.KEY_M = 43)] = 'KEY_M'),
              (e[(e.KEY_N = 44)] = 'KEY_N'),
              (e[(e.KEY_O = 45)] = 'KEY_O'),
              (e[(e.KEY_P = 46)] = 'KEY_P'),
              (e[(e.KEY_Q = 47)] = 'KEY_Q'),
              (e[(e.KEY_R = 48)] = 'KEY_R'),
              (e[(e.KEY_S = 49)] = 'KEY_S'),
              (e[(e.KEY_T = 50)] = 'KEY_T'),
              (e[(e.KEY_U = 51)] = 'KEY_U'),
              (e[(e.KEY_V = 52)] = 'KEY_V'),
              (e[(e.KEY_W = 53)] = 'KEY_W'),
              (e[(e.KEY_X = 54)] = 'KEY_X'),
              (e[(e.KEY_Y = 55)] = 'KEY_Y'),
              (e[(e.KEY_Z = 56)] = 'KEY_Z'),
              (e[(e.Meta = 57)] = 'Meta'),
              (e[(e.ContextMenu = 58)] = 'ContextMenu'),
              (e[(e.F1 = 59)] = 'F1'),
              (e[(e.F2 = 60)] = 'F2'),
              (e[(e.F3 = 61)] = 'F3'),
              (e[(e.F4 = 62)] = 'F4'),
              (e[(e.F5 = 63)] = 'F5'),
              (e[(e.F6 = 64)] = 'F6'),
              (e[(e.F7 = 65)] = 'F7'),
              (e[(e.F8 = 66)] = 'F8'),
              (e[(e.F9 = 67)] = 'F9'),
              (e[(e.F10 = 68)] = 'F10'),
              (e[(e.F11 = 69)] = 'F11'),
              (e[(e.F12 = 70)] = 'F12'),
              (e[(e.F13 = 71)] = 'F13'),
              (e[(e.F14 = 72)] = 'F14'),
              (e[(e.F15 = 73)] = 'F15'),
              (e[(e.F16 = 74)] = 'F16'),
              (e[(e.F17 = 75)] = 'F17'),
              (e[(e.F18 = 76)] = 'F18'),
              (e[(e.F19 = 77)] = 'F19'),
              (e[(e.NumLock = 78)] = 'NumLock'),
              (e[(e.ScrollLock = 79)] = 'ScrollLock'),
              (e[(e.US_SEMICOLON = 80)] = 'US_SEMICOLON'),
              (e[(e.US_EQUAL = 81)] = 'US_EQUAL'),
              (e[(e.US_COMMA = 82)] = 'US_COMMA'),
              (e[(e.US_MINUS = 83)] = 'US_MINUS'),
              (e[(e.US_DOT = 84)] = 'US_DOT'),
              (e[(e.US_SLASH = 85)] = 'US_SLASH'),
              (e[(e.US_BACKTICK = 86)] = 'US_BACKTICK'),
              (e[(e.US_OPEN_SQUARE_BRACKET = 87)] = 'US_OPEN_SQUARE_BRACKET'),
              (e[(e.US_BACKSLASH = 88)] = 'US_BACKSLASH'),
              (e[(e.US_CLOSE_SQUARE_BRACKET = 89)] = 'US_CLOSE_SQUARE_BRACKET'),
              (e[(e.US_QUOTE = 90)] = 'US_QUOTE'),
              (e[(e.OEM_8 = 91)] = 'OEM_8'),
              (e[(e.OEM_102 = 92)] = 'OEM_102'),
              (e[(e.NUMPAD_0 = 93)] = 'NUMPAD_0'),
              (e[(e.NUMPAD_1 = 94)] = 'NUMPAD_1'),
              (e[(e.NUMPAD_2 = 95)] = 'NUMPAD_2'),
              (e[(e.NUMPAD_3 = 96)] = 'NUMPAD_3'),
              (e[(e.NUMPAD_4 = 97)] = 'NUMPAD_4'),
              (e[(e.NUMPAD_5 = 98)] = 'NUMPAD_5'),
              (e[(e.NUMPAD_6 = 99)] = 'NUMPAD_6'),
              (e[(e.NUMPAD_7 = 100)] = 'NUMPAD_7'),
              (e[(e.NUMPAD_8 = 101)] = 'NUMPAD_8'),
              (e[(e.NUMPAD_9 = 102)] = 'NUMPAD_9'),
              (e[(e.NUMPAD_MULTIPLY = 103)] = 'NUMPAD_MULTIPLY'),
              (e[(e.NUMPAD_ADD = 104)] = 'NUMPAD_ADD'),
              (e[(e.NUMPAD_SEPARATOR = 105)] = 'NUMPAD_SEPARATOR'),
              (e[(e.NUMPAD_SUBTRACT = 106)] = 'NUMPAD_SUBTRACT'),
              (e[(e.NUMPAD_DECIMAL = 107)] = 'NUMPAD_DECIMAL'),
              (e[(e.NUMPAD_DIVIDE = 108)] = 'NUMPAD_DIVIDE'),
              (e[(e.KEY_IN_COMPOSITION = 109)] = 'KEY_IN_COMPOSITION'),
              (e[(e.ABNT_C1 = 110)] = 'ABNT_C1'),
              (e[(e.ABNT_C2 = 111)] = 'ABNT_C2'),
              (e[(e.MAX_VALUE = 112)] = 'MAX_VALUE');
          })(Qt || (Qt = {})),
          (function (e) {
            (e[(e.Hint = 1)] = 'Hint'),
              (e[(e.Info = 2)] = 'Info'),
              (e[(e.Warning = 4)] = 'Warning'),
              (e[(e.Error = 8)] = 'Error');
          })(Xt || (Xt = {})),
          (function (e) {
            (e[(e.Unnecessary = 1)] = 'Unnecessary'),
              (e[(e.Deprecated = 2)] = 'Deprecated');
          })(Zt || (Zt = {})),
          (function (e) {
            (e[(e.Inline = 1)] = 'Inline'), (e[(e.Gutter = 2)] = 'Gutter');
          })(Jt || (Jt = {})),
          (function (e) {
            (e[(e.UNKNOWN = 0)] = 'UNKNOWN'),
              (e[(e.TEXTAREA = 1)] = 'TEXTAREA'),
              (e[(e.GUTTER_GLYPH_MARGIN = 2)] = 'GUTTER_GLYPH_MARGIN'),
              (e[(e.GUTTER_LINE_NUMBERS = 3)] = 'GUTTER_LINE_NUMBERS'),
              (e[(e.GUTTER_LINE_DECORATIONS = 4)] = 'GUTTER_LINE_DECORATIONS'),
              (e[(e.GUTTER_VIEW_ZONE = 5)] = 'GUTTER_VIEW_ZONE'),
              (e[(e.CONTENT_TEXT = 6)] = 'CONTENT_TEXT'),
              (e[(e.CONTENT_EMPTY = 7)] = 'CONTENT_EMPTY'),
              (e[(e.CONTENT_VIEW_ZONE = 8)] = 'CONTENT_VIEW_ZONE'),
              (e[(e.CONTENT_WIDGET = 9)] = 'CONTENT_WIDGET'),
              (e[(e.OVERVIEW_RULER = 10)] = 'OVERVIEW_RULER'),
              (e[(e.SCROLLBAR = 11)] = 'SCROLLBAR'),
              (e[(e.OVERLAY_WIDGET = 12)] = 'OVERLAY_WIDGET'),
              (e[(e.OUTSIDE_EDITOR = 13)] = 'OUTSIDE_EDITOR');
          })($t || ($t = {})),
          (function (e) {
            (e[(e.TOP_RIGHT_CORNER = 0)] = 'TOP_RIGHT_CORNER'),
              (e[(e.BOTTOM_RIGHT_CORNER = 1)] = 'BOTTOM_RIGHT_CORNER'),
              (e[(e.TOP_CENTER = 2)] = 'TOP_CENTER');
          })(en || (en = {})),
          (function (e) {
            (e[(e.Left = 1)] = 'Left'),
              (e[(e.Center = 2)] = 'Center'),
              (e[(e.Right = 4)] = 'Right'),
              (e[(e.Full = 7)] = 'Full');
          })(tn || (tn = {})),
          (function (e) {
            (e[(e.Off = 0)] = 'Off'),
              (e[(e.On = 1)] = 'On'),
              (e[(e.Relative = 2)] = 'Relative'),
              (e[(e.Interval = 3)] = 'Interval'),
              (e[(e.Custom = 4)] = 'Custom');
          })(nn || (nn = {})),
          (function (e) {
            (e[(e.None = 0)] = 'None'),
              (e[(e.Text = 1)] = 'Text'),
              (e[(e.Blocks = 2)] = 'Blocks');
          })(rn || (rn = {})),
          (function (e) {
            (e[(e.Smooth = 0)] = 'Smooth'),
              (e[(e.Immediate = 1)] = 'Immediate');
          })(on || (on = {})),
          (function (e) {
            (e[(e.Auto = 1)] = 'Auto'),
              (e[(e.Hidden = 2)] = 'Hidden'),
              (e[(e.Visible = 3)] = 'Visible');
          })(sn || (sn = {})),
          (function (e) {
            (e[(e.LTR = 0)] = 'LTR'), (e[(e.RTL = 1)] = 'RTL');
          })(un || (un = {})),
          (function (e) {
            (e[(e.Invoke = 1)] = 'Invoke'),
              (e[(e.TriggerCharacter = 2)] = 'TriggerCharacter'),
              (e[(e.ContentChange = 3)] = 'ContentChange');
          })(an || (an = {})),
          (function (e) {
            (e[(e.File = 0)] = 'File'),
              (e[(e.Module = 1)] = 'Module'),
              (e[(e.Namespace = 2)] = 'Namespace'),
              (e[(e.Package = 3)] = 'Package'),
              (e[(e.Class = 4)] = 'Class'),
              (e[(e.Method = 5)] = 'Method'),
              (e[(e.Property = 6)] = 'Property'),
              (e[(e.Field = 7)] = 'Field'),
              (e[(e.Constructor = 8)] = 'Constructor'),
              (e[(e.Enum = 9)] = 'Enum'),
              (e[(e.Interface = 10)] = 'Interface'),
              (e[(e.Function = 11)] = 'Function'),
              (e[(e.Variable = 12)] = 'Variable'),
              (e[(e.Constant = 13)] = 'Constant'),
              (e[(e.String = 14)] = 'String'),
              (e[(e.Number = 15)] = 'Number'),
              (e[(e.Boolean = 16)] = 'Boolean'),
              (e[(e.Array = 17)] = 'Array'),
              (e[(e.Object = 18)] = 'Object'),
              (e[(e.Key = 19)] = 'Key'),
              (e[(e.Null = 20)] = 'Null'),
              (e[(e.EnumMember = 21)] = 'EnumMember'),
              (e[(e.Struct = 22)] = 'Struct'),
              (e[(e.Event = 23)] = 'Event'),
              (e[(e.Operator = 24)] = 'Operator'),
              (e[(e.TypeParameter = 25)] = 'TypeParameter');
          })(ln || (ln = {})),
          (function (e) {
            e[(e.Deprecated = 1)] = 'Deprecated';
          })(hn || (hn = {})),
          (function (e) {
            (e[(e.Hidden = 0)] = 'Hidden'),
              (e[(e.Blink = 1)] = 'Blink'),
              (e[(e.Smooth = 2)] = 'Smooth'),
              (e[(e.Phase = 3)] = 'Phase'),
              (e[(e.Expand = 4)] = 'Expand'),
              (e[(e.Solid = 5)] = 'Solid');
          })(fn || (fn = {})),
          (function (e) {
            (e[(e.Line = 1)] = 'Line'),
              (e[(e.Block = 2)] = 'Block'),
              (e[(e.Underline = 3)] = 'Underline'),
              (e[(e.LineThin = 4)] = 'LineThin'),
              (e[(e.BlockOutline = 5)] = 'BlockOutline'),
              (e[(e.UnderlineThin = 6)] = 'UnderlineThin');
          })(cn || (cn = {})),
          (function (e) {
            (e[(e.AlwaysGrowsWhenTypingAtEdges = 0)] =
              'AlwaysGrowsWhenTypingAtEdges'),
              (e[(e.NeverGrowsWhenTypingAtEdges = 1)] =
                'NeverGrowsWhenTypingAtEdges'),
              (e[(e.GrowsOnlyWhenTypingBefore = 2)] =
                'GrowsOnlyWhenTypingBefore'),
              (e[(e.GrowsOnlyWhenTypingAfter = 3)] =
                'GrowsOnlyWhenTypingAfter');
          })(dn || (dn = {})),
          (function (e) {
            (e[(e.None = 0)] = 'None'),
              (e[(e.Same = 1)] = 'Same'),
              (e[(e.Indent = 2)] = 'Indent'),
              (e[(e.DeepIndent = 3)] = 'DeepIndent');
          })(mn || (mn = {}));
        var vn = (function () {
          function e() {}
          return (
            (e.chord = function (e, t) {
              return Rt(e, t);
            }),
            (e.CtrlCmd = 2048),
            (e.Shift = 1024),
            (e.Alt = 512),
            (e.WinCtrl = 256),
            e
          );
        })();
        function yn() {
          return {
            editor: void 0,
            languages: void 0,
            CancellationTokenSource: Mt,
            Emitter: Lt,
            KeyCode: Qt,
            KeyMod: vn,
            Position: Pe,
            Range: Te,
            Selection: gn,
            SelectionDirection: un,
            MarkerSeverity: Xt,
            MarkerTag: Zt,
            Uri: Ce,
            Token: _n,
          };
        }
        var Cn = (function () {
            var e = function (t, n) {
              return (e =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (e, t) {
                    e.__proto__ = t;
                  }) ||
                function (e, t) {
                  for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                })(t, n);
            };
            return function (t, n) {
              function r() {
                this.constructor = t;
              }
              e(t, n),
                (t.prototype =
                  null === n
                    ? Object.create(n)
                    : ((r.prototype = n.prototype), new r()));
            };
          })(),
          bn = function (e, t, n, r) {
            return new (n || (n = Promise))(function (i, o) {
              function s(e) {
                try {
                  a(r.next(e));
                } catch (Mn) {
                  o(Mn);
                }
              }
              function u(e) {
                try {
                  a(r.throw(e));
                } catch (Mn) {
                  o(Mn);
                }
              }
              function a(e) {
                var t;
                e.done
                  ? i(e.value)
                  : ((t = e.value),
                    t instanceof n
                      ? t
                      : new n(function (e) {
                          e(t);
                        })).then(s, u);
              }
              a((r = r.apply(e, t || [])).next());
            });
          },
          Ln = function (e, t) {
            var n,
              r,
              i,
              o,
              s = {
                label: 0,
                sent: function () {
                  if (1 & i[0]) throw i[1];
                  return i[1];
                },
                trys: [],
                ops: [],
              };
            return (
              (o = { next: u(0), throw: u(1), return: u(2) }),
              'function' == typeof Symbol &&
                (o[Symbol.iterator] = function () {
                  return this;
                }),
              o
            );
            function u(o) {
              return function (u) {
                return (function (o) {
                  if (n) throw new TypeError('Generator is already executing.');
                  for (; s; )
                    try {
                      if (
                        ((n = 1),
                        r &&
                          (i =
                            2 & o[0]
                              ? r.return
                              : o[0]
                              ? r.throw || ((i = r.return) && i.call(r), 0)
                              : r.next) &&
                          !(i = i.call(r, o[1])).done)
                      )
                        return i;
                      switch (((r = 0), i && (o = [2 & o[0], i.value]), o[0])) {
                        case 0:
                        case 1:
                          i = o;
                          break;
                        case 4:
                          return s.label++, { value: o[1], done: !1 };
                        case 5:
                          s.label++, (r = o[1]), (o = [0]);
                          continue;
                        case 7:
                          (o = s.ops.pop()), s.trys.pop();
                          continue;
                        default:
                          if (
                            !(i = (i = s.trys).length > 0 && i[i.length - 1]) &&
                            (6 === o[0] || 2 === o[0])
                          ) {
                            s = 0;
                            continue;
                          }
                          if (
                            3 === o[0] &&
                            (!i || (o[1] > i[0] && o[1] < i[3]))
                          ) {
                            s.label = o[1];
                            break;
                          }
                          if (6 === o[0] && s.label < i[1]) {
                            (s.label = i[1]), (i = o);
                            break;
                          }
                          if (i && s.label < i[2]) {
                            (s.label = i[2]), s.ops.push(o);
                            break;
                          }
                          i[2] && s.ops.pop(), s.trys.pop();
                          continue;
                      }
                      o = t.call(e, s);
                    } catch (Mn) {
                      (o = [6, Mn]), (r = 0);
                    } finally {
                      n = i = 0;
                    }
                  if (5 & o[0]) throw o[1];
                  return { value: o[0] ? o[1] : void 0, done: !0 };
                })([o, u]);
              };
            }
          },
          Nn = (function (e) {
            function t() {
              return (null !== e && e.apply(this, arguments)) || this;
            }
            return (
              Cn(t, e),
              Object.defineProperty(t.prototype, 'uri', {
                get: function () {
                  return this._uri;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(t.prototype, 'version', {
                get: function () {
                  return this._versionId;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(t.prototype, 'eol', {
                get: function () {
                  return this._eol;
                },
                enumerable: !0,
                configurable: !0,
              }),
              (t.prototype.getValue = function () {
                return this.getText();
              }),
              (t.prototype.getLinesContent = function () {
                return this._lines.slice(0);
              }),
              (t.prototype.getLineCount = function () {
                return this._lines.length;
              }),
              (t.prototype.getLineContent = function (e) {
                return this._lines[e - 1];
              }),
              (t.prototype.getWordAtPosition = function (e, t) {
                var n = ot(e.column, nt(t), this._lines[e.lineNumber - 1], 0);
                return n
                  ? new Te(
                      e.lineNumber,
                      n.startColumn,
                      e.lineNumber,
                      n.endColumn
                    )
                  : null;
              }),
              (t.prototype.createWordIterator = function (e) {
                var t,
                  n,
                  r = this,
                  i = 0,
                  o = 0,
                  s = [],
                  u = function () {
                    if (o < s.length) {
                      var a = n.substring(s[o].start, s[o].end);
                      return (
                        (o += 1),
                        t ? (t.value = a) : (t = { done: !1, value: a }),
                        t
                      );
                    }
                    return i >= r._lines.length
                      ? oe
                      : ((n = r._lines[i]),
                        (s = r._wordenize(n, e)),
                        (o = 0),
                        (i += 1),
                        u());
                  };
                return { next: u };
              }),
              (t.prototype.getLineWords = function (e, t) {
                for (
                  var n = this._lines[e - 1],
                    r = [],
                    i = 0,
                    o = this._wordenize(n, t);
                  i < o.length;
                  i++
                ) {
                  var s = o[i];
                  r.push({
                    word: n.substring(s.start, s.end),
                    startColumn: s.start + 1,
                    endColumn: s.end + 1,
                  });
                }
                return r;
              }),
              (t.prototype._wordenize = function (e, t) {
                var n,
                  r = [];
                for (t.lastIndex = 0; (n = t.exec(e)) && 0 !== n[0].length; )
                  r.push({ start: n.index, end: n.index + n[0].length });
                return r;
              }),
              (t.prototype.getValueInRange = function (e) {
                if (
                  (e = this._validateRange(e)).startLineNumber ===
                  e.endLineNumber
                )
                  return this._lines[e.startLineNumber - 1].substring(
                    e.startColumn - 1,
                    e.endColumn - 1
                  );
                var t = this._eol,
                  n = e.startLineNumber - 1,
                  r = e.endLineNumber - 1,
                  i = [];
                i.push(this._lines[n].substring(e.startColumn - 1));
                for (var o = n + 1; o < r; o++) i.push(this._lines[o]);
                return (
                  i.push(this._lines[r].substring(0, e.endColumn - 1)),
                  i.join(t)
                );
              }),
              (t.prototype.offsetAt = function (e) {
                return (
                  (e = this._validatePosition(e)),
                  this._ensureLineStarts(),
                  this._lineStarts.getAccumulatedValue(e.lineNumber - 2) +
                    (e.column - 1)
                );
              }),
              (t.prototype.positionAt = function (e) {
                (e = Math.floor(e)),
                  (e = Math.max(0, e)),
                  this._ensureLineStarts();
                var t = this._lineStarts.getIndexOf(e),
                  n = this._lines[t.index].length;
                return {
                  lineNumber: 1 + t.index,
                  column: 1 + Math.min(t.remainder, n),
                };
              }),
              (t.prototype._validateRange = function (e) {
                var t = this._validatePosition({
                    lineNumber: e.startLineNumber,
                    column: e.startColumn,
                  }),
                  n = this._validatePosition({
                    lineNumber: e.endLineNumber,
                    column: e.endColumn,
                  });
                return t.lineNumber !== e.startLineNumber ||
                  t.column !== e.startColumn ||
                  n.lineNumber !== e.endLineNumber ||
                  n.column !== e.endColumn
                  ? {
                      startLineNumber: t.lineNumber,
                      startColumn: t.column,
                      endLineNumber: n.lineNumber,
                      endColumn: n.column,
                    }
                  : e;
              }),
              (t.prototype._validatePosition = function (e) {
                if (!Pe.isIPosition(e)) throw new Error('bad position');
                var t = e.lineNumber,
                  n = e.column,
                  r = !1;
                if (t < 1) (t = 1), (n = 1), (r = !0);
                else if (t > this._lines.length)
                  (t = this._lines.length),
                    (n = this._lines[t - 1].length + 1),
                    (r = !0);
                else {
                  var i = this._lines[t - 1].length + 1;
                  n < 1 ? ((n = 1), (r = !0)) : n > i && ((n = i), (r = !0));
                }
                return r ? { lineNumber: t, column: n } : e;
              }),
              t
            );
          })(Je),
          En = (function () {
            function e(e, t) {
              (this._host = e),
                (this._models = Object.create(null)),
                (this._foreignModuleFactory = t),
                (this._foreignModule = null);
            }
            return (
              (e.prototype.dispose = function () {
                this._models = Object.create(null);
              }),
              (e.prototype._getModel = function (e) {
                return this._models[e];
              }),
              (e.prototype._getModels = function () {
                var e = this,
                  t = [];
                return (
                  Object.keys(this._models).forEach(function (n) {
                    return t.push(e._models[n]);
                  }),
                  t
                );
              }),
              (e.prototype.acceptNewModel = function (e) {
                this._models[e.url] = new Nn(
                  Ce.parse(e.url),
                  e.lines,
                  e.EOL,
                  e.versionId
                );
              }),
              (e.prototype.acceptModelChanged = function (e, t) {
                this._models[e] && this._models[e].onEvents(t);
              }),
              (e.prototype.acceptRemovedModel = function (e) {
                this._models[e] && delete this._models[e];
              }),
              (e.prototype.computeDiff = function (e, t, n, r) {
                return bn(this, void 0, void 0, function () {
                  var i, o, s, u, a, l, h;
                  return Ln(this, function (f) {
                    return (
                      (i = this._getModel(e)),
                      (o = this._getModel(t)),
                      i && o
                        ? ((s = i.getLinesContent()),
                          (u = o.getLinesContent()),
                          (a = new Ye(s, u, {
                            shouldComputeCharChanges: !0,
                            shouldPostProcessCharChanges: !0,
                            shouldIgnoreTrimWhitespace: n,
                            shouldMakePrettyDiff: !0,
                            maxComputationTime: r,
                          })),
                          (l = a.computeDiff()),
                          (h =
                            !(l.changes.length > 0) &&
                            this._modelsAreIdentical(i, o)),
                          [
                            2,
                            {
                              quitEarly: l.quitEarly,
                              identical: h,
                              changes: l.changes,
                            },
                          ])
                        : [2, null]
                    );
                  });
                });
              }),
              (e.prototype._modelsAreIdentical = function (e, t) {
                var n = e.getLineCount();
                if (n !== t.getLineCount()) return !1;
                for (var r = 1; r <= n; r++) {
                  if (e.getLineContent(r) !== t.getLineContent(r)) return !1;
                }
                return !0;
              }),
              (e.prototype.computeMoreMinimalEdits = function (t, n) {
                return bn(this, void 0, void 0, function () {
                  var r, i, o, s, u, a, l, h, f, c, d, m, p, g, _, v, y, C;
                  return Ln(this, function (b) {
                    if (!(r = this._getModel(t))) return [2, n];
                    for (
                      i = [],
                        o = void 0,
                        n = j(n, function (e, t) {
                          return e.range && t.range
                            ? Te.compareRangesUsingStarts(e.range, t.range)
                            : (e.range ? 0 : 1) - (t.range ? 0 : 1);
                        }),
                        s = 0,
                        u = n;
                      s < u.length;
                      s++
                    )
                      if (
                        ((a = u[s]),
                        (l = a.range),
                        (h = a.text),
                        'number' == typeof (f = a.eol) && (o = f),
                        (!Te.isEmpty(l) || h) &&
                          ((c = r.getValueInRange(l)),
                          (h = h.replace(/\r\n|\n|\r/g, r.eol)),
                          c !== h))
                      )
                        if (Math.max(h.length, c.length) > e._diffLimit)
                          i.push({ range: l, text: h });
                        else
                          for (
                            d = J(c, h, !1),
                              m = r.offsetAt(Te.lift(l).getStartPosition()),
                              p = 0,
                              g = d;
                            p < g.length;
                            p++
                          )
                            (_ = g[p]),
                              (v = r.positionAt(m + _.originalStart)),
                              (y = r.positionAt(
                                m + _.originalStart + _.originalLength
                              )),
                              (C = {
                                text: h.substr(
                                  _.modifiedStart,
                                  _.modifiedLength
                                ),
                                range: {
                                  startLineNumber: v.lineNumber,
                                  startColumn: v.column,
                                  endLineNumber: y.lineNumber,
                                  endColumn: y.column,
                                },
                              }),
                              r.getValueInRange(C.range) !== C.text &&
                                i.push(C);
                    return (
                      'number' == typeof o &&
                        i.push({
                          eol: o,
                          text: '',
                          range: {
                            startLineNumber: 0,
                            startColumn: 0,
                            endLineNumber: 0,
                            endColumn: 0,
                          },
                        }),
                      [2, i]
                    );
                  });
                });
              }),
              (e.prototype.computeLinks = function (e) {
                return bn(this, void 0, void 0, function () {
                  var t;
                  return Ln(this, function (n) {
                    return (t = this._getModel(e)) ? [2, mt(t)] : [2, null];
                  });
                });
              }),
              (e.prototype.textualSuggest = function (t, n, r, i) {
                return bn(this, void 0, void 0, function () {
                  var o, s, u, a, l, h, f, c;
                  return Ln(this, function (d) {
                    if (!(o = this._getModel(t))) return [2, null];
                    for (
                      s = [],
                        u = new Set(),
                        a = new RegExp(r, i),
                        (l = o.getWordAtPosition(n, a)) &&
                          u.add(o.getValueInRange(l)),
                        h = o.createWordIterator(a),
                        f = h.next();
                      !f.done && u.size <= e._suggestionsLimit;
                      f = h.next()
                    )
                      (c = f.value),
                        u.has(c) || (u.add(c), isNaN(Number(c)) && s.push(c));
                    return [2, s];
                  });
                });
              }),
              (e.prototype.computeWordRanges = function (e, t, n, r) {
                return bn(this, void 0, void 0, function () {
                  var i, o, s, u, a, l, h, f, c;
                  return Ln(this, function (d) {
                    if (!(i = this._getModel(e)))
                      return [2, Object.create(null)];
                    for (
                      o = new RegExp(n, r),
                        s = Object.create(null),
                        u = t.startLineNumber;
                      u < t.endLineNumber;
                      u++
                    )
                      for (
                        a = i.getLineWords(u, o), l = 0, h = a;
                        l < h.length;
                        l++
                      )
                        (f = h[l]),
                          isNaN(Number(f.word)) &&
                            ((c = s[f.word]) || ((c = []), (s[f.word] = c)),
                            c.push({
                              startLineNumber: u,
                              startColumn: f.startColumn,
                              endLineNumber: u,
                              endColumn: f.endColumn,
                            }));
                    return [2, s];
                  });
                });
              }),
              (e.prototype.navigateValueSet = function (e, t, n, r, i) {
                return bn(this, void 0, void 0, function () {
                  var o, s, u, a, l;
                  return Ln(this, function (h) {
                    return (o = this._getModel(e))
                      ? ((s = new RegExp(r, i)),
                        t.startColumn === t.endColumn &&
                          (t = {
                            startLineNumber: t.startLineNumber,
                            startColumn: t.startColumn,
                            endLineNumber: t.endLineNumber,
                            endColumn: t.endColumn + 1,
                          }),
                        (u = o.getValueInRange(t)),
                        (a = o.getWordAtPosition(
                          {
                            lineNumber: t.startLineNumber,
                            column: t.startColumn,
                          },
                          s
                        ))
                          ? ((l = o.getValueInRange(a)),
                            [2, pt.INSTANCE.navigateValueSet(t, u, a, l, n)])
                          : [2, null])
                      : [2, null];
                  });
                });
              }),
              (e.prototype.loadForeignModule = function (e, t, n) {
                var r = this,
                  i = {
                    host: K(n, function (e, t) {
                      return r._host.fhr(e, t);
                    }),
                    getMirrorModels: function () {
                      return r._getModels();
                    },
                  };
                return this._foreignModuleFactory
                  ? ((this._foreignModule = this._foreignModuleFactory(i, t)),
                    Promise.resolve(F(this._foreignModule)))
                  : Promise.reject(new Error('Unexpected usage'));
              }),
              (e.prototype.fmr = function (e, t) {
                if (
                  !this._foreignModule ||
                  'function' != typeof this._foreignModule[e]
                )
                  return Promise.reject(
                    new Error('Missing requestHandler or method: ' + e)
                  );
                try {
                  return Promise.resolve(
                    this._foreignModule[e].apply(this._foreignModule, t)
                  );
                } catch (Mn) {
                  return Promise.reject(Mn);
                }
              }),
              (e._diffLimit = 1e5),
              (e._suggestionsLimit = 1e4),
              e
            );
          })();
        'function' == typeof importScripts && (k.monaco = yn());
        var Sn = function (e) {
            var t = 0;
            if (0 == e.length) return t;
            for (var n = 0; n < e.length; n++) {
              (t = (t << 5) - t + e.charCodeAt(n)), (t &= t);
            }
            return t;
          },
          wn = function (e) {
            try {
              var t = self;
              return Promise.resolve(
                (function () {
                  if (t.define)
                    return Promise.resolve(
                      new Promise(function (n, r) {
                        t.define('' + Sn(e), [e], function (e) {
                          n(e);
                        });
                      })
                    );
                  importScripts(e);
                })()
              );
            } catch (Mn) {
              return Promise.reject(Mn);
            }
          };
        exports.importScript = wn;
        var An = !1;
        function On(e, t) {
          if (!An) {
            An = !0;
            var n = new Y(
              function (e) {
                self.postMessage(e);
              },
              function (e) {
                return new En(e, function (e, n) {
                  return new t(e, n);
                });
              }
            );
            (self.onmessage = function (e) {
              n.onmessage(e.data);
            }),
              (self[e + 'MonacoWorker'] = t);
          }
        }
        (self.initialize = On), (self.BaseWorker = s);
      },
      { process: 'g5IB' },
    ],
    pE3E: [function (require, module, exports) {}, {}],
    Kt8e: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.versionInfo = exports.version = void 0);
        var e = '15.4.0';
        exports.version = e;
        var r = Object.freeze({
          major: 15,
          minor: 4,
          patch: 0,
          preReleaseTag: null,
        });
        exports.versionInfo = r;
      },
      {},
    ],
    Ue6U: [
      function (require, module, exports) {
        'use strict';
        function e(e) {
          return 'function' == typeof (null == e ? void 0 : e.then);
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
      },
      {},
    ],
    QGgI: [
      function (require, module, exports) {
        'use strict';
        function t(o) {
          return (t =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (t) {
                  return typeof t;
                }
              : function (t) {
                  return t &&
                    'function' == typeof Symbol &&
                    t.constructor === Symbol &&
                    t !== Symbol.prototype
                    ? 'symbol'
                    : typeof t;
                })(o);
        }
        function o(o) {
          return 'object' == t(o) && null !== o;
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = o);
      },
      {},
    ],
    jjn7: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.SYMBOL_TO_STRING_TAG = exports.SYMBOL_ASYNC_ITERATOR = exports.SYMBOL_ITERATOR = void 0);
        var t =
          'function' == typeof Symbol && null != Symbol.iterator
            ? Symbol.iterator
            : '@@iterator';
        exports.SYMBOL_ITERATOR = t;
        var o =
          'function' == typeof Symbol && null != Symbol.asyncIterator
            ? Symbol.asyncIterator
            : '@@asyncIterator';
        exports.SYMBOL_ASYNC_ITERATOR = o;
        var r =
          'function' == typeof Symbol && null != Symbol.toStringTag
            ? Symbol.toStringTag
            : '@@toStringTag';
        exports.SYMBOL_TO_STRING_TAG = r;
      },
      {},
    ],
    KRTj: [
      function (require, module, exports) {
        'use strict';
        function e(e, n) {
          for (
            var r, t = /\r\n|[\n\r]/g, o = 1, i = n + 1;
            (r = t.exec(e.body)) && r.index < n;

          )
            (o += 1), (i = n + 1 - (r.index + r[0].length));
          return { line: o, column: i };
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getLocation = e);
      },
      {},
    ],
    ziDg: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.printLocation = t),
          (exports.printSourceLocation = o);
        var n = require('./location.mjs');
        function t(t) {
          return o(t.source, (0, n.getLocation)(t.source, t.start));
        }
        function o(n, t) {
          var o = n.locationOffset.column - 1,
            c = e(o) + n.body,
            i = t.line - 1,
            a = n.locationOffset.line - 1,
            u = t.line + a,
            l = 1 === t.line ? o : 0,
            f = t.column + l,
            s = ''.concat(n.name, ':').concat(u, ':').concat(f, '\n'),
            p = c.split(/\r\n|[\n\r]/g),
            h = p[i];
          if (h.length > 120) {
            for (
              var m = Math.floor(f / 80), v = f % 80, g = [], d = 0;
              d < h.length;
              d += 80
            )
              g.push(h.slice(d, d + 80));
            return (
              s +
              r(
                [[''.concat(u), g[0]]].concat(
                  g.slice(1, m + 1).map(function (n) {
                    return ['', n];
                  }),
                  [
                    [' ', e(v - 1) + '^'],
                    ['', g[m + 1]],
                  ]
                )
              )
            );
          }
          return (
            s +
            r([
              [''.concat(u - 1), p[i - 1]],
              [''.concat(u), h],
              ['', e(f - 1) + '^'],
              [''.concat(u + 1), p[i + 1]],
            ])
          );
        }
        function r(n) {
          var t = n.filter(function (n) {
              n[0];
              return void 0 !== n[1];
            }),
            o = Math.max.apply(
              Math,
              t.map(function (n) {
                return n[0].length;
              })
            );
          return t
            .map(function (n) {
              var t = n[0],
                r = n[1];
              return c(o, t) + (r ? ' | ' + r : ' |');
            })
            .join('\n');
        }
        function e(n) {
          return Array(n + 1).join(' ');
        }
        function c(n, t) {
          return e(n - t.length) + t;
        }
      },
      { './location.mjs': 'KRTj' },
    ],
    nXOl: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.printError = O),
          (exports.GraphQLError = void 0);
        var e = o(require('../jsutils/isObjectLike.mjs')),
          t = require('../polyfills/symbols.mjs'),
          r = require('../language/location.mjs'),
          n = require('../language/printLocation.mjs');
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function u(e) {
          return (u =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e;
                })(e);
        }
        function i(e, t) {
          if (!(e instanceof t))
            throw new TypeError('Cannot call a class as a function');
        }
        function c(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r];
            (n.enumerable = n.enumerable || !1),
              (n.configurable = !0),
              'value' in n && (n.writable = !0),
              Object.defineProperty(e, n.key, n);
          }
        }
        function l(e, t, r) {
          return t && c(e.prototype, t), r && c(e, r), e;
        }
        function a(e, t) {
          if ('function' != typeof t && null !== t)
            throw new TypeError(
              'Super expression must either be null or a function'
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            t && h(e, t);
        }
        function f(e) {
          var t = b();
          return function () {
            var r,
              n = g(e);
            if (t) {
              var o = g(this).constructor;
              r = Reflect.construct(n, arguments, o);
            } else r = n.apply(this, arguments);
            return s(this, r);
          };
        }
        function s(e, t) {
          return !t || ('object' !== u(t) && 'function' != typeof t) ? p(e) : t;
        }
        function p(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function v(e) {
          var t = 'function' == typeof Map ? new Map() : void 0;
          return (v = function (e) {
            if (null === e || !d(e)) return e;
            if ('function' != typeof e)
              throw new TypeError(
                'Super expression must either be null or a function'
              );
            if (void 0 !== t) {
              if (t.has(e)) return t.get(e);
              t.set(e, r);
            }
            function r() {
              return y(e, arguments, g(this).constructor);
            }
            return (
              (r.prototype = Object.create(e.prototype, {
                constructor: {
                  value: r,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
              h(r, e)
            );
          })(e);
        }
        function y(e, t, r) {
          return (y = b()
            ? Reflect.construct
            : function (e, t, r) {
                var n = [null];
                n.push.apply(n, t);
                var o = new (Function.bind.apply(e, n))();
                return r && h(o, r.prototype), o;
              }).apply(null, arguments);
        }
        function b() {
          if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ('function' == typeof Proxy) return !0;
          try {
            return (
              Date.prototype.toString.call(
                Reflect.construct(Date, [], function () {})
              ),
              !0
            );
          } catch (e) {
            return !1;
          }
        }
        function d(e) {
          return -1 !== Function.toString.call(e).indexOf('[native code]');
        }
        function h(e, t) {
          return (h =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function g(e) {
          return (g = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        var m = (function (n) {
          a(u, v(Error));
          var o = f(u);
          function u(t, n, c, l, a, f, v) {
            var y, b, d, h, g;
            i(this, u), (g = o.call(this, t));
            var m,
              O = Array.isArray(n)
                ? 0 !== n.length
                  ? n
                  : void 0
                : n
                ? [n]
                : void 0,
              j = c;
            !j &&
              O &&
              (j = null === (m = O[0].loc) || void 0 === m ? void 0 : m.source);
            var w,
              S = l;
            !S &&
              O &&
              (S = O.reduce(function (e, t) {
                return t.loc && e.push(t.loc.start), e;
              }, [])),
              S && 0 === S.length && (S = void 0),
              l && c
                ? (w = l.map(function (e) {
                    return (0, r.getLocation)(c, e);
                  }))
                : O &&
                  (w = O.reduce(function (e, t) {
                    return (
                      t.loc &&
                        e.push((0, r.getLocation)(t.loc.source, t.loc.start)),
                      e
                    );
                  }, []));
            var _ = v;
            if (null == _ && null != f) {
              var E = f.extensions;
              (0, e.default)(E) && (_ = E);
            }
            return (
              Object.defineProperties(p(g), {
                name: { value: 'GraphQLError' },
                message: { value: t, enumerable: !0, writable: !0 },
                locations: {
                  value: null !== (y = w) && void 0 !== y ? y : void 0,
                  enumerable: null != w,
                },
                path: { value: null != a ? a : void 0, enumerable: null != a },
                nodes: { value: null != O ? O : void 0 },
                source: {
                  value: null !== (b = j) && void 0 !== b ? b : void 0,
                },
                positions: {
                  value: null !== (d = S) && void 0 !== d ? d : void 0,
                },
                originalError: { value: f },
                extensions: {
                  value: null !== (h = _) && void 0 !== h ? h : void 0,
                  enumerable: null != _,
                },
              }),
              (null == f ? void 0 : f.stack)
                ? (Object.defineProperty(p(g), 'stack', {
                    value: f.stack,
                    writable: !0,
                    configurable: !0,
                  }),
                  s(g))
                : (Error.captureStackTrace
                    ? Error.captureStackTrace(p(g), u)
                    : Object.defineProperty(p(g), 'stack', {
                        value: Error().stack,
                        writable: !0,
                        configurable: !0,
                      }),
                  g)
            );
          }
          return (
            l(u, [
              {
                key: 'toString',
                value: function () {
                  return O(this);
                },
              },
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'Object';
                },
              },
            ]),
            u
          );
        })();
        function O(e) {
          var t = e.message;
          if (e.nodes)
            for (var r = 0, o = e.nodes; r < o.length; r++) {
              var u = o[r];
              u.loc && (t += '\n\n' + (0, n.printLocation)(u.loc));
            }
          else if (e.source && e.locations)
            for (var i = 0, c = e.locations; i < c.length; i++) {
              var l = c[i];
              t += '\n\n' + (0, n.printSourceLocation)(e.source, l);
            }
          return t;
        }
        exports.GraphQLError = m;
      },
      {
        '../jsutils/isObjectLike.mjs': 'QGgI',
        '../polyfills/symbols.mjs': 'jjn7',
        '../language/location.mjs': 'KRTj',
        '../language/printLocation.mjs': 'ziDg',
      },
    ],
    c9WB: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.syntaxError = e);
        var r = require('./GraphQLError.mjs');
        function e(e, o, t) {
          return new r.GraphQLError('Syntax Error: '.concat(t), void 0, e, [o]);
        }
      },
      { './GraphQLError.mjs': 'nXOl' },
    ],
    HZ3k: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.Kind = void 0);
        var e = Object.freeze({
          NAME: 'Name',
          DOCUMENT: 'Document',
          OPERATION_DEFINITION: 'OperationDefinition',
          VARIABLE_DEFINITION: 'VariableDefinition',
          SELECTION_SET: 'SelectionSet',
          FIELD: 'Field',
          ARGUMENT: 'Argument',
          FRAGMENT_SPREAD: 'FragmentSpread',
          INLINE_FRAGMENT: 'InlineFragment',
          FRAGMENT_DEFINITION: 'FragmentDefinition',
          VARIABLE: 'Variable',
          INT: 'IntValue',
          FLOAT: 'FloatValue',
          STRING: 'StringValue',
          BOOLEAN: 'BooleanValue',
          NULL: 'NullValue',
          ENUM: 'EnumValue',
          LIST: 'ListValue',
          OBJECT: 'ObjectValue',
          OBJECT_FIELD: 'ObjectField',
          DIRECTIVE: 'Directive',
          NAMED_TYPE: 'NamedType',
          LIST_TYPE: 'ListType',
          NON_NULL_TYPE: 'NonNullType',
          SCHEMA_DEFINITION: 'SchemaDefinition',
          OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',
          SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',
          OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',
          FIELD_DEFINITION: 'FieldDefinition',
          INPUT_VALUE_DEFINITION: 'InputValueDefinition',
          INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',
          UNION_TYPE_DEFINITION: 'UnionTypeDefinition',
          ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',
          ENUM_VALUE_DEFINITION: 'EnumValueDefinition',
          INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',
          DIRECTIVE_DEFINITION: 'DirectiveDefinition',
          SCHEMA_EXTENSION: 'SchemaExtension',
          SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',
          OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',
          INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',
          UNION_TYPE_EXTENSION: 'UnionTypeExtension',
          ENUM_TYPE_EXTENSION: 'EnumTypeExtension',
          INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',
        });
        exports.Kind = e;
      },
      {},
    ],
    hYEN: [
      function (require, module, exports) {
        'use strict';
        function e(e, r) {
          if (!Boolean(e))
            throw new Error(null != r ? r : 'Unexpected invariant triggered.');
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
      },
      {},
    ],
    gw2R: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = void 0);
        var o =
            'function' == typeof Symbol && 'function' == typeof Symbol.for
              ? Symbol.for('nodejs.util.inspect.custom')
              : void 0,
          e = o;
        exports.default = e;
      },
      {},
    ],
    WzFq: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = r);
        var e = o(require('./invariant.mjs')),
          t = o(require('./nodejsCustomInspectSymbol.mjs'));
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function r(o) {
          var r = o.prototype.toJSON;
          'function' == typeof r || (0, e.default)(0),
            (o.prototype.inspect = r),
            t.default && (o.prototype[t.default] = r);
        }
      },
      { './invariant.mjs': 'hYEN', './nodejsCustomInspectSymbol.mjs': 'gw2R' },
    ],
    J7if: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isNode = s),
          (exports.Token = exports.Location = void 0);
        var t = e(require('../jsutils/defineInspect.mjs'));
        function e(t) {
          return t && t.__esModule ? t : { default: t };
        }
        var n = (function () {
          function t(t, e, n) {
            (this.start = t.start),
              (this.end = e.end),
              (this.startToken = t),
              (this.endToken = e),
              (this.source = n);
          }
          return (
            (t.prototype.toJSON = function () {
              return { start: this.start, end: this.end };
            }),
            t
          );
        })();
        (exports.Location = n), (0, t.default)(n);
        var i = (function () {
          function t(t, e, n, i, s, o, r) {
            (this.kind = t),
              (this.start = e),
              (this.end = n),
              (this.line = i),
              (this.column = s),
              (this.value = r),
              (this.prev = o),
              (this.next = null);
          }
          return (
            (t.prototype.toJSON = function () {
              return {
                kind: this.kind,
                value: this.value,
                line: this.line,
                column: this.column,
              };
            }),
            t
          );
        })();
        function s(t) {
          return null != t && 'string' == typeof t.kind;
        }
        (exports.Token = i), (0, t.default)(i);
      },
      { '../jsutils/defineInspect.mjs': 'WzFq' },
    ],
    Axjv: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.TokenKind = void 0);
        var e = Object.freeze({
          SOF: '<SOF>',
          EOF: '<EOF>',
          BANG: '!',
          DOLLAR: '$',
          AMP: '&',
          PAREN_L: '(',
          PAREN_R: ')',
          SPREAD: '...',
          COLON: ':',
          EQUALS: '=',
          AT: '@',
          BRACKET_L: '[',
          BRACKET_R: ']',
          BRACE_L: '{',
          PIPE: '|',
          BRACE_R: '}',
          NAME: 'Name',
          INT: 'Int',
          FLOAT: 'Float',
          STRING: 'String',
          BLOCK_STRING: 'BlockString',
          COMMENT: 'Comment',
        });
        exports.TokenKind = e;
      },
      {},
    ],
    DIub: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = u);
        var t = n(require('./nodejsCustomInspectSymbol.mjs'));
        function n(t) {
          return t && t.__esModule ? t : { default: t };
        }
        function r(t) {
          return (r =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (t) {
                  return typeof t;
                }
              : function (t) {
                  return t &&
                    'function' == typeof Symbol &&
                    t.constructor === Symbol &&
                    t !== Symbol.prototype
                    ? 'symbol'
                    : typeof t;
                })(t);
        }
        var e = 10,
          o = 2;
        function u(t) {
          return i(t, []);
        }
        function i(t, n) {
          switch (r(t)) {
            case 'string':
              return JSON.stringify(t);
            case 'function':
              return t.name ? '[function '.concat(t.name, ']') : '[function]';
            case 'object':
              return null === t ? 'null' : c(t, n);
            default:
              return String(t);
          }
        }
        function c(t, n) {
          if (-1 !== n.indexOf(t)) return '[Circular]';
          var r = [].concat(n, [t]),
            e = l(t);
          if (void 0 !== e) {
            var o = e.call(t);
            if (o !== t) return 'string' == typeof o ? o : i(o, r);
          } else if (Array.isArray(t)) return a(t, r);
          return f(t, r);
        }
        function f(t, n) {
          var r = Object.keys(t);
          return 0 === r.length
            ? '{}'
            : n.length > o
            ? '[' + s(t) + ']'
            : '{ ' +
              r
                .map(function (r) {
                  return r + ': ' + i(t[r], n);
                })
                .join(', ') +
              ' }';
        }
        function a(t, n) {
          if (0 === t.length) return '[]';
          if (n.length > o) return '[Array]';
          for (
            var r = Math.min(e, t.length), u = t.length - r, c = [], f = 0;
            f < r;
            ++f
          )
            c.push(i(t[f], n));
          return (
            1 === u
              ? c.push('... 1 more item')
              : u > 1 && c.push('... '.concat(u, ' more items')),
            '[' + c.join(', ') + ']'
          );
        }
        function l(n) {
          var r = n[String(t.default)];
          return 'function' == typeof r
            ? r
            : 'function' == typeof n.inspect
            ? n.inspect
            : void 0;
        }
        function s(t) {
          var n = Object.prototype.toString
            .call(t)
            .replace(/^\[object /, '')
            .replace(/]$/, '');
          if ('Object' === n && 'function' == typeof t.constructor) {
            var r = t.constructor.name;
            if ('string' == typeof r && '' !== r) return r;
          }
          return n;
        }
      },
      { './nodejsCustomInspectSymbol.mjs': 'gw2R' },
    ],
    wvjo: [
      function (require, module, exports) {
        'use strict';
        function e(e, o) {
          if (!Boolean(e)) throw new Error(o);
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
      },
      {},
    ],
    nGk9: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = void 0);
        var e = function (e, t) {
          return e instanceof t;
        };
        exports.default = e;
      },
      {},
    ],
    RlJT: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isSource = l),
          (exports.Source = void 0);
        var e = require('../polyfills/symbols.mjs'),
          t = o(require('../jsutils/inspect.mjs')),
          i = o(require('../jsutils/devAssert.mjs')),
          n = o(require('../jsutils/instanceOf.mjs'));
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function r(e, t) {
          for (var i = 0; i < t.length; i++) {
            var n = t[i];
            (n.enumerable = n.enumerable || !1),
              (n.configurable = !0),
              'value' in n && (n.writable = !0),
              Object.defineProperty(e, n.key, n);
          }
        }
        function s(e, t, i) {
          return t && r(e.prototype, t), i && r(e, i), e;
        }
        var u = (function () {
          function n(e) {
            var n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 'GraphQL request',
              o =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : { line: 1, column: 1 };
            'string' == typeof e ||
              (0, i.default)(
                0,
                'Body must be a string. Received: '.concat(
                  (0, t.default)(e),
                  '.'
                )
              ),
              (this.body = e),
              (this.name = n),
              (this.locationOffset = o),
              this.locationOffset.line > 0 ||
                (0, i.default)(
                  0,
                  'line in locationOffset is 1-indexed and must be positive.'
                ),
              this.locationOffset.column > 0 ||
                (0, i.default)(
                  0,
                  'column in locationOffset is 1-indexed and must be positive.'
                );
          }
          return (
            s(n, [
              {
                key: e.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'Source';
                },
              },
            ]),
            n
          );
        })();
        function l(e) {
          return (0, n.default)(e, u);
        }
        exports.Source = u;
      },
      {
        '../polyfills/symbols.mjs': 'jjn7',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/devAssert.mjs': 'wvjo',
        '../jsutils/instanceOf.mjs': 'nGk9',
      },
    ],
    kRNH: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.DirectiveLocation = void 0);
        var I = Object.freeze({
          QUERY: 'QUERY',
          MUTATION: 'MUTATION',
          SUBSCRIPTION: 'SUBSCRIPTION',
          FIELD: 'FIELD',
          FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',
          FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',
          INLINE_FRAGMENT: 'INLINE_FRAGMENT',
          VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',
          SCHEMA: 'SCHEMA',
          SCALAR: 'SCALAR',
          OBJECT: 'OBJECT',
          FIELD_DEFINITION: 'FIELD_DEFINITION',
          ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',
          INTERFACE: 'INTERFACE',
          UNION: 'UNION',
          ENUM: 'ENUM',
          ENUM_VALUE: 'ENUM_VALUE',
          INPUT_OBJECT: 'INPUT_OBJECT',
          INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION',
        });
        exports.DirectiveLocation = I;
      },
      {},
    ],
    SG8m: [
      function (require, module, exports) {
        'use strict';
        function e(e) {
          var t = e.split(/\r\n|[\n\r]/g),
            l = r(e);
          if (0 !== l) for (var o = 1; o < t.length; o++) t[o] = t[o].slice(l);
          for (var i = 0; i < t.length && n(t[i]); ) ++i;
          for (var a = t.length; a > i && n(t[a - 1]); ) --a;
          return t.slice(i, a).join('\n');
        }
        function n(e) {
          for (var n = 0; n < e.length; ++n)
            if (' ' !== e[n] && '\t' !== e[n]) return !1;
          return !0;
        }
        function r(e) {
          for (var n, r = !0, t = !0, l = 0, o = null, i = 0; i < e.length; ++i)
            switch (e.charCodeAt(i)) {
              case 13:
                10 === e.charCodeAt(i + 1) && ++i;
              case 10:
                (r = !1), (t = !0), (l = 0);
                break;
              case 9:
              case 32:
                ++l;
                break;
              default:
                t && !r && (null === o || l < o) && (o = l), (t = !1);
            }
          return null !== (n = o) && void 0 !== n ? n : 0;
        }
        function t(e) {
          var n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : '',
            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            t = -1 === e.indexOf('\n'),
            l = ' ' === e[0] || '\t' === e[0],
            o = '"' === e[e.length - 1],
            i = '\\' === e[e.length - 1],
            a = !t || o || i || r,
            c = '';
          return (
            !a || (t && l) || (c += '\n' + n),
            (c += n ? e.replace(/\n/g, '\n' + n) : e),
            a && (c += '\n'),
            '"""' + c.replace(/"""/g, '\\"""') + '"""'
          );
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.dedentBlockStringValue = e),
          (exports.getBlockStringIndentation = r),
          (exports.printBlockString = t);
      },
      {},
    ],
    ITo1: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isPunctuatorTokenKind = c),
          (exports.Lexer = void 0);
        var e = require('../error/syntaxError.mjs'),
          n = require('./ast.mjs'),
          r = require('./tokenKind.mjs'),
          a = require('./blockString.mjs'),
          t = (function () {
            function e(e) {
              var a = new n.Token(r.TokenKind.SOF, 0, 0, 0, 0, null);
              (this.source = e),
                (this.lastToken = a),
                (this.token = a),
                (this.line = 1),
                (this.lineStart = 0);
            }
            var a = e.prototype;
            return (
              (a.advance = function () {
                return (
                  (this.lastToken = this.token), (this.token = this.lookahead())
                );
              }),
              (a.lookahead = function () {
                var e = this.token;
                if (e.kind !== r.TokenKind.EOF)
                  do {
                    var n;
                    e =
                      null !== (n = e.next) && void 0 !== n
                        ? n
                        : (e.next = i(this, e));
                  } while (e.kind === r.TokenKind.COMMENT);
                return e;
              }),
              e
            );
          })();
        function c(e) {
          return (
            e === r.TokenKind.BANG ||
            e === r.TokenKind.DOLLAR ||
            e === r.TokenKind.AMP ||
            e === r.TokenKind.PAREN_L ||
            e === r.TokenKind.PAREN_R ||
            e === r.TokenKind.SPREAD ||
            e === r.TokenKind.COLON ||
            e === r.TokenKind.EQUALS ||
            e === r.TokenKind.AT ||
            e === r.TokenKind.BRACKET_L ||
            e === r.TokenKind.BRACKET_R ||
            e === r.TokenKind.BRACE_L ||
            e === r.TokenKind.PIPE ||
            e === r.TokenKind.BRACE_R
          );
        }
        function o(e) {
          return isNaN(e)
            ? r.TokenKind.EOF
            : e < 127
            ? JSON.stringify(String.fromCharCode(e))
            : '"\\u'.concat(
                ('00' + e.toString(16).toUpperCase()).slice(-4),
                '"'
              );
        }
        function i(a, t) {
          for (var c = a.source, o = c.body, i = o.length, k = t.end; k < i; ) {
            var A = o.charCodeAt(k),
              l = a.line,
              K = 1 + k - a.lineStart;
            switch (A) {
              case 65279:
              case 9:
              case 32:
              case 44:
                ++k;
                continue;
              case 10:
                ++k, ++a.line, (a.lineStart = k);
                continue;
              case 13:
                10 === o.charCodeAt(k + 1) ? (k += 2) : ++k,
                  ++a.line,
                  (a.lineStart = k);
                continue;
              case 33:
                return new n.Token(r.TokenKind.BANG, k, k + 1, l, K, t);
              case 35:
                return d(c, k, l, K, t);
              case 36:
                return new n.Token(r.TokenKind.DOLLAR, k, k + 1, l, K, t);
              case 38:
                return new n.Token(r.TokenKind.AMP, k, k + 1, l, K, t);
              case 40:
                return new n.Token(r.TokenKind.PAREN_L, k, k + 1, l, K, t);
              case 41:
                return new n.Token(r.TokenKind.PAREN_R, k, k + 1, l, K, t);
              case 46:
                if (46 === o.charCodeAt(k + 1) && 46 === o.charCodeAt(k + 2))
                  return new n.Token(r.TokenKind.SPREAD, k, k + 3, l, K, t);
                break;
              case 58:
                return new n.Token(r.TokenKind.COLON, k, k + 1, l, K, t);
              case 61:
                return new n.Token(r.TokenKind.EQUALS, k, k + 1, l, K, t);
              case 64:
                return new n.Token(r.TokenKind.AT, k, k + 1, l, K, t);
              case 91:
                return new n.Token(r.TokenKind.BRACKET_L, k, k + 1, l, K, t);
              case 93:
                return new n.Token(r.TokenKind.BRACKET_R, k, k + 1, l, K, t);
              case 123:
                return new n.Token(r.TokenKind.BRACE_L, k, k + 1, l, K, t);
              case 124:
                return new n.Token(r.TokenKind.PIPE, k, k + 1, l, K, t);
              case 125:
                return new n.Token(r.TokenKind.BRACE_R, k, k + 1, l, K, t);
              case 34:
                return 34 === o.charCodeAt(k + 1) && 34 === o.charCodeAt(k + 2)
                  ? T(c, k, l, K, t, a)
                  : h(c, k, l, K, t);
              case 45:
              case 48:
              case 49:
              case 50:
              case 51:
              case 52:
              case 53:
              case 54:
              case 55:
              case 56:
              case 57:
                return u(c, k, A, l, K, t);
              case 65:
              case 66:
              case 67:
              case 68:
              case 69:
              case 70:
              case 71:
              case 72:
              case 73:
              case 74:
              case 75:
              case 76:
              case 77:
              case 78:
              case 79:
              case 80:
              case 81:
              case 82:
              case 83:
              case 84:
              case 85:
              case 86:
              case 87:
              case 88:
              case 89:
              case 90:
              case 95:
              case 97:
              case 98:
              case 99:
              case 100:
              case 101:
              case 102:
              case 103:
              case 104:
              case 105:
              case 106:
              case 107:
              case 108:
              case 109:
              case 110:
              case 111:
              case 112:
              case 113:
              case 114:
              case 115:
              case 116:
              case 117:
              case 118:
              case 119:
              case 120:
              case 121:
              case 122:
                return C(c, k, l, K, t);
            }
            throw (0, e.syntaxError)(c, k, s(A));
          }
          var f = a.line,
            w = 1 + k - a.lineStart;
          return new n.Token(r.TokenKind.EOF, i, i, f, w, t);
        }
        function s(e) {
          return e < 32 && 9 !== e && 10 !== e && 13 !== e
            ? 'Cannot contain the invalid character '.concat(o(e), '.')
            : 39 === e
            ? 'Unexpected single quote character (\'), did you mean to use a double quote (")?'
            : 'Cannot parse the unexpected character '.concat(o(e), '.');
        }
        function d(e, a, t, c, o) {
          var i,
            s = e.body,
            d = a;
          do {
            i = s.charCodeAt(++d);
          } while (!isNaN(i) && (i > 31 || 9 === i));
          return new n.Token(
            r.TokenKind.COMMENT,
            a,
            d,
            t,
            c,
            o,
            s.slice(a + 1, d)
          );
        }
        function u(a, t, c, i, s, d) {
          var u = a.body,
            h = c,
            T = t,
            A = !1;
          if ((45 === h && (h = u.charCodeAt(++T)), 48 === h)) {
            if ((h = u.charCodeAt(++T)) >= 48 && h <= 57)
              throw (0, e.syntaxError)(
                a,
                T,
                'Invalid number, unexpected digit after 0: '.concat(o(h), '.')
              );
          } else (T = k(a, T, h)), (h = u.charCodeAt(T));
          if (
            (46 === h &&
              ((A = !0),
              (h = u.charCodeAt(++T)),
              (T = k(a, T, h)),
              (h = u.charCodeAt(T))),
            (69 !== h && 101 !== h) ||
              ((A = !0),
              (43 !== (h = u.charCodeAt(++T)) && 45 !== h) ||
                (h = u.charCodeAt(++T)),
              (T = k(a, T, h)),
              (h = u.charCodeAt(T))),
            46 === h || K(h))
          )
            throw (0, e.syntaxError)(
              a,
              T,
              'Invalid number, expected digit but got: '.concat(o(h), '.')
            );
          return new n.Token(
            A ? r.TokenKind.FLOAT : r.TokenKind.INT,
            t,
            T,
            i,
            s,
            d,
            u.slice(t, T)
          );
        }
        function k(n, r, a) {
          var t = n.body,
            c = r,
            i = a;
          if (i >= 48 && i <= 57) {
            do {
              i = t.charCodeAt(++c);
            } while (i >= 48 && i <= 57);
            return c;
          }
          throw (0, e.syntaxError)(
            n,
            c,
            'Invalid number, expected digit but got: '.concat(o(i), '.')
          );
        }
        function h(a, t, c, i, s) {
          for (
            var d = a.body, u = t + 1, k = u, h = 0, T = '';
            u < d.length &&
            !isNaN((h = d.charCodeAt(u))) &&
            10 !== h &&
            13 !== h;

          ) {
            if (34 === h)
              return (
                (T += d.slice(k, u)),
                new n.Token(r.TokenKind.STRING, t, u + 1, c, i, s, T)
              );
            if (h < 32 && 9 !== h)
              throw (0, e.syntaxError)(
                a,
                u,
                'Invalid character within String: '.concat(o(h), '.')
              );
            if ((++u, 92 === h)) {
              switch (((T += d.slice(k, u - 1)), (h = d.charCodeAt(u)))) {
                case 34:
                  T += '"';
                  break;
                case 47:
                  T += '/';
                  break;
                case 92:
                  T += '\\';
                  break;
                case 98:
                  T += '\b';
                  break;
                case 102:
                  T += '\f';
                  break;
                case 110:
                  T += '\n';
                  break;
                case 114:
                  T += '\r';
                  break;
                case 116:
                  T += '\t';
                  break;
                case 117:
                  var l = A(
                    d.charCodeAt(u + 1),
                    d.charCodeAt(u + 2),
                    d.charCodeAt(u + 3),
                    d.charCodeAt(u + 4)
                  );
                  if (l < 0) {
                    var C = d.slice(u + 1, u + 5);
                    throw (0, e.syntaxError)(
                      a,
                      u,
                      'Invalid character escape sequence: \\u'.concat(C, '.')
                    );
                  }
                  (T += String.fromCharCode(l)), (u += 4);
                  break;
                default:
                  throw (0, e.syntaxError)(
                    a,
                    u,
                    'Invalid character escape sequence: \\'.concat(
                      String.fromCharCode(h),
                      '.'
                    )
                  );
              }
              k = ++u;
            }
          }
          throw (0, e.syntaxError)(a, u, 'Unterminated string.');
        }
        function T(t, c, i, s, d, u) {
          for (
            var k = t.body, h = c + 3, T = h, A = 0, l = '';
            h < k.length && !isNaN((A = k.charCodeAt(h)));

          ) {
            if (
              34 === A &&
              34 === k.charCodeAt(h + 1) &&
              34 === k.charCodeAt(h + 2)
            )
              return (
                (l += k.slice(T, h)),
                new n.Token(
                  r.TokenKind.BLOCK_STRING,
                  c,
                  h + 3,
                  i,
                  s,
                  d,
                  (0, a.dedentBlockStringValue)(l)
                )
              );
            if (A < 32 && 9 !== A && 10 !== A && 13 !== A)
              throw (0, e.syntaxError)(
                t,
                h,
                'Invalid character within String: '.concat(o(A), '.')
              );
            10 === A
              ? (++h, ++u.line, (u.lineStart = h))
              : 13 === A
              ? (10 === k.charCodeAt(h + 1) ? (h += 2) : ++h,
                ++u.line,
                (u.lineStart = h))
              : 92 === A &&
                34 === k.charCodeAt(h + 1) &&
                34 === k.charCodeAt(h + 2) &&
                34 === k.charCodeAt(h + 3)
              ? ((l += k.slice(T, h) + '"""'), (T = h += 4))
              : ++h;
          }
          throw (0, e.syntaxError)(t, h, 'Unterminated string.');
        }
        function A(e, n, r, a) {
          return (l(e) << 12) | (l(n) << 8) | (l(r) << 4) | l(a);
        }
        function l(e) {
          return e >= 48 && e <= 57
            ? e - 48
            : e >= 65 && e <= 70
            ? e - 55
            : e >= 97 && e <= 102
            ? e - 87
            : -1;
        }
        function C(e, a, t, c, o) {
          for (
            var i = e.body, s = i.length, d = a + 1, u = 0;
            d !== s &&
            !isNaN((u = i.charCodeAt(d))) &&
            (95 === u ||
              (u >= 48 && u <= 57) ||
              (u >= 65 && u <= 90) ||
              (u >= 97 && u <= 122));

          )
            ++d;
          return new n.Token(r.TokenKind.NAME, a, d, t, c, o, i.slice(a, d));
        }
        function K(e) {
          return 95 === e || (e >= 65 && e <= 90) || (e >= 97 && e <= 122);
        }
        exports.Lexer = t;
      },
      {
        '../error/syntaxError.mjs': 'c9WB',
        './ast.mjs': 'J7if',
        './tokenKind.mjs': 'Axjv',
        './blockString.mjs': 'SG8m',
      },
    ],
    JHRN: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.parse = o),
          (exports.parseValue = c),
          (exports.parseType = p),
          (exports.Parser = void 0);
        var e = require('../error/syntaxError.mjs'),
          i = require('./kinds.mjs'),
          t = require('./ast.mjs'),
          n = require('./tokenKind.mjs'),
          r = require('./source.mjs'),
          s = require('./directiveLocation.mjs'),
          a = require('./lexer.mjs');
        function o(e, i) {
          return new h(e, i).parseDocument();
        }
        function c(e, i) {
          var t = new h(e, i);
          t.expectToken(n.TokenKind.SOF);
          var r = t.parseValueLiteral(!1);
          return t.expectToken(n.TokenKind.EOF), r;
        }
        function p(e, i) {
          var t = new h(e, i);
          t.expectToken(n.TokenKind.SOF);
          var r = t.parseTypeReference();
          return t.expectToken(n.TokenKind.EOF), r;
        }
        var h = (function () {
          function o(e, i) {
            var t = (0, r.isSource)(e) ? e : new r.Source(e);
            (this._lexer = new a.Lexer(t)), (this._options = i);
          }
          var c = o.prototype;
          return (
            (c.parseName = function () {
              var e = this.expectToken(n.TokenKind.NAME);
              return { kind: i.Kind.NAME, value: e.value, loc: this.loc(e) };
            }),
            (c.parseDocument = function () {
              var e = this._lexer.token;
              return {
                kind: i.Kind.DOCUMENT,
                definitions: this.many(
                  n.TokenKind.SOF,
                  this.parseDefinition,
                  n.TokenKind.EOF
                ),
                loc: this.loc(e),
              };
            }),
            (c.parseDefinition = function () {
              if (this.peek(n.TokenKind.NAME))
                switch (this._lexer.token.value) {
                  case 'query':
                  case 'mutation':
                  case 'subscription':
                    return this.parseOperationDefinition();
                  case 'fragment':
                    return this.parseFragmentDefinition();
                  case 'schema':
                  case 'scalar':
                  case 'type':
                  case 'interface':
                  case 'union':
                  case 'enum':
                  case 'input':
                  case 'directive':
                    return this.parseTypeSystemDefinition();
                  case 'extend':
                    return this.parseTypeSystemExtension();
                }
              else {
                if (this.peek(n.TokenKind.BRACE_L))
                  return this.parseOperationDefinition();
                if (this.peekDescription())
                  return this.parseTypeSystemDefinition();
              }
              throw this.unexpected();
            }),
            (c.parseOperationDefinition = function () {
              var e = this._lexer.token;
              if (this.peek(n.TokenKind.BRACE_L))
                return {
                  kind: i.Kind.OPERATION_DEFINITION,
                  operation: 'query',
                  name: void 0,
                  variableDefinitions: [],
                  directives: [],
                  selectionSet: this.parseSelectionSet(),
                  loc: this.loc(e),
                };
              var t,
                r = this.parseOperationType();
              return (
                this.peek(n.TokenKind.NAME) && (t = this.parseName()),
                {
                  kind: i.Kind.OPERATION_DEFINITION,
                  operation: r,
                  name: t,
                  variableDefinitions: this.parseVariableDefinitions(),
                  directives: this.parseDirectives(!1),
                  selectionSet: this.parseSelectionSet(),
                  loc: this.loc(e),
                }
              );
            }),
            (c.parseOperationType = function () {
              var e = this.expectToken(n.TokenKind.NAME);
              switch (e.value) {
                case 'query':
                  return 'query';
                case 'mutation':
                  return 'mutation';
                case 'subscription':
                  return 'subscription';
              }
              throw this.unexpected(e);
            }),
            (c.parseVariableDefinitions = function () {
              return this.optionalMany(
                n.TokenKind.PAREN_L,
                this.parseVariableDefinition,
                n.TokenKind.PAREN_R
              );
            }),
            (c.parseVariableDefinition = function () {
              var e = this._lexer.token;
              return {
                kind: i.Kind.VARIABLE_DEFINITION,
                variable: this.parseVariable(),
                type:
                  (this.expectToken(n.TokenKind.COLON),
                  this.parseTypeReference()),
                defaultValue: this.expectOptionalToken(n.TokenKind.EQUALS)
                  ? this.parseValueLiteral(!0)
                  : void 0,
                directives: this.parseDirectives(!0),
                loc: this.loc(e),
              };
            }),
            (c.parseVariable = function () {
              var e = this._lexer.token;
              return (
                this.expectToken(n.TokenKind.DOLLAR),
                {
                  kind: i.Kind.VARIABLE,
                  name: this.parseName(),
                  loc: this.loc(e),
                }
              );
            }),
            (c.parseSelectionSet = function () {
              var e = this._lexer.token;
              return {
                kind: i.Kind.SELECTION_SET,
                selections: this.many(
                  n.TokenKind.BRACE_L,
                  this.parseSelection,
                  n.TokenKind.BRACE_R
                ),
                loc: this.loc(e),
              };
            }),
            (c.parseSelection = function () {
              return this.peek(n.TokenKind.SPREAD)
                ? this.parseFragment()
                : this.parseField();
            }),
            (c.parseField = function () {
              var e,
                t,
                r = this._lexer.token,
                s = this.parseName();
              return (
                this.expectOptionalToken(n.TokenKind.COLON)
                  ? ((e = s), (t = this.parseName()))
                  : (t = s),
                {
                  kind: i.Kind.FIELD,
                  alias: e,
                  name: t,
                  arguments: this.parseArguments(!1),
                  directives: this.parseDirectives(!1),
                  selectionSet: this.peek(n.TokenKind.BRACE_L)
                    ? this.parseSelectionSet()
                    : void 0,
                  loc: this.loc(r),
                }
              );
            }),
            (c.parseArguments = function (e) {
              var i = e ? this.parseConstArgument : this.parseArgument;
              return this.optionalMany(
                n.TokenKind.PAREN_L,
                i,
                n.TokenKind.PAREN_R
              );
            }),
            (c.parseArgument = function () {
              var e = this._lexer.token,
                t = this.parseName();
              return (
                this.expectToken(n.TokenKind.COLON),
                {
                  kind: i.Kind.ARGUMENT,
                  name: t,
                  value: this.parseValueLiteral(!1),
                  loc: this.loc(e),
                }
              );
            }),
            (c.parseConstArgument = function () {
              var e = this._lexer.token;
              return {
                kind: i.Kind.ARGUMENT,
                name: this.parseName(),
                value:
                  (this.expectToken(n.TokenKind.COLON),
                  this.parseValueLiteral(!0)),
                loc: this.loc(e),
              };
            }),
            (c.parseFragment = function () {
              var e = this._lexer.token;
              this.expectToken(n.TokenKind.SPREAD);
              var t = this.expectOptionalKeyword('on');
              return !t && this.peek(n.TokenKind.NAME)
                ? {
                    kind: i.Kind.FRAGMENT_SPREAD,
                    name: this.parseFragmentName(),
                    directives: this.parseDirectives(!1),
                    loc: this.loc(e),
                  }
                : {
                    kind: i.Kind.INLINE_FRAGMENT,
                    typeCondition: t ? this.parseNamedType() : void 0,
                    directives: this.parseDirectives(!1),
                    selectionSet: this.parseSelectionSet(),
                    loc: this.loc(e),
                  };
            }),
            (c.parseFragmentDefinition = function () {
              var e,
                t = this._lexer.token;
              return (
                this.expectKeyword('fragment'),
                !0 ===
                (null === (e = this._options) || void 0 === e
                  ? void 0
                  : e.experimentalFragmentVariables)
                  ? {
                      kind: i.Kind.FRAGMENT_DEFINITION,
                      name: this.parseFragmentName(),
                      variableDefinitions: this.parseVariableDefinitions(),
                      typeCondition:
                        (this.expectKeyword('on'), this.parseNamedType()),
                      directives: this.parseDirectives(!1),
                      selectionSet: this.parseSelectionSet(),
                      loc: this.loc(t),
                    }
                  : {
                      kind: i.Kind.FRAGMENT_DEFINITION,
                      name: this.parseFragmentName(),
                      typeCondition:
                        (this.expectKeyword('on'), this.parseNamedType()),
                      directives: this.parseDirectives(!1),
                      selectionSet: this.parseSelectionSet(),
                      loc: this.loc(t),
                    }
              );
            }),
            (c.parseFragmentName = function () {
              if ('on' === this._lexer.token.value) throw this.unexpected();
              return this.parseName();
            }),
            (c.parseValueLiteral = function (e) {
              var t = this._lexer.token;
              switch (t.kind) {
                case n.TokenKind.BRACKET_L:
                  return this.parseList(e);
                case n.TokenKind.BRACE_L:
                  return this.parseObject(e);
                case n.TokenKind.INT:
                  return (
                    this._lexer.advance(),
                    { kind: i.Kind.INT, value: t.value, loc: this.loc(t) }
                  );
                case n.TokenKind.FLOAT:
                  return (
                    this._lexer.advance(),
                    { kind: i.Kind.FLOAT, value: t.value, loc: this.loc(t) }
                  );
                case n.TokenKind.STRING:
                case n.TokenKind.BLOCK_STRING:
                  return this.parseStringLiteral();
                case n.TokenKind.NAME:
                  switch ((this._lexer.advance(), t.value)) {
                    case 'true':
                      return {
                        kind: i.Kind.BOOLEAN,
                        value: !0,
                        loc: this.loc(t),
                      };
                    case 'false':
                      return {
                        kind: i.Kind.BOOLEAN,
                        value: !1,
                        loc: this.loc(t),
                      };
                    case 'null':
                      return { kind: i.Kind.NULL, loc: this.loc(t) };
                    default:
                      return {
                        kind: i.Kind.ENUM,
                        value: t.value,
                        loc: this.loc(t),
                      };
                  }
                case n.TokenKind.DOLLAR:
                  if (!e) return this.parseVariable();
              }
              throw this.unexpected();
            }),
            (c.parseStringLiteral = function () {
              var e = this._lexer.token;
              return (
                this._lexer.advance(),
                {
                  kind: i.Kind.STRING,
                  value: e.value,
                  block: e.kind === n.TokenKind.BLOCK_STRING,
                  loc: this.loc(e),
                }
              );
            }),
            (c.parseList = function (e) {
              var t = this,
                r = this._lexer.token;
              return {
                kind: i.Kind.LIST,
                values: this.any(
                  n.TokenKind.BRACKET_L,
                  function () {
                    return t.parseValueLiteral(e);
                  },
                  n.TokenKind.BRACKET_R
                ),
                loc: this.loc(r),
              };
            }),
            (c.parseObject = function (e) {
              var t = this,
                r = this._lexer.token;
              return {
                kind: i.Kind.OBJECT,
                fields: this.any(
                  n.TokenKind.BRACE_L,
                  function () {
                    return t.parseObjectField(e);
                  },
                  n.TokenKind.BRACE_R
                ),
                loc: this.loc(r),
              };
            }),
            (c.parseObjectField = function (e) {
              var t = this._lexer.token,
                r = this.parseName();
              return (
                this.expectToken(n.TokenKind.COLON),
                {
                  kind: i.Kind.OBJECT_FIELD,
                  name: r,
                  value: this.parseValueLiteral(e),
                  loc: this.loc(t),
                }
              );
            }),
            (c.parseDirectives = function (e) {
              for (var i = []; this.peek(n.TokenKind.AT); )
                i.push(this.parseDirective(e));
              return i;
            }),
            (c.parseDirective = function (e) {
              var t = this._lexer.token;
              return (
                this.expectToken(n.TokenKind.AT),
                {
                  kind: i.Kind.DIRECTIVE,
                  name: this.parseName(),
                  arguments: this.parseArguments(e),
                  loc: this.loc(t),
                }
              );
            }),
            (c.parseTypeReference = function () {
              var e,
                t = this._lexer.token;
              return (
                this.expectOptionalToken(n.TokenKind.BRACKET_L)
                  ? ((e = this.parseTypeReference()),
                    this.expectToken(n.TokenKind.BRACKET_R),
                    (e = { kind: i.Kind.LIST_TYPE, type: e, loc: this.loc(t) }))
                  : (e = this.parseNamedType()),
                this.expectOptionalToken(n.TokenKind.BANG)
                  ? { kind: i.Kind.NON_NULL_TYPE, type: e, loc: this.loc(t) }
                  : e
              );
            }),
            (c.parseNamedType = function () {
              var e = this._lexer.token;
              return {
                kind: i.Kind.NAMED_TYPE,
                name: this.parseName(),
                loc: this.loc(e),
              };
            }),
            (c.parseTypeSystemDefinition = function () {
              var e = this.peekDescription()
                ? this._lexer.lookahead()
                : this._lexer.token;
              if (e.kind === n.TokenKind.NAME)
                switch (e.value) {
                  case 'schema':
                    return this.parseSchemaDefinition();
                  case 'scalar':
                    return this.parseScalarTypeDefinition();
                  case 'type':
                    return this.parseObjectTypeDefinition();
                  case 'interface':
                    return this.parseInterfaceTypeDefinition();
                  case 'union':
                    return this.parseUnionTypeDefinition();
                  case 'enum':
                    return this.parseEnumTypeDefinition();
                  case 'input':
                    return this.parseInputObjectTypeDefinition();
                  case 'directive':
                    return this.parseDirectiveDefinition();
                }
              throw this.unexpected(e);
            }),
            (c.peekDescription = function () {
              return (
                this.peek(n.TokenKind.STRING) ||
                this.peek(n.TokenKind.BLOCK_STRING)
              );
            }),
            (c.parseDescription = function () {
              if (this.peekDescription()) return this.parseStringLiteral();
            }),
            (c.parseSchemaDefinition = function () {
              var e = this._lexer.token,
                t = this.parseDescription();
              this.expectKeyword('schema');
              var r = this.parseDirectives(!0),
                s = this.many(
                  n.TokenKind.BRACE_L,
                  this.parseOperationTypeDefinition,
                  n.TokenKind.BRACE_R
                );
              return {
                kind: i.Kind.SCHEMA_DEFINITION,
                description: t,
                directives: r,
                operationTypes: s,
                loc: this.loc(e),
              };
            }),
            (c.parseOperationTypeDefinition = function () {
              var e = this._lexer.token,
                t = this.parseOperationType();
              this.expectToken(n.TokenKind.COLON);
              var r = this.parseNamedType();
              return {
                kind: i.Kind.OPERATION_TYPE_DEFINITION,
                operation: t,
                type: r,
                loc: this.loc(e),
              };
            }),
            (c.parseScalarTypeDefinition = function () {
              var e = this._lexer.token,
                t = this.parseDescription();
              this.expectKeyword('scalar');
              var n = this.parseName(),
                r = this.parseDirectives(!0);
              return {
                kind: i.Kind.SCALAR_TYPE_DEFINITION,
                description: t,
                name: n,
                directives: r,
                loc: this.loc(e),
              };
            }),
            (c.parseObjectTypeDefinition = function () {
              var e = this._lexer.token,
                t = this.parseDescription();
              this.expectKeyword('type');
              var n = this.parseName(),
                r = this.parseImplementsInterfaces(),
                s = this.parseDirectives(!0),
                a = this.parseFieldsDefinition();
              return {
                kind: i.Kind.OBJECT_TYPE_DEFINITION,
                description: t,
                name: n,
                interfaces: r,
                directives: s,
                fields: a,
                loc: this.loc(e),
              };
            }),
            (c.parseImplementsInterfaces = function () {
              var e;
              if (!this.expectOptionalKeyword('implements')) return [];
              if (
                !0 ===
                (null === (e = this._options) || void 0 === e
                  ? void 0
                  : e.allowLegacySDLImplementsInterfaces)
              ) {
                var i = [];
                this.expectOptionalToken(n.TokenKind.AMP);
                do {
                  i.push(this.parseNamedType());
                } while (
                  this.expectOptionalToken(n.TokenKind.AMP) ||
                  this.peek(n.TokenKind.NAME)
                );
                return i;
              }
              return this.delimitedMany(n.TokenKind.AMP, this.parseNamedType);
            }),
            (c.parseFieldsDefinition = function () {
              var e;
              return !0 ===
                (null === (e = this._options) || void 0 === e
                  ? void 0
                  : e.allowLegacySDLEmptyFields) &&
                this.peek(n.TokenKind.BRACE_L) &&
                this._lexer.lookahead().kind === n.TokenKind.BRACE_R
                ? (this._lexer.advance(), this._lexer.advance(), [])
                : this.optionalMany(
                    n.TokenKind.BRACE_L,
                    this.parseFieldDefinition,
                    n.TokenKind.BRACE_R
                  );
            }),
            (c.parseFieldDefinition = function () {
              var e = this._lexer.token,
                t = this.parseDescription(),
                r = this.parseName(),
                s = this.parseArgumentDefs();
              this.expectToken(n.TokenKind.COLON);
              var a = this.parseTypeReference(),
                o = this.parseDirectives(!0);
              return {
                kind: i.Kind.FIELD_DEFINITION,
                description: t,
                name: r,
                arguments: s,
                type: a,
                directives: o,
                loc: this.loc(e),
              };
            }),
            (c.parseArgumentDefs = function () {
              return this.optionalMany(
                n.TokenKind.PAREN_L,
                this.parseInputValueDef,
                n.TokenKind.PAREN_R
              );
            }),
            (c.parseInputValueDef = function () {
              var e = this._lexer.token,
                t = this.parseDescription(),
                r = this.parseName();
              this.expectToken(n.TokenKind.COLON);
              var s,
                a = this.parseTypeReference();
              this.expectOptionalToken(n.TokenKind.EQUALS) &&
                (s = this.parseValueLiteral(!0));
              var o = this.parseDirectives(!0);
              return {
                kind: i.Kind.INPUT_VALUE_DEFINITION,
                description: t,
                name: r,
                type: a,
                defaultValue: s,
                directives: o,
                loc: this.loc(e),
              };
            }),
            (c.parseInterfaceTypeDefinition = function () {
              var e = this._lexer.token,
                t = this.parseDescription();
              this.expectKeyword('interface');
              var n = this.parseName(),
                r = this.parseImplementsInterfaces(),
                s = this.parseDirectives(!0),
                a = this.parseFieldsDefinition();
              return {
                kind: i.Kind.INTERFACE_TYPE_DEFINITION,
                description: t,
                name: n,
                interfaces: r,
                directives: s,
                fields: a,
                loc: this.loc(e),
              };
            }),
            (c.parseUnionTypeDefinition = function () {
              var e = this._lexer.token,
                t = this.parseDescription();
              this.expectKeyword('union');
              var n = this.parseName(),
                r = this.parseDirectives(!0),
                s = this.parseUnionMemberTypes();
              return {
                kind: i.Kind.UNION_TYPE_DEFINITION,
                description: t,
                name: n,
                directives: r,
                types: s,
                loc: this.loc(e),
              };
            }),
            (c.parseUnionMemberTypes = function () {
              return this.expectOptionalToken(n.TokenKind.EQUALS)
                ? this.delimitedMany(n.TokenKind.PIPE, this.parseNamedType)
                : [];
            }),
            (c.parseEnumTypeDefinition = function () {
              var e = this._lexer.token,
                t = this.parseDescription();
              this.expectKeyword('enum');
              var n = this.parseName(),
                r = this.parseDirectives(!0),
                s = this.parseEnumValuesDefinition();
              return {
                kind: i.Kind.ENUM_TYPE_DEFINITION,
                description: t,
                name: n,
                directives: r,
                values: s,
                loc: this.loc(e),
              };
            }),
            (c.parseEnumValuesDefinition = function () {
              return this.optionalMany(
                n.TokenKind.BRACE_L,
                this.parseEnumValueDefinition,
                n.TokenKind.BRACE_R
              );
            }),
            (c.parseEnumValueDefinition = function () {
              var e = this._lexer.token,
                t = this.parseDescription(),
                n = this.parseName(),
                r = this.parseDirectives(!0);
              return {
                kind: i.Kind.ENUM_VALUE_DEFINITION,
                description: t,
                name: n,
                directives: r,
                loc: this.loc(e),
              };
            }),
            (c.parseInputObjectTypeDefinition = function () {
              var e = this._lexer.token,
                t = this.parseDescription();
              this.expectKeyword('input');
              var n = this.parseName(),
                r = this.parseDirectives(!0),
                s = this.parseInputFieldsDefinition();
              return {
                kind: i.Kind.INPUT_OBJECT_TYPE_DEFINITION,
                description: t,
                name: n,
                directives: r,
                fields: s,
                loc: this.loc(e),
              };
            }),
            (c.parseInputFieldsDefinition = function () {
              return this.optionalMany(
                n.TokenKind.BRACE_L,
                this.parseInputValueDef,
                n.TokenKind.BRACE_R
              );
            }),
            (c.parseTypeSystemExtension = function () {
              var e = this._lexer.lookahead();
              if (e.kind === n.TokenKind.NAME)
                switch (e.value) {
                  case 'schema':
                    return this.parseSchemaExtension();
                  case 'scalar':
                    return this.parseScalarTypeExtension();
                  case 'type':
                    return this.parseObjectTypeExtension();
                  case 'interface':
                    return this.parseInterfaceTypeExtension();
                  case 'union':
                    return this.parseUnionTypeExtension();
                  case 'enum':
                    return this.parseEnumTypeExtension();
                  case 'input':
                    return this.parseInputObjectTypeExtension();
                }
              throw this.unexpected(e);
            }),
            (c.parseSchemaExtension = function () {
              var e = this._lexer.token;
              this.expectKeyword('extend'), this.expectKeyword('schema');
              var t = this.parseDirectives(!0),
                r = this.optionalMany(
                  n.TokenKind.BRACE_L,
                  this.parseOperationTypeDefinition,
                  n.TokenKind.BRACE_R
                );
              if (0 === t.length && 0 === r.length) throw this.unexpected();
              return {
                kind: i.Kind.SCHEMA_EXTENSION,
                directives: t,
                operationTypes: r,
                loc: this.loc(e),
              };
            }),
            (c.parseScalarTypeExtension = function () {
              var e = this._lexer.token;
              this.expectKeyword('extend'), this.expectKeyword('scalar');
              var t = this.parseName(),
                n = this.parseDirectives(!0);
              if (0 === n.length) throw this.unexpected();
              return {
                kind: i.Kind.SCALAR_TYPE_EXTENSION,
                name: t,
                directives: n,
                loc: this.loc(e),
              };
            }),
            (c.parseObjectTypeExtension = function () {
              var e = this._lexer.token;
              this.expectKeyword('extend'), this.expectKeyword('type');
              var t = this.parseName(),
                n = this.parseImplementsInterfaces(),
                r = this.parseDirectives(!0),
                s = this.parseFieldsDefinition();
              if (0 === n.length && 0 === r.length && 0 === s.length)
                throw this.unexpected();
              return {
                kind: i.Kind.OBJECT_TYPE_EXTENSION,
                name: t,
                interfaces: n,
                directives: r,
                fields: s,
                loc: this.loc(e),
              };
            }),
            (c.parseInterfaceTypeExtension = function () {
              var e = this._lexer.token;
              this.expectKeyword('extend'), this.expectKeyword('interface');
              var t = this.parseName(),
                n = this.parseImplementsInterfaces(),
                r = this.parseDirectives(!0),
                s = this.parseFieldsDefinition();
              if (0 === n.length && 0 === r.length && 0 === s.length)
                throw this.unexpected();
              return {
                kind: i.Kind.INTERFACE_TYPE_EXTENSION,
                name: t,
                interfaces: n,
                directives: r,
                fields: s,
                loc: this.loc(e),
              };
            }),
            (c.parseUnionTypeExtension = function () {
              var e = this._lexer.token;
              this.expectKeyword('extend'), this.expectKeyword('union');
              var t = this.parseName(),
                n = this.parseDirectives(!0),
                r = this.parseUnionMemberTypes();
              if (0 === n.length && 0 === r.length) throw this.unexpected();
              return {
                kind: i.Kind.UNION_TYPE_EXTENSION,
                name: t,
                directives: n,
                types: r,
                loc: this.loc(e),
              };
            }),
            (c.parseEnumTypeExtension = function () {
              var e = this._lexer.token;
              this.expectKeyword('extend'), this.expectKeyword('enum');
              var t = this.parseName(),
                n = this.parseDirectives(!0),
                r = this.parseEnumValuesDefinition();
              if (0 === n.length && 0 === r.length) throw this.unexpected();
              return {
                kind: i.Kind.ENUM_TYPE_EXTENSION,
                name: t,
                directives: n,
                values: r,
                loc: this.loc(e),
              };
            }),
            (c.parseInputObjectTypeExtension = function () {
              var e = this._lexer.token;
              this.expectKeyword('extend'), this.expectKeyword('input');
              var t = this.parseName(),
                n = this.parseDirectives(!0),
                r = this.parseInputFieldsDefinition();
              if (0 === n.length && 0 === r.length) throw this.unexpected();
              return {
                kind: i.Kind.INPUT_OBJECT_TYPE_EXTENSION,
                name: t,
                directives: n,
                fields: r,
                loc: this.loc(e),
              };
            }),
            (c.parseDirectiveDefinition = function () {
              var e = this._lexer.token,
                t = this.parseDescription();
              this.expectKeyword('directive'), this.expectToken(n.TokenKind.AT);
              var r = this.parseName(),
                s = this.parseArgumentDefs(),
                a = this.expectOptionalKeyword('repeatable');
              this.expectKeyword('on');
              var o = this.parseDirectiveLocations();
              return {
                kind: i.Kind.DIRECTIVE_DEFINITION,
                description: t,
                name: r,
                arguments: s,
                repeatable: a,
                locations: o,
                loc: this.loc(e),
              };
            }),
            (c.parseDirectiveLocations = function () {
              return this.delimitedMany(
                n.TokenKind.PIPE,
                this.parseDirectiveLocation
              );
            }),
            (c.parseDirectiveLocation = function () {
              var e = this._lexer.token,
                i = this.parseName();
              if (void 0 !== s.DirectiveLocation[i.value]) return i;
              throw this.unexpected(e);
            }),
            (c.loc = function (e) {
              var i;
              if (
                !0 !==
                (null === (i = this._options) || void 0 === i
                  ? void 0
                  : i.noLocation)
              )
                return new t.Location(
                  e,
                  this._lexer.lastToken,
                  this._lexer.source
                );
            }),
            (c.peek = function (e) {
              return this._lexer.token.kind === e;
            }),
            (c.expectToken = function (i) {
              var t = this._lexer.token;
              if (t.kind === i) return this._lexer.advance(), t;
              throw (0, e.syntaxError)(
                this._lexer.source,
                t.start,
                'Expected '.concat(d(i), ', found ').concat(l(t), '.')
              );
            }),
            (c.expectOptionalToken = function (e) {
              var i = this._lexer.token;
              if (i.kind === e) return this._lexer.advance(), i;
            }),
            (c.expectKeyword = function (i) {
              var t = this._lexer.token;
              if (t.kind !== n.TokenKind.NAME || t.value !== i)
                throw (0, e.syntaxError)(
                  this._lexer.source,
                  t.start,
                  'Expected "'.concat(i, '", found ').concat(l(t), '.')
                );
              this._lexer.advance();
            }),
            (c.expectOptionalKeyword = function (e) {
              var i = this._lexer.token;
              return (
                i.kind === n.TokenKind.NAME &&
                i.value === e &&
                (this._lexer.advance(), !0)
              );
            }),
            (c.unexpected = function (i) {
              var t = null != i ? i : this._lexer.token;
              return (0, e.syntaxError)(
                this._lexer.source,
                t.start,
                'Unexpected '.concat(l(t), '.')
              );
            }),
            (c.any = function (e, i, t) {
              this.expectToken(e);
              for (var n = []; !this.expectOptionalToken(t); )
                n.push(i.call(this));
              return n;
            }),
            (c.optionalMany = function (e, i, t) {
              if (this.expectOptionalToken(e)) {
                var n = [];
                do {
                  n.push(i.call(this));
                } while (!this.expectOptionalToken(t));
                return n;
              }
              return [];
            }),
            (c.many = function (e, i, t) {
              this.expectToken(e);
              var n = [];
              do {
                n.push(i.call(this));
              } while (!this.expectOptionalToken(t));
              return n;
            }),
            (c.delimitedMany = function (e, i) {
              this.expectOptionalToken(e);
              var t = [];
              do {
                t.push(i.call(this));
              } while (this.expectOptionalToken(e));
              return t;
            }),
            o
          );
        })();
        function l(e) {
          var i = e.value;
          return d(e.kind) + (null != i ? ' "'.concat(i, '"') : '');
        }
        function d(e) {
          return (0, a.isPunctuatorTokenKind)(e) ? '"'.concat(e, '"') : e;
        }
        exports.Parser = h;
      },
      {
        '../error/syntaxError.mjs': 'c9WB',
        './kinds.mjs': 'HZ3k',
        './ast.mjs': 'J7if',
        './tokenKind.mjs': 'Axjv',
        './source.mjs': 'RlJT',
        './directiveLocation.mjs': 'kRNH',
        './lexer.mjs': 'ITo1',
      },
    ],
    PDqk: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.visit = a),
          (exports.visitInParallel = s),
          (exports.getVisitFn = o),
          (exports.BREAK = exports.QueryDocumentKeys = void 0);
        var e = n(require('../jsutils/inspect.mjs')),
          i = require('./ast.mjs');
        function n(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var t = {
          Name: [],
          Document: ['definitions'],
          OperationDefinition: [
            'name',
            'variableDefinitions',
            'directives',
            'selectionSet',
          ],
          VariableDefinition: [
            'variable',
            'type',
            'defaultValue',
            'directives',
          ],
          Variable: ['name'],
          SelectionSet: ['selections'],
          Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],
          Argument: ['name', 'value'],
          FragmentSpread: ['name', 'directives'],
          InlineFragment: ['typeCondition', 'directives', 'selectionSet'],
          FragmentDefinition: [
            'name',
            'variableDefinitions',
            'typeCondition',
            'directives',
            'selectionSet',
          ],
          IntValue: [],
          FloatValue: [],
          StringValue: [],
          BooleanValue: [],
          NullValue: [],
          EnumValue: [],
          ListValue: ['values'],
          ObjectValue: ['fields'],
          ObjectField: ['name', 'value'],
          Directive: ['name', 'arguments'],
          NamedType: ['name'],
          ListType: ['type'],
          NonNullType: ['type'],
          SchemaDefinition: ['description', 'directives', 'operationTypes'],
          OperationTypeDefinition: ['type'],
          ScalarTypeDefinition: ['description', 'name', 'directives'],
          ObjectTypeDefinition: [
            'description',
            'name',
            'interfaces',
            'directives',
            'fields',
          ],
          FieldDefinition: [
            'description',
            'name',
            'arguments',
            'type',
            'directives',
          ],
          InputValueDefinition: [
            'description',
            'name',
            'type',
            'defaultValue',
            'directives',
          ],
          InterfaceTypeDefinition: [
            'description',
            'name',
            'interfaces',
            'directives',
            'fields',
          ],
          UnionTypeDefinition: ['description', 'name', 'directives', 'types'],
          EnumTypeDefinition: ['description', 'name', 'directives', 'values'],
          EnumValueDefinition: ['description', 'name', 'directives'],
          InputObjectTypeDefinition: [
            'description',
            'name',
            'directives',
            'fields',
          ],
          DirectiveDefinition: [
            'description',
            'name',
            'arguments',
            'locations',
          ],
          SchemaExtension: ['directives', 'operationTypes'],
          ScalarTypeExtension: ['name', 'directives'],
          ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],
          InterfaceTypeExtension: [
            'name',
            'interfaces',
            'directives',
            'fields',
          ],
          UnionTypeExtension: ['name', 'directives', 'types'],
          EnumTypeExtension: ['name', 'directives', 'values'],
          InputObjectTypeExtension: ['name', 'directives', 'fields'],
        };
        exports.QueryDocumentKeys = t;
        var r = Object.freeze({});
        function a(n, a) {
          var s =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : t,
            l = void 0,
            c = Array.isArray(n),
            d = [n],
            f = -1,
            p = [],
            u = void 0,
            v = void 0,
            y = void 0,
            m = [],
            g = [],
            D = n;
          do {
            var h = ++f === d.length,
              T = h && 0 !== p.length;
            if (h) {
              if (
                ((v = 0 === g.length ? void 0 : m[m.length - 1]),
                (u = y),
                (y = g.pop()),
                T)
              ) {
                if (c) u = u.slice();
                else {
                  for (
                    var x = {}, b = 0, V = Object.keys(u);
                    b < V.length;
                    b++
                  ) {
                    var E = V[b];
                    x[E] = u[E];
                  }
                  u = x;
                }
                for (var A = 0, S = 0; S < p.length; S++) {
                  var j = p[S][0],
                    O = p[S][1];
                  c && (j -= A),
                    c && null === O ? (u.splice(j, 1), A++) : (u[j] = O);
                }
              }
              (f = l.index),
                (d = l.keys),
                (p = l.edits),
                (c = l.inArray),
                (l = l.prev);
            } else {
              if (
                ((v = y ? (c ? f : d[f]) : void 0), null == (u = y ? y[v] : D))
              )
                continue;
              y && m.push(v);
            }
            var I,
              k = void 0;
            if (!Array.isArray(u)) {
              if (!(0, i.isNode)(u))
                throw new Error(
                  'Invalid AST Node: '.concat((0, e.default)(u), '.')
                );
              var F = o(a, u.kind, h);
              if (F) {
                if ((k = F.call(a, u, v, y, m, g)) === r) break;
                if (!1 === k) {
                  if (!h) {
                    m.pop();
                    continue;
                  }
                } else if (void 0 !== k && (p.push([v, k]), !h)) {
                  if (!(0, i.isNode)(k)) {
                    m.pop();
                    continue;
                  }
                  u = k;
                }
              }
            }
            if ((void 0 === k && T && p.push([v, u]), h)) m.pop();
            else
              (l = { inArray: c, index: f, keys: d, edits: p, prev: l }),
                (d = (c = Array.isArray(u))
                  ? u
                  : null !== (I = s[u.kind]) && void 0 !== I
                  ? I
                  : []),
                (f = -1),
                (p = []),
                y && g.push(y),
                (y = u);
          } while (void 0 !== l);
          return 0 !== p.length && (D = p[p.length - 1][1]), D;
        }
        function s(e) {
          var i = new Array(e.length);
          return {
            enter: function (n) {
              for (var t = 0; t < e.length; t++)
                if (null == i[t]) {
                  var a = o(e[t], n.kind, !1);
                  if (a) {
                    var s = a.apply(e[t], arguments);
                    if (!1 === s) i[t] = n;
                    else if (s === r) i[t] = r;
                    else if (void 0 !== s) return s;
                  }
                }
            },
            leave: function (n) {
              for (var t = 0; t < e.length; t++)
                if (null == i[t]) {
                  var a = o(e[t], n.kind, !0);
                  if (a) {
                    var s = a.apply(e[t], arguments);
                    if (s === r) i[t] = r;
                    else if (void 0 !== s && !1 !== s) return s;
                  }
                } else i[t] === n && (i[t] = null);
            },
          };
        }
        function o(e, i, n) {
          var t = e[i];
          if (t) {
            if (!n && 'function' == typeof t) return t;
            var r = n ? t.leave : t.enter;
            if ('function' == typeof r) return r;
          } else {
            var a = n ? e.leave : e.enter;
            if (a) {
              if ('function' == typeof a) return a;
              var s = a[i];
              if ('function' == typeof s) return s;
            }
          }
        }
        exports.BREAK = r;
      },
      { '../jsutils/inspect.mjs': 'DIub', './ast.mjs': 'J7if' },
    ],
    XSMy: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = void 0);
        var r = Array.prototype.find
            ? function (r, e) {
                return Array.prototype.find.call(r, e);
              }
            : function (r, e) {
                for (var t = 0; t < r.length; t++) {
                  var o = r[t];
                  if (e(o)) return o;
                }
              },
          e = r;
        exports.default = e;
      },
      {},
    ],
    pwpl: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = void 0);
        var e =
            Object.values ||
            function (e) {
              return Object.keys(e).map(function (t) {
                return e[t];
              });
            },
          t = e;
        exports.default = t;
      },
      {},
    ],
    l6Q0: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.locatedError = s);
        var r = o(require('../jsutils/inspect.mjs')),
          e = require('./GraphQLError.mjs');
        function o(r) {
          return r && r.__esModule ? r : { default: r };
        }
        function s(o, s, t) {
          var n,
            u =
              o instanceof Error
                ? o
                : new Error('Unexpected error value: ' + (0, r.default)(o));
          return Array.isArray(u.path)
            ? u
            : new e.GraphQLError(
                u.message,
                null !== (n = u.nodes) && void 0 !== n ? n : s,
                u.source,
                u.positions,
                t,
                u
              );
        }
      },
      { '../jsutils/inspect.mjs': 'DIub', './GraphQLError.mjs': 'nXOl' },
    ],
    Mvmt: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.assertValidName = s),
          (exports.isValidNameError = o);
        var r = t(require('../jsutils/devAssert.mjs')),
          e = require('../error/GraphQLError.mjs');
        function t(r) {
          return r && r.__esModule ? r : { default: r };
        }
        var a = /^[_a-zA-Z][_a-zA-Z0-9]*$/;
        function s(r) {
          var e = o(r);
          if (e) throw e;
          return r;
        }
        function o(t) {
          return (
            'string' == typeof t ||
              (0, r.default)(0, 'Expected name to be a string.'),
            t.length > 1 && '_' === t[0] && '_' === t[1]
              ? new e.GraphQLError(
                  'Name "'.concat(
                    t,
                    '" must not begin with "__", which is reserved by GraphQL introspection.'
                  )
                )
              : a.test(t)
              ? void 0
              : new e.GraphQLError(
                  'Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but "'.concat(
                    t,
                    '" does not.'
                  )
                )
          );
        }
      },
      {
        '../jsutils/devAssert.mjs': 'wvjo',
        '../error/GraphQLError.mjs': 'nXOl',
      },
    ],
    wKrj: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = void 0);
        var e =
            Object.entries ||
            function (e) {
              return Object.keys(e).map(function (t) {
                return [t, e[t]];
              });
            },
          t = e;
        exports.default = t;
      },
      {},
    ],
    pTwJ: [
      function (require, module, exports) {
        'use strict';
        function e(e, t) {
          return e.reduce(function (e, r) {
            return (e[t(r)] = r), e;
          }, Object.create(null));
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
      },
      {},
    ],
    UTmL: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = r);
        var e = t(require('../polyfills/objectEntries.mjs'));
        function t(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function r(t, r) {
          for (
            var u = Object.create(null), l = 0, n = (0, e.default)(t);
            l < n.length;
            l++
          ) {
            var o = n[l],
              s = o[0],
              a = o[1];
            u[s] = r(a, s);
          }
          return u;
        }
      },
      { '../polyfills/objectEntries.mjs': 'wKrj' },
    ],
    jVfI: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = r);
        var e = t(require('../polyfills/objectEntries.mjs'));
        function t(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function r(t) {
          if (null === Object.getPrototypeOf(t)) return t;
          for (
            var r = Object.create(null), u = 0, l = (0, e.default)(t);
            u < l.length;
            u++
          ) {
            var n = l[u],
              o = n[0],
              f = n[1];
            r[o] = f;
          }
          return r;
        }
      },
      { '../polyfills/objectEntries.mjs': 'wKrj' },
    ],
    K4f5: [
      function (require, module, exports) {
        'use strict';
        function e(e, t, r) {
          return e.reduce(function (e, u) {
            return (e[t(u)] = r(u)), e;
          }, Object.create(null));
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
      },
      {},
    ],
    F689: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = r);
        var e = 5;
        function r(r, t) {
          var n = 'string' == typeof r ? [r, t] : [void 0, r],
            o = n[0],
            a = ' Did you mean ';
          o && (a += o + ' ');
          var u = n[1].map(function (e) {
            return '"'.concat(e, '"');
          });
          switch (u.length) {
            case 0:
              return '';
            case 1:
              return a + u[0] + '?';
            case 2:
              return a + u[0] + ' or ' + u[1] + '?';
          }
          var c = u.slice(0, e),
            s = c.pop();
          return a + c.join(', ') + ', or ' + s + '?';
        }
      },
      {},
    ],
    d0Jw: [
      function (require, module, exports) {
        'use strict';
        function e(e) {
          return e;
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
      },
      {},
    ],
    ZMIN: [
      function (require, module, exports) {
        'use strict';
        function r(r, e) {
          for (
            var n = Object.create(null),
              a = new t(r),
              i = Math.floor(0.4 * r.length) + 1,
              o = 0;
            o < e.length;
            o++
          ) {
            var u = e[o],
              s = a.measure(u, i);
            void 0 !== s && (n[u] = s);
          }
          return Object.keys(n).sort(function (r, t) {
            var e = n[r] - n[t];
            return 0 !== e ? e : r.localeCompare(t);
          });
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = r);
        var t = (function () {
          function r(r) {
            (this._input = r),
              (this._inputLowerCase = r.toLowerCase()),
              (this._inputArray = e(this._inputLowerCase)),
              (this._rows = [
                new Array(r.length + 1).fill(0),
                new Array(r.length + 1).fill(0),
                new Array(r.length + 1).fill(0),
              ]);
          }
          return (
            (r.prototype.measure = function (r, t) {
              if (this._input === r) return 0;
              var n = r.toLowerCase();
              if (this._inputLowerCase === n) return 1;
              var a = e(n),
                i = this._inputArray;
              if (a.length < i.length) {
                var o = a;
                (a = i), (i = o);
              }
              var u = a.length,
                s = i.length;
              if (!(u - s > t)) {
                for (var l = this._rows, f = 0; f <= s; f++) l[0][f] = f;
                for (var h = 1; h <= u; h++) {
                  for (
                    var v = l[(h - 1) % 3], c = l[h % 3], p = (c[0] = h), w = 1;
                    w <= s;
                    w++
                  ) {
                    var _ = a[h - 1] === i[w - 1] ? 0 : 1,
                      g = Math.min(v[w] + 1, c[w - 1] + 1, v[w - 1] + _);
                    if (
                      h > 1 &&
                      w > 1 &&
                      a[h - 1] === i[w - 2] &&
                      a[h - 2] === i[w - 1]
                    ) {
                      var y = l[(h - 2) % 3][w - 2];
                      g = Math.min(g, y + 1);
                    }
                    g < p && (p = g), (c[w] = g);
                  }
                  if (p > t) return;
                }
                var A = l[u % 3][s];
                return A <= t ? A : void 0;
              }
            }),
            r
          );
        })();
        function e(r) {
          for (var t = r.length, e = new Array(t), n = 0; n < t; ++n)
            e[n] = r.charCodeAt(n);
          return e;
        }
      },
      {},
    ],
    h28C: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.print = t);
        var n = require('./visitor.mjs'),
          e = require('./blockString.mjs');
        function t(e) {
          return (0, n.visit)(e, { leave: r });
        }
        var i = 80,
          r = {
            Name: function (n) {
              return n.value;
            },
            Variable: function (n) {
              return '$' + n.name;
            },
            Document: function (n) {
              return a(n.definitions, '\n\n') + '\n';
            },
            OperationDefinition: function (n) {
              var e = n.operation,
                t = n.name,
                i = c('(', a(n.variableDefinitions, ', '), ')'),
                r = a(n.directives, ' '),
                u = n.selectionSet;
              return t || r || i || 'query' !== e
                ? a([e, a([t, i]), r, u], ' ')
                : u;
            },
            VariableDefinition: function (n) {
              var e = n.variable,
                t = n.type,
                i = n.defaultValue,
                r = n.directives;
              return e + ': ' + t + c(' = ', i) + c(' ', a(r, ' '));
            },
            SelectionSet: function (n) {
              return o(n.selections);
            },
            Field: function (n) {
              var e = n.alias,
                t = n.name,
                r = n.arguments,
                u = n.directives,
                o = n.selectionSet,
                l = c('', e, ': ') + t,
                s = l + c('(', a(r, ', '), ')');
              return (
                s.length > i && (s = l + c('(\n', f(a(r, '\n')), '\n)')),
                a([s, a(u, ' '), o], ' ')
              );
            },
            Argument: function (n) {
              return n.name + ': ' + n.value;
            },
            FragmentSpread: function (n) {
              return '...' + n.name + c(' ', a(n.directives, ' '));
            },
            InlineFragment: function (n) {
              var e = n.typeCondition,
                t = n.directives,
                i = n.selectionSet;
              return a(['...', c('on ', e), a(t, ' '), i], ' ');
            },
            FragmentDefinition: function (n) {
              var e = n.name,
                t = n.typeCondition,
                i = n.variableDefinitions,
                r = n.directives,
                u = n.selectionSet;
              return (
                'fragment '.concat(e).concat(c('(', a(i, ', '), ')'), ' ') +
                'on '.concat(t, ' ').concat(c('', a(r, ' '), ' ')) +
                u
              );
            },
            IntValue: function (n) {
              return n.value;
            },
            FloatValue: function (n) {
              return n.value;
            },
            StringValue: function (n, t) {
              var i = n.value;
              return n.block
                ? (0, e.printBlockString)(i, 'description' === t ? '' : '  ')
                : JSON.stringify(i);
            },
            BooleanValue: function (n) {
              return n.value ? 'true' : 'false';
            },
            NullValue: function () {
              return 'null';
            },
            EnumValue: function (n) {
              return n.value;
            },
            ListValue: function (n) {
              return '[' + a(n.values, ', ') + ']';
            },
            ObjectValue: function (n) {
              return '{' + a(n.fields, ', ') + '}';
            },
            ObjectField: function (n) {
              return n.name + ': ' + n.value;
            },
            Directive: function (n) {
              return '@' + n.name + c('(', a(n.arguments, ', '), ')');
            },
            NamedType: function (n) {
              return n.name;
            },
            ListType: function (n) {
              return '[' + n.type + ']';
            },
            NonNullType: function (n) {
              return n.type + '!';
            },
            SchemaDefinition: u(function (n) {
              var e = n.directives,
                t = n.operationTypes;
              return a(['schema', a(e, ' '), o(t)], ' ');
            }),
            OperationTypeDefinition: function (n) {
              return n.operation + ': ' + n.type;
            },
            ScalarTypeDefinition: u(function (n) {
              return a(['scalar', n.name, a(n.directives, ' ')], ' ');
            }),
            ObjectTypeDefinition: u(function (n) {
              var e = n.name,
                t = n.interfaces,
                i = n.directives,
                r = n.fields;
              return a(
                ['type', e, c('implements ', a(t, ' & ')), a(i, ' '), o(r)],
                ' '
              );
            }),
            FieldDefinition: u(function (n) {
              var e = n.name,
                t = n.arguments,
                i = n.type,
                r = n.directives;
              return (
                e +
                (s(t)
                  ? c('(\n', f(a(t, '\n')), '\n)')
                  : c('(', a(t, ', '), ')')) +
                ': ' +
                i +
                c(' ', a(r, ' '))
              );
            }),
            InputValueDefinition: u(function (n) {
              var e = n.name,
                t = n.type,
                i = n.defaultValue,
                r = n.directives;
              return a([e + ': ' + t, c('= ', i), a(r, ' ')], ' ');
            }),
            InterfaceTypeDefinition: u(function (n) {
              var e = n.name,
                t = n.interfaces,
                i = n.directives,
                r = n.fields;
              return a(
                [
                  'interface',
                  e,
                  c('implements ', a(t, ' & ')),
                  a(i, ' '),
                  o(r),
                ],
                ' '
              );
            }),
            UnionTypeDefinition: u(function (n) {
              var e = n.name,
                t = n.directives,
                i = n.types;
              return a(
                [
                  'union',
                  e,
                  a(t, ' '),
                  i && 0 !== i.length ? '= ' + a(i, ' | ') : '',
                ],
                ' '
              );
            }),
            EnumTypeDefinition: u(function (n) {
              var e = n.name,
                t = n.directives,
                i = n.values;
              return a(['enum', e, a(t, ' '), o(i)], ' ');
            }),
            EnumValueDefinition: u(function (n) {
              return a([n.name, a(n.directives, ' ')], ' ');
            }),
            InputObjectTypeDefinition: u(function (n) {
              var e = n.name,
                t = n.directives,
                i = n.fields;
              return a(['input', e, a(t, ' '), o(i)], ' ');
            }),
            DirectiveDefinition: u(function (n) {
              var e = n.name,
                t = n.arguments,
                i = n.repeatable,
                r = n.locations;
              return (
                'directive @' +
                e +
                (s(t)
                  ? c('(\n', f(a(t, '\n')), '\n)')
                  : c('(', a(t, ', '), ')')) +
                (i ? ' repeatable' : '') +
                ' on ' +
                a(r, ' | ')
              );
            }),
            SchemaExtension: function (n) {
              var e = n.directives,
                t = n.operationTypes;
              return a(['extend schema', a(e, ' '), o(t)], ' ');
            },
            ScalarTypeExtension: function (n) {
              return a(['extend scalar', n.name, a(n.directives, ' ')], ' ');
            },
            ObjectTypeExtension: function (n) {
              var e = n.name,
                t = n.interfaces,
                i = n.directives,
                r = n.fields;
              return a(
                [
                  'extend type',
                  e,
                  c('implements ', a(t, ' & ')),
                  a(i, ' '),
                  o(r),
                ],
                ' '
              );
            },
            InterfaceTypeExtension: function (n) {
              var e = n.name,
                t = n.interfaces,
                i = n.directives,
                r = n.fields;
              return a(
                [
                  'extend interface',
                  e,
                  c('implements ', a(t, ' & ')),
                  a(i, ' '),
                  o(r),
                ],
                ' '
              );
            },
            UnionTypeExtension: function (n) {
              var e = n.name,
                t = n.directives,
                i = n.types;
              return a(
                [
                  'extend union',
                  e,
                  a(t, ' '),
                  i && 0 !== i.length ? '= ' + a(i, ' | ') : '',
                ],
                ' '
              );
            },
            EnumTypeExtension: function (n) {
              var e = n.name,
                t = n.directives,
                i = n.values;
              return a(['extend enum', e, a(t, ' '), o(i)], ' ');
            },
            InputObjectTypeExtension: function (n) {
              var e = n.name,
                t = n.directives,
                i = n.fields;
              return a(['extend input', e, a(t, ' '), o(i)], ' ');
            },
          };
        function u(n) {
          return function (e) {
            return a([e.description, n(e)], '\n');
          };
        }
        function a(n) {
          var e,
            t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : '';
          return null !==
            (e =
              null == n
                ? void 0
                : n
                    .filter(function (n) {
                      return n;
                    })
                    .join(t)) && void 0 !== e
            ? e
            : '';
        }
        function o(n) {
          return c('{\n', f(a(n, '\n')), '\n}');
        }
        function c(n, e) {
          var t =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : '';
          return null != e && '' !== e ? n + e + t : '';
        }
        function f(n) {
          return c('  ', n.replace(/\n/g, '\n  '));
        }
        function l(n) {
          return -1 !== n.indexOf('\n');
        }
        function s(n) {
          return null != n && n.some(l);
        }
      },
      { './visitor.mjs': 'PDqk', './blockString.mjs': 'SG8m' },
    ],
    hlsb: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.valueFromASTUntyped = t);
        var e = a(require('../jsutils/inspect.mjs')),
          n = a(require('../jsutils/invariant.mjs')),
          u = a(require('../jsutils/keyValMap.mjs')),
          r = require('../language/kinds.mjs');
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function t(a, s) {
          switch (a.kind) {
            case r.Kind.NULL:
              return null;
            case r.Kind.INT:
              return parseInt(a.value, 10);
            case r.Kind.FLOAT:
              return parseFloat(a.value);
            case r.Kind.STRING:
            case r.Kind.ENUM:
            case r.Kind.BOOLEAN:
              return a.value;
            case r.Kind.LIST:
              return a.values.map(function (e) {
                return t(e, s);
              });
            case r.Kind.OBJECT:
              return (0, u.default)(
                a.fields,
                function (e) {
                  return e.name.value;
                },
                function (e) {
                  return t(e.value, s);
                }
              );
            case r.Kind.VARIABLE:
              return null == s ? void 0 : s[a.name.value];
          }
          (0, n.default)(0, 'Unexpected value node: ' + (0, e.default)(a));
        }
      },
      {
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/invariant.mjs': 'hYEN',
        '../jsutils/keyValMap.mjs': 'K4f5',
        '../language/kinds.mjs': 'HZ3k',
      },
    ],
    ENJe: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isType = g),
          (exports.assertType = b),
          (exports.isScalarType = L),
          (exports.assertScalarType = S),
          (exports.isObjectType = _),
          (exports.assertObjectType = G),
          (exports.isInterfaceType = w),
          (exports.assertInterfaceType = j),
          (exports.isUnionType = O),
          (exports.assertUnionType = E),
          (exports.isEnumType = A),
          (exports.assertEnumType = Q),
          (exports.isInputObjectType = I),
          (exports.assertInputObjectType = R),
          (exports.isListType = V),
          (exports.assertListType = M),
          (exports.isNonNullType = k),
          (exports.assertNonNullType = q),
          (exports.isInputType = U),
          (exports.assertInputType = B),
          (exports.isOutputType = F),
          (exports.assertOutputType = C),
          (exports.isLeafType = Y),
          (exports.assertLeafType = z),
          (exports.isCompositeType = J),
          (exports.assertCompositeType = D),
          (exports.isAbstractType = P),
          (exports.assertAbstractType = W),
          (exports.GraphQLList = K),
          (exports.GraphQLNonNull = H),
          (exports.isWrappingType = X),
          (exports.assertWrappingType = Z),
          (exports.isNullableType = $),
          (exports.assertNullableType = ee),
          (exports.getNullableType = te),
          (exports.isNamedType = ne),
          (exports.assertNamedType = re),
          (exports.getNamedType = se),
          (exports.argsToArgsConfig = le),
          (exports.isRequiredArgument = he),
          (exports.isRequiredInputField = Le),
          (exports.GraphQLInputObjectType = exports.GraphQLEnumType = exports.GraphQLUnionType = exports.GraphQLInterfaceType = exports.GraphQLObjectType = exports.GraphQLScalarType = void 0);
        var e = T(require('../polyfills/objectEntries.mjs')),
          t = require('../polyfills/symbols.mjs'),
          n = T(require('../jsutils/inspect.mjs')),
          r = T(require('../jsutils/keyMap.mjs')),
          s = T(require('../jsutils/mapValue.mjs')),
          i = T(require('../jsutils/toObjMap.mjs')),
          o = T(require('../jsutils/devAssert.mjs')),
          a = T(require('../jsutils/keyValMap.mjs')),
          u = T(require('../jsutils/instanceOf.mjs')),
          p = T(require('../jsutils/didYouMean.mjs')),
          c = T(require('../jsutils/isObjectLike.mjs')),
          f = T(require('../jsutils/identityFunc.mjs')),
          d = T(require('../jsutils/defineInspect.mjs')),
          l = T(require('../jsutils/suggestionList.mjs')),
          h = require('../error/GraphQLError.mjs'),
          y = require('../language/kinds.mjs'),
          x = require('../language/printer.mjs'),
          m = require('../utilities/valueFromASTUntyped.mjs');
        function T(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function v(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              'value' in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function N(e, t, n) {
          return t && v(e.prototype, t), n && v(e, n), e;
        }
        function g(e) {
          return L(e) || _(e) || w(e) || O(e) || A(e) || I(e) || V(e) || k(e);
        }
        function b(e) {
          if (!g(e))
            throw new Error(
              'Expected '.concat((0, n.default)(e), ' to be a GraphQL type.')
            );
          return e;
        }
        function L(e) {
          return (0, u.default)(e, ae);
        }
        function S(e) {
          if (!L(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Scalar type.'
              )
            );
          return e;
        }
        function _(e) {
          return (0, u.default)(e, ue);
        }
        function G(e) {
          if (!_(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Object type.'
              )
            );
          return e;
        }
        function w(e) {
          return (0, u.default)(e, ye);
        }
        function j(e) {
          if (!w(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Interface type.'
              )
            );
          return e;
        }
        function O(e) {
          return (0, u.default)(e, xe);
        }
        function E(e) {
          if (!O(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Union type.'
              )
            );
          return e;
        }
        function A(e) {
          return (0, u.default)(e, Te);
        }
        function Q(e) {
          if (!A(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Enum type.'
              )
            );
          return e;
        }
        function I(e) {
          return (0, u.default)(e, ge);
        }
        function R(e) {
          if (!I(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Input Object type.'
              )
            );
          return e;
        }
        function V(e) {
          return (0, u.default)(e, K);
        }
        function M(e) {
          if (!V(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL List type.'
              )
            );
          return e;
        }
        function k(e) {
          return (0, u.default)(e, H);
        }
        function q(e) {
          if (!k(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Non-Null type.'
              )
            );
          return e;
        }
        function U(e) {
          return L(e) || A(e) || I(e) || (X(e) && U(e.ofType));
        }
        function B(e) {
          if (!U(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL input type.'
              )
            );
          return e;
        }
        function F(e) {
          return L(e) || _(e) || w(e) || O(e) || A(e) || (X(e) && F(e.ofType));
        }
        function C(e) {
          if (!F(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL output type.'
              )
            );
          return e;
        }
        function Y(e) {
          return L(e) || A(e);
        }
        function z(e) {
          if (!Y(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL leaf type.'
              )
            );
          return e;
        }
        function J(e) {
          return _(e) || w(e) || O(e);
        }
        function D(e) {
          if (!J(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL composite type.'
              )
            );
          return e;
        }
        function P(e) {
          return w(e) || O(e);
        }
        function W(e) {
          if (!P(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL abstract type.'
              )
            );
          return e;
        }
        function K(e) {
          if (!(this instanceof K)) return new K(e);
          this.ofType = b(e);
        }
        function H(e) {
          if (!(this instanceof H)) return new H(e);
          this.ofType = ee(e);
        }
        function X(e) {
          return V(e) || k(e);
        }
        function Z(e) {
          if (!X(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL wrapping type.'
              )
            );
          return e;
        }
        function $(e) {
          return g(e) && !k(e);
        }
        function ee(e) {
          if (!$(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL nullable type.'
              )
            );
          return e;
        }
        function te(e) {
          if (e) return k(e) ? e.ofType : e;
        }
        function ne(e) {
          return L(e) || _(e) || w(e) || O(e) || A(e) || I(e);
        }
        function re(e) {
          if (!ne(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL named type.'
              )
            );
          return e;
        }
        function se(e) {
          if (e) {
            for (var t = e; X(t); ) t = t.ofType;
            return t;
          }
        }
        function ie(e) {
          return 'function' == typeof e ? e() : e;
        }
        function oe(e) {
          return e && e.length > 0 ? e : void 0;
        }
        (K.prototype.toString = function () {
          return '[' + String(this.ofType) + ']';
        }),
          (K.prototype.toJSON = function () {
            return this.toString();
          }),
          Object.defineProperty(K.prototype, t.SYMBOL_TO_STRING_TAG, {
            get: function () {
              return 'GraphQLList';
            },
          }),
          (0, d.default)(K),
          (H.prototype.toString = function () {
            return String(this.ofType) + '!';
          }),
          (H.prototype.toJSON = function () {
            return this.toString();
          }),
          Object.defineProperty(H.prototype, t.SYMBOL_TO_STRING_TAG, {
            get: function () {
              return 'GraphQLNonNull';
            },
          }),
          (0, d.default)(H);
        var ae = (function () {
          function e(e) {
            var t,
              r,
              s,
              a = null !== (t = e.parseValue) && void 0 !== t ? t : f.default;
            (this.name = e.name),
              (this.description = e.description),
              (this.specifiedByUrl = e.specifiedByUrl),
              (this.serialize =
                null !== (r = e.serialize) && void 0 !== r ? r : f.default),
              (this.parseValue = a),
              (this.parseLiteral =
                null !== (s = e.parseLiteral) && void 0 !== s
                  ? s
                  : function (e, t) {
                      return a((0, m.valueFromASTUntyped)(e, t));
                    }),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.'),
              null == e.specifiedByUrl ||
                'string' == typeof e.specifiedByUrl ||
                (0, o.default)(
                  0,
                  ''.concat(
                    this.name,
                    ' must provide "specifiedByUrl" as a string, '
                  ) + 'but got: '.concat((0, n.default)(e.specifiedByUrl), '.')
                ),
              null == e.serialize ||
                'function' == typeof e.serialize ||
                (0, o.default)(
                  0,
                  ''.concat(
                    this.name,
                    ' must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.'
                  )
                ),
              e.parseLiteral &&
                (('function' == typeof e.parseValue &&
                  'function' == typeof e.parseLiteral) ||
                  (0, o.default)(
                    0,
                    ''.concat(
                      this.name,
                      ' must provide both "parseValue" and "parseLiteral" functions.'
                    )
                  ));
          }
          var r = e.prototype;
          return (
            (r.toConfig = function () {
              var e;
              return {
                name: this.name,
                description: this.description,
                specifiedByUrl: this.specifiedByUrl,
                serialize: this.serialize,
                parseValue: this.parseValue,
                parseLiteral: this.parseLiteral,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
              };
            }),
            (r.toString = function () {
              return this.name;
            }),
            (r.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLScalarType';
                },
              },
            ]),
            e
          );
        })();
        (exports.GraphQLScalarType = ae), (0, d.default)(ae);
        var ue = (function () {
          function e(e) {
            (this.name = e.name),
              (this.description = e.description),
              (this.isTypeOf = e.isTypeOf),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              (this._fields = ce.bind(void 0, e)),
              (this._interfaces = pe.bind(void 0, e)),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.'),
              null == e.isTypeOf ||
                'function' == typeof e.isTypeOf ||
                (0, o.default)(
                  0,
                  ''.concat(
                    this.name,
                    ' must provide "isTypeOf" as a function, '
                  ) + 'but got: '.concat((0, n.default)(e.isTypeOf), '.')
                );
          }
          var r = e.prototype;
          return (
            (r.getFields = function () {
              return (
                'function' == typeof this._fields &&
                  (this._fields = this._fields()),
                this._fields
              );
            }),
            (r.getInterfaces = function () {
              return (
                'function' == typeof this._interfaces &&
                  (this._interfaces = this._interfaces()),
                this._interfaces
              );
            }),
            (r.toConfig = function () {
              return {
                name: this.name,
                description: this.description,
                interfaces: this.getInterfaces(),
                fields: de(this.getFields()),
                isTypeOf: this.isTypeOf,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes: this.extensionASTNodes || [],
              };
            }),
            (r.toString = function () {
              return this.name;
            }),
            (r.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLObjectType';
                },
              },
            ]),
            e
          );
        })();
        function pe(e) {
          var t,
            n = null !== (t = ie(e.interfaces)) && void 0 !== t ? t : [];
          return (
            Array.isArray(n) ||
              (0, o.default)(
                0,
                ''.concat(
                  e.name,
                  ' interfaces must be an Array or a function which returns an Array.'
                )
              ),
            n
          );
        }
        function ce(t) {
          var r = ie(t.fields);
          return (
            fe(r) ||
              (0, o.default)(
                0,
                ''.concat(
                  t.name,
                  ' fields must be an object with field names as keys or a function which returns such an object.'
                )
              ),
            (0, s.default)(r, function (r, s) {
              var a;
              fe(r) ||
                (0, o.default)(
                  0,
                  ''
                    .concat(t.name, '.')
                    .concat(s, ' field config must be an object.')
                ),
                !('isDeprecated' in r) ||
                  (0, o.default)(
                    0,
                    ''
                      .concat(t.name, '.')
                      .concat(
                        s,
                        ' should provide "deprecationReason" instead of "isDeprecated".'
                      )
                  ),
                null == r.resolve ||
                  'function' == typeof r.resolve ||
                  (0, o.default)(
                    0,
                    ''
                      .concat(t.name, '.')
                      .concat(s, ' field resolver must be a function if ') +
                      'provided, but got: '.concat(
                        (0, n.default)(r.resolve),
                        '.'
                      )
                  );
              var u = null !== (a = r.args) && void 0 !== a ? a : {};
              fe(u) ||
                (0, o.default)(
                  0,
                  ''
                    .concat(t.name, '.')
                    .concat(
                      s,
                      ' args must be an object with argument names as keys.'
                    )
                );
              var p = (0, e.default)(u).map(function (e) {
                var t = e[0],
                  n = e[1];
                return {
                  name: t,
                  description: n.description,
                  type: n.type,
                  defaultValue: n.defaultValue,
                  deprecationReason: n.deprecationReason,
                  extensions: n.extensions && (0, i.default)(n.extensions),
                  astNode: n.astNode,
                };
              });
              return {
                name: s,
                description: r.description,
                type: r.type,
                args: p,
                resolve: r.resolve,
                subscribe: r.subscribe,
                isDeprecated: null != r.deprecationReason,
                deprecationReason: r.deprecationReason,
                extensions: r.extensions && (0, i.default)(r.extensions),
                astNode: r.astNode,
              };
            })
          );
        }
        function fe(e) {
          return (0, c.default)(e) && !Array.isArray(e);
        }
        function de(e) {
          return (0, s.default)(e, function (e) {
            return {
              description: e.description,
              type: e.type,
              args: le(e.args),
              resolve: e.resolve,
              subscribe: e.subscribe,
              deprecationReason: e.deprecationReason,
              extensions: e.extensions,
              astNode: e.astNode,
            };
          });
        }
        function le(e) {
          return (0, a.default)(
            e,
            function (e) {
              return e.name;
            },
            function (e) {
              return {
                description: e.description,
                type: e.type,
                defaultValue: e.defaultValue,
                deprecationReason: e.deprecationReason,
                extensions: e.extensions,
                astNode: e.astNode,
              };
            }
          );
        }
        function he(e) {
          return k(e.type) && void 0 === e.defaultValue;
        }
        (exports.GraphQLObjectType = ue), (0, d.default)(ue);
        var ye = (function () {
          function e(e) {
            (this.name = e.name),
              (this.description = e.description),
              (this.resolveType = e.resolveType),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              (this._fields = ce.bind(void 0, e)),
              (this._interfaces = pe.bind(void 0, e)),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.'),
              null == e.resolveType ||
                'function' == typeof e.resolveType ||
                (0, o.default)(
                  0,
                  ''.concat(
                    this.name,
                    ' must provide "resolveType" as a function, '
                  ) + 'but got: '.concat((0, n.default)(e.resolveType), '.')
                );
          }
          var r = e.prototype;
          return (
            (r.getFields = function () {
              return (
                'function' == typeof this._fields &&
                  (this._fields = this._fields()),
                this._fields
              );
            }),
            (r.getInterfaces = function () {
              return (
                'function' == typeof this._interfaces &&
                  (this._interfaces = this._interfaces()),
                this._interfaces
              );
            }),
            (r.toConfig = function () {
              var e;
              return {
                name: this.name,
                description: this.description,
                interfaces: this.getInterfaces(),
                fields: de(this.getFields()),
                resolveType: this.resolveType,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
              };
            }),
            (r.toString = function () {
              return this.name;
            }),
            (r.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLInterfaceType';
                },
              },
            ]),
            e
          );
        })();
        (exports.GraphQLInterfaceType = ye), (0, d.default)(ye);
        var xe = (function () {
          function e(e) {
            (this.name = e.name),
              (this.description = e.description),
              (this.resolveType = e.resolveType),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              (this._types = me.bind(void 0, e)),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.'),
              null == e.resolveType ||
                'function' == typeof e.resolveType ||
                (0, o.default)(
                  0,
                  ''.concat(
                    this.name,
                    ' must provide "resolveType" as a function, '
                  ) + 'but got: '.concat((0, n.default)(e.resolveType), '.')
                );
          }
          var r = e.prototype;
          return (
            (r.getTypes = function () {
              return (
                'function' == typeof this._types &&
                  (this._types = this._types()),
                this._types
              );
            }),
            (r.toConfig = function () {
              var e;
              return {
                name: this.name,
                description: this.description,
                types: this.getTypes(),
                resolveType: this.resolveType,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
              };
            }),
            (r.toString = function () {
              return this.name;
            }),
            (r.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLUnionType';
                },
              },
            ]),
            e
          );
        })();
        function me(e) {
          var t = ie(e.types);
          return (
            Array.isArray(t) ||
              (0, o.default)(
                0,
                'Must provide Array of types or a function which returns such an array for Union '.concat(
                  e.name,
                  '.'
                )
              ),
            t
          );
        }
        (exports.GraphQLUnionType = xe), (0, d.default)(xe);
        var Te = (function () {
          function e(e) {
            (this.name = e.name),
              (this.description = e.description),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              (this._values = Ne(this.name, e.values)),
              (this._valueLookup = new Map(
                this._values.map(function (e) {
                  return [e.value, e];
                })
              )),
              (this._nameLookup = (0, r.default)(this._values, function (e) {
                return e.name;
              })),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.');
          }
          var s = e.prototype;
          return (
            (s.getValues = function () {
              return this._values;
            }),
            (s.getValue = function (e) {
              return this._nameLookup[e];
            }),
            (s.serialize = function (e) {
              var t = this._valueLookup.get(e);
              if (void 0 === t)
                throw new h.GraphQLError(
                  'Enum "'
                    .concat(this.name, '" cannot represent value: ')
                    .concat((0, n.default)(e))
                );
              return t.name;
            }),
            (s.parseValue = function (e) {
              if ('string' != typeof e) {
                var t = (0, n.default)(e);
                throw new h.GraphQLError(
                  'Enum "'
                    .concat(this.name, '" cannot represent non-string value: ')
                    .concat(t, '.') + ve(this, t)
                );
              }
              var r = this.getValue(e);
              if (null == r)
                throw new h.GraphQLError(
                  'Value "'
                    .concat(e, '" does not exist in "')
                    .concat(this.name, '" enum.') + ve(this, e)
                );
              return r.value;
            }),
            (s.parseLiteral = function (e, t) {
              if (e.kind !== y.Kind.ENUM) {
                var n = (0, x.print)(e);
                throw new h.GraphQLError(
                  'Enum "'
                    .concat(this.name, '" cannot represent non-enum value: ')
                    .concat(n, '.') + ve(this, n),
                  e
                );
              }
              var r = this.getValue(e.value);
              if (null == r) {
                var s = (0, x.print)(e);
                throw new h.GraphQLError(
                  'Value "'
                    .concat(s, '" does not exist in "')
                    .concat(this.name, '" enum.') + ve(this, s),
                  e
                );
              }
              return r.value;
            }),
            (s.toConfig = function () {
              var e,
                t = (0, a.default)(
                  this.getValues(),
                  function (e) {
                    return e.name;
                  },
                  function (e) {
                    return {
                      description: e.description,
                      value: e.value,
                      deprecationReason: e.deprecationReason,
                      extensions: e.extensions,
                      astNode: e.astNode,
                    };
                  }
                );
              return {
                name: this.name,
                description: this.description,
                values: t,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
              };
            }),
            (s.toString = function () {
              return this.name;
            }),
            (s.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLEnumType';
                },
              },
            ]),
            e
          );
        })();
        function ve(e, t) {
          var n = e.getValues().map(function (e) {
              return e.name;
            }),
            r = (0, l.default)(t, n);
          return (0, p.default)('the enum value', r);
        }
        function Ne(t, r) {
          return (
            fe(r) ||
              (0, o.default)(
                0,
                ''.concat(
                  t,
                  ' values must be an object with value names as keys.'
                )
              ),
            (0, e.default)(r).map(function (e) {
              var r = e[0],
                s = e[1];
              return (
                fe(s) ||
                  (0, o.default)(
                    0,
                    ''
                      .concat(t, '.')
                      .concat(
                        r,
                        ' must refer to an object with a "value" key '
                      ) +
                      'representing an internal value but got: '.concat(
                        (0, n.default)(s),
                        '.'
                      )
                  ),
                !('isDeprecated' in s) ||
                  (0, o.default)(
                    0,
                    ''
                      .concat(t, '.')
                      .concat(
                        r,
                        ' should provide "deprecationReason" instead of "isDeprecated".'
                      )
                  ),
                {
                  name: r,
                  description: s.description,
                  value: void 0 !== s.value ? s.value : r,
                  isDeprecated: null != s.deprecationReason,
                  deprecationReason: s.deprecationReason,
                  extensions: s.extensions && (0, i.default)(s.extensions),
                  astNode: s.astNode,
                }
              );
            })
          );
        }
        (exports.GraphQLEnumType = Te), (0, d.default)(Te);
        var ge = (function () {
          function e(e) {
            (this.name = e.name),
              (this.description = e.description),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              (this._fields = be.bind(void 0, e)),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.');
          }
          var n = e.prototype;
          return (
            (n.getFields = function () {
              return (
                'function' == typeof this._fields &&
                  (this._fields = this._fields()),
                this._fields
              );
            }),
            (n.toConfig = function () {
              var e,
                t = (0, s.default)(this.getFields(), function (e) {
                  return {
                    description: e.description,
                    type: e.type,
                    defaultValue: e.defaultValue,
                    extensions: e.extensions,
                    astNode: e.astNode,
                  };
                });
              return {
                name: this.name,
                description: this.description,
                fields: t,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
              };
            }),
            (n.toString = function () {
              return this.name;
            }),
            (n.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLInputObjectType';
                },
              },
            ]),
            e
          );
        })();
        function be(e) {
          var t = ie(e.fields);
          return (
            fe(t) ||
              (0, o.default)(
                0,
                ''.concat(
                  e.name,
                  ' fields must be an object with field names as keys or a function which returns such an object.'
                )
              ),
            (0, s.default)(t, function (t, n) {
              return (
                !('resolve' in t) ||
                  (0, o.default)(
                    0,
                    ''
                      .concat(e.name, '.')
                      .concat(
                        n,
                        ' field has a resolve property, but Input Types cannot define resolvers.'
                      )
                  ),
                {
                  name: n,
                  description: t.description,
                  type: t.type,
                  defaultValue: t.defaultValue,
                  deprecationReason: t.deprecationReason,
                  extensions: t.extensions && (0, i.default)(t.extensions),
                  astNode: t.astNode,
                }
              );
            })
          );
        }
        function Le(e) {
          return k(e.type) && void 0 === e.defaultValue;
        }
        (exports.GraphQLInputObjectType = ge), (0, d.default)(ge);
      },
      {
        '../polyfills/objectEntries.mjs': 'wKrj',
        '../polyfills/symbols.mjs': 'jjn7',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/keyMap.mjs': 'pTwJ',
        '../jsutils/mapValue.mjs': 'UTmL',
        '../jsutils/toObjMap.mjs': 'jVfI',
        '../jsutils/devAssert.mjs': 'wvjo',
        '../jsutils/keyValMap.mjs': 'K4f5',
        '../jsutils/instanceOf.mjs': 'nGk9',
        '../jsutils/didYouMean.mjs': 'F689',
        '../jsutils/isObjectLike.mjs': 'QGgI',
        '../jsutils/identityFunc.mjs': 'd0Jw',
        '../jsutils/defineInspect.mjs': 'WzFq',
        '../jsutils/suggestionList.mjs': 'ZMIN',
        '../error/GraphQLError.mjs': 'nXOl',
        '../language/kinds.mjs': 'HZ3k',
        '../language/printer.mjs': 'h28C',
        '../utilities/valueFromASTUntyped.mjs': 'hlsb',
      },
    ],
    vGYW: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isEqualType = s),
          (exports.isTypeSubTypeOf = p),
          (exports.doTypesOverlap = i);
        var e = require('../type/definition.mjs');
        function s(p, i) {
          return (
            p === i ||
            ((0, e.isNonNullType)(p) && (0, e.isNonNullType)(i)
              ? s(p.ofType, i.ofType)
              : !(!(0, e.isListType)(p) || !(0, e.isListType)(i)) &&
                s(p.ofType, i.ofType))
          );
        }
        function p(s, i, y) {
          return (
            i === y ||
            ((0, e.isNonNullType)(y)
              ? !!(0, e.isNonNullType)(i) && p(s, i.ofType, y.ofType)
              : (0, e.isNonNullType)(i)
              ? p(s, i.ofType, y)
              : (0, e.isListType)(y)
              ? !!(0, e.isListType)(i) && p(s, i.ofType, y.ofType)
              : !(0, e.isListType)(i) &&
                (0, e.isAbstractType)(y) &&
                ((0, e.isInterfaceType)(i) || (0, e.isObjectType)(i)) &&
                s.isSubType(y, i))
          );
        }
        function i(s, p, i) {
          return (
            p === i ||
            ((0, e.isAbstractType)(p)
              ? (0, e.isAbstractType)(i)
                ? s.getPossibleTypes(p).some(function (e) {
                    return s.isSubType(i, e);
                  })
                : s.isSubType(p, i)
              : !!(0, e.isAbstractType)(i) && s.isSubType(i, p))
          );
        }
      },
      { '../type/definition.mjs': 'ENJe' },
    ],
    sZlc: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = void 0);
        var r = require('./symbols.mjs'),
          e =
            Array.from ||
            function (e, t, o) {
              if (null == e)
                throw new TypeError(
                  'Array.from requires an array-like object - not null or undefined'
                );
              var n = e[r.SYMBOL_ITERATOR];
              if ('function' == typeof n) {
                for (
                  var a, l = n.call(e), u = [], i = 0;
                  !(a = l.next()).done;
                  ++i
                )
                  if ((u.push(t.call(o, a.value, i)), i > 9999999))
                    throw new TypeError('Near-infinite iteration.');
                return u;
              }
              var f = e.length;
              if ('number' == typeof f && f >= 0 && f % 1 == 0) {
                for (var p = [], s = 0; s < f; ++s)
                  Object.prototype.hasOwnProperty.call(e, s) &&
                    p.push(t.call(o, e[s], s));
                return p;
              }
              return [];
            },
          t = e;
        exports.default = t;
      },
      { './symbols.mjs': 'jjn7' },
    ],
    iJ7N: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = void 0);
        var e =
            Number.isFinite ||
            function (e) {
              return 'number' == typeof e && isFinite(e);
            },
          t = e;
        exports.default = t;
      },
      {},
    ],
    RfmG: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
        var t = require('../polyfills/symbols.mjs');
        function o(t) {
          return (o =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (t) {
                  return typeof t;
                }
              : function (t) {
                  return t &&
                    'function' == typeof Symbol &&
                    t.constructor === Symbol &&
                    t !== Symbol.prototype
                    ? 'symbol'
                    : typeof t;
                })(t);
        }
        function e(e) {
          if (null == e || 'object' !== o(e)) return !1;
          var r = e.length;
          return (
            ('number' == typeof r && r >= 0 && r % 1 == 0) ||
            'function' == typeof e[t.SYMBOL_ITERATOR]
          );
        }
      },
      { '../polyfills/symbols.mjs': 'jjn7' },
    ],
    STFZ: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = void 0);
        var e =
            Number.isInteger ||
            function (e) {
              return 'number' == typeof e && isFinite(e) && Math.floor(e) === e;
            },
          t = e;
        exports.default = t;
      },
      {},
    ],
    rv3t: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isSpecifiedScalarType = x),
          (exports.specifiedScalarTypes = exports.GraphQLID = exports.GraphQLBoolean = exports.GraphQLString = exports.GraphQLFloat = exports.GraphQLInt = void 0);
        var e = s(require('../polyfills/isFinite.mjs')),
          r = s(require('../polyfills/isInteger.mjs')),
          n = s(require('../jsutils/inspect.mjs')),
          t = s(require('../jsutils/isObjectLike.mjs')),
          a = require('../language/kinds.mjs'),
          o = require('../language/printer.mjs'),
          i = require('../error/GraphQLError.mjs'),
          p = require('./definition.mjs');
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var u = 2147483647,
          l = -2147483648;
        function c(e) {
          var t = L(e);
          if ('boolean' == typeof t) return t ? 1 : 0;
          var a = t;
          if (
            ('string' == typeof t && '' !== t && (a = Number(t)),
            !(0, r.default)(a))
          )
            throw new i.GraphQLError(
              'Int cannot represent non-integer value: '.concat(
                (0, n.default)(t)
              )
            );
          if (a > u || a < l)
            throw new i.GraphQLError(
              'Int cannot represent non 32-bit signed integer value: ' +
                (0, n.default)(t)
            );
          return a;
        }
        function f(e) {
          if (!(0, r.default)(e))
            throw new i.GraphQLError(
              'Int cannot represent non-integer value: '.concat(
                (0, n.default)(e)
              )
            );
          if (e > u || e < l)
            throw new i.GraphQLError(
              'Int cannot represent non 32-bit signed integer value: '.concat(e)
            );
          return e;
        }
        var d = new p.GraphQLScalarType({
          name: 'Int',
          description:
            'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',
          serialize: c,
          parseValue: f,
          parseLiteral: function (e) {
            if (e.kind !== a.Kind.INT)
              throw new i.GraphQLError(
                'Int cannot represent non-integer value: '.concat(
                  (0, o.print)(e)
                ),
                e
              );
            var r = parseInt(e.value, 10);
            if (r > u || r < l)
              throw new i.GraphQLError(
                'Int cannot represent non 32-bit signed integer value: '.concat(
                  e.value
                ),
                e
              );
            return r;
          },
        });
        function h(r) {
          var t = L(r);
          if ('boolean' == typeof t) return t ? 1 : 0;
          var a = t;
          if (
            ('string' == typeof t && '' !== t && (a = Number(t)),
            !(0, e.default)(a))
          )
            throw new i.GraphQLError(
              'Float cannot represent non numeric value: '.concat(
                (0, n.default)(t)
              )
            );
          return a;
        }
        function v(r) {
          if (!(0, e.default)(r))
            throw new i.GraphQLError(
              'Float cannot represent non numeric value: '.concat(
                (0, n.default)(r)
              )
            );
          return r;
        }
        exports.GraphQLInt = d;
        var w = new p.GraphQLScalarType({
          name: 'Float',
          description:
            'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',
          serialize: h,
          parseValue: v,
          parseLiteral: function (e) {
            if (e.kind !== a.Kind.FLOAT && e.kind !== a.Kind.INT)
              throw new i.GraphQLError(
                'Float cannot represent non numeric value: '.concat(
                  (0, o.print)(e)
                ),
                e
              );
            return parseFloat(e.value);
          },
        });
        function L(e) {
          if ((0, t.default)(e)) {
            if ('function' == typeof e.valueOf) {
              var r = e.valueOf();
              if (!(0, t.default)(r)) return r;
            }
            if ('function' == typeof e.toJSON) return e.toJSON();
          }
          return e;
        }
        function g(r) {
          var t = L(r);
          if ('string' == typeof t) return t;
          if ('boolean' == typeof t) return t ? 'true' : 'false';
          if ((0, e.default)(t)) return t.toString();
          throw new i.GraphQLError(
            'String cannot represent value: '.concat((0, n.default)(r))
          );
        }
        function G(e) {
          if ('string' != typeof e)
            throw new i.GraphQLError(
              'String cannot represent a non string value: '.concat(
                (0, n.default)(e)
              )
            );
          return e;
        }
        exports.GraphQLFloat = w;
        var y = new p.GraphQLScalarType({
          name: 'String',
          description:
            'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',
          serialize: g,
          parseValue: G,
          parseLiteral: function (e) {
            if (e.kind !== a.Kind.STRING)
              throw new i.GraphQLError(
                'String cannot represent a non string value: '.concat(
                  (0, o.print)(e)
                ),
                e
              );
            return e.value;
          },
        });
        function Q(r) {
          var t = L(r);
          if ('boolean' == typeof t) return t;
          if ((0, e.default)(t)) return 0 !== t;
          throw new i.GraphQLError(
            'Boolean cannot represent a non boolean value: '.concat(
              (0, n.default)(t)
            )
          );
        }
        function I(e) {
          if ('boolean' != typeof e)
            throw new i.GraphQLError(
              'Boolean cannot represent a non boolean value: '.concat(
                (0, n.default)(e)
              )
            );
          return e;
        }
        exports.GraphQLString = y;
        var m = new p.GraphQLScalarType({
          name: 'Boolean',
          description:
            'The `Boolean` scalar type represents `true` or `false`.',
          serialize: Q,
          parseValue: I,
          parseLiteral: function (e) {
            if (e.kind !== a.Kind.BOOLEAN)
              throw new i.GraphQLError(
                'Boolean cannot represent a non boolean value: '.concat(
                  (0, o.print)(e)
                ),
                e
              );
            return e.value;
          },
        });
        function E(e) {
          var t = L(e);
          if ('string' == typeof t) return t;
          if ((0, r.default)(t)) return String(t);
          throw new i.GraphQLError(
            'ID cannot represent value: '.concat((0, n.default)(e))
          );
        }
        function S(e) {
          if ('string' == typeof e) return e;
          if ((0, r.default)(e)) return e.toString();
          throw new i.GraphQLError(
            'ID cannot represent value: '.concat((0, n.default)(e))
          );
        }
        exports.GraphQLBoolean = m;
        var b = new p.GraphQLScalarType({
          name: 'ID',
          description:
            'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',
          serialize: E,
          parseValue: S,
          parseLiteral: function (e) {
            if (e.kind !== a.Kind.STRING && e.kind !== a.Kind.INT)
              throw new i.GraphQLError(
                'ID cannot represent a non-string and non-integer value: ' +
                  (0, o.print)(e),
                e
              );
            return e.value;
          },
        });
        exports.GraphQLID = b;
        var T = Object.freeze([y, d, w, m, b]);
        function x(e) {
          return T.some(function (r) {
            var n = r.name;
            return e.name === n;
          });
        }
        exports.specifiedScalarTypes = T;
      },
      {
        '../polyfills/isFinite.mjs': 'iJ7N',
        '../polyfills/isInteger.mjs': 'STFZ',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/isObjectLike.mjs': 'QGgI',
        '../language/kinds.mjs': 'HZ3k',
        '../language/printer.mjs': 'h28C',
        '../error/GraphQLError.mjs': 'nXOl',
        './definition.mjs': 'ENJe',
      },
    ],
    kRF4: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.astFromValue = o);
        var e = f(require('../polyfills/isFinite.mjs')),
          i = f(require('../polyfills/arrayFrom.mjs')),
          n = f(require('../polyfills/objectValues.mjs')),
          r = f(require('../jsutils/inspect.mjs')),
          u = f(require('../jsutils/invariant.mjs')),
          t = f(require('../jsutils/isObjectLike.mjs')),
          l = f(require('../jsutils/isCollection.mjs')),
          s = require('../language/kinds.mjs'),
          a = require('../type/scalars.mjs'),
          d = require('../type/definition.mjs');
        function f(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function o(f, v) {
          if ((0, d.isNonNullType)(v)) {
            var y = o(f, v.ofType);
            return (null == y ? void 0 : y.kind) === s.Kind.NULL ? null : y;
          }
          if (null === f) return { kind: s.Kind.NULL };
          if (void 0 === f) return null;
          if ((0, d.isListType)(v)) {
            var j = v.ofType;
            if ((0, l.default)(f)) {
              for (
                var m = [], T = 0, c = (0, i.default)(f);
                T < c.length;
                T++
              ) {
                var k = o(c[T], j);
                null != k && m.push(k);
              }
              return { kind: s.Kind.LIST, values: m };
            }
            return o(f, j);
          }
          if ((0, d.isInputObjectType)(v)) {
            if (!(0, t.default)(f)) return null;
            for (
              var K = [], L = 0, q = (0, n.default)(v.getFields());
              L < q.length;
              L++
            ) {
              var N = q[L],
                E = o(f[N.name], N.type);
              E &&
                K.push({
                  kind: s.Kind.OBJECT_FIELD,
                  name: { kind: s.Kind.NAME, value: N.name },
                  value: E,
                });
            }
            return { kind: s.Kind.OBJECT, fields: K };
          }
          if ((0, d.isLeafType)(v)) {
            var O = v.serialize(f);
            if (null == O) return null;
            if ('boolean' == typeof O)
              return { kind: s.Kind.BOOLEAN, value: O };
            if ('number' == typeof O && (0, e.default)(O)) {
              var g = String(O);
              return p.test(g)
                ? { kind: s.Kind.INT, value: g }
                : { kind: s.Kind.FLOAT, value: g };
            }
            if ('string' == typeof O)
              return (0, d.isEnumType)(v)
                ? { kind: s.Kind.ENUM, value: O }
                : v === a.GraphQLID && p.test(O)
                ? { kind: s.Kind.INT, value: O }
                : { kind: s.Kind.STRING, value: O };
            throw new TypeError(
              'Cannot convert value to AST: '.concat((0, r.default)(O), '.')
            );
          }
          (0, u.default)(0, 'Unexpected input type: ' + (0, r.default)(v));
        }
        var p = /^-?(?:0|[1-9][0-9]*)$/;
      },
      {
        '../polyfills/isFinite.mjs': 'iJ7N',
        '../polyfills/arrayFrom.mjs': 'sZlc',
        '../polyfills/objectValues.mjs': 'pwpl',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/invariant.mjs': 'hYEN',
        '../jsutils/isObjectLike.mjs': 'QGgI',
        '../jsutils/isCollection.mjs': 'RfmG',
        '../language/kinds.mjs': 'HZ3k',
        '../type/scalars.mjs': 'rv3t',
        '../type/definition.mjs': 'ENJe',
      },
    ],
    Y3NB: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isIntrospectionType = _),
          (exports.introspectionTypes = exports.TypeNameMetaFieldDef = exports.TypeMetaFieldDef = exports.SchemaMetaFieldDef = exports.__TypeKind = exports.TypeKind = exports.__EnumValue = exports.__InputValue = exports.__Field = exports.__Type = exports.__DirectiveLocation = exports.__Directive = exports.__Schema = void 0);
        var e = p(require('../polyfills/objectValues.mjs')),
          t = p(require('../jsutils/inspect.mjs')),
          n = p(require('../jsutils/invariant.mjs')),
          i = require('../language/printer.mjs'),
          r = require('../language/directiveLocation.mjs'),
          a = require('../utilities/astFromValue.mjs'),
          o = require('./scalars.mjs'),
          s = require('./definition.mjs');
        function p(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var c = new s.GraphQLObjectType({
          name: '__Schema',
          description:
            'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',
          fields: function () {
            return {
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.description;
                },
              },
              types: {
                description: 'A list of all types supported by this server.',
                type: new s.GraphQLNonNull(
                  new s.GraphQLList(new s.GraphQLNonNull(d))
                ),
                resolve: function (t) {
                  return (0, e.default)(t.getTypeMap());
                },
              },
              queryType: {
                description:
                  'The type that query operations will be rooted at.',
                type: new s.GraphQLNonNull(d),
                resolve: function (e) {
                  return e.getQueryType();
                },
              },
              mutationType: {
                description:
                  'If this server supports mutation, the type that mutation operations will be rooted at.',
                type: d,
                resolve: function (e) {
                  return e.getMutationType();
                },
              },
              subscriptionType: {
                description:
                  'If this server support subscription, the type that subscription operations will be rooted at.',
                type: d,
                resolve: function (e) {
                  return e.getSubscriptionType();
                },
              },
              directives: {
                description:
                  'A list of all directives supported by this server.',
                type: new s.GraphQLNonNull(
                  new s.GraphQLList(new s.GraphQLNonNull(l))
                ),
                resolve: function (e) {
                  return e.getDirectives();
                },
              },
            };
          },
        });
        exports.__Schema = c;
        var l = new s.GraphQLObjectType({
          name: '__Directive',
          description:
            "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          fields: function () {
            return {
              name: {
                type: new s.GraphQLNonNull(o.GraphQLString),
                resolve: function (e) {
                  return e.name;
                },
              },
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.description;
                },
              },
              isRepeatable: {
                type: new s.GraphQLNonNull(o.GraphQLBoolean),
                resolve: function (e) {
                  return e.isRepeatable;
                },
              },
              locations: {
                type: new s.GraphQLNonNull(
                  new s.GraphQLList(new s.GraphQLNonNull(u))
                ),
                resolve: function (e) {
                  return e.locations;
                },
              },
              args: {
                type: new s.GraphQLNonNull(
                  new s.GraphQLList(new s.GraphQLNonNull(f))
                ),
                resolve: function (e) {
                  return e.args;
                },
              },
            };
          },
        });
        exports.__Directive = l;
        var u = new s.GraphQLEnumType({
          name: '__DirectiveLocation',
          description:
            'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',
          values: {
            QUERY: {
              value: r.DirectiveLocation.QUERY,
              description: 'Location adjacent to a query operation.',
            },
            MUTATION: {
              value: r.DirectiveLocation.MUTATION,
              description: 'Location adjacent to a mutation operation.',
            },
            SUBSCRIPTION: {
              value: r.DirectiveLocation.SUBSCRIPTION,
              description: 'Location adjacent to a subscription operation.',
            },
            FIELD: {
              value: r.DirectiveLocation.FIELD,
              description: 'Location adjacent to a field.',
            },
            FRAGMENT_DEFINITION: {
              value: r.DirectiveLocation.FRAGMENT_DEFINITION,
              description: 'Location adjacent to a fragment definition.',
            },
            FRAGMENT_SPREAD: {
              value: r.DirectiveLocation.FRAGMENT_SPREAD,
              description: 'Location adjacent to a fragment spread.',
            },
            INLINE_FRAGMENT: {
              value: r.DirectiveLocation.INLINE_FRAGMENT,
              description: 'Location adjacent to an inline fragment.',
            },
            VARIABLE_DEFINITION: {
              value: r.DirectiveLocation.VARIABLE_DEFINITION,
              description: 'Location adjacent to a variable definition.',
            },
            SCHEMA: {
              value: r.DirectiveLocation.SCHEMA,
              description: 'Location adjacent to a schema definition.',
            },
            SCALAR: {
              value: r.DirectiveLocation.SCALAR,
              description: 'Location adjacent to a scalar definition.',
            },
            OBJECT: {
              value: r.DirectiveLocation.OBJECT,
              description: 'Location adjacent to an object type definition.',
            },
            FIELD_DEFINITION: {
              value: r.DirectiveLocation.FIELD_DEFINITION,
              description: 'Location adjacent to a field definition.',
            },
            ARGUMENT_DEFINITION: {
              value: r.DirectiveLocation.ARGUMENT_DEFINITION,
              description: 'Location adjacent to an argument definition.',
            },
            INTERFACE: {
              value: r.DirectiveLocation.INTERFACE,
              description: 'Location adjacent to an interface definition.',
            },
            UNION: {
              value: r.DirectiveLocation.UNION,
              description: 'Location adjacent to a union definition.',
            },
            ENUM: {
              value: r.DirectiveLocation.ENUM,
              description: 'Location adjacent to an enum definition.',
            },
            ENUM_VALUE: {
              value: r.DirectiveLocation.ENUM_VALUE,
              description: 'Location adjacent to an enum value definition.',
            },
            INPUT_OBJECT: {
              value: r.DirectiveLocation.INPUT_OBJECT,
              description:
                'Location adjacent to an input object type definition.',
            },
            INPUT_FIELD_DEFINITION: {
              value: r.DirectiveLocation.INPUT_FIELD_DEFINITION,
              description:
                'Location adjacent to an input object field definition.',
            },
          },
        });
        exports.__DirectiveLocation = u;
        var d = new s.GraphQLObjectType({
          name: '__Type',
          description:
            'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',
          fields: function () {
            return {
              kind: {
                type: new s.GraphQLNonNull(N),
                resolve: function (e) {
                  return (0, s.isScalarType)(e)
                    ? L.SCALAR
                    : (0, s.isObjectType)(e)
                    ? L.OBJECT
                    : (0, s.isInterfaceType)(e)
                    ? L.INTERFACE
                    : (0, s.isUnionType)(e)
                    ? L.UNION
                    : (0, s.isEnumType)(e)
                    ? L.ENUM
                    : (0, s.isInputObjectType)(e)
                    ? L.INPUT_OBJECT
                    : (0, s.isListType)(e)
                    ? L.LIST
                    : (0, s.isNonNullType)(e)
                    ? L.NON_NULL
                    : void (0, n.default)(
                        0,
                        'Unexpected type: "'.concat((0, t.default)(e), '".')
                      );
                },
              },
              name: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return void 0 !== e.name ? e.name : void 0;
                },
              },
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return void 0 !== e.description ? e.description : void 0;
                },
              },
              specifiedByUrl: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return void 0 !== e.specifiedByUrl
                    ? e.specifiedByUrl
                    : void 0;
                },
              },
              fields: {
                type: new s.GraphQLList(new s.GraphQLNonNull(v)),
                args: {
                  includeDeprecated: {
                    type: o.GraphQLBoolean,
                    defaultValue: !1,
                  },
                },
                resolve: function (t, n) {
                  var i = n.includeDeprecated;
                  if ((0, s.isObjectType)(t) || (0, s.isInterfaceType)(t)) {
                    var r = (0, e.default)(t.getFields());
                    return i
                      ? r
                      : r.filter(function (e) {
                          return null == e.deprecationReason;
                        });
                  }
                },
              },
              interfaces: {
                type: new s.GraphQLList(new s.GraphQLNonNull(d)),
                resolve: function (e) {
                  if ((0, s.isObjectType)(e) || (0, s.isInterfaceType)(e))
                    return e.getInterfaces();
                },
              },
              possibleTypes: {
                type: new s.GraphQLList(new s.GraphQLNonNull(d)),
                resolve: function (e, t, n, i) {
                  var r = i.schema;
                  if ((0, s.isAbstractType)(e)) return r.getPossibleTypes(e);
                },
              },
              enumValues: {
                type: new s.GraphQLList(new s.GraphQLNonNull(y)),
                args: {
                  includeDeprecated: {
                    type: o.GraphQLBoolean,
                    defaultValue: !1,
                  },
                },
                resolve: function (e, t) {
                  var n = t.includeDeprecated;
                  if ((0, s.isEnumType)(e)) {
                    var i = e.getValues();
                    return n
                      ? i
                      : i.filter(function (e) {
                          return null == e.deprecationReason;
                        });
                  }
                },
              },
              inputFields: {
                type: new s.GraphQLList(new s.GraphQLNonNull(f)),
                args: {
                  includeDeprecated: {
                    type: o.GraphQLBoolean,
                    defaultValue: !1,
                  },
                },
                resolve: function (t, n) {
                  var i = n.includeDeprecated;
                  if ((0, s.isInputObjectType)(t)) {
                    var r = (0, e.default)(t.getFields());
                    return i
                      ? r
                      : r.filter(function (e) {
                          return null == e.deprecationReason;
                        });
                  }
                },
              },
              ofType: {
                type: d,
                resolve: function (e) {
                  return void 0 !== e.ofType ? e.ofType : void 0;
                },
              },
            };
          },
        });
        exports.__Type = d;
        var v = new s.GraphQLObjectType({
          name: '__Field',
          description:
            'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',
          fields: function () {
            return {
              name: {
                type: new s.GraphQLNonNull(o.GraphQLString),
                resolve: function (e) {
                  return e.name;
                },
              },
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.description;
                },
              },
              args: {
                type: new s.GraphQLNonNull(
                  new s.GraphQLList(new s.GraphQLNonNull(f))
                ),
                args: {
                  includeDeprecated: {
                    type: o.GraphQLBoolean,
                    defaultValue: !1,
                  },
                },
                resolve: function (e, t) {
                  return t.includeDeprecated
                    ? e.args
                    : e.args.filter(function (e) {
                        return null == e.deprecationReason;
                      });
                },
              },
              type: {
                type: new s.GraphQLNonNull(d),
                resolve: function (e) {
                  return e.type;
                },
              },
              isDeprecated: {
                type: new s.GraphQLNonNull(o.GraphQLBoolean),
                resolve: function (e) {
                  return null != e.deprecationReason;
                },
              },
              deprecationReason: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.deprecationReason;
                },
              },
            };
          },
        });
        exports.__Field = v;
        var f = new s.GraphQLObjectType({
          name: '__InputValue',
          description:
            'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',
          fields: function () {
            return {
              name: {
                type: new s.GraphQLNonNull(o.GraphQLString),
                resolve: function (e) {
                  return e.name;
                },
              },
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.description;
                },
              },
              type: {
                type: new s.GraphQLNonNull(d),
                resolve: function (e) {
                  return e.type;
                },
              },
              defaultValue: {
                type: o.GraphQLString,
                description:
                  'A GraphQL-formatted string representing the default value for this input value.',
                resolve: function (e) {
                  var t = e.type,
                    n = e.defaultValue,
                    r = (0, a.astFromValue)(n, t);
                  return r ? (0, i.print)(r) : null;
                },
              },
              isDeprecated: {
                type: new s.GraphQLNonNull(o.GraphQLBoolean),
                resolve: function (e) {
                  return null != e.deprecationReason;
                },
              },
              deprecationReason: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.deprecationReason;
                },
              },
            };
          },
        });
        exports.__InputValue = f;
        var y = new s.GraphQLObjectType({
          name: '__EnumValue',
          description:
            'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',
          fields: function () {
            return {
              name: {
                type: new s.GraphQLNonNull(o.GraphQLString),
                resolve: function (e) {
                  return e.name;
                },
              },
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.description;
                },
              },
              isDeprecated: {
                type: new s.GraphQLNonNull(o.GraphQLBoolean),
                resolve: function (e) {
                  return null != e.deprecationReason;
                },
              },
              deprecationReason: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.deprecationReason;
                },
              },
            };
          },
        });
        exports.__EnumValue = y;
        var L = Object.freeze({
          SCALAR: 'SCALAR',
          OBJECT: 'OBJECT',
          INTERFACE: 'INTERFACE',
          UNION: 'UNION',
          ENUM: 'ENUM',
          INPUT_OBJECT: 'INPUT_OBJECT',
          LIST: 'LIST',
          NON_NULL: 'NON_NULL',
        });
        exports.TypeKind = L;
        var N = new s.GraphQLEnumType({
          name: '__TypeKind',
          description:
            'An enum describing what kind of type a given `__Type` is.',
          values: {
            SCALAR: {
              value: L.SCALAR,
              description: 'Indicates this type is a scalar.',
            },
            OBJECT: {
              value: L.OBJECT,
              description:
                'Indicates this type is an object. `fields` and `interfaces` are valid fields.',
            },
            INTERFACE: {
              value: L.INTERFACE,
              description:
                'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',
            },
            UNION: {
              value: L.UNION,
              description:
                'Indicates this type is a union. `possibleTypes` is a valid field.',
            },
            ENUM: {
              value: L.ENUM,
              description:
                'Indicates this type is an enum. `enumValues` is a valid field.',
            },
            INPUT_OBJECT: {
              value: L.INPUT_OBJECT,
              description:
                'Indicates this type is an input object. `inputFields` is a valid field.',
            },
            LIST: {
              value: L.LIST,
              description:
                'Indicates this type is a list. `ofType` is a valid field.',
            },
            NON_NULL: {
              value: L.NON_NULL,
              description:
                'Indicates this type is a non-null. `ofType` is a valid field.',
            },
          },
        });
        exports.__TypeKind = N;
        var h = {
          name: '__schema',
          type: new s.GraphQLNonNull(c),
          description: 'Access the current type schema of this server.',
          args: [],
          resolve: function (e, t, n, i) {
            return i.schema;
          },
          isDeprecated: !1,
          deprecationReason: void 0,
          extensions: void 0,
          astNode: void 0,
        };
        exports.SchemaMetaFieldDef = h;
        var T = {
          name: '__type',
          type: d,
          description: 'Request the type information of a single type.',
          args: [
            {
              name: 'name',
              description: void 0,
              type: new s.GraphQLNonNull(o.GraphQLString),
              defaultValue: void 0,
              deprecationReason: void 0,
              extensions: void 0,
              astNode: void 0,
            },
          ],
          resolve: function (e, t, n, i) {
            var r = t.name;
            return i.schema.getType(r);
          },
          isDeprecated: !1,
          deprecationReason: void 0,
          extensions: void 0,
          astNode: void 0,
        };
        exports.TypeMetaFieldDef = T;
        var m = {
          name: '__typename',
          type: new s.GraphQLNonNull(o.GraphQLString),
          description: 'The name of the current Object type at runtime.',
          args: [],
          resolve: function (e, t, n, i) {
            return i.parentType.name;
          },
          isDeprecated: !1,
          deprecationReason: void 0,
          extensions: void 0,
          astNode: void 0,
        };
        exports.TypeNameMetaFieldDef = m;
        var I = Object.freeze([c, l, u, d, v, f, y, N]);
        function _(e) {
          return I.some(function (t) {
            var n = t.name;
            return e.name === n;
          });
        }
        exports.introspectionTypes = I;
      },
      {
        '../polyfills/objectValues.mjs': 'pwpl',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/invariant.mjs': 'hYEN',
        '../language/printer.mjs': 'h28C',
        '../language/directiveLocation.mjs': 'kRNH',
        '../utilities/astFromValue.mjs': 'kRF4',
        './scalars.mjs': 'rv3t',
        './definition.mjs': 'ENJe',
      },
    ],
    sei5: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isDirective = f),
          (exports.assertDirective = v),
          (exports.isSpecifiedDirective = y),
          (exports.specifiedDirectives = exports.GraphQLSpecifiedByDirective = exports.GraphQLDeprecatedDirective = exports.DEFAULT_DEPRECATION_REASON = exports.GraphQLSkipDirective = exports.GraphQLIncludeDirective = exports.GraphQLDirective = void 0);
        var e = l(require('../polyfills/objectEntries.mjs')),
          t = require('../polyfills/symbols.mjs'),
          i = l(require('../jsutils/inspect.mjs')),
          r = l(require('../jsutils/toObjMap.mjs')),
          s = l(require('../jsutils/devAssert.mjs')),
          n = l(require('../jsutils/instanceOf.mjs')),
          a = l(require('../jsutils/isObjectLike.mjs')),
          o = l(require('../jsutils/defineInspect.mjs')),
          c = require('../language/directiveLocation.mjs'),
          p = require('./scalars.mjs'),
          u = require('./definition.mjs');
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function d(e, t) {
          for (var i = 0; i < t.length; i++) {
            var r = t[i];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              'value' in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function h(e, t, i) {
          return t && d(e.prototype, t), i && d(e, i), e;
        }
        function f(e) {
          return (0, n.default)(e, m);
        }
        function v(e) {
          if (!f(e))
            throw new Error(
              'Expected '.concat(
                (0, i.default)(e),
                ' to be a GraphQL directive.'
              )
            );
          return e;
        }
        var m = (function () {
          function i(t) {
            var i, n;
            (this.name = t.name),
              (this.description = t.description),
              (this.locations = t.locations),
              (this.isRepeatable =
                null !== (i = t.isRepeatable) && void 0 !== i && i),
              (this.extensions = t.extensions && (0, r.default)(t.extensions)),
              (this.astNode = t.astNode),
              t.name || (0, s.default)(0, 'Directive must be named.'),
              Array.isArray(t.locations) ||
                (0, s.default)(
                  0,
                  '@'.concat(t.name, ' locations must be an Array.')
                );
            var o = null !== (n = t.args) && void 0 !== n ? n : {};
            ((0, a.default)(o) && !Array.isArray(o)) ||
              (0, s.default)(
                0,
                '@'.concat(
                  t.name,
                  ' args must be an object with argument names as keys.'
                )
              ),
              (this.args = (0, e.default)(o).map(function (e) {
                var t = e[0],
                  i = e[1];
                return {
                  name: t,
                  description: i.description,
                  type: i.type,
                  defaultValue: i.defaultValue,
                  deprecationReason: i.deprecationReason,
                  extensions: i.extensions && (0, r.default)(i.extensions),
                  astNode: i.astNode,
                };
              }));
          }
          var n = i.prototype;
          return (
            (n.toConfig = function () {
              return {
                name: this.name,
                description: this.description,
                locations: this.locations,
                args: (0, u.argsToArgsConfig)(this.args),
                isRepeatable: this.isRepeatable,
                extensions: this.extensions,
                astNode: this.astNode,
              };
            }),
            (n.toString = function () {
              return '@' + this.name;
            }),
            (n.toJSON = function () {
              return this.toString();
            }),
            h(i, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLDirective';
                },
              },
            ]),
            i
          );
        })();
        (exports.GraphQLDirective = m), (0, o.default)(m);
        var L = new m({
          name: 'include',
          description:
            'Directs the executor to include this field or fragment only when the `if` argument is true.',
          locations: [
            c.DirectiveLocation.FIELD,
            c.DirectiveLocation.FRAGMENT_SPREAD,
            c.DirectiveLocation.INLINE_FRAGMENT,
          ],
          args: {
            if: {
              type: new u.GraphQLNonNull(p.GraphQLBoolean),
              description: 'Included when true.',
            },
          },
        });
        exports.GraphQLIncludeDirective = L;
        var D = new m({
          name: 'skip',
          description:
            'Directs the executor to skip this field or fragment when the `if` argument is true.',
          locations: [
            c.DirectiveLocation.FIELD,
            c.DirectiveLocation.FRAGMENT_SPREAD,
            c.DirectiveLocation.INLINE_FRAGMENT,
          ],
          args: {
            if: {
              type: new u.GraphQLNonNull(p.GraphQLBoolean),
              description: 'Skipped when true.',
            },
          },
        });
        exports.GraphQLSkipDirective = D;
        var N = 'No longer supported';
        exports.DEFAULT_DEPRECATION_REASON = N;
        var g = new m({
          name: 'deprecated',
          description:
            'Marks an element of a GraphQL schema as no longer supported.',
          locations: [
            c.DirectiveLocation.FIELD_DEFINITION,
            c.DirectiveLocation.ARGUMENT_DEFINITION,
            c.DirectiveLocation.INPUT_FIELD_DEFINITION,
            c.DirectiveLocation.ENUM_VALUE,
          ],
          args: {
            reason: {
              type: p.GraphQLString,
              description:
                'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',
              defaultValue: N,
            },
          },
        });
        exports.GraphQLDeprecatedDirective = g;
        var x = new m({
          name: 'specifiedBy',
          description:
            'Exposes a URL that specifies the behaviour of this scalar.',
          locations: [c.DirectiveLocation.SCALAR],
          args: {
            url: {
              type: new u.GraphQLNonNull(p.GraphQLString),
              description:
                'The URL that specifies the behaviour of this scalar.',
            },
          },
        });
        exports.GraphQLSpecifiedByDirective = x;
        var E = Object.freeze([L, D, g, x]);
        function y(e) {
          return E.some(function (t) {
            return t.name === e.name;
          });
        }
        exports.specifiedDirectives = E;
      },
      {
        '../polyfills/objectEntries.mjs': 'wKrj',
        '../polyfills/symbols.mjs': 'jjn7',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/toObjMap.mjs': 'jVfI',
        '../jsutils/devAssert.mjs': 'wvjo',
        '../jsutils/instanceOf.mjs': 'nGk9',
        '../jsutils/isObjectLike.mjs': 'QGgI',
        '../jsutils/defineInspect.mjs': 'WzFq',
        '../language/directiveLocation.mjs': 'kRNH',
        './scalars.mjs': 'rv3t',
        './definition.mjs': 'ENJe',
      },
    ],
    CzLQ: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isSchema = d),
          (exports.assertSchema = m),
          (exports.GraphQLSchema = void 0);
        var e = f(require('../polyfills/find.mjs')),
          t = f(require('../polyfills/arrayFrom.mjs')),
          i = f(require('../polyfills/objectValues.mjs')),
          s = require('../polyfills/symbols.mjs'),
          r = f(require('../jsutils/inspect.mjs')),
          n = f(require('../jsutils/toObjMap.mjs')),
          a = f(require('../jsutils/devAssert.mjs')),
          o = f(require('../jsutils/instanceOf.mjs')),
          u = f(require('../jsutils/isObjectLike.mjs')),
          p = require('./introspection.mjs'),
          c = require('./directives.mjs'),
          l = require('./definition.mjs');
        function f(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function y(e, t) {
          for (var i = 0; i < t.length; i++) {
            var s = t[i];
            (s.enumerable = s.enumerable || !1),
              (s.configurable = !0),
              'value' in s && (s.writable = !0),
              Object.defineProperty(e, s.key, s);
          }
        }
        function h(e, t, i) {
          return t && y(e.prototype, t), i && y(e, i), e;
        }
        function d(e) {
          return (0, o.default)(e, v);
        }
        function m(e) {
          if (!d(e))
            throw new Error(
              'Expected '.concat((0, r.default)(e), ' to be a GraphQL schema.')
            );
          return e;
        }
        var v = (function () {
          function o(e) {
            var i;
            (this.__validationErrors = !0 === e.assumeValid ? [] : void 0),
              (0, u.default)(e) ||
                (0, a.default)(0, 'Must provide configuration object.'),
              !e.types ||
                Array.isArray(e.types) ||
                (0, a.default)(
                  0,
                  '"types" must be Array if provided but got: '.concat(
                    (0, r.default)(e.types),
                    '.'
                  )
                ),
              !e.directives ||
                Array.isArray(e.directives) ||
                (0, a.default)(
                  0,
                  '"directives" must be Array if provided but got: ' +
                    ''.concat((0, r.default)(e.directives), '.')
                ),
              (this.description = e.description),
              (this.extensions = e.extensions && (0, n.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = e.extensionASTNodes),
              (this._queryType = e.query),
              (this._mutationType = e.mutation),
              (this._subscriptionType = e.subscription),
              (this._directives =
                null !== (i = e.directives) && void 0 !== i
                  ? i
                  : c.specifiedDirectives);
            var s = new Set(e.types);
            if (null != e.types)
              for (var o = 0, f = e.types; o < f.length; o++) {
                var y = f[o];
                s.delete(y), g(y, s);
              }
            null != this._queryType && g(this._queryType, s),
              null != this._mutationType && g(this._mutationType, s),
              null != this._subscriptionType && g(this._subscriptionType, s);
            for (var h = 0, d = this._directives; h < d.length; h++) {
              var m = d[h];
              if ((0, c.isDirective)(m))
                for (var v = 0, T = m.args; v < T.length; v++) {
                  g(T[v].type, s);
                }
            }
            g(p.__Schema, s),
              (this._typeMap = Object.create(null)),
              (this._subTypeMap = Object.create(null)),
              (this._implementationsMap = Object.create(null));
            for (var b = 0, _ = (0, t.default)(s); b < _.length; b++) {
              var j = _[b];
              if (null != j) {
                var M = j.name;
                if (
                  (M ||
                    (0, a.default)(
                      0,
                      'One of the provided types for building the Schema is missing a name.'
                    ),
                  void 0 !== this._typeMap[M])
                )
                  throw new Error(
                    'Schema must contain uniquely named types but contains multiple types named "'.concat(
                      M,
                      '".'
                    )
                  );
                if (((this._typeMap[M] = j), (0, l.isInterfaceType)(j)))
                  for (var q = 0, S = j.getInterfaces(); q < S.length; q++) {
                    var x = S[q];
                    if ((0, l.isInterfaceType)(x)) {
                      var O = this._implementationsMap[x.name];
                      void 0 === O &&
                        (O = this._implementationsMap[x.name] = {
                          objects: [],
                          interfaces: [],
                        }),
                        O.interfaces.push(j);
                    }
                  }
                else if ((0, l.isObjectType)(j))
                  for (var A = 0, I = j.getInterfaces(); A < I.length; A++) {
                    var N = I[A];
                    if ((0, l.isInterfaceType)(N)) {
                      var w = this._implementationsMap[N.name];
                      void 0 === w &&
                        (w = this._implementationsMap[N.name] = {
                          objects: [],
                          interfaces: [],
                        }),
                        w.objects.push(j);
                    }
                  }
              }
            }
          }
          var f = o.prototype;
          return (
            (f.getQueryType = function () {
              return this._queryType;
            }),
            (f.getMutationType = function () {
              return this._mutationType;
            }),
            (f.getSubscriptionType = function () {
              return this._subscriptionType;
            }),
            (f.getTypeMap = function () {
              return this._typeMap;
            }),
            (f.getType = function (e) {
              return this.getTypeMap()[e];
            }),
            (f.getPossibleTypes = function (e) {
              return (0, l.isUnionType)(e)
                ? e.getTypes()
                : this.getImplementations(e).objects;
            }),
            (f.getImplementations = function (e) {
              var t = this._implementationsMap[e.name];
              return null != t ? t : { objects: [], interfaces: [] };
            }),
            (f.isPossibleType = function (e, t) {
              return this.isSubType(e, t);
            }),
            (f.isSubType = function (e, t) {
              var i = this._subTypeMap[e.name];
              if (void 0 === i) {
                if (((i = Object.create(null)), (0, l.isUnionType)(e)))
                  for (var s = 0, r = e.getTypes(); s < r.length; s++) {
                    i[r[s].name] = !0;
                  }
                else {
                  for (
                    var n = this.getImplementations(e), a = 0, o = n.objects;
                    a < o.length;
                    a++
                  ) {
                    i[o[a].name] = !0;
                  }
                  for (var u = 0, p = n.interfaces; u < p.length; u++) {
                    i[p[u].name] = !0;
                  }
                }
                this._subTypeMap[e.name] = i;
              }
              return void 0 !== i[t.name];
            }),
            (f.getDirectives = function () {
              return this._directives;
            }),
            (f.getDirective = function (t) {
              return (0, e.default)(this.getDirectives(), function (e) {
                return e.name === t;
              });
            }),
            (f.toConfig = function () {
              var e;
              return {
                description: this.description,
                query: this.getQueryType(),
                mutation: this.getMutationType(),
                subscription: this.getSubscriptionType(),
                types: (0, i.default)(this.getTypeMap()),
                directives: this.getDirectives().slice(),
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
                assumeValid: void 0 !== this.__validationErrors,
              };
            }),
            h(o, [
              {
                key: s.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLSchema';
                },
              },
            ]),
            o
          );
        })();
        function g(e, t) {
          var s = (0, l.getNamedType)(e);
          if (!t.has(s))
            if ((t.add(s), (0, l.isUnionType)(s)))
              for (var r = 0, n = s.getTypes(); r < n.length; r++) {
                g(n[r], t);
              }
            else if ((0, l.isObjectType)(s) || (0, l.isInterfaceType)(s)) {
              for (var a = 0, o = s.getInterfaces(); a < o.length; a++) {
                g(o[a], t);
              }
              for (
                var u = 0, p = (0, i.default)(s.getFields());
                u < p.length;
                u++
              ) {
                var c = p[u];
                g(c.type, t);
                for (var f = 0, y = c.args; f < y.length; f++) {
                  g(y[f].type, t);
                }
              }
            } else if ((0, l.isInputObjectType)(s))
              for (
                var h = 0, d = (0, i.default)(s.getFields());
                h < d.length;
                h++
              ) {
                g(d[h].type, t);
              }
          return t;
        }
        exports.GraphQLSchema = v;
      },
      {
        '../polyfills/find.mjs': 'XSMy',
        '../polyfills/arrayFrom.mjs': 'sZlc',
        '../polyfills/objectValues.mjs': 'pwpl',
        '../polyfills/symbols.mjs': 'jjn7',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/toObjMap.mjs': 'jVfI',
        '../jsutils/devAssert.mjs': 'wvjo',
        '../jsutils/instanceOf.mjs': 'nGk9',
        '../jsutils/isObjectLike.mjs': 'QGgI',
        './introspection.mjs': 'Y3NB',
        './directives.mjs': 'sei5',
        './definition.mjs': 'ENJe',
      },
    ],
    ibgb: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.validateSchema = d),
          (exports.assertValidSchema = f);
        var e = l(require('../polyfills/find.mjs')),
          t = l(require('../polyfills/objectValues.mjs')),
          r = l(require('../jsutils/inspect.mjs')),
          n = require('../error/GraphQLError.mjs'),
          o = require('../error/locatedError.mjs'),
          a = require('../utilities/assertValidName.mjs'),
          c = require('../utilities/typeComparators.mjs'),
          i = require('./schema.mjs'),
          u = require('./introspection.mjs'),
          p = require('./directives.mjs'),
          s = require('./definition.mjs');
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function d(e) {
          if (((0, i.assertSchema)(e), e.__validationErrors))
            return e.__validationErrors;
          var t = new m(e);
          y(t), g(t), h(t);
          var r = t.getErrors();
          return (e.__validationErrors = r), r;
        }
        function f(e) {
          var t = d(e);
          if (0 !== t.length)
            throw new Error(
              t
                .map(function (e) {
                  return e.message;
                })
                .join('\n\n')
            );
        }
        var m = (function () {
          function e(e) {
            (this._errors = []), (this.schema = e);
          }
          var t = e.prototype;
          return (
            (t.reportError = function (e, t) {
              var r = Array.isArray(t) ? t.filter(Boolean) : t;
              this.addError(new n.GraphQLError(e, r));
            }),
            (t.addError = function (e) {
              this._errors.push(e);
            }),
            (t.getErrors = function () {
              return this._errors;
            }),
            e
          );
        })();
        function y(e) {
          var t = e.schema,
            n = t.getQueryType();
          if (n) {
            if (!(0, s.isObjectType)(n)) {
              var o;
              e.reportError(
                'Query root type must be Object type, it cannot be '.concat(
                  (0, r.default)(n),
                  '.'
                ),
                null !== (o = v(t, 'query')) && void 0 !== o ? o : n.astNode
              );
            }
          } else e.reportError('Query root type must be provided.', t.astNode);
          var a,
            c = t.getMutationType();
          c &&
            !(0, s.isObjectType)(c) &&
            e.reportError(
              'Mutation root type must be Object type if provided, it cannot be ' +
                ''.concat((0, r.default)(c), '.'),
              null !== (a = v(t, 'mutation')) && void 0 !== a ? a : c.astNode
            );
          var i,
            u = t.getSubscriptionType();
          u &&
            !(0, s.isObjectType)(u) &&
            e.reportError(
              'Subscription root type must be Object type if provided, it cannot be ' +
                ''.concat((0, r.default)(u), '.'),
              null !== (i = v(t, 'subscription')) && void 0 !== i
                ? i
                : u.astNode
            );
        }
        function v(e, t) {
          for (
            var r = R(e, function (e) {
                return e.operationTypes;
              }),
              n = 0;
            n < r.length;
            n++
          ) {
            var o = r[n];
            if (o.operation === t) return o.type;
          }
        }
        function g(e) {
          for (var t = 0, n = e.schema.getDirectives(); t < n.length; t++) {
            var o = n[t];
            if ((0, p.isDirective)(o)) {
              b(e, o);
              for (var a = 0, c = o.args; a < c.length; a++) {
                var i,
                  u = c[a];
                if (
                  (b(e, u),
                  (0, s.isInputType)(u.type) ||
                    e.reportError(
                      'The type of @'
                        .concat(o.name, '(')
                        .concat(u.name, ':) must be Input Type ') +
                        'but got: '.concat((0, r.default)(u.type), '.'),
                      u.astNode
                    ),
                  (0, s.isRequiredArgument)(u) && null != u.deprecationReason)
                )
                  e.reportError(
                    'Required argument @'
                      .concat(o.name, '(')
                      .concat(u.name, ':) cannot be deprecated.'),
                    [
                      Q(u.astNode),
                      null === (i = u.astNode) || void 0 === i
                        ? void 0
                        : i.type,
                    ]
                  );
              }
            } else
              e.reportError(
                'Expected directive but got: '.concat((0, r.default)(o), '.'),
                null == o ? void 0 : o.astNode
              );
          }
        }
        function b(e, t) {
          var r = (0, a.isValidNameError)(t.name);
          r && e.addError((0, o.locatedError)(r, t.astNode));
        }
        function h(e) {
          for (
            var n = _(e),
              o = e.schema.getTypeMap(),
              a = 0,
              c = (0, t.default)(o);
            a < c.length;
            a++
          ) {
            var i = c[a];
            (0, s.isNamedType)(i)
              ? ((0, u.isIntrospectionType)(i) || b(e, i),
                (0, s.isObjectType)(i)
                  ? (E(e, i), T(e, i))
                  : (0, s.isInterfaceType)(i)
                  ? (E(e, i), T(e, i))
                  : (0, s.isUnionType)(i)
                  ? I(e, i)
                  : (0, s.isEnumType)(i)
                  ? O(e, i)
                  : (0, s.isInputObjectType)(i) && (q(e, i), n(i)))
              : e.reportError(
                  'Expected GraphQL named type but got: '.concat(
                    (0, r.default)(i),
                    '.'
                  ),
                  i.astNode
                );
          }
        }
        function E(e, n) {
          var o = (0, t.default)(n.getFields());
          0 === o.length &&
            e.reportError(
              'Type '.concat(n.name, ' must define one or more fields.'),
              x(n)
            );
          for (var a = 0; a < o.length; a++) {
            var c,
              i = o[a];
            if ((b(e, i), !(0, s.isOutputType)(i.type)))
              e.reportError(
                'The type of '
                  .concat(n.name, '.')
                  .concat(i.name, ' must be Output Type ') +
                  'but got: '.concat((0, r.default)(i.type), '.'),
                null === (c = i.astNode) || void 0 === c ? void 0 : c.type
              );
            for (var u = 0, p = i.args; u < p.length; u++) {
              var l,
                d,
                f = p[u],
                m = f.name;
              if ((b(e, f), !(0, s.isInputType)(f.type)))
                e.reportError(
                  'The type of '
                    .concat(n.name, '.')
                    .concat(i.name, '(')
                    .concat(m, ':) must be Input ') +
                    'Type but got: '.concat((0, r.default)(f.type), '.'),
                  null === (l = f.astNode) || void 0 === l ? void 0 : l.type
                );
              if ((0, s.isRequiredArgument)(f) && null != f.deprecationReason)
                e.reportError(
                  'Required argument '
                    .concat(n.name, '.')
                    .concat(i.name, '(')
                    .concat(m, ':) cannot be deprecated.'),
                  [
                    Q(f.astNode),
                    null === (d = f.astNode) || void 0 === d ? void 0 : d.type,
                  ]
                );
            }
          }
        }
        function T(e, t) {
          for (
            var n = Object.create(null), o = 0, a = t.getInterfaces();
            o < a.length;
            o++
          ) {
            var c = a[o];
            (0, s.isInterfaceType)(c)
              ? t !== c
                ? n[c.name]
                  ? e.reportError(
                      'Type '
                        .concat(t.name, ' can only implement ')
                        .concat(c.name, ' once.'),
                      S(t, c)
                    )
                  : ((n[c.name] = !0), j(e, t, c), N(e, t, c))
                : e.reportError(
                    'Type '.concat(
                      t.name,
                      ' cannot implement itself because it would create a circular reference.'
                    ),
                    S(t, c)
                  )
              : e.reportError(
                  'Type '.concat(
                    (0, r.default)(t),
                    ' must only implement Interface types, '
                  ) + 'it cannot implement '.concat((0, r.default)(c), '.'),
                  S(t, c)
                );
          }
        }
        function N(n, o, a) {
          for (
            var i = o.getFields(), u = 0, p = (0, t.default)(a.getFields());
            u < p.length;
            u++
          ) {
            var l = p[u],
              d = l.name,
              f = i[d];
            if (f) {
              var m, y;
              if (!(0, c.isTypeSubTypeOf)(n.schema, f.type, l.type))
                n.reportError(
                  'Interface field '
                    .concat(a.name, '.')
                    .concat(d, ' expects type ') +
                    ''
                      .concat((0, r.default)(l.type), ' but ')
                      .concat(o.name, '.')
                      .concat(d, ' ') +
                    'is type '.concat((0, r.default)(f.type), '.'),
                  [
                    null === (m = l.astNode) || void 0 === m ? void 0 : m.type,
                    null === (y = f.astNode) || void 0 === y ? void 0 : y.type,
                  ]
                );
              for (
                var v = function (t, i) {
                    var u,
                      p,
                      s = i[t],
                      l = s.name,
                      m = (0, e.default)(f.args, function (e) {
                        return e.name === l;
                      });
                    if (!m)
                      return (
                        n.reportError(
                          'Interface field argument '
                            .concat(a.name, '.')
                            .concat(d, '(')
                            .concat(l, ':) expected but ')
                            .concat(o.name, '.')
                            .concat(d, ' does not provide it.'),
                          [s.astNode, f.astNode]
                        ),
                        'continue'
                      );
                    (0, c.isEqualType)(s.type, m.type) ||
                      n.reportError(
                        'Interface field argument '
                          .concat(a.name, '.')
                          .concat(d, '(')
                          .concat(l, ':) ') +
                          'expects type '.concat(
                            (0, r.default)(s.type),
                            ' but '
                          ) +
                          ''
                            .concat(o.name, '.')
                            .concat(d, '(')
                            .concat(l, ':) is type ') +
                          ''.concat((0, r.default)(m.type), '.'),
                        [
                          null === (u = s.astNode) || void 0 === u
                            ? void 0
                            : u.type,
                          null === (p = m.astNode) || void 0 === p
                            ? void 0
                            : p.type,
                        ]
                      );
                  },
                  g = 0,
                  b = l.args;
                g < b.length;
                g++
              )
                v(g, b);
              for (
                var h = function (t, r) {
                    var c = r[t],
                      i = c.name;
                    !(0, e.default)(l.args, function (e) {
                      return e.name === i;
                    }) &&
                      (0, s.isRequiredArgument)(c) &&
                      n.reportError(
                        'Object field '
                          .concat(o.name, '.')
                          .concat(d, ' includes required argument ')
                          .concat(
                            i,
                            ' that is missing from the Interface field '
                          )
                          .concat(a.name, '.')
                          .concat(d, '.'),
                        [c.astNode, l.astNode]
                      );
                  },
                  E = 0,
                  T = f.args;
                E < T.length;
                E++
              )
                h(E, T);
            } else
              n.reportError(
                'Interface field '
                  .concat(a.name, '.')
                  .concat(d, ' expected but ')
                  .concat(o.name, ' does not provide it.'),
                [l.astNode].concat(x(o))
              );
          }
        }
        function j(e, t, r) {
          for (
            var n = t.getInterfaces(), o = 0, a = r.getInterfaces();
            o < a.length;
            o++
          ) {
            var c = a[o];
            -1 === n.indexOf(c) &&
              e.reportError(
                c === t
                  ? 'Type '
                      .concat(t.name, ' cannot implement ')
                      .concat(
                        r.name,
                        ' because it would create a circular reference.'
                      )
                  : 'Type '
                      .concat(t.name, ' must implement ')
                      .concat(c.name, ' because it is implemented by ')
                      .concat(r.name, '.'),
                [].concat(S(r, c), S(t, r))
              );
          }
        }
        function I(e, t) {
          var n = t.getTypes();
          0 === n.length &&
            e.reportError(
              'Union type '.concat(
                t.name,
                ' must define one or more member types.'
              ),
              x(t)
            );
          for (var o = Object.create(null), a = 0; a < n.length; a++) {
            var c = n[a];
            o[c.name]
              ? e.reportError(
                  'Union type '
                    .concat(t.name, ' can only include type ')
                    .concat(c.name, ' once.'),
                  w(t, c.name)
                )
              : ((o[c.name] = !0),
                (0, s.isObjectType)(c) ||
                  e.reportError(
                    'Union type '.concat(
                      t.name,
                      ' can only include Object types, '
                    ) + 'it cannot include '.concat((0, r.default)(c), '.'),
                    w(t, String(c))
                  ));
          }
        }
        function O(e, t) {
          var r = t.getValues();
          0 === r.length &&
            e.reportError(
              'Enum type '.concat(t.name, ' must define one or more values.'),
              x(t)
            );
          for (var n = 0; n < r.length; n++) {
            var o = r[n],
              a = o.name;
            b(e, o),
              ('true' !== a && 'false' !== a && 'null' !== a) ||
                e.reportError(
                  'Enum type '
                    .concat(t.name, ' cannot include value: ')
                    .concat(a, '.'),
                  o.astNode
                );
          }
        }
        function q(e, n) {
          var o = (0, t.default)(n.getFields());
          0 === o.length &&
            e.reportError(
              'Input Object type '.concat(
                n.name,
                ' must define one or more fields.'
              ),
              x(n)
            );
          for (var a = 0; a < o.length; a++) {
            var c,
              i,
              u = o[a];
            if ((b(e, u), !(0, s.isInputType)(u.type)))
              e.reportError(
                'The type of '
                  .concat(n.name, '.')
                  .concat(u.name, ' must be Input Type ') +
                  'but got: '.concat((0, r.default)(u.type), '.'),
                null === (c = u.astNode) || void 0 === c ? void 0 : c.type
              );
            if ((0, s.isRequiredInputField)(u) && null != u.deprecationReason)
              e.reportError(
                'Required input field '
                  .concat(n.name, '.')
                  .concat(u.name, ' cannot be deprecated.'),
                [
                  Q(u.astNode),
                  null === (i = u.astNode) || void 0 === i ? void 0 : i.type,
                ]
              );
          }
        }
        function _(e) {
          var r = Object.create(null),
            n = [],
            o = Object.create(null);
          return function a(c) {
            if (r[c.name]) return;
            r[c.name] = !0;
            o[c.name] = n.length;
            var i = (0, t.default)(c.getFields());
            for (var u = 0; u < i.length; u++) {
              var p = i[u];
              if (
                (0, s.isNonNullType)(p.type) &&
                (0, s.isInputObjectType)(p.type.ofType)
              ) {
                var l = p.type.ofType,
                  d = o[l.name];
                if ((n.push(p), void 0 === d)) a(l);
                else {
                  var f = n.slice(d),
                    m = f
                      .map(function (e) {
                        return e.name;
                      })
                      .join('.');
                  e.reportError(
                    'Cannot reference Input Object "'
                      .concat(
                        l.name,
                        '" within itself through a series of non-null fields: "'
                      )
                      .concat(m, '".'),
                    f.map(function (e) {
                      return e.astNode;
                    })
                  );
                }
                n.pop();
              }
            }
            o[c.name] = void 0;
          };
        }
        function x(e) {
          var t = e.astNode,
            r = e.extensionASTNodes;
          return t ? (r ? [t].concat(r) : [t]) : null != r ? r : [];
        }
        function R(e, t) {
          for (var r = [], n = 0, o = x(e); n < o.length; n++) {
            var a,
              c = o[n];
            r = r.concat(null !== (a = t(c)) && void 0 !== a ? a : []);
          }
          return r;
        }
        function S(e, t) {
          return R(e, function (e) {
            return e.interfaces;
          }).filter(function (e) {
            return e.name.value === t.name;
          });
        }
        function w(e, t) {
          return R(e, function (e) {
            return e.types;
          }).filter(function (e) {
            return e.name.value === t;
          });
        }
        function Q(e) {
          var t;
          return null == e
            ? void 0
            : null === (t = e.directives) || void 0 === t
            ? void 0
            : t.find(function (e) {
                return e.name.value === p.GraphQLDeprecatedDirective.name;
              });
        }
      },
      {
        '../polyfills/find.mjs': 'XSMy',
        '../polyfills/objectValues.mjs': 'pwpl',
        '../jsutils/inspect.mjs': 'DIub',
        '../error/GraphQLError.mjs': 'nXOl',
        '../error/locatedError.mjs': 'l6Q0',
        '../utilities/assertValidName.mjs': 'Mvmt',
        '../utilities/typeComparators.mjs': 'vGYW',
        './schema.mjs': 'CzLQ',
        './introspection.mjs': 'Y3NB',
        './directives.mjs': 'sei5',
        './definition.mjs': 'ENJe',
      },
    ],
    vTpZ: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.typeFromAST = u);
        var e = r(require('../jsutils/inspect.mjs')),
          n = r(require('../jsutils/invariant.mjs')),
          t = require('../language/kinds.mjs'),
          i = require('../type/definition.mjs');
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function u(r, d) {
          var s;
          return d.kind === t.Kind.LIST_TYPE
            ? (s = u(r, d.type)) && new i.GraphQLList(s)
            : d.kind === t.Kind.NON_NULL_TYPE
            ? (s = u(r, d.type)) && new i.GraphQLNonNull(s)
            : d.kind === t.Kind.NAMED_TYPE
            ? r.getType(d.name.value)
            : void (0, n.default)(
                0,
                'Unexpected type node: ' + (0, e.default)(d)
              );
        }
      },
      {
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/invariant.mjs': 'hYEN',
        '../language/kinds.mjs': 'HZ3k',
        '../type/definition.mjs': 'ENJe',
      },
    ],
    wMED: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.visitWithTypeInfo = h),
          (exports.TypeInfo = void 0);
        var e = u(require('../polyfills/find.mjs')),
          t = require('../language/kinds.mjs'),
          i = require('../language/ast.mjs'),
          a = require('../language/visitor.mjs'),
          n = require('../type/definition.mjs'),
          p = require('../type/introspection.mjs'),
          s = require('./typeFromAST.mjs');
        function u(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var r = (function () {
          function i(e, t, i) {
            (this._schema = e),
              (this._typeStack = []),
              (this._parentTypeStack = []),
              (this._inputTypeStack = []),
              (this._fieldDefStack = []),
              (this._defaultValueStack = []),
              (this._directive = null),
              (this._argument = null),
              (this._enumValue = null),
              (this._getFieldDef = null != t ? t : c),
              i &&
                ((0, n.isInputType)(i) && this._inputTypeStack.push(i),
                (0, n.isCompositeType)(i) && this._parentTypeStack.push(i),
                (0, n.isOutputType)(i) && this._typeStack.push(i));
          }
          var a = i.prototype;
          return (
            (a.getType = function () {
              if (this._typeStack.length > 0)
                return this._typeStack[this._typeStack.length - 1];
            }),
            (a.getParentType = function () {
              if (this._parentTypeStack.length > 0)
                return this._parentTypeStack[this._parentTypeStack.length - 1];
            }),
            (a.getInputType = function () {
              if (this._inputTypeStack.length > 0)
                return this._inputTypeStack[this._inputTypeStack.length - 1];
            }),
            (a.getParentInputType = function () {
              if (this._inputTypeStack.length > 1)
                return this._inputTypeStack[this._inputTypeStack.length - 2];
            }),
            (a.getFieldDef = function () {
              if (this._fieldDefStack.length > 0)
                return this._fieldDefStack[this._fieldDefStack.length - 1];
            }),
            (a.getDefaultValue = function () {
              if (this._defaultValueStack.length > 0)
                return this._defaultValueStack[
                  this._defaultValueStack.length - 1
                ];
            }),
            (a.getDirective = function () {
              return this._directive;
            }),
            (a.getArgument = function () {
              return this._argument;
            }),
            (a.getEnumValue = function () {
              return this._enumValue;
            }),
            (a.enter = function (i) {
              var a = this._schema;
              switch (i.kind) {
                case t.Kind.SELECTION_SET:
                  var p = (0, n.getNamedType)(this.getType());
                  this._parentTypeStack.push(
                    (0, n.isCompositeType)(p) ? p : void 0
                  );
                  break;
                case t.Kind.FIELD:
                  var u,
                    r,
                    c = this.getParentType();
                  c && (u = this._getFieldDef(a, c, i)) && (r = u.type),
                    this._fieldDefStack.push(u),
                    this._typeStack.push((0, n.isOutputType)(r) ? r : void 0);
                  break;
                case t.Kind.DIRECTIVE:
                  this._directive = a.getDirective(i.name.value);
                  break;
                case t.Kind.OPERATION_DEFINITION:
                  var h;
                  switch (i.operation) {
                    case 'query':
                      h = a.getQueryType();
                      break;
                    case 'mutation':
                      h = a.getMutationType();
                      break;
                    case 'subscription':
                      h = a.getSubscriptionType();
                  }
                  this._typeStack.push((0, n.isObjectType)(h) ? h : void 0);
                  break;
                case t.Kind.INLINE_FRAGMENT:
                case t.Kind.FRAGMENT_DEFINITION:
                  var l = i.typeCondition,
                    y = l
                      ? (0, s.typeFromAST)(a, l)
                      : (0, n.getNamedType)(this.getType());
                  this._typeStack.push((0, n.isOutputType)(y) ? y : void 0);
                  break;
                case t.Kind.VARIABLE_DEFINITION:
                  var T = (0, s.typeFromAST)(a, i.type);
                  this._inputTypeStack.push((0, n.isInputType)(T) ? T : void 0);
                  break;
                case t.Kind.ARGUMENT:
                  var d,
                    o,
                    _,
                    f =
                      null !== (d = this.getDirective()) && void 0 !== d
                        ? d
                        : this.getFieldDef();
                  f &&
                    (o = (0, e.default)(f.args, function (e) {
                      return e.name === i.name.value;
                    })) &&
                    (_ = o.type),
                    (this._argument = o),
                    this._defaultValueStack.push(o ? o.defaultValue : void 0),
                    this._inputTypeStack.push(
                      (0, n.isInputType)(_) ? _ : void 0
                    );
                  break;
                case t.Kind.LIST:
                  var k = (0, n.getNullableType)(this.getInputType()),
                    g = (0, n.isListType)(k) ? k.ofType : k;
                  this._defaultValueStack.push(void 0),
                    this._inputTypeStack.push(
                      (0, n.isInputType)(g) ? g : void 0
                    );
                  break;
                case t.Kind.OBJECT_FIELD:
                  var S,
                    I,
                    v = (0, n.getNamedType)(this.getInputType());
                  (0, n.isInputObjectType)(v) &&
                    (I = v.getFields()[i.name.value]) &&
                    (S = I.type),
                    this._defaultValueStack.push(I ? I.defaultValue : void 0),
                    this._inputTypeStack.push(
                      (0, n.isInputType)(S) ? S : void 0
                    );
                  break;
                case t.Kind.ENUM:
                  var m,
                    E = (0, n.getNamedType)(this.getInputType());
                  (0, n.isEnumType)(E) && (m = E.getValue(i.value)),
                    (this._enumValue = m);
              }
            }),
            (a.leave = function (e) {
              switch (e.kind) {
                case t.Kind.SELECTION_SET:
                  this._parentTypeStack.pop();
                  break;
                case t.Kind.FIELD:
                  this._fieldDefStack.pop(), this._typeStack.pop();
                  break;
                case t.Kind.DIRECTIVE:
                  this._directive = null;
                  break;
                case t.Kind.OPERATION_DEFINITION:
                case t.Kind.INLINE_FRAGMENT:
                case t.Kind.FRAGMENT_DEFINITION:
                  this._typeStack.pop();
                  break;
                case t.Kind.VARIABLE_DEFINITION:
                  this._inputTypeStack.pop();
                  break;
                case t.Kind.ARGUMENT:
                  (this._argument = null),
                    this._defaultValueStack.pop(),
                    this._inputTypeStack.pop();
                  break;
                case t.Kind.LIST:
                case t.Kind.OBJECT_FIELD:
                  this._defaultValueStack.pop(), this._inputTypeStack.pop();
                  break;
                case t.Kind.ENUM:
                  this._enumValue = null;
              }
            }),
            i
          );
        })();
        function c(e, t, i) {
          var a = i.name.value;
          return a === p.SchemaMetaFieldDef.name && e.getQueryType() === t
            ? p.SchemaMetaFieldDef
            : a === p.TypeMetaFieldDef.name && e.getQueryType() === t
            ? p.TypeMetaFieldDef
            : a === p.TypeNameMetaFieldDef.name && (0, n.isCompositeType)(t)
            ? p.TypeNameMetaFieldDef
            : (0, n.isObjectType)(t) || (0, n.isInterfaceType)(t)
            ? t.getFields()[a]
            : void 0;
        }
        function h(e, t) {
          return {
            enter: function (n) {
              e.enter(n);
              var p = (0, a.getVisitFn)(t, n.kind, !1);
              if (p) {
                var s = p.apply(t, arguments);
                return (
                  void 0 !== s && (e.leave(n), (0, i.isNode)(s) && e.enter(s)),
                  s
                );
              }
            },
            leave: function (i) {
              var n,
                p = (0, a.getVisitFn)(t, i.kind, !0);
              return p && (n = p.apply(t, arguments)), e.leave(i), n;
            },
          };
        }
        exports.TypeInfo = r;
      },
      {
        '../polyfills/find.mjs': 'XSMy',
        '../language/kinds.mjs': 'HZ3k',
        '../language/ast.mjs': 'J7if',
        '../language/visitor.mjs': 'PDqk',
        '../type/definition.mjs': 'ENJe',
        '../type/introspection.mjs': 'Y3NB',
        './typeFromAST.mjs': 'vTpZ',
      },
    ],
    yNJb: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isDefinitionNode = i),
          (exports.isExecutableDefinitionNode = d),
          (exports.isSelectionNode = E),
          (exports.isValueNode = N),
          (exports.isTypeNode = e),
          (exports.isTypeSystemDefinitionNode = T),
          (exports.isTypeDefinitionNode = I),
          (exports.isTypeSystemExtensionNode = t),
          (exports.isTypeExtensionNode = _);
        var n = require('./kinds.mjs');
        function i(n) {
          return d(n) || T(n) || t(n);
        }
        function d(i) {
          return (
            i.kind === n.Kind.OPERATION_DEFINITION ||
            i.kind === n.Kind.FRAGMENT_DEFINITION
          );
        }
        function E(i) {
          return (
            i.kind === n.Kind.FIELD ||
            i.kind === n.Kind.FRAGMENT_SPREAD ||
            i.kind === n.Kind.INLINE_FRAGMENT
          );
        }
        function N(i) {
          return (
            i.kind === n.Kind.VARIABLE ||
            i.kind === n.Kind.INT ||
            i.kind === n.Kind.FLOAT ||
            i.kind === n.Kind.STRING ||
            i.kind === n.Kind.BOOLEAN ||
            i.kind === n.Kind.NULL ||
            i.kind === n.Kind.ENUM ||
            i.kind === n.Kind.LIST ||
            i.kind === n.Kind.OBJECT
          );
        }
        function e(i) {
          return (
            i.kind === n.Kind.NAMED_TYPE ||
            i.kind === n.Kind.LIST_TYPE ||
            i.kind === n.Kind.NON_NULL_TYPE
          );
        }
        function T(i) {
          return (
            i.kind === n.Kind.SCHEMA_DEFINITION ||
            I(i) ||
            i.kind === n.Kind.DIRECTIVE_DEFINITION
          );
        }
        function I(i) {
          return (
            i.kind === n.Kind.SCALAR_TYPE_DEFINITION ||
            i.kind === n.Kind.OBJECT_TYPE_DEFINITION ||
            i.kind === n.Kind.INTERFACE_TYPE_DEFINITION ||
            i.kind === n.Kind.UNION_TYPE_DEFINITION ||
            i.kind === n.Kind.ENUM_TYPE_DEFINITION ||
            i.kind === n.Kind.INPUT_OBJECT_TYPE_DEFINITION
          );
        }
        function t(i) {
          return i.kind === n.Kind.SCHEMA_EXTENSION || _(i);
        }
        function _(i) {
          return (
            i.kind === n.Kind.SCALAR_TYPE_EXTENSION ||
            i.kind === n.Kind.OBJECT_TYPE_EXTENSION ||
            i.kind === n.Kind.INTERFACE_TYPE_EXTENSION ||
            i.kind === n.Kind.UNION_TYPE_EXTENSION ||
            i.kind === n.Kind.ENUM_TYPE_EXTENSION ||
            i.kind === n.Kind.INPUT_OBJECT_TYPE_EXTENSION
          );
        }
      },
      { './kinds.mjs': 'HZ3k' },
    ],
    UQVM: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.ExecutableDefinitionsRule = n);
        var e = require('../../error/GraphQLError.mjs'),
          r = require('../../language/kinds.mjs'),
          i = require('../../language/predicates.mjs');
        function n(n) {
          return {
            Document: function (t) {
              for (var o = 0, a = t.definitions; o < a.length; o++) {
                var u = a[o];
                if (!(0, i.isExecutableDefinitionNode)(u)) {
                  var s =
                    u.kind === r.Kind.SCHEMA_DEFINITION ||
                    u.kind === r.Kind.SCHEMA_EXTENSION
                      ? 'schema'
                      : '"' + u.name.value + '"';
                  n.reportError(
                    new e.GraphQLError(
                      'The '.concat(s, ' definition is not executable.'),
                      u
                    )
                  );
                }
              }
              return !1;
            },
          };
        }
      },
      {
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/kinds.mjs': 'HZ3k',
        '../../language/predicates.mjs': 'yNJb',
      },
    ],
    Jooo: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueOperationNamesRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var n = Object.create(null);
          return {
            OperationDefinition: function (t) {
              var o = t.name;
              return (
                o &&
                  (n[o.value]
                    ? r.reportError(
                        new e.GraphQLError(
                          'There can be only one operation named "'.concat(
                            o.value,
                            '".'
                          ),
                          [n[o.value], o]
                        )
                      )
                    : (n[o.value] = o)),
                !1
              );
            },
            FragmentDefinition: function () {
              return !1;
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    Phe5: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.LoneAnonymousOperationRule = n);
        var e = require('../../error/GraphQLError.mjs'),
          r = require('../../language/kinds.mjs');
        function n(n) {
          var o = 0;
          return {
            Document: function (e) {
              o = e.definitions.filter(function (e) {
                return e.kind === r.Kind.OPERATION_DEFINITION;
              }).length;
            },
            OperationDefinition: function (r) {
              !r.name &&
                o > 1 &&
                n.reportError(
                  new e.GraphQLError(
                    'This anonymous operation must be the only defined operation.',
                    r
                  )
                );
            },
          };
        }
      },
      {
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/kinds.mjs': 'HZ3k',
      },
    ],
    D8Jo: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.SingleFieldSubscriptionsRule = o);
        var e = require('../../error/GraphQLError.mjs');
        function o(o) {
          return {
            OperationDefinition: function (r) {
              'subscription' === r.operation &&
                1 !== r.selectionSet.selections.length &&
                o.reportError(
                  new e.GraphQLError(
                    r.name
                      ? 'Subscription "'.concat(
                          r.name.value,
                          '" must select only one top level field.'
                        )
                      : 'Anonymous Subscription must select only one top level field.',
                    r.selectionSet.selections.slice(1)
                  )
                );
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    esbS: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.KnownTypeNamesRule = s);
        var e = o(require('../../jsutils/didYouMean.mjs')),
          r = o(require('../../jsutils/suggestionList.mjs')),
          t = require('../../error/GraphQLError.mjs'),
          n = require('../../language/predicates.mjs'),
          i = require('../../type/scalars.mjs'),
          a = require('../../type/introspection.mjs');
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function s(i) {
          for (
            var a = i.getSchema(),
              o = a ? a.getTypeMap() : Object.create(null),
              s = Object.create(null),
              p = 0,
              f = i.getDocument().definitions;
            p < f.length;
            p++
          ) {
            var y = f[p];
            (0, n.isTypeDefinitionNode)(y) && (s[y.name.value] = !0);
          }
          var d = Object.keys(o).concat(Object.keys(s));
          return {
            NamedType: function (n, a, p, f, y) {
              var m = n.name.value;
              if (!o[m] && !s[m]) {
                var j,
                  v = null !== (j = y[2]) && void 0 !== j ? j : p,
                  g = null != v && l(v);
                if (g && c(m)) return;
                var T = (0, r.default)(m, g ? u.concat(d) : d);
                i.reportError(
                  new t.GraphQLError(
                    'Unknown type "'.concat(m, '".') + (0, e.default)(T),
                    n
                  )
                );
              }
            },
          };
        }
        var u = []
          .concat(i.specifiedScalarTypes, a.introspectionTypes)
          .map(function (e) {
            return e.name;
          });
        function c(e) {
          return -1 !== u.indexOf(e);
        }
        function l(e) {
          return (
            !Array.isArray(e) &&
            ((0, n.isTypeSystemDefinitionNode)(e) ||
              (0, n.isTypeSystemExtensionNode)(e))
          );
        }
      },
      {
        '../../jsutils/didYouMean.mjs': 'F689',
        '../../jsutils/suggestionList.mjs': 'ZMIN',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/predicates.mjs': 'yNJb',
        '../../type/scalars.mjs': 'rv3t',
        '../../type/introspection.mjs': 'Y3NB',
      },
    ],
    Yv6f: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.FragmentsOnCompositeTypesRule = o);
        var e = require('../../error/GraphQLError.mjs'),
          r = require('../../language/printer.mjs'),
          n = require('../../type/definition.mjs'),
          t = require('../../utilities/typeFromAST.mjs');
        function o(o) {
          return {
            InlineFragment: function (i) {
              var p = i.typeCondition;
              if (p) {
                var a = (0, t.typeFromAST)(o.getSchema(), p);
                if (a && !(0, n.isCompositeType)(a)) {
                  var m = (0, r.print)(p);
                  o.reportError(
                    new e.GraphQLError(
                      'Fragment cannot condition on non composite type "'.concat(
                        m,
                        '".'
                      ),
                      p
                    )
                  );
                }
              }
            },
            FragmentDefinition: function (i) {
              var p = (0, t.typeFromAST)(o.getSchema(), i.typeCondition);
              if (p && !(0, n.isCompositeType)(p)) {
                var a = (0, r.print)(i.typeCondition);
                o.reportError(
                  new e.GraphQLError(
                    'Fragment "'
                      .concat(
                        i.name.value,
                        '" cannot condition on non composite type "'
                      )
                      .concat(a, '".'),
                    i.typeCondition
                  )
                );
              }
            },
          };
        }
      },
      {
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/printer.mjs': 'h28C',
        '../../type/definition.mjs': 'ENJe',
        '../../utilities/typeFromAST.mjs': 'vTpZ',
      },
    ],
    syHi: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.VariablesAreInputTypesRule = n);
        var e = require('../../error/GraphQLError.mjs'),
          r = require('../../language/printer.mjs'),
          t = require('../../type/definition.mjs'),
          i = require('../../utilities/typeFromAST.mjs');
        function n(n) {
          return {
            VariableDefinition: function (a) {
              var p = (0, i.typeFromAST)(n.getSchema(), a.type);
              if (p && !(0, t.isInputType)(p)) {
                var o = a.variable.name.value,
                  u = (0, r.print)(a.type);
                n.reportError(
                  new e.GraphQLError(
                    'Variable "$'
                      .concat(o, '" cannot be non-input type "')
                      .concat(u, '".'),
                    a.type
                  )
                );
              }
            },
          };
        }
      },
      {
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/printer.mjs': 'h28C',
        '../../type/definition.mjs': 'ENJe',
        '../../utilities/typeFromAST.mjs': 'vTpZ',
      },
    ],
    yHyM: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.ScalarLeafsRule = o);
        var e = a(require('../../jsutils/inspect.mjs')),
          r = require('../../error/GraphQLError.mjs'),
          t = require('../../type/definition.mjs');
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function o(a) {
          return {
            Field: function (o) {
              var i = a.getType(),
                n = o.selectionSet;
              if (i)
                if ((0, t.isLeafType)((0, t.getNamedType)(i))) {
                  if (n) {
                    var s = o.name.value,
                      u = (0, e.default)(i);
                    a.reportError(
                      new r.GraphQLError(
                        'Field "'
                          .concat(s, '" must not have a selection since type "')
                          .concat(u, '" has no subfields.'),
                        n
                      )
                    );
                  }
                } else if (!n) {
                  var c = o.name.value,
                    l = (0, e.default)(i);
                  a.reportError(
                    new r.GraphQLError(
                      'Field "'
                        .concat(c, '" of type "')
                        .concat(
                          l,
                          '" must have a selection of subfields. Did you mean "'
                        )
                        .concat(c, ' { ... }"?'),
                      o
                    )
                  );
                }
            },
          };
        }
      },
      {
        '../../jsutils/inspect.mjs': 'DIub',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../type/definition.mjs': 'ENJe',
      },
    ],
    drEE: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.FieldsOnCorrectTypeRule = u);
        var e = i(require('../../polyfills/arrayFrom.mjs')),
          r = i(require('../../jsutils/didYouMean.mjs')),
          t = i(require('../../jsutils/suggestionList.mjs')),
          n = require('../../error/GraphQLError.mjs'),
          a = require('../../type/definition.mjs');
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function u(e) {
          return {
            Field: function (t) {
              var a = e.getParentType();
              if (a && !e.getFieldDef()) {
                var i = e.getSchema(),
                  u = t.name.value,
                  l = (0, r.default)(
                    'to use an inline fragment on',
                    s(i, a, u)
                  );
                '' === l && (l = (0, r.default)(o(a, u))),
                  e.reportError(
                    new n.GraphQLError(
                      'Cannot query field "'
                        .concat(u, '" on type "')
                        .concat(a.name, '".') + l,
                      t
                    )
                  );
              }
            },
          };
        }
        function s(r, t, n) {
          if (!(0, a.isAbstractType)(t)) return [];
          for (
            var i = new Set(),
              u = Object.create(null),
              s = 0,
              o = r.getPossibleTypes(t);
            s < o.length;
            s++
          ) {
            var l = o[s];
            if (l.getFields()[n]) {
              i.add(l), (u[l.name] = 1);
              for (var f = 0, c = l.getInterfaces(); f < c.length; f++) {
                var d,
                  p = c[f];
                p.getFields()[n] &&
                  (i.add(p),
                  (u[p.name] =
                    (null !== (d = u[p.name]) && void 0 !== d ? d : 0) + 1));
              }
            }
          }
          return (0, e.default)(i)
            .sort(function (e, t) {
              var n = u[t.name] - u[e.name];
              return 0 !== n
                ? n
                : (0, a.isInterfaceType)(e) && r.isSubType(e, t)
                ? -1
                : (0, a.isInterfaceType)(t) && r.isSubType(t, e)
                ? 1
                : e.name.localeCompare(t.name);
            })
            .map(function (e) {
              return e.name;
            });
        }
        function o(e, r) {
          if ((0, a.isObjectType)(e) || (0, a.isInterfaceType)(e)) {
            var n = Object.keys(e.getFields());
            return (0, t.default)(r, n);
          }
          return [];
        }
      },
      {
        '../../polyfills/arrayFrom.mjs': 'sZlc',
        '../../jsutils/didYouMean.mjs': 'F689',
        '../../jsutils/suggestionList.mjs': 'ZMIN',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../type/definition.mjs': 'ENJe',
      },
    ],
    tMSV: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueFragmentNamesRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var n = Object.create(null);
          return {
            OperationDefinition: function () {
              return !1;
            },
            FragmentDefinition: function (t) {
              var a = t.name.value;
              return (
                n[a]
                  ? r.reportError(
                      new e.GraphQLError(
                        'There can be only one fragment named "'.concat(
                          a,
                          '".'
                        ),
                        [n[a], t.name]
                      )
                    )
                  : (n[a] = t.name),
                !1
              );
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    faZp: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.KnownFragmentNamesRule = e);
        var r = require('../../error/GraphQLError.mjs');
        function e(e) {
          return {
            FragmentSpread: function (n) {
              var t = n.name.value;
              e.getFragment(t) ||
                e.reportError(
                  new r.GraphQLError(
                    'Unknown fragment "'.concat(t, '".'),
                    n.name
                  )
                );
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    U1wp: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.NoUnusedFragmentsRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var n = [],
            t = [];
          return {
            OperationDefinition: function (e) {
              return n.push(e), !1;
            },
            FragmentDefinition: function (e) {
              return t.push(e), !1;
            },
            Document: {
              leave: function () {
                for (var o = Object.create(null), a = 0; a < n.length; a++)
                  for (
                    var u = n[a],
                      i = 0,
                      s = r.getRecursivelyReferencedFragments(u);
                    i < s.length;
                    i++
                  ) {
                    o[s[i].name.value] = !0;
                  }
                for (var c = 0; c < t.length; c++) {
                  var l = t[c],
                    v = l.name.value;
                  !0 !== o[v] &&
                    r.reportError(
                      new e.GraphQLError(
                        'Fragment "'.concat(v, '" is never used.'),
                        l
                      )
                    );
                }
              },
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    QFy5: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.PossibleFragmentSpreadsRule = i);
        var e = n(require('../../jsutils/inspect.mjs')),
          r = require('../../error/GraphQLError.mjs'),
          t = require('../../type/definition.mjs'),
          a = require('../../utilities/typeFromAST.mjs'),
          o = require('../../utilities/typeComparators.mjs');
        function n(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function i(a) {
          return {
            InlineFragment: function (n) {
              var i = a.getType(),
                p = a.getParentType();
              if (
                (0, t.isCompositeType)(i) &&
                (0, t.isCompositeType)(p) &&
                !(0, o.doTypesOverlap)(a.getSchema(), i, p)
              ) {
                var s = (0, e.default)(p),
                  c = (0, e.default)(i);
                a.reportError(
                  new r.GraphQLError(
                    'Fragment cannot be spread here as objects of type "'
                      .concat(s, '" can never be of type "')
                      .concat(c, '".'),
                    n
                  )
                );
              }
            },
            FragmentSpread: function (t) {
              var n = t.name.value,
                i = p(a, n),
                s = a.getParentType();
              if (i && s && !(0, o.doTypesOverlap)(a.getSchema(), i, s)) {
                var c = (0, e.default)(s),
                  u = (0, e.default)(i);
                a.reportError(
                  new r.GraphQLError(
                    'Fragment "'
                      .concat(n, '" cannot be spread here as objects of type "')
                      .concat(c, '" can never be of type "')
                      .concat(u, '".'),
                    t
                  )
                );
              }
            },
          };
        }
        function p(e, r) {
          var o = e.getFragment(r);
          if (o) {
            var n = (0, a.typeFromAST)(e.getSchema(), o.typeCondition);
            if ((0, t.isCompositeType)(n)) return n;
          }
        }
      },
      {
        '../../jsutils/inspect.mjs': 'DIub',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../type/definition.mjs': 'ENJe',
        '../../utilities/typeFromAST.mjs': 'vTpZ',
        '../../utilities/typeComparators.mjs': 'vGYW',
      },
    ],
    HKpc: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.NoFragmentCyclesRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var n = Object.create(null),
            t = [],
            a = Object.create(null);
          return {
            OperationDefinition: function () {
              return !1;
            },
            FragmentDefinition: function (i) {
              return (
                (function i(o) {
                  if (n[o.name.value]) return;
                  var u = o.name.value;
                  n[u] = !0;
                  var l = r.getFragmentSpreads(o.selectionSet);
                  if (0 === l.length) return;
                  a[u] = t.length;
                  for (var c = 0; c < l.length; c++) {
                    var v = l[c],
                      s = v.name.value,
                      f = a[s];
                    if ((t.push(v), void 0 === f)) {
                      var p = r.getFragment(s);
                      p && i(p);
                    } else {
                      var m = t.slice(f),
                        g = m
                          .slice(0, -1)
                          .map(function (e) {
                            return '"' + e.name.value + '"';
                          })
                          .join(', ');
                      r.reportError(
                        new e.GraphQLError(
                          'Cannot spread fragment "'.concat(
                            s,
                            '" within itself'
                          ) + ('' !== g ? ' via '.concat(g, '.') : '.'),
                          m
                        )
                      );
                    }
                    t.pop();
                  }
                  a[u] = void 0;
                })(i),
                !1
              );
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    P3nJ: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueVariableNamesRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var a = Object.create(null);
          return {
            OperationDefinition: function () {
              a = Object.create(null);
            },
            VariableDefinition: function (n) {
              var i = n.variable.name.value;
              a[i]
                ? r.reportError(
                    new e.GraphQLError(
                      'There can be only one variable named "$'.concat(i, '".'),
                      [a[i], n.variable.name]
                    )
                  )
                : (a[i] = n.variable.name);
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    qROH: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.NoUndefinedVariablesRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var a = Object.create(null);
          return {
            OperationDefinition: {
              enter: function () {
                a = Object.create(null);
              },
              leave: function (n) {
                for (
                  var t = r.getRecursiveVariableUsages(n), i = 0;
                  i < t.length;
                  i++
                ) {
                  var o = t[i].node,
                    l = o.name.value;
                  !0 !== a[l] &&
                    r.reportError(
                      new e.GraphQLError(
                        n.name
                          ? 'Variable "$'
                              .concat(l, '" is not defined by operation "')
                              .concat(n.name.value, '".')
                          : 'Variable "$'.concat(l, '" is not defined.'),
                        [o, n]
                      )
                    );
                }
              },
            },
            VariableDefinition: function (e) {
              a[e.variable.name.value] = !0;
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    UDbU: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.NoUnusedVariablesRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var a = [];
          return {
            OperationDefinition: {
              enter: function () {
                a = [];
              },
              leave: function (n) {
                for (
                  var i = Object.create(null),
                    o = r.getRecursiveVariableUsages(n),
                    t = 0;
                  t < o.length;
                  t++
                ) {
                  i[o[t].node.name.value] = !0;
                }
                for (var u = 0, l = a; u < l.length; u++) {
                  var s = l[u],
                    c = s.variable.name.value;
                  !0 !== i[c] &&
                    r.reportError(
                      new e.GraphQLError(
                        n.name
                          ? 'Variable "$'
                              .concat(c, '" is never used in operation "')
                              .concat(n.name.value, '".')
                          : 'Variable "$'.concat(c, '" is never used.'),
                        s
                      )
                    );
                }
              },
            },
            VariableDefinition: function (e) {
              a.push(e);
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    WWGg: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.KnownDirectivesRule = I);
        var e = E(require('../../jsutils/inspect.mjs')),
          i = E(require('../../jsutils/invariant.mjs')),
          r = require('../../error/GraphQLError.mjs'),
          n = require('../../language/kinds.mjs'),
          t = require('../../language/directiveLocation.mjs'),
          c = require('../../type/directives.mjs');
        function E(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function I(e) {
          for (
            var i = Object.create(null),
              t = e.getSchema(),
              E = t ? t.getDirectives() : c.specifiedDirectives,
              I = 0;
            I < E.length;
            I++
          ) {
            var N = E[I];
            i[N.name] = N.locations;
          }
          for (var o = e.getDocument().definitions, T = 0; T < o.length; T++) {
            var s = o[T];
            s.kind === n.Kind.DIRECTIVE_DEFINITION &&
              (i[s.name.value] = s.locations.map(function (e) {
                return e.value;
              }));
          }
          return {
            Directive: function (n, t, c, E, I) {
              var N = n.name.value,
                o = i[N];
              if (o) {
                var T = a(I);
                T &&
                  -1 === o.indexOf(T) &&
                  e.reportError(
                    new r.GraphQLError(
                      'Directive "@'
                        .concat(N, '" may not be used on ')
                        .concat(T, '.'),
                      n
                    )
                  );
              } else
                e.reportError(
                  new r.GraphQLError('Unknown directive "@'.concat(N, '".'), n)
                );
            },
          };
        }
        function a(e) {
          var r = e[e.length - 1];
          switch ((!Array.isArray(r) || (0, i.default)(0), r.kind)) {
            case n.Kind.OPERATION_DEFINITION:
              return N(r.operation);
            case n.Kind.FIELD:
              return t.DirectiveLocation.FIELD;
            case n.Kind.FRAGMENT_SPREAD:
              return t.DirectiveLocation.FRAGMENT_SPREAD;
            case n.Kind.INLINE_FRAGMENT:
              return t.DirectiveLocation.INLINE_FRAGMENT;
            case n.Kind.FRAGMENT_DEFINITION:
              return t.DirectiveLocation.FRAGMENT_DEFINITION;
            case n.Kind.VARIABLE_DEFINITION:
              return t.DirectiveLocation.VARIABLE_DEFINITION;
            case n.Kind.SCHEMA_DEFINITION:
            case n.Kind.SCHEMA_EXTENSION:
              return t.DirectiveLocation.SCHEMA;
            case n.Kind.SCALAR_TYPE_DEFINITION:
            case n.Kind.SCALAR_TYPE_EXTENSION:
              return t.DirectiveLocation.SCALAR;
            case n.Kind.OBJECT_TYPE_DEFINITION:
            case n.Kind.OBJECT_TYPE_EXTENSION:
              return t.DirectiveLocation.OBJECT;
            case n.Kind.FIELD_DEFINITION:
              return t.DirectiveLocation.FIELD_DEFINITION;
            case n.Kind.INTERFACE_TYPE_DEFINITION:
            case n.Kind.INTERFACE_TYPE_EXTENSION:
              return t.DirectiveLocation.INTERFACE;
            case n.Kind.UNION_TYPE_DEFINITION:
            case n.Kind.UNION_TYPE_EXTENSION:
              return t.DirectiveLocation.UNION;
            case n.Kind.ENUM_TYPE_DEFINITION:
            case n.Kind.ENUM_TYPE_EXTENSION:
              return t.DirectiveLocation.ENUM;
            case n.Kind.ENUM_VALUE_DEFINITION:
              return t.DirectiveLocation.ENUM_VALUE;
            case n.Kind.INPUT_OBJECT_TYPE_DEFINITION:
            case n.Kind.INPUT_OBJECT_TYPE_EXTENSION:
              return t.DirectiveLocation.INPUT_OBJECT;
            case n.Kind.INPUT_VALUE_DEFINITION:
              return e[e.length - 3].kind ===
                n.Kind.INPUT_OBJECT_TYPE_DEFINITION
                ? t.DirectiveLocation.INPUT_FIELD_DEFINITION
                : t.DirectiveLocation.ARGUMENT_DEFINITION;
          }
        }
        function N(r) {
          switch (r) {
            case 'query':
              return t.DirectiveLocation.QUERY;
            case 'mutation':
              return t.DirectiveLocation.MUTATION;
            case 'subscription':
              return t.DirectiveLocation.SUBSCRIPTION;
          }
          (0, i.default)(0, 'Unexpected operation: ' + (0, e.default)(r));
        }
      },
      {
        '../../jsutils/inspect.mjs': 'DIub',
        '../../jsutils/invariant.mjs': 'hYEN',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/kinds.mjs': 'HZ3k',
        '../../language/directiveLocation.mjs': 'kRNH',
        '../../type/directives.mjs': 'sei5',
      },
    ],
    ZRn6: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueDirectivesPerLocationRule = n);
        var e = require('../../error/GraphQLError.mjs'),
          r = require('../../language/kinds.mjs'),
          i = require('../../language/predicates.mjs'),
          t = require('../../type/directives.mjs');
        function n(n) {
          for (
            var a = Object.create(null),
              c = n.getSchema(),
              l = c ? c.getDirectives() : t.specifiedDirectives,
              o = 0;
            o < l.length;
            o++
          ) {
            var s = l[o];
            a[s.name] = !s.isRepeatable;
          }
          for (var u = n.getDocument().definitions, v = 0; v < u.length; v++) {
            var d = u[v];
            d.kind === r.Kind.DIRECTIVE_DEFINITION &&
              (a[d.name.value] = !d.repeatable);
          }
          var p = Object.create(null),
            f = Object.create(null);
          return {
            enter: function (t) {
              if (null != t.directives) {
                var c;
                if (
                  t.kind === r.Kind.SCHEMA_DEFINITION ||
                  t.kind === r.Kind.SCHEMA_EXTENSION
                )
                  c = p;
                else if (
                  (0, i.isTypeDefinitionNode)(t) ||
                  (0, i.isTypeExtensionNode)(t)
                ) {
                  var l = t.name.value;
                  void 0 === (c = f[l]) && (f[l] = c = Object.create(null));
                } else c = Object.create(null);
                for (var o = 0, s = t.directives; o < s.length; o++) {
                  var u = s[o],
                    v = u.name.value;
                  a[v] &&
                    (c[v]
                      ? n.reportError(
                          new e.GraphQLError(
                            'The directive "@'.concat(
                              v,
                              '" can only be used once at this location.'
                            ),
                            [c[v], u]
                          )
                        )
                      : (c[v] = u));
                }
              }
            },
          };
        }
      },
      {
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/kinds.mjs': 'HZ3k',
        '../../language/predicates.mjs': 'yNJb',
        '../../type/directives.mjs': 'sei5',
      },
    ],
    mdbM: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.KnownArgumentNamesRule = s),
          (exports.KnownArgumentNamesOnDirectivesRule = f);
        var e = u(require('../../jsutils/didYouMean.mjs')),
          r = u(require('../../jsutils/suggestionList.mjs')),
          t = require('../../error/GraphQLError.mjs'),
          n = require('../../language/kinds.mjs'),
          a = require('../../type/directives.mjs');
        function u(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function i(e, r) {
          var t = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(e);
            r &&
              (n = n.filter(function (r) {
                return Object.getOwnPropertyDescriptor(e, r).enumerable;
              })),
              t.push.apply(t, n);
          }
          return t;
        }
        function o(e) {
          for (var r = 1; r < arguments.length; r++) {
            var t = null != arguments[r] ? arguments[r] : {};
            r % 2
              ? i(Object(t), !0).forEach(function (r) {
                  c(e, r, t[r]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t))
              : i(Object(t)).forEach(function (r) {
                  Object.defineProperty(
                    e,
                    r,
                    Object.getOwnPropertyDescriptor(t, r)
                  );
                });
          }
          return e;
        }
        function c(e, r, t) {
          return (
            r in e
              ? Object.defineProperty(e, r, {
                  value: t,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[r] = t),
            e
          );
        }
        function s(n) {
          return o(
            o({}, f(n)),
            {},
            {
              Argument: function (a) {
                var u = n.getArgument(),
                  i = n.getFieldDef(),
                  o = n.getParentType();
                if (!u && i && o) {
                  var c = a.name.value,
                    s = i.args.map(function (e) {
                      return e.name;
                    }),
                    f = (0, r.default)(c, s);
                  n.reportError(
                    new t.GraphQLError(
                      'Unknown argument "'
                        .concat(c, '" on field "')
                        .concat(o.name, '.')
                        .concat(i.name, '".') + (0, e.default)(f),
                      a
                    )
                  );
                }
              },
            }
          );
        }
        function f(u) {
          for (
            var i = Object.create(null),
              o = u.getSchema(),
              c = o ? o.getDirectives() : a.specifiedDirectives,
              s = 0;
            s < c.length;
            s++
          ) {
            var f = c[s];
            i[f.name] = f.args.map(function (e) {
              return e.name;
            });
          }
          for (var l = u.getDocument().definitions, m = 0; m < l.length; m++) {
            var g = l[m];
            if (g.kind === n.Kind.DIRECTIVE_DEFINITION) {
              var p,
                v = null !== (p = g.arguments) && void 0 !== p ? p : [];
              i[g.name.value] = v.map(function (e) {
                return e.name.value;
              });
            }
          }
          return {
            Directive: function (n) {
              var a = n.name.value,
                o = i[a];
              if (n.arguments && o)
                for (var c = 0, s = n.arguments; c < s.length; c++) {
                  var f = s[c],
                    l = f.name.value;
                  if (-1 === o.indexOf(l)) {
                    var m = (0, r.default)(l, o);
                    u.reportError(
                      new t.GraphQLError(
                        'Unknown argument "'
                          .concat(l, '" on directive "@')
                          .concat(a, '".') + (0, e.default)(m),
                        f
                      )
                    );
                  }
                }
              return !1;
            },
          };
        }
      },
      {
        '../../jsutils/didYouMean.mjs': 'F689',
        '../../jsutils/suggestionList.mjs': 'ZMIN',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/kinds.mjs': 'HZ3k',
        '../../type/directives.mjs': 'sei5',
      },
    ],
    HEPW: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueArgumentNamesRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var n = Object.create(null);
          return {
            Field: function () {
              n = Object.create(null);
            },
            Directive: function () {
              n = Object.create(null);
            },
            Argument: function (t) {
              var u = t.name.value;
              return (
                n[u]
                  ? r.reportError(
                      new e.GraphQLError(
                        'There can be only one argument named "'.concat(
                          u,
                          '".'
                        ),
                        [n[u], t.name]
                      )
                    )
                  : (n[u] = t.name),
                !1
              );
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    Xva5: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.ValuesOfCorrectTypeRule = l);
        var e = p(require('../../polyfills/objectValues.mjs')),
          r = p(require('../../jsutils/keyMap.mjs')),
          t = p(require('../../jsutils/inspect.mjs')),
          n = p(require('../../jsutils/didYouMean.mjs')),
          a = p(require('../../jsutils/suggestionList.mjs')),
          u = require('../../error/GraphQLError.mjs'),
          o = require('../../language/printer.mjs'),
          i = require('../../type/definition.mjs');
        function p(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function l(p) {
          return {
            ListValue: function (e) {
              var r = (0, i.getNullableType)(p.getParentInputType());
              if (!(0, i.isListType)(r)) return c(p, e), !1;
            },
            ObjectValue: function (n) {
              var a = (0, i.getNamedType)(p.getInputType());
              if (!(0, i.isInputObjectType)(a)) return c(p, n), !1;
              for (
                var o = (0, r.default)(n.fields, function (e) {
                    return e.name.value;
                  }),
                  l = 0,
                  f = (0, e.default)(a.getFields());
                l < f.length;
                l++
              ) {
                var s = f[l];
                if (!o[s.name] && (0, i.isRequiredInputField)(s)) {
                  var d = (0, t.default)(s.type);
                  p.reportError(
                    new u.GraphQLError(
                      'Field "'
                        .concat(a.name, '.')
                        .concat(s.name, '" of required type "')
                        .concat(d, '" was not provided.'),
                      n
                    )
                  );
                }
              }
            },
            ObjectField: function (e) {
              var r = (0, i.getNamedType)(p.getParentInputType());
              if (!p.getInputType() && (0, i.isInputObjectType)(r)) {
                var t = (0, a.default)(
                  e.name.value,
                  Object.keys(r.getFields())
                );
                p.reportError(
                  new u.GraphQLError(
                    'Field "'
                      .concat(e.name.value, '" is not defined by type "')
                      .concat(r.name, '".') + (0, n.default)(t),
                    e
                  )
                );
              }
            },
            NullValue: function (e) {
              var r = p.getInputType();
              (0, i.isNonNullType)(r) &&
                p.reportError(
                  new u.GraphQLError(
                    'Expected value of type "'
                      .concat((0, t.default)(r), '", found ')
                      .concat((0, o.print)(e), '.'),
                    e
                  )
                );
            },
            EnumValue: function (e) {
              return c(p, e);
            },
            IntValue: function (e) {
              return c(p, e);
            },
            FloatValue: function (e) {
              return c(p, e);
            },
            StringValue: function (e) {
              return c(p, e);
            },
            BooleanValue: function (e) {
              return c(p, e);
            },
          };
        }
        function c(e, r) {
          var n = e.getInputType();
          if (n) {
            var a = (0, i.getNamedType)(n);
            if ((0, i.isLeafType)(a))
              try {
                if (void 0 === a.parseLiteral(r, void 0)) {
                  var p = (0, t.default)(n);
                  e.reportError(
                    new u.GraphQLError(
                      'Expected value of type "'
                        .concat(p, '", found ')
                        .concat((0, o.print)(r), '.'),
                      r
                    )
                  );
                }
              } catch (f) {
                var l = (0, t.default)(n);
                f instanceof u.GraphQLError
                  ? e.reportError(f)
                  : e.reportError(
                      new u.GraphQLError(
                        'Expected value of type "'
                          .concat(l, '", found ')
                          .concat((0, o.print)(r), '; ') + f.message,
                        r,
                        void 0,
                        void 0,
                        void 0,
                        f
                      )
                    );
              }
            else {
              var c = (0, t.default)(n);
              e.reportError(
                new u.GraphQLError(
                  'Expected value of type "'
                    .concat(c, '", found ')
                    .concat((0, o.print)(r), '.'),
                  r
                )
              );
            }
          }
        }
      },
      {
        '../../polyfills/objectValues.mjs': 'pwpl',
        '../../jsutils/keyMap.mjs': 'pTwJ',
        '../../jsutils/inspect.mjs': 'DIub',
        '../../jsutils/didYouMean.mjs': 'F689',
        '../../jsutils/suggestionList.mjs': 'ZMIN',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/printer.mjs': 'h28C',
        '../../type/definition.mjs': 'ENJe',
      },
    ],
    p3wD: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.ProvidedRequiredArgumentsRule = f),
          (exports.ProvidedRequiredArgumentsOnDirectivesRule = d);
        var e = o(require('../../jsutils/inspect.mjs')),
          r = o(require('../../jsutils/keyMap.mjs')),
          t = require('../../error/GraphQLError.mjs'),
          n = require('../../language/kinds.mjs'),
          i = require('../../language/printer.mjs'),
          u = require('../../type/directives.mjs'),
          a = require('../../type/definition.mjs');
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function c(e, r) {
          var t = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(e);
            r &&
              (n = n.filter(function (r) {
                return Object.getOwnPropertyDescriptor(e, r).enumerable;
              })),
              t.push.apply(t, n);
          }
          return t;
        }
        function l(e) {
          for (var r = 1; r < arguments.length; r++) {
            var t = null != arguments[r] ? arguments[r] : {};
            r % 2
              ? c(Object(t), !0).forEach(function (r) {
                  s(e, r, t[r]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t))
              : c(Object(t)).forEach(function (r) {
                  Object.defineProperty(
                    e,
                    r,
                    Object.getOwnPropertyDescriptor(t, r)
                  );
                });
          }
          return e;
        }
        function s(e, r, t) {
          return (
            r in e
              ? Object.defineProperty(e, r, {
                  value: t,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[r] = t),
            e
          );
        }
        function f(n) {
          return l(
            l({}, d(n)),
            {},
            {
              Field: {
                leave: function (i) {
                  var u,
                    o = n.getFieldDef();
                  if (!o) return !1;
                  for (
                    var c = null !== (u = i.arguments) && void 0 !== u ? u : [],
                      l = (0, r.default)(c, function (e) {
                        return e.name.value;
                      }),
                      s = 0,
                      f = o.args;
                    s < f.length;
                    s++
                  ) {
                    var d = f[s];
                    if (!l[d.name] && (0, a.isRequiredArgument)(d)) {
                      var p = (0, e.default)(d.type);
                      n.reportError(
                        new t.GraphQLError(
                          'Field "'
                            .concat(o.name, '" argument "')
                            .concat(d.name, '" of type "')
                            .concat(
                              p,
                              '" is required, but it was not provided.'
                            ),
                          i
                        )
                      );
                    }
                  }
                },
              },
            }
          );
        }
        function d(o) {
          for (
            var c = Object.create(null),
              l = o.getSchema(),
              s = l ? l.getDirectives() : u.specifiedDirectives,
              f = 0;
            f < s.length;
            f++
          ) {
            var d = s[f];
            c[d.name] = (0, r.default)(
              d.args.filter(a.isRequiredArgument),
              function (e) {
                return e.name;
              }
            );
          }
          for (var v = o.getDocument().definitions, m = 0; m < v.length; m++) {
            var g = v[m];
            if (g.kind === n.Kind.DIRECTIVE_DEFINITION) {
              var j,
                O = null !== (j = g.arguments) && void 0 !== j ? j : [];
              c[g.name.value] = (0, r.default)(O.filter(p), function (e) {
                return e.name.value;
              });
            }
          }
          return {
            Directive: {
              leave: function (n) {
                var u = n.name.value,
                  l = c[u];
                if (l)
                  for (
                    var s,
                      f = null !== (s = n.arguments) && void 0 !== s ? s : [],
                      d = (0, r.default)(f, function (e) {
                        return e.name.value;
                      }),
                      p = 0,
                      v = Object.keys(l);
                    p < v.length;
                    p++
                  ) {
                    var m = v[p];
                    if (!d[m]) {
                      var g = l[m].type,
                        j = (0, a.isType)(g)
                          ? (0, e.default)(g)
                          : (0, i.print)(g);
                      o.reportError(
                        new t.GraphQLError(
                          'Directive "@'
                            .concat(u, '" argument "')
                            .concat(m, '" of type "')
                            .concat(
                              j,
                              '" is required, but it was not provided.'
                            ),
                          n
                        )
                      );
                    }
                  }
              },
            },
          };
        }
        function p(e) {
          return e.type.kind === n.Kind.NON_NULL_TYPE && null == e.defaultValue;
        }
      },
      {
        '../../jsutils/inspect.mjs': 'DIub',
        '../../jsutils/keyMap.mjs': 'pTwJ',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/kinds.mjs': 'HZ3k',
        '../../language/printer.mjs': 'h28C',
        '../../type/directives.mjs': 'sei5',
        '../../type/definition.mjs': 'ENJe',
      },
    ],
    S8fJ: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.VariablesInAllowedPositionRule = o);
        var e = u(require('../../jsutils/inspect.mjs')),
          r = require('../../error/GraphQLError.mjs'),
          i = require('../../language/kinds.mjs'),
          t = require('../../type/definition.mjs'),
          n = require('../../utilities/typeFromAST.mjs'),
          a = require('../../utilities/typeComparators.mjs');
        function u(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function o(i) {
          var t = Object.create(null);
          return {
            OperationDefinition: {
              enter: function () {
                t = Object.create(null);
              },
              leave: function (a) {
                for (
                  var u = i.getRecursiveVariableUsages(a), o = 0;
                  o < u.length;
                  o++
                ) {
                  var s = u[o],
                    p = s.node,
                    f = s.type,
                    c = s.defaultValue,
                    d = p.name.value,
                    y = t[d];
                  if (y && f) {
                    var v = i.getSchema(),
                      m = (0, n.typeFromAST)(v, y.type);
                    if (m && !l(v, m, y.defaultValue, f, c)) {
                      var b = (0, e.default)(m),
                        j = (0, e.default)(f);
                      i.reportError(
                        new r.GraphQLError(
                          'Variable "$'
                            .concat(d, '" of type "')
                            .concat(b, '" used in position expecting type "')
                            .concat(j, '".'),
                          [y, p]
                        )
                      );
                    }
                  }
                }
              },
            },
            VariableDefinition: function (e) {
              t[e.variable.name.value] = e;
            },
          };
        }
        function l(e, r, n, u, o) {
          if ((0, t.isNonNullType)(u) && !(0, t.isNonNullType)(r)) {
            if (!(null != n && n.kind !== i.Kind.NULL) && !(void 0 !== o))
              return !1;
            var l = u.ofType;
            return (0, a.isTypeSubTypeOf)(e, r, l);
          }
          return (0, a.isTypeSubTypeOf)(e, r, u);
        }
      },
      {
        '../../jsutils/inspect.mjs': 'DIub',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/kinds.mjs': 'HZ3k',
        '../../type/definition.mjs': 'ENJe',
        '../../utilities/typeFromAST.mjs': 'vTpZ',
        '../../utilities/typeComparators.mjs': 'vGYW',
      },
    ],
    xjBd: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.OverlappingFieldsCanBeMergedRule = c);
        var e = l(require('../../polyfills/find.mjs')),
          t = l(require('../../polyfills/objectEntries.mjs')),
          r = l(require('../../jsutils/inspect.mjs')),
          n = require('../../error/GraphQLError.mjs'),
          a = require('../../language/kinds.mjs'),
          i = require('../../language/printer.mjs'),
          o = require('../../type/definition.mjs'),
          u = require('../../utilities/typeFromAST.mjs');
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function f(e) {
          return Array.isArray(e)
            ? e
                .map(function (e) {
                  var t = e[0],
                    r = e[1];
                  return 'subfields "'.concat(t, '" conflict because ') + f(r);
                })
                .join(' and ')
            : e;
        }
        function c(e) {
          var t = new N(),
            r = new Map();
          return {
            SelectionSet: function (a) {
              for (
                var i = s(e, r, t, e.getParentType(), a), o = 0;
                o < i.length;
                o++
              ) {
                var u = i[o],
                  l = u[0],
                  c = l[0],
                  v = l[1],
                  d = u[1],
                  p = u[2],
                  g = f(v);
                e.reportError(
                  new n.GraphQLError(
                    'Fields "'
                      .concat(c, '" conflict because ')
                      .concat(
                        g,
                        '. Use different aliases on the fields to fetch both if this was intentional.'
                      ),
                    d.concat(p)
                  )
                );
              }
            },
          };
        }
        function s(e, t, r, n, a) {
          var i = [],
            o = b(e, t, n, a),
            u = o[0],
            l = o[1];
          if ((g(e, i, t, r, u), 0 !== l.length))
            for (var f = 0; f < l.length; f++) {
              v(e, i, t, r, !1, u, l[f]);
              for (var c = f + 1; c < l.length; c++)
                d(e, i, t, r, !1, l[f], l[c]);
            }
          return i;
        }
        function v(e, t, r, n, a, i, o) {
          var u = e.getFragment(o);
          if (u) {
            var l = S(e, r, u),
              f = l[0],
              c = l[1];
            if (i !== f) {
              h(e, t, r, n, a, i, f);
              for (var s = 0; s < c.length; s++) v(e, t, r, n, a, i, c[s]);
            }
          }
        }
        function d(e, t, r, n, a, i, o) {
          if (i !== o && !n.has(i, o, a)) {
            n.add(i, o, a);
            var u = e.getFragment(i),
              l = e.getFragment(o);
            if (u && l) {
              var f = S(e, r, u),
                c = f[0],
                s = f[1],
                v = S(e, r, l),
                p = v[0],
                g = v[1];
              h(e, t, r, n, a, c, p);
              for (var y = 0; y < g.length; y++) d(e, t, r, n, a, i, g[y]);
              for (var m = 0; m < s.length; m++) d(e, t, r, n, a, s[m], o);
            }
          }
        }
        function p(e, t, r, n, a, i, o, u) {
          var l = [],
            f = b(e, t, a, i),
            c = f[0],
            s = f[1],
            p = b(e, t, o, u),
            g = p[0],
            y = p[1];
          if ((h(e, l, t, r, n, c, g), 0 !== y.length))
            for (var m = 0; m < y.length; m++) v(e, l, t, r, n, c, y[m]);
          if (0 !== s.length)
            for (var T = 0; T < s.length; T++) v(e, l, t, r, n, g, s[T]);
          for (var j = 0; j < s.length; j++)
            for (var S = 0; S < y.length; S++) d(e, l, t, r, n, s[j], y[S]);
          return l;
        }
        function g(e, r, n, a, i) {
          for (var o = 0, u = (0, t.default)(i); o < u.length; o++) {
            var l = u[o],
              f = l[0],
              c = l[1];
            if (c.length > 1)
              for (var s = 0; s < c.length; s++)
                for (var v = s + 1; v < c.length; v++) {
                  var d = y(e, n, a, !1, f, c[s], c[v]);
                  d && r.push(d);
                }
          }
        }
        function h(e, t, r, n, a, i, o) {
          for (var u = 0, l = Object.keys(i); u < l.length; u++) {
            var f = l[u],
              c = o[f];
            if (c)
              for (var s = i[f], v = 0; v < s.length; v++)
                for (var d = 0; d < c.length; d++) {
                  var p = y(e, r, n, a, f, s[v], c[d]);
                  p && t.push(p);
                }
          }
        }
        function y(e, t, n, a, i, u, l) {
          var f = u[0],
            c = u[1],
            s = u[2],
            v = l[0],
            d = l[1],
            g = l[2],
            h =
              a ||
              (f !== v && (0, o.isObjectType)(f) && (0, o.isObjectType)(v));
          if (!h) {
            var y,
              T,
              b = c.name.value,
              S = d.name.value;
            if (b !== S)
              return [
                [
                  i,
                  '"'.concat(b, '" and "').concat(S, '" are different fields'),
                ],
                [c],
                [d],
              ];
            if (
              !m(
                null !== (y = c.arguments) && void 0 !== y ? y : [],
                null !== (T = d.arguments) && void 0 !== T ? T : []
              )
            )
              return [[i, 'they have differing arguments'], [c], [d]];
          }
          var _ = null == s ? void 0 : s.type,
            N = null == g ? void 0 : g.type;
          if (_ && N && j(_, N))
            return [
              [
                i,
                'they return conflicting types "'
                  .concat((0, r.default)(_), '" and "')
                  .concat((0, r.default)(N), '"'),
              ],
              [c],
              [d],
            ];
          var A = c.selectionSet,
            O = d.selectionSet;
          return A && O
            ? F(
                p(
                  e,
                  t,
                  n,
                  h,
                  (0, o.getNamedType)(_),
                  A,
                  (0, o.getNamedType)(N),
                  O
                ),
                i,
                c,
                d
              )
            : void 0;
        }
        function m(t, r) {
          return (
            t.length === r.length &&
            t.every(function (t) {
              var n = (0, e.default)(r, function (e) {
                return e.name.value === t.name.value;
              });
              return !!n && T(t.value, n.value);
            })
          );
        }
        function T(e, t) {
          return (0, i.print)(e) === (0, i.print)(t);
        }
        function j(e, t) {
          return (0, o.isListType)(e)
            ? !(0, o.isListType)(t) || j(e.ofType, t.ofType)
            : !!(0, o.isListType)(t) ||
                ((0, o.isNonNullType)(e)
                  ? !(0, o.isNonNullType)(t) || j(e.ofType, t.ofType)
                  : !!(0, o.isNonNullType)(t) ||
                    (!(!(0, o.isLeafType)(e) && !(0, o.isLeafType)(t)) &&
                      e !== t));
        }
        function b(e, t, r, n) {
          var a = t.get(n);
          if (!a) {
            var i = Object.create(null),
              o = Object.create(null);
            _(e, r, n, i, o), (a = [i, Object.keys(o)]), t.set(n, a);
          }
          return a;
        }
        function S(e, t, r) {
          var n = t.get(r.selectionSet);
          if (n) return n;
          var a = (0, u.typeFromAST)(e.getSchema(), r.typeCondition);
          return b(e, t, a, r.selectionSet);
        }
        function _(e, t, r, n, i) {
          for (var l = 0, f = r.selections; l < f.length; l++) {
            var c = f[l];
            switch (c.kind) {
              case a.Kind.FIELD:
                var s = c.name.value,
                  v = void 0;
                ((0, o.isObjectType)(t) || (0, o.isInterfaceType)(t)) &&
                  (v = t.getFields()[s]);
                var d = c.alias ? c.alias.value : s;
                n[d] || (n[d] = []), n[d].push([t, c, v]);
                break;
              case a.Kind.FRAGMENT_SPREAD:
                i[c.name.value] = !0;
                break;
              case a.Kind.INLINE_FRAGMENT:
                var p = c.typeCondition,
                  g = p ? (0, u.typeFromAST)(e.getSchema(), p) : t;
                _(e, g, c.selectionSet, n, i);
            }
          }
        }
        function F(e, t, r, n) {
          if (e.length > 0)
            return [
              [
                t,
                e.map(function (e) {
                  return e[0];
                }),
              ],
              e.reduce(
                function (e, t) {
                  var r = t[1];
                  return e.concat(r);
                },
                [r]
              ),
              e.reduce(
                function (e, t) {
                  var r = t[2];
                  return e.concat(r);
                },
                [n]
              ),
            ];
        }
        var N = (function () {
          function e() {
            this._data = Object.create(null);
          }
          var t = e.prototype;
          return (
            (t.has = function (e, t, r) {
              var n = this._data[e],
                a = n && n[t];
              return void 0 !== a && (!1 !== r || !1 === a);
            }),
            (t.add = function (e, t, r) {
              this._pairSetAdd(e, t, r), this._pairSetAdd(t, e, r);
            }),
            (t._pairSetAdd = function (e, t, r) {
              var n = this._data[e];
              n || ((n = Object.create(null)), (this._data[e] = n)), (n[t] = r);
            }),
            e
          );
        })();
      },
      {
        '../../polyfills/find.mjs': 'XSMy',
        '../../polyfills/objectEntries.mjs': 'wKrj',
        '../../jsutils/inspect.mjs': 'DIub',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/kinds.mjs': 'HZ3k',
        '../../language/printer.mjs': 'h28C',
        '../../type/definition.mjs': 'ENJe',
        '../../utilities/typeFromAST.mjs': 'vTpZ',
      },
    ],
    ujOt: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueInputFieldNamesRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var n = [],
            t = Object.create(null);
          return {
            ObjectValue: {
              enter: function () {
                n.push(t), (t = Object.create(null));
              },
              leave: function () {
                t = n.pop();
              },
            },
            ObjectField: function (n) {
              var a = n.name.value;
              t[a]
                ? r.reportError(
                    new e.GraphQLError(
                      'There can be only one input field named "'.concat(
                        a,
                        '".'
                      ),
                      [t[a], n.name]
                    )
                  )
                : (t[a] = n.name);
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    akcG: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.LoneSchemaDefinitionRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var n,
            o,
            i,
            t = r.getSchema(),
            u =
              null !==
                (n =
                  null !==
                    (o =
                      null !== (i = null == t ? void 0 : t.astNode) &&
                      void 0 !== i
                        ? i
                        : null == t
                        ? void 0
                        : t.getQueryType()) && void 0 !== o
                    ? o
                    : null == t
                    ? void 0
                    : t.getMutationType()) && void 0 !== n
                ? n
                : null == t
                ? void 0
                : t.getSubscriptionType(),
            l = 0;
          return {
            SchemaDefinition: function (n) {
              u
                ? r.reportError(
                    new e.GraphQLError(
                      'Cannot define a new schema within a schema extension.',
                      n
                    )
                  )
                : (l > 0 &&
                    r.reportError(
                      new e.GraphQLError(
                        'Must provide only one schema definition.',
                        n
                      )
                    ),
                  ++l);
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    L5TH: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueOperationTypesRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var t = r.getSchema(),
            n = Object.create(null),
            o = t
              ? {
                  query: t.getQueryType(),
                  mutation: t.getMutationType(),
                  subscription: t.getSubscriptionType(),
                }
              : {};
          return { SchemaDefinition: a, SchemaExtension: a };
          function a(t) {
            for (
              var a,
                i = null !== (a = t.operationTypes) && void 0 !== a ? a : [],
                p = 0;
              p < i.length;
              p++
            ) {
              var c = i[p],
                u = c.operation,
                s = n[u];
              o[u]
                ? r.reportError(
                    new e.GraphQLError(
                      'Type for '.concat(
                        u,
                        ' already defined in the schema. It cannot be redefined.'
                      ),
                      c
                    )
                  )
                : s
                ? r.reportError(
                    new e.GraphQLError(
                      'There can be only one '.concat(u, ' type in schema.'),
                      [s, c]
                    )
                  )
                : (n[u] = c);
            }
            return !1;
          }
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    U1Gu: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueTypeNamesRule = n);
        var e = require('../../error/GraphQLError.mjs');
        function n(n) {
          var r = Object.create(null),
            t = n.getSchema();
          return {
            ScalarTypeDefinition: i,
            ObjectTypeDefinition: i,
            InterfaceTypeDefinition: i,
            UnionTypeDefinition: i,
            EnumTypeDefinition: i,
            InputObjectTypeDefinition: i,
          };
          function i(i) {
            var o = i.name.value;
            if (null == t || !t.getType(o))
              return (
                r[o]
                  ? n.reportError(
                      new e.GraphQLError(
                        'There can be only one type named "'.concat(o, '".'),
                        [r[o], i.name]
                      )
                    )
                  : (r[o] = i.name),
                !1
              );
            n.reportError(
              new e.GraphQLError(
                'Type "'.concat(
                  o,
                  '" already exists in the schema. It cannot also be defined in this type definition.'
                ),
                i.name
              )
            );
          }
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    g8o6: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueEnumValueNamesRule = n);
        var e = require('../../error/GraphQLError.mjs'),
          r = require('../../type/definition.mjs');
        function n(n) {
          var a = n.getSchema(),
            t = a ? a.getTypeMap() : Object.create(null),
            o = Object.create(null);
          return { EnumTypeDefinition: u, EnumTypeExtension: u };
          function u(a) {
            var u,
              c = a.name.value;
            o[c] || (o[c] = Object.create(null));
            for (
              var i = null !== (u = a.values) && void 0 !== u ? u : [],
                l = o[c],
                s = 0;
              s < i.length;
              s++
            ) {
              var m = i[s],
                p = m.name.value,
                v = t[c];
              (0, r.isEnumType)(v) && v.getValue(p)
                ? n.reportError(
                    new e.GraphQLError(
                      'Enum value "'
                        .concat(c, '.')
                        .concat(
                          p,
                          '" already exists in the schema. It cannot also be defined in this type extension.'
                        ),
                      m.name
                    )
                  )
                : l[p]
                ? n.reportError(
                    new e.GraphQLError(
                      'Enum value "'
                        .concat(c, '.')
                        .concat(p, '" can only be defined once.'),
                      [l[p], m.name]
                    )
                  )
                : (l[p] = m.name);
            }
            return !1;
          }
        }
      },
      {
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../type/definition.mjs': 'ENJe',
      },
    ],
    Ppte: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueFieldDefinitionNamesRule = t);
        var e = require('../../error/GraphQLError.mjs'),
          n = require('../../type/definition.mjs');
        function t(n) {
          var t = n.getSchema(),
            i = t ? t.getTypeMap() : Object.create(null),
            a = Object.create(null);
          return {
            InputObjectTypeDefinition: o,
            InputObjectTypeExtension: o,
            InterfaceTypeDefinition: o,
            InterfaceTypeExtension: o,
            ObjectTypeDefinition: o,
            ObjectTypeExtension: o,
          };
          function o(t) {
            var o,
              c = t.name.value;
            a[c] || (a[c] = Object.create(null));
            for (
              var l = null !== (o = t.fields) && void 0 !== o ? o : [],
                p = a[c],
                u = 0;
              u < l.length;
              u++
            ) {
              var s = l[u],
                f = s.name.value;
              r(i[c], f)
                ? n.reportError(
                    new e.GraphQLError(
                      'Field "'
                        .concat(c, '.')
                        .concat(
                          f,
                          '" already exists in the schema. It cannot also be defined in this type extension.'
                        ),
                      s.name
                    )
                  )
                : p[f]
                ? n.reportError(
                    new e.GraphQLError(
                      'Field "'
                        .concat(c, '.')
                        .concat(f, '" can only be defined once.'),
                      [p[f], s.name]
                    )
                  )
                : (p[f] = s.name);
            }
            return !1;
          }
        }
        function r(e, t) {
          return (
            !!(
              (0, n.isObjectType)(e) ||
              (0, n.isInterfaceType)(e) ||
              (0, n.isInputObjectType)(e)
            ) && null != e.getFields()[t]
          );
        }
      },
      {
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../type/definition.mjs': 'ENJe',
      },
    ],
    rUoz: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.UniqueDirectiveNamesRule = r);
        var e = require('../../error/GraphQLError.mjs');
        function r(r) {
          var n = Object.create(null),
            t = r.getSchema();
          return {
            DirectiveDefinition: function (a) {
              var i = a.name.value;
              if (null == t || !t.getDirective(i))
                return (
                  n[i]
                    ? r.reportError(
                        new e.GraphQLError(
                          'There can be only one directive named "@'.concat(
                            i,
                            '".'
                          ),
                          [n[i], a.name]
                        )
                      )
                    : (n[i] = a.name),
                  !1
                );
              r.reportError(
                new e.GraphQLError(
                  'Directive "@'.concat(
                    i,
                    '" already exists in the schema. It cannot be redefined.'
                  ),
                  a.name
                )
              );
            },
          };
        }
      },
      { '../../error/GraphQLError.mjs': 'nXOl' },
    ],
    a9uB: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.PossibleTypeExtensionsRule = _);
        var e,
          n = u(require('../../jsutils/inspect.mjs')),
          E = u(require('../../jsutils/invariant.mjs')),
          i = u(require('../../jsutils/didYouMean.mjs')),
          t = u(require('../../jsutils/suggestionList.mjs')),
          r = require('../../error/GraphQLError.mjs'),
          T = require('../../language/kinds.mjs'),
          N = require('../../language/predicates.mjs'),
          a = require('../../type/definition.mjs');
        function u(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function s(e, n, E) {
          return (
            n in e
              ? Object.defineProperty(e, n, {
                  value: E,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[n] = E),
            e
          );
        }
        function _(e) {
          for (
            var n = e.getSchema(),
              E = Object.create(null),
              T = 0,
              a = e.getDocument().definitions;
            T < a.length;
            T++
          ) {
            var u = a[T];
            (0, N.isTypeDefinitionNode)(u) && (E[u.name.value] = u);
          }
          return {
            ScalarTypeExtension: s,
            ObjectTypeExtension: s,
            InterfaceTypeExtension: s,
            UnionTypeExtension: s,
            EnumTypeExtension: s,
            InputObjectTypeExtension: s,
          };
          function s(T) {
            var N,
              a = T.name.value,
              u = E[a],
              s = null == n ? void 0 : n.getType(a);
            if ((u ? (N = d[u.kind]) : s && (N = o(s)), N)) {
              if (N !== T.kind) {
                var _ = I(T.kind);
                e.reportError(
                  new r.GraphQLError(
                    'Cannot extend non-'.concat(_, ' type "').concat(a, '".'),
                    u ? [u, T] : T
                  )
                );
              }
            } else {
              var c = Object.keys(E);
              n && (c = c.concat(Object.keys(n.getTypeMap())));
              var O = (0, t.default)(a, c);
              e.reportError(
                new r.GraphQLError(
                  'Cannot extend type "'.concat(
                    a,
                    '" because it is not defined.'
                  ) + (0, i.default)(O),
                  T.name
                )
              );
            }
          }
        }
        var d =
          (s(
            (e = {}),
            T.Kind.SCALAR_TYPE_DEFINITION,
            T.Kind.SCALAR_TYPE_EXTENSION
          ),
          s(e, T.Kind.OBJECT_TYPE_DEFINITION, T.Kind.OBJECT_TYPE_EXTENSION),
          s(
            e,
            T.Kind.INTERFACE_TYPE_DEFINITION,
            T.Kind.INTERFACE_TYPE_EXTENSION
          ),
          s(e, T.Kind.UNION_TYPE_DEFINITION, T.Kind.UNION_TYPE_EXTENSION),
          s(e, T.Kind.ENUM_TYPE_DEFINITION, T.Kind.ENUM_TYPE_EXTENSION),
          s(
            e,
            T.Kind.INPUT_OBJECT_TYPE_DEFINITION,
            T.Kind.INPUT_OBJECT_TYPE_EXTENSION
          ),
          e);
        function o(e) {
          return (0, a.isScalarType)(e)
            ? T.Kind.SCALAR_TYPE_EXTENSION
            : (0, a.isObjectType)(e)
            ? T.Kind.OBJECT_TYPE_EXTENSION
            : (0, a.isInterfaceType)(e)
            ? T.Kind.INTERFACE_TYPE_EXTENSION
            : (0, a.isUnionType)(e)
            ? T.Kind.UNION_TYPE_EXTENSION
            : (0, a.isEnumType)(e)
            ? T.Kind.ENUM_TYPE_EXTENSION
            : (0, a.isInputObjectType)(e)
            ? T.Kind.INPUT_OBJECT_TYPE_EXTENSION
            : void (0, E.default)(0, 'Unexpected type: ' + (0, n.default)(e));
        }
        function I(e) {
          switch (e) {
            case T.Kind.SCALAR_TYPE_EXTENSION:
              return 'scalar';
            case T.Kind.OBJECT_TYPE_EXTENSION:
              return 'object';
            case T.Kind.INTERFACE_TYPE_EXTENSION:
              return 'interface';
            case T.Kind.UNION_TYPE_EXTENSION:
              return 'union';
            case T.Kind.ENUM_TYPE_EXTENSION:
              return 'enum';
            case T.Kind.INPUT_OBJECT_TYPE_EXTENSION:
              return 'input object';
          }
          (0, E.default)(0, 'Unexpected kind: ' + (0, n.default)(e));
        }
      },
      {
        '../../jsutils/inspect.mjs': 'DIub',
        '../../jsutils/invariant.mjs': 'hYEN',
        '../../jsutils/didYouMean.mjs': 'F689',
        '../../jsutils/suggestionList.mjs': 'ZMIN',
        '../../error/GraphQLError.mjs': 'nXOl',
        '../../language/kinds.mjs': 'HZ3k',
        '../../language/predicates.mjs': 'yNJb',
        '../../type/definition.mjs': 'ENJe',
      },
    ],
    WPQ4: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.specifiedSDLRules = exports.specifiedRules = void 0);
        var e = require('./rules/ExecutableDefinitionsRule.mjs'),
          u = require('./rules/UniqueOperationNamesRule.mjs'),
          r = require('./rules/LoneAnonymousOperationRule.mjs'),
          s = require('./rules/SingleFieldSubscriptionsRule.mjs'),
          i = require('./rules/KnownTypeNamesRule.mjs'),
          l = require('./rules/FragmentsOnCompositeTypesRule.mjs'),
          n = require('./rules/VariablesAreInputTypesRule.mjs'),
          a = require('./rules/ScalarLeafsRule.mjs'),
          m = require('./rules/FieldsOnCorrectTypeRule.mjs'),
          R = require('./rules/UniqueFragmentNamesRule.mjs'),
          o = require('./rules/KnownFragmentNamesRule.mjs'),
          t = require('./rules/NoUnusedFragmentsRule.mjs'),
          q = require('./rules/PossibleFragmentSpreadsRule.mjs'),
          p = require('./rules/NoFragmentCyclesRule.mjs'),
          d = require('./rules/UniqueVariableNamesRule.mjs'),
          j = require('./rules/NoUndefinedVariablesRule.mjs'),
          N = require('./rules/NoUnusedVariablesRule.mjs'),
          c = require('./rules/KnownDirectivesRule.mjs'),
          U = require('./rules/UniqueDirectivesPerLocationRule.mjs'),
          g = require('./rules/KnownArgumentNamesRule.mjs'),
          F = require('./rules/UniqueArgumentNamesRule.mjs'),
          y = require('./rules/ValuesOfCorrectTypeRule.mjs'),
          b = require('./rules/ProvidedRequiredArgumentsRule.mjs'),
          f = require('./rules/VariablesInAllowedPositionRule.mjs'),
          v = require('./rules/OverlappingFieldsCanBeMergedRule.mjs'),
          O = require('./rules/UniqueInputFieldNamesRule.mjs'),
          D = require('./rules/LoneSchemaDefinitionRule.mjs'),
          T = require('./rules/UniqueOperationTypesRule.mjs'),
          A = require('./rules/UniqueTypeNamesRule.mjs'),
          V = require('./rules/UniqueEnumValueNamesRule.mjs'),
          w = require('./rules/UniqueFieldDefinitionNamesRule.mjs'),
          P = require('./rules/UniqueDirectiveNamesRule.mjs'),
          S = require('./rules/PossibleTypeExtensionsRule.mjs'),
          K = Object.freeze([
            e.ExecutableDefinitionsRule,
            u.UniqueOperationNamesRule,
            r.LoneAnonymousOperationRule,
            s.SingleFieldSubscriptionsRule,
            i.KnownTypeNamesRule,
            l.FragmentsOnCompositeTypesRule,
            n.VariablesAreInputTypesRule,
            a.ScalarLeafsRule,
            m.FieldsOnCorrectTypeRule,
            R.UniqueFragmentNamesRule,
            o.KnownFragmentNamesRule,
            t.NoUnusedFragmentsRule,
            q.PossibleFragmentSpreadsRule,
            p.NoFragmentCyclesRule,
            d.UniqueVariableNamesRule,
            j.NoUndefinedVariablesRule,
            N.NoUnusedVariablesRule,
            c.KnownDirectivesRule,
            U.UniqueDirectivesPerLocationRule,
            g.KnownArgumentNamesRule,
            F.UniqueArgumentNamesRule,
            y.ValuesOfCorrectTypeRule,
            b.ProvidedRequiredArgumentsRule,
            f.VariablesInAllowedPositionRule,
            v.OverlappingFieldsCanBeMergedRule,
            O.UniqueInputFieldNamesRule,
          ]);
        exports.specifiedRules = K;
        var L = Object.freeze([
          D.LoneSchemaDefinitionRule,
          T.UniqueOperationTypesRule,
          A.UniqueTypeNamesRule,
          V.UniqueEnumValueNamesRule,
          w.UniqueFieldDefinitionNamesRule,
          P.UniqueDirectiveNamesRule,
          i.KnownTypeNamesRule,
          c.KnownDirectivesRule,
          U.UniqueDirectivesPerLocationRule,
          S.PossibleTypeExtensionsRule,
          g.KnownArgumentNamesOnDirectivesRule,
          F.UniqueArgumentNamesRule,
          O.UniqueInputFieldNamesRule,
          b.ProvidedRequiredArgumentsOnDirectivesRule,
        ]);
        exports.specifiedSDLRules = L;
      },
      {
        './rules/ExecutableDefinitionsRule.mjs': 'UQVM',
        './rules/UniqueOperationNamesRule.mjs': 'Jooo',
        './rules/LoneAnonymousOperationRule.mjs': 'Phe5',
        './rules/SingleFieldSubscriptionsRule.mjs': 'D8Jo',
        './rules/KnownTypeNamesRule.mjs': 'esbS',
        './rules/FragmentsOnCompositeTypesRule.mjs': 'Yv6f',
        './rules/VariablesAreInputTypesRule.mjs': 'syHi',
        './rules/ScalarLeafsRule.mjs': 'yHyM',
        './rules/FieldsOnCorrectTypeRule.mjs': 'drEE',
        './rules/UniqueFragmentNamesRule.mjs': 'tMSV',
        './rules/KnownFragmentNamesRule.mjs': 'faZp',
        './rules/NoUnusedFragmentsRule.mjs': 'U1wp',
        './rules/PossibleFragmentSpreadsRule.mjs': 'QFy5',
        './rules/NoFragmentCyclesRule.mjs': 'HKpc',
        './rules/UniqueVariableNamesRule.mjs': 'P3nJ',
        './rules/NoUndefinedVariablesRule.mjs': 'qROH',
        './rules/NoUnusedVariablesRule.mjs': 'UDbU',
        './rules/KnownDirectivesRule.mjs': 'WWGg',
        './rules/UniqueDirectivesPerLocationRule.mjs': 'ZRn6',
        './rules/KnownArgumentNamesRule.mjs': 'mdbM',
        './rules/UniqueArgumentNamesRule.mjs': 'HEPW',
        './rules/ValuesOfCorrectTypeRule.mjs': 'Xva5',
        './rules/ProvidedRequiredArgumentsRule.mjs': 'p3wD',
        './rules/VariablesInAllowedPositionRule.mjs': 'S8fJ',
        './rules/OverlappingFieldsCanBeMergedRule.mjs': 'xjBd',
        './rules/UniqueInputFieldNamesRule.mjs': 'ujOt',
        './rules/LoneSchemaDefinitionRule.mjs': 'akcG',
        './rules/UniqueOperationTypesRule.mjs': 'L5TH',
        './rules/UniqueTypeNamesRule.mjs': 'U1Gu',
        './rules/UniqueEnumValueNamesRule.mjs': 'g8o6',
        './rules/UniqueFieldDefinitionNamesRule.mjs': 'Ppte',
        './rules/UniqueDirectiveNamesRule.mjs': 'rUoz',
        './rules/PossibleTypeExtensionsRule.mjs': 'a9uB',
      },
    ],
    JnUq: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.ValidationContext = exports.SDLValidationContext = exports.ASTValidationContext = void 0);
        var e = require('../language/kinds.mjs'),
          t = require('../language/visitor.mjs'),
          r = require('../utilities/TypeInfo.mjs');
        function n(e, t) {
          (e.prototype = Object.create(t.prototype)),
            (e.prototype.constructor = e),
            (e.__proto__ = t);
        }
        var i = (function () {
          function t(e, t) {
            (this._ast = e),
              (this._fragments = void 0),
              (this._fragmentSpreads = new Map()),
              (this._recursivelyReferencedFragments = new Map()),
              (this._onError = t);
          }
          var r = t.prototype;
          return (
            (r.reportError = function (e) {
              this._onError(e);
            }),
            (r.getDocument = function () {
              return this._ast;
            }),
            (r.getFragment = function (t) {
              var r = this._fragments;
              return (
                r ||
                  (this._fragments = r = this.getDocument().definitions.reduce(
                    function (t, r) {
                      return (
                        r.kind === e.Kind.FRAGMENT_DEFINITION &&
                          (t[r.name.value] = r),
                        t
                      );
                    },
                    Object.create(null)
                  )),
                r[t]
              );
            }),
            (r.getFragmentSpreads = function (t) {
              var r = this._fragmentSpreads.get(t);
              if (!r) {
                r = [];
                for (var n = [t]; 0 !== n.length; )
                  for (var i = 0, a = n.pop().selections; i < a.length; i++) {
                    var s = a[i];
                    s.kind === e.Kind.FRAGMENT_SPREAD
                      ? r.push(s)
                      : s.selectionSet && n.push(s.selectionSet);
                  }
                this._fragmentSpreads.set(t, r);
              }
              return r;
            }),
            (r.getRecursivelyReferencedFragments = function (e) {
              var t = this._recursivelyReferencedFragments.get(e);
              if (!t) {
                t = [];
                for (
                  var r = Object.create(null), n = [e.selectionSet];
                  0 !== n.length;

                )
                  for (
                    var i = n.pop(), a = 0, s = this.getFragmentSpreads(i);
                    a < s.length;
                    a++
                  ) {
                    var o = s[a].name.value;
                    if (!0 !== r[o]) {
                      r[o] = !0;
                      var u = this.getFragment(o);
                      u && (t.push(u), n.push(u.selectionSet));
                    }
                  }
                this._recursivelyReferencedFragments.set(e, t);
              }
              return t;
            }),
            t
          );
        })();
        exports.ASTValidationContext = i;
        var a = (function (e) {
          function t(t, r, n) {
            var i;
            return ((i = e.call(this, t, n) || this)._schema = r), i;
          }
          return (
            n(t, e),
            (t.prototype.getSchema = function () {
              return this._schema;
            }),
            t
          );
        })(i);
        exports.SDLValidationContext = a;
        var s = (function (e) {
          function i(t, r, n, i) {
            var a;
            return (
              ((a = e.call(this, r, i) || this)._schema = t),
              (a._typeInfo = n),
              (a._variableUsages = new Map()),
              (a._recursiveVariableUsages = new Map()),
              a
            );
          }
          n(i, e);
          var a = i.prototype;
          return (
            (a.getSchema = function () {
              return this._schema;
            }),
            (a.getVariableUsages = function (e) {
              var n = this._variableUsages.get(e);
              if (!n) {
                var i = [],
                  a = new r.TypeInfo(this._schema);
                (0, t.visit)(
                  e,
                  (0, r.visitWithTypeInfo)(a, {
                    VariableDefinition: function () {
                      return !1;
                    },
                    Variable: function (e) {
                      i.push({
                        node: e,
                        type: a.getInputType(),
                        defaultValue: a.getDefaultValue(),
                      });
                    },
                  })
                ),
                  (n = i),
                  this._variableUsages.set(e, n);
              }
              return n;
            }),
            (a.getRecursiveVariableUsages = function (e) {
              var t = this._recursiveVariableUsages.get(e);
              if (!t) {
                t = this.getVariableUsages(e);
                for (
                  var r = 0, n = this.getRecursivelyReferencedFragments(e);
                  r < n.length;
                  r++
                ) {
                  var i = n[r];
                  t = t.concat(this.getVariableUsages(i));
                }
                this._recursiveVariableUsages.set(e, t);
              }
              return t;
            }),
            (a.getType = function () {
              return this._typeInfo.getType();
            }),
            (a.getParentType = function () {
              return this._typeInfo.getParentType();
            }),
            (a.getInputType = function () {
              return this._typeInfo.getInputType();
            }),
            (a.getParentInputType = function () {
              return this._typeInfo.getParentInputType();
            }),
            (a.getFieldDef = function () {
              return this._typeInfo.getFieldDef();
            }),
            (a.getDirective = function () {
              return this._typeInfo.getDirective();
            }),
            (a.getArgument = function () {
              return this._typeInfo.getArgument();
            }),
            (a.getEnumValue = function () {
              return this._typeInfo.getEnumValue();
            }),
            i
          );
        })(i);
        exports.ValidationContext = s;
      },
      {
        '../language/kinds.mjs': 'HZ3k',
        '../language/visitor.mjs': 'PDqk',
        '../utilities/TypeInfo.mjs': 'wMED',
      },
    ],
    w2YI: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.validate = u),
          (exports.validateSDL = l),
          (exports.assertValidSDL = d),
          (exports.assertValidSDLExtension = f);
        var e = s(require('../jsutils/devAssert.mjs')),
          r = require('../error/GraphQLError.mjs'),
          t = require('../language/visitor.mjs'),
          i = require('../type/validate.mjs'),
          n = require('../utilities/TypeInfo.mjs'),
          o = require('./specifiedRules.mjs'),
          a = require('./ValidationContext.mjs');
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function u(s, u) {
          var l =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : o.specifiedRules,
            d =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : new n.TypeInfo(s),
            f =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : { maxErrors: void 0 };
          u || (0, e.default)(0, 'Must provide document.'),
            (0, i.assertValidSchema)(s);
          var v = Object.freeze({}),
            p = [],
            c = new a.ValidationContext(s, u, d, function (e) {
              if (null != f.maxErrors && p.length >= f.maxErrors)
                throw (
                  (p.push(
                    new r.GraphQLError(
                      'Too many validation errors, error limit reached. Validation aborted.'
                    )
                  ),
                  v)
                );
              p.push(e);
            }),
            h = (0, t.visitInParallel)(
              l.map(function (e) {
                return e(c);
              })
            );
          try {
            (0, t.visit)(u, (0, n.visitWithTypeInfo)(d, h));
          } catch (m) {
            if (m !== v) throw m;
          }
          return p;
        }
        function l(e, r) {
          var i =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : o.specifiedSDLRules,
            n = [],
            s = new a.SDLValidationContext(e, r, function (e) {
              n.push(e);
            }),
            u = i.map(function (e) {
              return e(s);
            });
          return (0, t.visit)(e, (0, t.visitInParallel)(u)), n;
        }
        function d(e) {
          var r = l(e);
          if (0 !== r.length)
            throw new Error(
              r
                .map(function (e) {
                  return e.message;
                })
                .join('\n\n')
            );
        }
        function f(e, r) {
          var t = l(e, r);
          if (0 !== t.length)
            throw new Error(
              t
                .map(function (e) {
                  return e.message;
                })
                .join('\n\n')
            );
        }
      },
      {
        '../jsutils/devAssert.mjs': 'wvjo',
        '../error/GraphQLError.mjs': 'nXOl',
        '../language/visitor.mjs': 'PDqk',
        '../type/validate.mjs': 'ibgb',
        '../utilities/TypeInfo.mjs': 'wMED',
        './specifiedRules.mjs': 'WPQ4',
        './ValidationContext.mjs': 'JnUq',
      },
    ],
    MFp5: [
      function (require, module, exports) {
        'use strict';
        function e(e) {
          var t;
          return function (r, a, n) {
            t || (t = new WeakMap());
            var s,
              u = t.get(r);
            if (u) {
              if ((s = u.get(a))) {
                var i = s.get(n);
                if (void 0 !== i) return i;
              }
            } else (u = new WeakMap()), t.set(r, u);
            s || ((s = new WeakMap()), u.set(a, s));
            var f = e(r, a, n);
            return s.set(n, f), f;
          };
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
      },
      {},
    ],
    sQNx: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = t);
        var e = r(require('./isPromise.mjs'));
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function t(r, t, u) {
          return r.reduce(function (r, u) {
            return (0, e.default)(r)
              ? r.then(function (e) {
                  return t(e, u);
                })
              : t(r, u);
          }, u);
        }
      },
      { './isPromise.mjs': 'Ue6U' },
    ],
    SADN: [
      function (require, module, exports) {
        'use strict';
        function e(e) {
          var t = Object.keys(e),
            r = t.map(function (t) {
              return e[t];
            });
          return Promise.all(r).then(function (e) {
            return e.reduce(function (e, r, n) {
              return (e[t[n]] = r), e;
            }, Object.create(null));
          });
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
      },
      {},
    ],
    Umcb: [
      function (require, module, exports) {
        'use strict';
        function e(e, r, t) {
          return { prev: e, key: r, typename: t };
        }
        function r(e) {
          for (var r = [], t = e; t; ) r.push(t.key), (t = t.prev);
          return r.reverse();
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.addPath = e),
          (exports.pathToArray = r);
      },
      {},
    ],
    Rx0U: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getOperationRootType = e);
        var r = require('../error/GraphQLError.mjs');
        function e(e, o) {
          if ('query' === o.operation) {
            var t = e.getQueryType();
            if (!t)
              throw new r.GraphQLError(
                'Schema does not define the required query root type.',
                o
              );
            return t;
          }
          if ('mutation' === o.operation) {
            var i = e.getMutationType();
            if (!i)
              throw new r.GraphQLError(
                'Schema is not configured for mutations.',
                o
              );
            return i;
          }
          if ('subscription' === o.operation) {
            var n = e.getSubscriptionType();
            if (!n)
              throw new r.GraphQLError(
                'Schema is not configured for subscriptions.',
                o
              );
            return n;
          }
          throw new r.GraphQLError(
            'Can only have query, mutation and subscription operations.',
            o
          );
        }
      },
      { '../error/GraphQLError.mjs': 'nXOl' },
    ],
    Eg1I: [
      function (require, module, exports) {
        'use strict';
        function e(e) {
          return e
            .map(function (e) {
              return 'number' == typeof e ? '[' + e.toString() + ']' : '.' + e;
            })
            .join('');
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
      },
      {},
    ],
    HWIe: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.valueFromAST = a);
        var e = l(require('../polyfills/objectValues.mjs')),
          r = l(require('../jsutils/keyMap.mjs')),
          i = l(require('../jsutils/inspect.mjs')),
          n = l(require('../jsutils/invariant.mjs')),
          u = require('../language/kinds.mjs'),
          t = require('../type/definition.mjs');
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function a(l, s, d) {
          if (l) {
            if (l.kind === u.Kind.VARIABLE) {
              var o = l.name.value;
              if (null == d || void 0 === d[o]) return;
              var v = d[o];
              if (null === v && (0, t.isNonNullType)(s)) return;
              return v;
            }
            if ((0, t.isNonNullType)(s)) {
              if (l.kind === u.Kind.NULL) return;
              return a(l, s.ofType, d);
            }
            if (l.kind === u.Kind.NULL) return null;
            if ((0, t.isListType)(s)) {
              var p = s.ofType;
              if (l.kind === u.Kind.LIST) {
                for (var y = [], c = 0, j = l.values; c < j.length; c++) {
                  var m = j[c];
                  if (f(m, d)) {
                    if ((0, t.isNonNullType)(p)) return;
                    y.push(null);
                  } else {
                    var T = a(m, p, d);
                    if (void 0 === T) return;
                    y.push(T);
                  }
                }
                return y;
              }
              var L = a(l, p, d);
              if (void 0 === L) return;
              return [L];
            }
            if ((0, t.isInputObjectType)(s)) {
              if (l.kind !== u.Kind.OBJECT) return;
              for (
                var N = Object.create(null),
                  k = (0, r.default)(l.fields, function (e) {
                    return e.name.value;
                  }),
                  q = 0,
                  K = (0, e.default)(s.getFields());
                q < K.length;
                q++
              ) {
                var g = K[q],
                  h = k[g.name];
                if (h && !f(h.value, d)) {
                  var A = a(h.value, g.type, d);
                  if (void 0 === A) return;
                  N[g.name] = A;
                } else if (void 0 !== g.defaultValue)
                  N[g.name] = g.defaultValue;
                else if ((0, t.isNonNullType)(g.type)) return;
              }
              return N;
            }
            if ((0, t.isLeafType)(s)) {
              var V;
              try {
                V = s.parseLiteral(l, d);
              } catch (b) {
                return;
              }
              if (void 0 === V) return;
              return V;
            }
            (0, n.default)(0, 'Unexpected input type: ' + (0, i.default)(s));
          }
        }
        function f(e, r) {
          return (
            e.kind === u.Kind.VARIABLE &&
            (null == r || void 0 === r[e.name.value])
          );
        }
      },
      {
        '../polyfills/objectValues.mjs': 'pwpl',
        '../jsutils/keyMap.mjs': 'pTwJ',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/invariant.mjs': 'hYEN',
        '../language/kinds.mjs': 'HZ3k',
        '../type/definition.mjs': 'ENJe',
      },
    ],
    AC1l: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.coerceInputValue = f);
        var e = c(require('../polyfills/arrayFrom.mjs')),
          r = c(require('../polyfills/objectValues.mjs')),
          t = c(require('../jsutils/inspect.mjs')),
          a = c(require('../jsutils/invariant.mjs')),
          i = c(require('../jsutils/didYouMean.mjs')),
          n = c(require('../jsutils/isObjectLike.mjs')),
          o = c(require('../jsutils/isCollection.mjs')),
          u = c(require('../jsutils/suggestionList.mjs')),
          l = c(require('../jsutils/printPathArray.mjs')),
          s = require('../jsutils/Path.mjs'),
          d = require('../error/GraphQLError.mjs'),
          p = require('../type/definition.mjs');
        function c(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function f(e, r) {
          return v(
            e,
            r,
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : y
          );
        }
        function y(e, r, a) {
          var i = 'Invalid value ' + (0, t.default)(r);
          throw (
            (e.length > 0 && (i += ' at "value'.concat((0, l.default)(e), '"')),
            (a.message = i + ': ' + a.message),
            a)
          );
        }
        function v(l, c, f, y) {
          if ((0, p.isNonNullType)(c))
            return null != l
              ? v(l, c.ofType, f, y)
              : void f(
                  (0, s.pathToArray)(y),
                  l,
                  new d.GraphQLError(
                    'Expected non-nullable type "'.concat(
                      (0, t.default)(c),
                      '" not to be null.'
                    )
                  )
                );
          if (null == l) return null;
          if ((0, p.isListType)(c)) {
            var j = c.ofType;
            return (0, o.default)(l)
              ? (0, e.default)(l, function (e, r) {
                  var t = (0, s.addPath)(y, r, void 0);
                  return v(e, j, f, t);
                })
              : [v(l, j, f, y)];
          }
          if ((0, p.isInputObjectType)(c)) {
            if (!(0, n.default)(l))
              return void f(
                (0, s.pathToArray)(y),
                l,
                new d.GraphQLError(
                  'Expected type "'.concat(c.name, '" to be an object.')
                )
              );
            for (
              var m = {}, h = c.getFields(), T = 0, q = (0, r.default)(h);
              T < q.length;
              T++
            ) {
              var E = q[T],
                L = l[E.name];
              if (void 0 !== L)
                m[E.name] = v(L, E.type, f, (0, s.addPath)(y, E.name, c.name));
              else if (void 0 !== E.defaultValue) m[E.name] = E.defaultValue;
              else if ((0, p.isNonNullType)(E.type)) {
                var b = (0, t.default)(E.type);
                f(
                  (0, s.pathToArray)(y),
                  l,
                  new d.GraphQLError(
                    'Field "'
                      .concat(E.name, '" of required type "')
                      .concat(b, '" was not provided.')
                  )
                );
              }
            }
            for (var g = 0, w = Object.keys(l); g < w.length; g++) {
              var A = w[g];
              if (!h[A]) {
                var G = (0, u.default)(A, Object.keys(c.getFields()));
                f(
                  (0, s.pathToArray)(y),
                  l,
                  new d.GraphQLError(
                    'Field "'
                      .concat(A, '" is not defined by type "')
                      .concat(c.name, '".') + (0, i.default)(G)
                  )
                );
              }
            }
            return m;
          }
          if ((0, p.isLeafType)(c)) {
            var Q;
            try {
              Q = c.parseValue(l);
            } catch (x) {
              return void (x instanceof d.GraphQLError
                ? f((0, s.pathToArray)(y), l, x)
                : f(
                    (0, s.pathToArray)(y),
                    l,
                    new d.GraphQLError(
                      'Expected type "'.concat(c.name, '". ') + x.message,
                      void 0,
                      void 0,
                      void 0,
                      void 0,
                      x
                    )
                  ));
            }
            return (
              void 0 === Q &&
                f(
                  (0, s.pathToArray)(y),
                  l,
                  new d.GraphQLError('Expected type "'.concat(c.name, '".'))
                ),
              Q
            );
          }
          (0, a.default)(0, 'Unexpected input type: ' + (0, t.default)(c));
        }
      },
      {
        '../polyfills/arrayFrom.mjs': 'sZlc',
        '../polyfills/objectValues.mjs': 'pwpl',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/invariant.mjs': 'hYEN',
        '../jsutils/didYouMean.mjs': 'F689',
        '../jsutils/isObjectLike.mjs': 'QGgI',
        '../jsutils/isCollection.mjs': 'RfmG',
        '../jsutils/suggestionList.mjs': 'ZMIN',
        '../jsutils/printPathArray.mjs': 'Eg1I',
        '../jsutils/Path.mjs': 'Umcb',
        '../error/GraphQLError.mjs': 'nXOl',
        '../type/definition.mjs': 'ENJe',
      },
    ],
    sniH: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getVariableValues = f),
          (exports.getArgumentValues = v),
          (exports.getDirectiveValues = m);
        var e = p(require('../polyfills/find.mjs')),
          r = p(require('../jsutils/keyMap.mjs')),
          t = p(require('../jsutils/inspect.mjs')),
          n = p(require('../jsutils/printPathArray.mjs')),
          a = require('../error/GraphQLError.mjs'),
          u = require('../language/kinds.mjs'),
          i = require('../language/printer.mjs'),
          o = require('../type/definition.mjs'),
          l = require('../utilities/typeFromAST.mjs'),
          c = require('../utilities/valueFromAST.mjs'),
          s = require('../utilities/coerceInputValue.mjs');
        function p(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function f(e, r, t, n) {
          var u = [],
            i = null == n ? void 0 : n.maxErrors;
          try {
            var o = d(e, r, t, function (e) {
              if (null != i && u.length >= i)
                throw new a.GraphQLError(
                  'Too many errors processing variables, error limit reached. Execution aborted.'
                );
              u.push(e);
            });
            if (0 === u.length) return { coerced: o };
          } catch (l) {
            u.push(l);
          }
          return { errors: u };
        }
        function d(e, r, u, p) {
          for (
            var f = {},
              d = function (d) {
                var v = r[d],
                  m = v.variable.name.value,
                  y = (0, l.typeFromAST)(e, v.type);
                if (!(0, o.isInputType)(y)) {
                  var g = (0, i.print)(v.type);
                  return (
                    p(
                      new a.GraphQLError(
                        'Variable "$'
                          .concat(m, '" expected value of type "')
                          .concat(
                            g,
                            '" which cannot be used as an input type.'
                          ),
                        v.type
                      )
                    ),
                    'continue'
                  );
                }
                if (!h(u, m)) {
                  if (v.defaultValue)
                    f[m] = (0, c.valueFromAST)(v.defaultValue, y);
                  else if ((0, o.isNonNullType)(y)) {
                    var w = (0, t.default)(y);
                    p(
                      new a.GraphQLError(
                        'Variable "$'
                          .concat(m, '" of required type "')
                          .concat(w, '" was not provided.'),
                        v
                      )
                    );
                  }
                  return 'continue';
                }
                var V = u[m];
                if (null === V && (0, o.isNonNullType)(y)) {
                  var j = (0, t.default)(y);
                  return (
                    p(
                      new a.GraphQLError(
                        'Variable "$'
                          .concat(m, '" of non-null type "')
                          .concat(j, '" must not be null.'),
                        v
                      )
                    ),
                    'continue'
                  );
                }
                f[m] = (0, s.coerceInputValue)(V, y, function (e, r, u) {
                  var i =
                    'Variable "$'.concat(m, '" got invalid value ') +
                    (0, t.default)(r);
                  e.length > 0 &&
                    (i += ' at "'.concat(m).concat((0, n.default)(e), '"')),
                    p(
                      new a.GraphQLError(
                        i + '; ' + u.message,
                        v,
                        void 0,
                        void 0,
                        void 0,
                        u.originalError
                      )
                    );
                });
              },
              v = 0;
            v < r.length;
            v++
          )
            d(v);
          return f;
        }
        function v(e, n, l) {
          for (
            var s,
              p = {},
              f = null !== (s = n.arguments) && void 0 !== s ? s : [],
              d = (0, r.default)(f, function (e) {
                return e.name.value;
              }),
              v = 0,
              m = e.args;
            v < m.length;
            v++
          ) {
            var y = m[v],
              g = y.name,
              w = y.type,
              V = d[g];
            if (V) {
              var j = V.value,
                b = j.kind === u.Kind.NULL;
              if (j.kind === u.Kind.VARIABLE) {
                var q = j.name.value;
                if (null == l || !h(l, q)) {
                  if (void 0 !== y.defaultValue) p[g] = y.defaultValue;
                  else if ((0, o.isNonNullType)(w))
                    throw new a.GraphQLError(
                      'Argument "'
                        .concat(g, '" of required type "')
                        .concat((0, t.default)(w), '" ') +
                        'was provided the variable "$'.concat(
                          q,
                          '" which was not provided a runtime value.'
                        ),
                      j
                    );
                  continue;
                }
                b = null == l[q];
              }
              if (b && (0, o.isNonNullType)(w))
                throw new a.GraphQLError(
                  'Argument "'
                    .concat(g, '" of non-null type "')
                    .concat((0, t.default)(w), '" ') + 'must not be null.',
                  j
                );
              var E = (0, c.valueFromAST)(j, w, l);
              if (void 0 === E)
                throw new a.GraphQLError(
                  'Argument "'
                    .concat(g, '" has invalid value ')
                    .concat((0, i.print)(j), '.'),
                  j
                );
              p[g] = E;
            } else if (void 0 !== y.defaultValue) p[g] = y.defaultValue;
            else if ((0, o.isNonNullType)(w))
              throw new a.GraphQLError(
                'Argument "'
                  .concat(g, '" of required type "')
                  .concat((0, t.default)(w), '" ') + 'was not provided.',
                n
              );
          }
          return p;
        }
        function m(r, t, n) {
          var a =
            t.directives &&
            (0, e.default)(t.directives, function (e) {
              return e.name.value === r.name;
            });
          if (a) return v(r, a, n);
        }
        function h(e, r) {
          return Object.prototype.hasOwnProperty.call(e, r);
        }
      },
      {
        '../polyfills/find.mjs': 'XSMy',
        '../jsutils/keyMap.mjs': 'pTwJ',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/printPathArray.mjs': 'Eg1I',
        '../error/GraphQLError.mjs': 'nXOl',
        '../language/kinds.mjs': 'HZ3k',
        '../language/printer.mjs': 'h28C',
        '../type/definition.mjs': 'ENJe',
        '../utilities/typeFromAST.mjs': 'vTpZ',
        '../utilities/valueFromAST.mjs': 'HWIe',
        '../utilities/coerceInputValue.mjs': 'AC1l',
      },
    ],
    rlon: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.execute = w),
          (exports.executeSync = g),
          (exports.assertValidExecutionArguments = N),
          (exports.buildExecutionContext = V),
          (exports.collectFields = F),
          (exports.buildResolveInfo = S),
          (exports.getFieldDef = X),
          (exports.defaultFieldResolver = exports.defaultTypeResolver = void 0);
        var e = E(require('../polyfills/arrayFrom.mjs')),
          r = E(require('../jsutils/inspect.mjs')),
          t = E(require('../jsutils/memoize3.mjs')),
          n = E(require('../jsutils/invariant.mjs')),
          a = E(require('../jsutils/devAssert.mjs')),
          o = E(require('../jsutils/isPromise.mjs')),
          i = E(require('../jsutils/isObjectLike.mjs')),
          u = E(require('../jsutils/isCollection.mjs')),
          l = E(require('../jsutils/promiseReduce.mjs')),
          s = E(require('../jsutils/promiseForObject.mjs')),
          c = require('../jsutils/Path.mjs'),
          f = require('../error/GraphQLError.mjs'),
          p = require('../error/locatedError.mjs'),
          d = require('../language/kinds.mjs'),
          v = require('../type/validate.mjs'),
          m = require('../type/introspection.mjs'),
          y = require('../type/directives.mjs'),
          h = require('../type/definition.mjs'),
          b = require('../utilities/typeFromAST.mjs'),
          j = require('../utilities/getOperationRootType.mjs'),
          T = require('./values.mjs');
        function E(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function w(e, r, t, n, a, o, i, u) {
          return 1 === arguments.length
            ? x(e)
            : x({
                schema: e,
                document: r,
                rootValue: t,
                contextValue: n,
                variableValues: a,
                operationName: o,
                fieldResolver: i,
                typeResolver: u,
              });
        }
        function g(e) {
          var r = x(e);
          if ((0, o.default)(r))
            throw new Error(
              'GraphQL execution failed to complete synchronously.'
            );
          return r;
        }
        function x(e) {
          var r = e.schema,
            t = e.document,
            n = e.rootValue,
            a = e.contextValue,
            o = e.variableValues,
            i = e.operationName,
            u = e.fieldResolver,
            l = e.typeResolver;
          N(r, t, o);
          var s = V(r, t, n, a, o, i, u, l);
          return Array.isArray(s) ? { errors: s } : O(s, q(s, s.operation, n));
        }
        function O(e, r) {
          return (0, o.default)(r)
            ? r.then(function (r) {
                return O(e, r);
              })
            : 0 === e.errors.length
            ? { data: r }
            : { errors: e.errors, data: r };
        }
        function N(e, r, t) {
          r || (0, a.default)(0, 'Must provide document.'),
            (0, v.assertValidSchema)(e),
            null == t ||
              (0, i.default)(t) ||
              (0, a.default)(
                0,
                'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.'
              );
        }
        function V(e, r, t, n, a, o, i, u) {
          for (
            var l, s, c, p = Object.create(null), v = 0, m = r.definitions;
            v < m.length;
            v++
          ) {
            var y = m[v];
            switch (y.kind) {
              case d.Kind.OPERATION_DEFINITION:
                if (null == o) {
                  if (void 0 !== c)
                    return [
                      new f.GraphQLError(
                        'Must provide operation name if query contains multiple operations.'
                      ),
                    ];
                  c = y;
                } else
                  (null === (l = y.name) || void 0 === l ? void 0 : l.value) ===
                    o && (c = y);
                break;
              case d.Kind.FRAGMENT_DEFINITION:
                p[y.name.value] = y;
            }
          }
          if (!c)
            return null != o
              ? [
                  new f.GraphQLError(
                    'Unknown operation named "'.concat(o, '".')
                  ),
                ]
              : [new f.GraphQLError('Must provide an operation.')];
          var h = null !== (s = c.variableDefinitions) && void 0 !== s ? s : [],
            b = (0, T.getVariableValues)(e, h, null != a ? a : {}, {
              maxErrors: 50,
            });
          return b.errors
            ? b.errors
            : {
                schema: e,
                fragments: p,
                rootValue: t,
                contextValue: n,
                operation: c,
                variableValues: b.coerced,
                fieldResolver: null != i ? i : W,
                typeResolver: null != u ? u : H,
                errors: [],
              };
        }
        function q(e, r, t) {
          var n = (0, j.getOperationRootType)(e.schema, r),
            a = F(
              e,
              n,
              r.selectionSet,
              Object.create(null),
              Object.create(null)
            );
          try {
            var i =
              'mutation' === r.operation
                ? A(e, n, t, void 0, a)
                : R(e, n, t, void 0, a);
            return (0, o.default)(i)
              ? i.then(void 0, function (r) {
                  return e.errors.push(r), Promise.resolve(null);
                })
              : i;
          } catch (u) {
            return e.errors.push(u), null;
          }
        }
        function A(e, r, t, n, a) {
          return (0, l.default)(
            Object.keys(a),
            function (i, u) {
              var l = a[u],
                s = (0, c.addPath)(n, u, r.name),
                f = Q(e, r, t, l, s);
              return void 0 === f
                ? i
                : (0, o.default)(f)
                ? f.then(function (e) {
                    return (i[u] = e), i;
                  })
                : ((i[u] = f), i);
            },
            Object.create(null)
          );
        }
        function R(e, r, t, n, a) {
          for (
            var i = Object.create(null), u = !1, l = 0, f = Object.keys(a);
            l < f.length;
            l++
          ) {
            var p = f[l],
              d = Q(e, r, t, a[p], (0, c.addPath)(n, p, r.name));
            void 0 !== d && ((i[p] = d), (0, o.default)(d) && (u = !0));
          }
          return u ? (0, s.default)(i) : i;
        }
        function F(e, r, t, n, a) {
          for (var o = 0, i = t.selections; o < i.length; o++) {
            var u = i[o];
            switch (u.kind) {
              case d.Kind.FIELD:
                if (!L(e, u)) continue;
                var l = D(u);
                n[l] || (n[l] = []), n[l].push(u);
                break;
              case d.Kind.INLINE_FRAGMENT:
                if (!L(e, u) || !G(e, u, r)) continue;
                F(e, r, u.selectionSet, n, a);
                break;
              case d.Kind.FRAGMENT_SPREAD:
                var s = u.name.value;
                if (a[s] || !L(e, u)) continue;
                a[s] = !0;
                var c = e.fragments[s];
                if (!c || !G(e, c, r)) continue;
                F(e, r, c.selectionSet, n, a);
            }
          }
          return n;
        }
        function L(e, r) {
          var t = (0, T.getDirectiveValues)(
            y.GraphQLSkipDirective,
            r,
            e.variableValues
          );
          if (!0 === (null == t ? void 0 : t.if)) return !1;
          var n = (0, T.getDirectiveValues)(
            y.GraphQLIncludeDirective,
            r,
            e.variableValues
          );
          return !1 !== (null == n ? void 0 : n.if);
        }
        function G(e, r, t) {
          var n = r.typeCondition;
          if (!n) return !0;
          var a = (0, b.typeFromAST)(e.schema, n);
          return (
            a === t || (!!(0, h.isAbstractType)(a) && e.schema.isSubType(a, t))
          );
        }
        function D(e) {
          return e.alias ? e.alias.value : e.name.value;
        }
        function Q(e, r, t, n, a) {
          var i,
            u = n[0].name.value,
            l = X(e.schema, r, u);
          if (l) {
            var s = l.type,
              f =
                null !== (i = l.resolve) && void 0 !== i ? i : e.fieldResolver,
              d = S(e, l, n, r, a);
            try {
              var v,
                m = f(
                  t,
                  (0, T.getArgumentValues)(l, n[0], e.variableValues),
                  e.contextValue,
                  d
                );
              return (
                (v = (0, o.default)(m)
                  ? m.then(function (r) {
                      return I(e, s, n, d, a, r);
                    })
                  : I(e, s, n, d, a, m)),
                (0, o.default)(v)
                  ? v.then(void 0, function (r) {
                      return M(
                        (0, p.locatedError)(r, n, (0, c.pathToArray)(a)),
                        s,
                        e
                      );
                    })
                  : v
              );
            } catch (y) {
              return M((0, p.locatedError)(y, n, (0, c.pathToArray)(a)), s, e);
            }
          }
        }
        function S(e, r, t, n, a) {
          return {
            fieldName: r.name,
            fieldNodes: t,
            returnType: r.type,
            parentType: n,
            path: a,
            schema: e.schema,
            fragments: e.fragments,
            rootValue: e.rootValue,
            operation: e.operation,
            variableValues: e.variableValues,
          };
        }
        function M(e, r, t) {
          if ((0, h.isNonNullType)(r)) throw e;
          return t.errors.push(e), null;
        }
        function I(e, t, a, o, i, u) {
          if (u instanceof Error) throw u;
          if ((0, h.isNonNullType)(t)) {
            var l = I(e, t.ofType, a, o, i, u);
            if (null === l)
              throw new Error(
                'Cannot return null for non-nullable field '
                  .concat(o.parentType.name, '.')
                  .concat(o.fieldName, '.')
              );
            return l;
          }
          return null == u
            ? null
            : (0, h.isListType)(t)
            ? P(e, t, a, o, i, u)
            : (0, h.isLeafType)(t)
            ? k(t, u)
            : (0, h.isAbstractType)(t)
            ? _(e, t, a, o, i, u)
            : (0, h.isObjectType)(t)
            ? K(e, t, a, o, i, u)
            : void (0, n.default)(
                0,
                'Cannot complete value of unexpected output type: ' +
                  (0, r.default)(t)
              );
        }
        function P(r, t, n, a, i, l) {
          if (!(0, u.default)(l))
            throw new f.GraphQLError(
              'Expected Iterable, but did not find one for field "'
                .concat(a.parentType.name, '.')
                .concat(a.fieldName, '".')
            );
          var s = t.ofType,
            d = !1,
            v = (0, e.default)(l, function (e, t) {
              var u = (0, c.addPath)(i, t, void 0);
              try {
                var l;
                return (
                  (l = (0, o.default)(e)
                    ? e.then(function (e) {
                        return I(r, s, n, a, u, e);
                      })
                    : I(r, s, n, a, u, e)),
                  (0, o.default)(l)
                    ? ((d = !0),
                      l.then(void 0, function (e) {
                        return M(
                          (0, p.locatedError)(e, n, (0, c.pathToArray)(u)),
                          s,
                          r
                        );
                      }))
                    : l
                );
              } catch (f) {
                return M(
                  (0, p.locatedError)(f, n, (0, c.pathToArray)(u)),
                  s,
                  r
                );
              }
            });
          return d ? Promise.all(v) : v;
        }
        function k(e, t) {
          var n = e.serialize(t);
          if (void 0 === n)
            throw new Error(
              'Expected a value of type "'.concat((0, r.default)(e), '" but ') +
                'received: '.concat((0, r.default)(t))
            );
          return n;
        }
        function _(e, r, t, n, a, i) {
          var u,
            l =
              null !== (u = r.resolveType) && void 0 !== u ? u : e.typeResolver,
            s = e.contextValue,
            c = l(i, s, n, r);
          return (0, o.default)(c)
            ? c.then(function (o) {
                return K(e, C(o, e, r, t, n, i), t, n, a, i);
              })
            : K(e, C(c, e, r, t, n, i), t, n, a, i);
        }
        function C(e, t, n, a, o, i) {
          if (null == e)
            throw new f.GraphQLError(
              'Abstract type "'
                .concat(
                  n.name,
                  '" must resolve to an Object type at runtime for field "'
                )
                .concat(o.parentType.name, '.')
                .concat(o.fieldName, '". Either the "')
                .concat(
                  n.name,
                  '" type should provide a "resolveType" function or each possible type should provide an "isTypeOf" function.'
                ),
              a
            );
          var u = (0, h.isNamedType)(e) ? e.name : e;
          if ('string' != typeof u)
            throw new f.GraphQLError(
              'Abstract type "'
                .concat(
                  n.name,
                  '" must resolve to an Object type at runtime for field "'
                )
                .concat(o.parentType.name, '.')
                .concat(o.fieldName, '" with ') +
                'value '
                  .concat((0, r.default)(i), ', received "')
                  .concat((0, r.default)(e), '".')
            );
          var l = t.schema.getType(u);
          if (null == l)
            throw new f.GraphQLError(
              'Abstract type "'
                .concat(n.name, '" was resolve to a type "')
                .concat(u, '" that does not exist inside schema.'),
              a
            );
          if (!(0, h.isObjectType)(l))
            throw new f.GraphQLError(
              'Abstract type "'
                .concat(n.name, '" was resolve to a non-object type "')
                .concat(u, '".'),
              a
            );
          if (!t.schema.isSubType(n, l))
            throw new f.GraphQLError(
              'Runtime Object type "'
                .concat(l.name, '" is not a possible type for "')
                .concat(n.name, '".'),
              a
            );
          return l;
        }
        function K(e, r, t, n, a, i) {
          if (r.isTypeOf) {
            var u = r.isTypeOf(i, e.contextValue, n);
            if ((0, o.default)(u))
              return u.then(function (n) {
                if (!n) throw z(r, i, t);
                return J(e, r, t, a, i);
              });
            if (!u) throw z(r, i, t);
          }
          return J(e, r, t, a, i);
        }
        function z(e, t, n) {
          return new f.GraphQLError(
            'Expected value of type "'
              .concat(e.name, '" but got: ')
              .concat((0, r.default)(t), '.'),
            n
          );
        }
        function J(e, r, t, n, a) {
          return R(e, r, a, n, U(e, r, t));
        }
        var U = (0, t.default)(B);
        function B(e, r, t) {
          for (
            var n = Object.create(null), a = Object.create(null), o = 0;
            o < t.length;
            o++
          ) {
            var i = t[o];
            i.selectionSet && (n = F(e, r, i.selectionSet, n, a));
          }
          return n;
        }
        var H = function (e, r, t, n) {
          if ((0, i.default)(e) && 'string' == typeof e.__typename)
            return e.__typename;
          for (
            var a = t.schema.getPossibleTypes(n), u = [], l = 0;
            l < a.length;
            l++
          ) {
            var s = a[l];
            if (s.isTypeOf) {
              var c = s.isTypeOf(e, r, t);
              if ((0, o.default)(c)) u[l] = c;
              else if (c) return s.name;
            }
          }
          return u.length
            ? Promise.all(u).then(function (e) {
                for (var r = 0; r < e.length; r++) if (e[r]) return a[r].name;
              })
            : void 0;
        };
        exports.defaultTypeResolver = H;
        var W = function (e, r, t, n) {
          if ((0, i.default)(e) || 'function' == typeof e) {
            var a = e[n.fieldName];
            return 'function' == typeof a ? e[n.fieldName](r, t, n) : a;
          }
        };
        function X(e, r, t) {
          return t === m.SchemaMetaFieldDef.name && e.getQueryType() === r
            ? m.SchemaMetaFieldDef
            : t === m.TypeMetaFieldDef.name && e.getQueryType() === r
            ? m.TypeMetaFieldDef
            : t === m.TypeNameMetaFieldDef.name
            ? m.TypeNameMetaFieldDef
            : r.getFields()[t];
        }
        exports.defaultFieldResolver = W;
      },
      {
        '../polyfills/arrayFrom.mjs': 'sZlc',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/memoize3.mjs': 'MFp5',
        '../jsutils/invariant.mjs': 'hYEN',
        '../jsutils/devAssert.mjs': 'wvjo',
        '../jsutils/isPromise.mjs': 'Ue6U',
        '../jsutils/isObjectLike.mjs': 'QGgI',
        '../jsutils/isCollection.mjs': 'RfmG',
        '../jsutils/promiseReduce.mjs': 'sQNx',
        '../jsutils/promiseForObject.mjs': 'SADN',
        '../jsutils/Path.mjs': 'Umcb',
        '../error/GraphQLError.mjs': 'nXOl',
        '../error/locatedError.mjs': 'l6Q0',
        '../language/kinds.mjs': 'HZ3k',
        '../type/validate.mjs': 'ibgb',
        '../type/introspection.mjs': 'Y3NB',
        '../type/directives.mjs': 'sei5',
        '../type/definition.mjs': 'ENJe',
        '../utilities/typeFromAST.mjs': 'vTpZ',
        '../utilities/getOperationRootType.mjs': 'Rx0U',
        './values.mjs': 'sniH',
      },
    ],
    VMBp: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.graphql = u),
          (exports.graphqlSync = s);
        var e = l(require('./jsutils/isPromise.mjs')),
          r = require('./language/parser.mjs'),
          t = require('./validation/validate.mjs'),
          a = require('./type/validate.mjs'),
          o = require('./execution/execute.mjs');
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function u(e, r, t, a, o, l, u, s) {
          var i = arguments;
          return new Promise(function (c) {
            return c(
              1 === i.length
                ? n(e)
                : n({
                    schema: e,
                    source: r,
                    rootValue: t,
                    contextValue: a,
                    variableValues: o,
                    operationName: l,
                    fieldResolver: u,
                    typeResolver: s,
                  })
            );
          });
        }
        function s(r, t, a, o, l, u, s, i) {
          var c =
            1 === arguments.length
              ? n(r)
              : n({
                  schema: r,
                  source: t,
                  rootValue: a,
                  contextValue: o,
                  variableValues: l,
                  operationName: u,
                  fieldResolver: s,
                  typeResolver: i,
                });
          if ((0, e.default)(c))
            throw new Error(
              'GraphQL execution failed to complete synchronously.'
            );
          return c;
        }
        function n(e) {
          var l,
            u = e.schema,
            s = e.source,
            n = e.rootValue,
            i = e.contextValue,
            c = e.variableValues,
            v = e.operationName,
            p = e.fieldResolver,
            m = e.typeResolver,
            d = (0, a.validateSchema)(u);
          if (d.length > 0) return { errors: d };
          try {
            l = (0, r.parse)(s);
          } catch (h) {
            return { errors: [h] };
          }
          var f = (0, t.validate)(u, l);
          return f.length > 0
            ? { errors: f }
            : (0, o.execute)({
                schema: u,
                document: l,
                rootValue: n,
                contextValue: i,
                variableValues: c,
                operationName: v,
                fieldResolver: p,
                typeResolver: m,
              });
        }
      },
      {
        './jsutils/isPromise.mjs': 'Ue6U',
        './language/parser.mjs': 'JHRN',
        './validation/validate.mjs': 'w2YI',
        './type/validate.mjs': 'ibgb',
        './execution/execute.mjs': 'rlon',
      },
    ],
    cuXl: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          Object.defineProperty(exports, 'isSchema', {
            enumerable: !0,
            get: function () {
              return e.isSchema;
            },
          }),
          Object.defineProperty(exports, 'assertSchema', {
            enumerable: !0,
            get: function () {
              return e.assertSchema;
            },
          }),
          Object.defineProperty(exports, 'GraphQLSchema', {
            enumerable: !0,
            get: function () {
              return e.GraphQLSchema;
            },
          }),
          Object.defineProperty(exports, 'isType', {
            enumerable: !0,
            get: function () {
              return t.isType;
            },
          }),
          Object.defineProperty(exports, 'isScalarType', {
            enumerable: !0,
            get: function () {
              return t.isScalarType;
            },
          }),
          Object.defineProperty(exports, 'isObjectType', {
            enumerable: !0,
            get: function () {
              return t.isObjectType;
            },
          }),
          Object.defineProperty(exports, 'isInterfaceType', {
            enumerable: !0,
            get: function () {
              return t.isInterfaceType;
            },
          }),
          Object.defineProperty(exports, 'isUnionType', {
            enumerable: !0,
            get: function () {
              return t.isUnionType;
            },
          }),
          Object.defineProperty(exports, 'isEnumType', {
            enumerable: !0,
            get: function () {
              return t.isEnumType;
            },
          }),
          Object.defineProperty(exports, 'isInputObjectType', {
            enumerable: !0,
            get: function () {
              return t.isInputObjectType;
            },
          }),
          Object.defineProperty(exports, 'isListType', {
            enumerable: !0,
            get: function () {
              return t.isListType;
            },
          }),
          Object.defineProperty(exports, 'isNonNullType', {
            enumerable: !0,
            get: function () {
              return t.isNonNullType;
            },
          }),
          Object.defineProperty(exports, 'isInputType', {
            enumerable: !0,
            get: function () {
              return t.isInputType;
            },
          }),
          Object.defineProperty(exports, 'isOutputType', {
            enumerable: !0,
            get: function () {
              return t.isOutputType;
            },
          }),
          Object.defineProperty(exports, 'isLeafType', {
            enumerable: !0,
            get: function () {
              return t.isLeafType;
            },
          }),
          Object.defineProperty(exports, 'isCompositeType', {
            enumerable: !0,
            get: function () {
              return t.isCompositeType;
            },
          }),
          Object.defineProperty(exports, 'isAbstractType', {
            enumerable: !0,
            get: function () {
              return t.isAbstractType;
            },
          }),
          Object.defineProperty(exports, 'isWrappingType', {
            enumerable: !0,
            get: function () {
              return t.isWrappingType;
            },
          }),
          Object.defineProperty(exports, 'isNullableType', {
            enumerable: !0,
            get: function () {
              return t.isNullableType;
            },
          }),
          Object.defineProperty(exports, 'isNamedType', {
            enumerable: !0,
            get: function () {
              return t.isNamedType;
            },
          }),
          Object.defineProperty(exports, 'isRequiredArgument', {
            enumerable: !0,
            get: function () {
              return t.isRequiredArgument;
            },
          }),
          Object.defineProperty(exports, 'isRequiredInputField', {
            enumerable: !0,
            get: function () {
              return t.isRequiredInputField;
            },
          }),
          Object.defineProperty(exports, 'assertType', {
            enumerable: !0,
            get: function () {
              return t.assertType;
            },
          }),
          Object.defineProperty(exports, 'assertScalarType', {
            enumerable: !0,
            get: function () {
              return t.assertScalarType;
            },
          }),
          Object.defineProperty(exports, 'assertObjectType', {
            enumerable: !0,
            get: function () {
              return t.assertObjectType;
            },
          }),
          Object.defineProperty(exports, 'assertInterfaceType', {
            enumerable: !0,
            get: function () {
              return t.assertInterfaceType;
            },
          }),
          Object.defineProperty(exports, 'assertUnionType', {
            enumerable: !0,
            get: function () {
              return t.assertUnionType;
            },
          }),
          Object.defineProperty(exports, 'assertEnumType', {
            enumerable: !0,
            get: function () {
              return t.assertEnumType;
            },
          }),
          Object.defineProperty(exports, 'assertInputObjectType', {
            enumerable: !0,
            get: function () {
              return t.assertInputObjectType;
            },
          }),
          Object.defineProperty(exports, 'assertListType', {
            enumerable: !0,
            get: function () {
              return t.assertListType;
            },
          }),
          Object.defineProperty(exports, 'assertNonNullType', {
            enumerable: !0,
            get: function () {
              return t.assertNonNullType;
            },
          }),
          Object.defineProperty(exports, 'assertInputType', {
            enumerable: !0,
            get: function () {
              return t.assertInputType;
            },
          }),
          Object.defineProperty(exports, 'assertOutputType', {
            enumerable: !0,
            get: function () {
              return t.assertOutputType;
            },
          }),
          Object.defineProperty(exports, 'assertLeafType', {
            enumerable: !0,
            get: function () {
              return t.assertLeafType;
            },
          }),
          Object.defineProperty(exports, 'assertCompositeType', {
            enumerable: !0,
            get: function () {
              return t.assertCompositeType;
            },
          }),
          Object.defineProperty(exports, 'assertAbstractType', {
            enumerable: !0,
            get: function () {
              return t.assertAbstractType;
            },
          }),
          Object.defineProperty(exports, 'assertWrappingType', {
            enumerable: !0,
            get: function () {
              return t.assertWrappingType;
            },
          }),
          Object.defineProperty(exports, 'assertNullableType', {
            enumerable: !0,
            get: function () {
              return t.assertNullableType;
            },
          }),
          Object.defineProperty(exports, 'assertNamedType', {
            enumerable: !0,
            get: function () {
              return t.assertNamedType;
            },
          }),
          Object.defineProperty(exports, 'getNullableType', {
            enumerable: !0,
            get: function () {
              return t.getNullableType;
            },
          }),
          Object.defineProperty(exports, 'getNamedType', {
            enumerable: !0,
            get: function () {
              return t.getNamedType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLScalarType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLScalarType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLObjectType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLObjectType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLInterfaceType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLInterfaceType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLUnionType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLUnionType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLEnumType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLEnumType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLInputObjectType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLInputObjectType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLList', {
            enumerable: !0,
            get: function () {
              return t.GraphQLList;
            },
          }),
          Object.defineProperty(exports, 'GraphQLNonNull', {
            enumerable: !0,
            get: function () {
              return t.GraphQLNonNull;
            },
          }),
          Object.defineProperty(exports, 'isDirective', {
            enumerable: !0,
            get: function () {
              return r.isDirective;
            },
          }),
          Object.defineProperty(exports, 'assertDirective', {
            enumerable: !0,
            get: function () {
              return r.assertDirective;
            },
          }),
          Object.defineProperty(exports, 'GraphQLDirective', {
            enumerable: !0,
            get: function () {
              return r.GraphQLDirective;
            },
          }),
          Object.defineProperty(exports, 'isSpecifiedDirective', {
            enumerable: !0,
            get: function () {
              return r.isSpecifiedDirective;
            },
          }),
          Object.defineProperty(exports, 'specifiedDirectives', {
            enumerable: !0,
            get: function () {
              return r.specifiedDirectives;
            },
          }),
          Object.defineProperty(exports, 'GraphQLIncludeDirective', {
            enumerable: !0,
            get: function () {
              return r.GraphQLIncludeDirective;
            },
          }),
          Object.defineProperty(exports, 'GraphQLSkipDirective', {
            enumerable: !0,
            get: function () {
              return r.GraphQLSkipDirective;
            },
          }),
          Object.defineProperty(exports, 'GraphQLDeprecatedDirective', {
            enumerable: !0,
            get: function () {
              return r.GraphQLDeprecatedDirective;
            },
          }),
          Object.defineProperty(exports, 'GraphQLSpecifiedByDirective', {
            enumerable: !0,
            get: function () {
              return r.GraphQLSpecifiedByDirective;
            },
          }),
          Object.defineProperty(exports, 'DEFAULT_DEPRECATION_REASON', {
            enumerable: !0,
            get: function () {
              return r.DEFAULT_DEPRECATION_REASON;
            },
          }),
          Object.defineProperty(exports, 'isSpecifiedScalarType', {
            enumerable: !0,
            get: function () {
              return n.isSpecifiedScalarType;
            },
          }),
          Object.defineProperty(exports, 'specifiedScalarTypes', {
            enumerable: !0,
            get: function () {
              return n.specifiedScalarTypes;
            },
          }),
          Object.defineProperty(exports, 'GraphQLInt', {
            enumerable: !0,
            get: function () {
              return n.GraphQLInt;
            },
          }),
          Object.defineProperty(exports, 'GraphQLFloat', {
            enumerable: !0,
            get: function () {
              return n.GraphQLFloat;
            },
          }),
          Object.defineProperty(exports, 'GraphQLString', {
            enumerable: !0,
            get: function () {
              return n.GraphQLString;
            },
          }),
          Object.defineProperty(exports, 'GraphQLBoolean', {
            enumerable: !0,
            get: function () {
              return n.GraphQLBoolean;
            },
          }),
          Object.defineProperty(exports, 'GraphQLID', {
            enumerable: !0,
            get: function () {
              return n.GraphQLID;
            },
          }),
          Object.defineProperty(exports, 'isIntrospectionType', {
            enumerable: !0,
            get: function () {
              return p.isIntrospectionType;
            },
          }),
          Object.defineProperty(exports, 'introspectionTypes', {
            enumerable: !0,
            get: function () {
              return p.introspectionTypes;
            },
          }),
          Object.defineProperty(exports, '__Schema', {
            enumerable: !0,
            get: function () {
              return p.__Schema;
            },
          }),
          Object.defineProperty(exports, '__Directive', {
            enumerable: !0,
            get: function () {
              return p.__Directive;
            },
          }),
          Object.defineProperty(exports, '__DirectiveLocation', {
            enumerable: !0,
            get: function () {
              return p.__DirectiveLocation;
            },
          }),
          Object.defineProperty(exports, '__Type', {
            enumerable: !0,
            get: function () {
              return p.__Type;
            },
          }),
          Object.defineProperty(exports, '__Field', {
            enumerable: !0,
            get: function () {
              return p.__Field;
            },
          }),
          Object.defineProperty(exports, '__InputValue', {
            enumerable: !0,
            get: function () {
              return p.__InputValue;
            },
          }),
          Object.defineProperty(exports, '__EnumValue', {
            enumerable: !0,
            get: function () {
              return p.__EnumValue;
            },
          }),
          Object.defineProperty(exports, '__TypeKind', {
            enumerable: !0,
            get: function () {
              return p.__TypeKind;
            },
          }),
          Object.defineProperty(exports, 'TypeKind', {
            enumerable: !0,
            get: function () {
              return p.TypeKind;
            },
          }),
          Object.defineProperty(exports, 'SchemaMetaFieldDef', {
            enumerable: !0,
            get: function () {
              return p.SchemaMetaFieldDef;
            },
          }),
          Object.defineProperty(exports, 'TypeMetaFieldDef', {
            enumerable: !0,
            get: function () {
              return p.TypeMetaFieldDef;
            },
          }),
          Object.defineProperty(exports, 'TypeNameMetaFieldDef', {
            enumerable: !0,
            get: function () {
              return p.TypeNameMetaFieldDef;
            },
          }),
          Object.defineProperty(exports, 'validateSchema', {
            enumerable: !0,
            get: function () {
              return i.validateSchema;
            },
          }),
          Object.defineProperty(exports, 'assertValidSchema', {
            enumerable: !0,
            get: function () {
              return i.assertValidSchema;
            },
          });
        var e = require('./schema.mjs'),
          t = require('./definition.mjs'),
          r = require('./directives.mjs'),
          n = require('./scalars.mjs'),
          p = require('./introspection.mjs'),
          i = require('./validate.mjs');
      },
      {
        './schema.mjs': 'CzLQ',
        './definition.mjs': 'ENJe',
        './directives.mjs': 'sei5',
        './scalars.mjs': 'rv3t',
        './introspection.mjs': 'Y3NB',
        './validate.mjs': 'ibgb',
      },
    ],
    AddW: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          Object.defineProperty(exports, 'Source', {
            enumerable: !0,
            get: function () {
              return e.Source;
            },
          }),
          Object.defineProperty(exports, 'getLocation', {
            enumerable: !0,
            get: function () {
              return t.getLocation;
            },
          }),
          Object.defineProperty(exports, 'printLocation', {
            enumerable: !0,
            get: function () {
              return r.printLocation;
            },
          }),
          Object.defineProperty(exports, 'printSourceLocation', {
            enumerable: !0,
            get: function () {
              return r.printSourceLocation;
            },
          }),
          Object.defineProperty(exports, 'Kind', {
            enumerable: !0,
            get: function () {
              return n.Kind;
            },
          }),
          Object.defineProperty(exports, 'TokenKind', {
            enumerable: !0,
            get: function () {
              return i.TokenKind;
            },
          }),
          Object.defineProperty(exports, 'Lexer', {
            enumerable: !0,
            get: function () {
              return o.Lexer;
            },
          }),
          Object.defineProperty(exports, 'parse', {
            enumerable: !0,
            get: function () {
              return u.parse;
            },
          }),
          Object.defineProperty(exports, 'parseValue', {
            enumerable: !0,
            get: function () {
              return u.parseValue;
            },
          }),
          Object.defineProperty(exports, 'parseType', {
            enumerable: !0,
            get: function () {
              return u.parseType;
            },
          }),
          Object.defineProperty(exports, 'print', {
            enumerable: !0,
            get: function () {
              return s.print;
            },
          }),
          Object.defineProperty(exports, 'visit', {
            enumerable: !0,
            get: function () {
              return p.visit;
            },
          }),
          Object.defineProperty(exports, 'visitInParallel', {
            enumerable: !0,
            get: function () {
              return p.visitInParallel;
            },
          }),
          Object.defineProperty(exports, 'getVisitFn', {
            enumerable: !0,
            get: function () {
              return p.getVisitFn;
            },
          }),
          Object.defineProperty(exports, 'BREAK', {
            enumerable: !0,
            get: function () {
              return p.BREAK;
            },
          }),
          Object.defineProperty(exports, 'Location', {
            enumerable: !0,
            get: function () {
              return c.Location;
            },
          }),
          Object.defineProperty(exports, 'Token', {
            enumerable: !0,
            get: function () {
              return c.Token;
            },
          }),
          Object.defineProperty(exports, 'isDefinitionNode', {
            enumerable: !0,
            get: function () {
              return f.isDefinitionNode;
            },
          }),
          Object.defineProperty(exports, 'isExecutableDefinitionNode', {
            enumerable: !0,
            get: function () {
              return f.isExecutableDefinitionNode;
            },
          }),
          Object.defineProperty(exports, 'isSelectionNode', {
            enumerable: !0,
            get: function () {
              return f.isSelectionNode;
            },
          }),
          Object.defineProperty(exports, 'isValueNode', {
            enumerable: !0,
            get: function () {
              return f.isValueNode;
            },
          }),
          Object.defineProperty(exports, 'isTypeNode', {
            enumerable: !0,
            get: function () {
              return f.isTypeNode;
            },
          }),
          Object.defineProperty(exports, 'isTypeSystemDefinitionNode', {
            enumerable: !0,
            get: function () {
              return f.isTypeSystemDefinitionNode;
            },
          }),
          Object.defineProperty(exports, 'isTypeDefinitionNode', {
            enumerable: !0,
            get: function () {
              return f.isTypeDefinitionNode;
            },
          }),
          Object.defineProperty(exports, 'isTypeSystemExtensionNode', {
            enumerable: !0,
            get: function () {
              return f.isTypeSystemExtensionNode;
            },
          }),
          Object.defineProperty(exports, 'isTypeExtensionNode', {
            enumerable: !0,
            get: function () {
              return f.isTypeExtensionNode;
            },
          }),
          Object.defineProperty(exports, 'DirectiveLocation', {
            enumerable: !0,
            get: function () {
              return a.DirectiveLocation;
            },
          });
        var e = require('./source.mjs'),
          t = require('./location.mjs'),
          r = require('./printLocation.mjs'),
          n = require('./kinds.mjs'),
          i = require('./tokenKind.mjs'),
          o = require('./lexer.mjs'),
          u = require('./parser.mjs'),
          s = require('./printer.mjs'),
          p = require('./visitor.mjs'),
          c = require('./ast.mjs'),
          f = require('./predicates.mjs'),
          a = require('./directiveLocation.mjs');
      },
      {
        './source.mjs': 'RlJT',
        './location.mjs': 'KRTj',
        './printLocation.mjs': 'ziDg',
        './kinds.mjs': 'HZ3k',
        './tokenKind.mjs': 'Axjv',
        './lexer.mjs': 'ITo1',
        './parser.mjs': 'JHRN',
        './printer.mjs': 'h28C',
        './visitor.mjs': 'PDqk',
        './ast.mjs': 'J7if',
        './predicates.mjs': 'yNJb',
        './directiveLocation.mjs': 'kRNH',
      },
    ],
    llep: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          Object.defineProperty(exports, 'responsePathAsArray', {
            enumerable: !0,
            get: function () {
              return e.pathToArray;
            },
          }),
          Object.defineProperty(exports, 'execute', {
            enumerable: !0,
            get: function () {
              return r.execute;
            },
          }),
          Object.defineProperty(exports, 'executeSync', {
            enumerable: !0,
            get: function () {
              return r.executeSync;
            },
          }),
          Object.defineProperty(exports, 'defaultFieldResolver', {
            enumerable: !0,
            get: function () {
              return r.defaultFieldResolver;
            },
          }),
          Object.defineProperty(exports, 'defaultTypeResolver', {
            enumerable: !0,
            get: function () {
              return r.defaultTypeResolver;
            },
          }),
          Object.defineProperty(exports, 'getDirectiveValues', {
            enumerable: !0,
            get: function () {
              return t.getDirectiveValues;
            },
          });
        var e = require('../jsutils/Path.mjs'),
          r = require('./execute.mjs'),
          t = require('./values.mjs');
      },
      {
        '../jsutils/Path.mjs': 'Umcb',
        './execute.mjs': 'rlon',
        './values.mjs': 'sniH',
      },
    ],
    i3u0: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
        var o = require('../polyfills/symbols.mjs');
        function t(o) {
          return (t =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (o) {
                  return typeof o;
                }
              : function (o) {
                  return o &&
                    'function' == typeof Symbol &&
                    o.constructor === Symbol &&
                    o !== Symbol.prototype
                    ? 'symbol'
                    : typeof o;
                })(o);
        }
        function e(e) {
          return (
            null != e &&
            'object' === t(e) &&
            'function' == typeof e[o.SYMBOL_ASYNC_ITERATOR]
          );
        }
      },
      { '../polyfills/symbols.mjs': 'jjn7' },
    ],
    yITt: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = r);
        var e = require('../polyfills/symbols.mjs');
        function n(e, n, r) {
          return (
            n in e
              ? Object.defineProperty(e, n, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[n] = r),
            e
          );
        }
        function r(r, o, i) {
          var c,
            f,
            l,
            a = r[e.SYMBOL_ASYNC_ITERATOR].call(r);
          function s(e) {
            return e.done ? e : t(e.value, o).then(u, f);
          }
          if (
            ('function' == typeof a.return &&
              ((c = a.return),
              (f = function (e) {
                var n = function () {
                  return Promise.reject(e);
                };
                return c.call(a).then(n, n);
              })),
            i)
          ) {
            var h = i;
            l = function (e) {
              return t(e, h).then(u, f);
            };
          }
          return n(
            {
              next: function () {
                return a.next().then(s, l);
              },
              return: function () {
                return c
                  ? c.call(a).then(s, l)
                  : Promise.resolve({ value: void 0, done: !0 });
              },
              throw: function (e) {
                return 'function' == typeof a.throw
                  ? a.throw(e).then(s, l)
                  : Promise.reject(e).catch(f);
              },
            },
            e.SYMBOL_ASYNC_ITERATOR,
            function () {
              return this;
            }
          );
        }
        function t(e, n) {
          return new Promise(function (r) {
            return r(n(e));
          });
        }
        function u(e) {
          return { value: e, done: !1 };
        }
      },
      { '../polyfills/symbols.mjs': 'jjn7' },
    ],
    uM7O: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.subscribe = c),
          (exports.createSourceEventStream = m);
        var e = l(require('../jsutils/inspect.mjs')),
          r = l(require('../jsutils/isAsyncIterable.mjs')),
          t = require('../jsutils/Path.mjs'),
          o = require('../error/GraphQLError.mjs'),
          n = require('../error/locatedError.mjs'),
          u = require('../execution/values.mjs'),
          i = require('../execution/execute.mjs'),
          a = require('../utilities/getOperationRootType.mjs'),
          s = l(require('./mapAsyncIterator.mjs'));
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function c(e, r, t, o, n, u, i, a) {
          return 1 === arguments.length
            ? f(e)
            : f({
                schema: e,
                document: r,
                rootValue: t,
                contextValue: o,
                variableValues: n,
                operationName: u,
                fieldResolver: i,
                subscribeFieldResolver: a,
              });
        }
        function d(e) {
          if (e instanceof o.GraphQLError) return { errors: [e] };
          throw e;
        }
        function f(e) {
          var t = e.schema,
            o = e.document,
            n = e.rootValue,
            u = e.contextValue,
            a = e.variableValues,
            l = e.operationName,
            c = e.fieldResolver,
            f = e.subscribeFieldResolver,
            v = m(t, o, n, u, a, l, f),
            b = function (e) {
              return (0, i.execute)({
                schema: t,
                document: o,
                rootValue: e,
                contextValue: u,
                variableValues: a,
                operationName: l,
                fieldResolver: c,
              });
            };
          return v.then(function (e) {
            return (0, r.default)(e) ? (0, s.default)(e, b, d) : e;
          });
        }
        function m(e, r, t, o, n, u, a) {
          return (
            (0, i.assertValidExecutionArguments)(e, r, n),
            new Promise(function (s) {
              var l = (0, i.buildExecutionContext)(e, r, t, o, n, u, a);
              s(Array.isArray(l) ? { errors: l } : v(l));
            }).catch(d)
          );
        }
        function v(s) {
          var l = s.schema,
            c = s.operation,
            d = s.variableValues,
            f = s.rootValue,
            m = (0, a.getOperationRootType)(l, c),
            v = (0, i.collectFields)(
              s,
              m,
              c.selectionSet,
              Object.create(null),
              Object.create(null)
            ),
            b = Object.keys(v)[0],
            h = v[b],
            p = h[0].name.value,
            j = (0, i.getFieldDef)(l, m, p);
          if (!j)
            throw new o.GraphQLError(
              'The subscription field "'.concat(p, '" is not defined.'),
              h
            );
          var x = (0, t.addPath)(void 0, b, m.name),
            V = (0, i.buildResolveInfo)(s, j, h, m, x);
          return new Promise(function (e) {
            var r,
              t = (0, u.getArgumentValues)(j, h[0], d),
              o = s.contextValue;
            e(
              (null !== (r = j.subscribe) && void 0 !== r
                ? r
                : s.fieldResolver)(f, t, o, V)
            );
          }).then(
            function (o) {
              if (o instanceof Error)
                throw (0, n.locatedError)(o, h, (0, t.pathToArray)(x));
              if (!(0, r.default)(o))
                throw new Error(
                  'Subscription field must return Async Iterable. ' +
                    'Received: '.concat((0, e.default)(o), '.')
                );
              return o;
            },
            function (e) {
              throw (0, n.locatedError)(e, h, (0, t.pathToArray)(x));
            }
          );
        }
      },
      {
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/isAsyncIterable.mjs': 'i3u0',
        '../jsutils/Path.mjs': 'Umcb',
        '../error/GraphQLError.mjs': 'nXOl',
        '../error/locatedError.mjs': 'l6Q0',
        '../execution/values.mjs': 'sniH',
        '../execution/execute.mjs': 'rlon',
        '../utilities/getOperationRootType.mjs': 'Rx0U',
        './mapAsyncIterator.mjs': 'yITt',
      },
    ],
    Hvoe: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          Object.defineProperty(exports, 'subscribe', {
            enumerable: !0,
            get: function () {
              return e.subscribe;
            },
          }),
          Object.defineProperty(exports, 'createSourceEventStream', {
            enumerable: !0,
            get: function () {
              return e.createSourceEventStream;
            },
          });
        var e = require('./subscribe.mjs');
      },
      { './subscribe.mjs': 'uM7O' },
    ],
    cTHe: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.NoDeprecatedCustomRule = a);
        var e = t(require('../../../jsutils/invariant.mjs')),
          r = require('../../../error/GraphQLError.mjs'),
          n = require('../../../type/definition.mjs');
        function t(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function a(t) {
          return {
            Field: function (n) {
              var a = t.getFieldDef(),
                o = null == a ? void 0 : a.deprecationReason;
              if (a && null != o) {
                var c = t.getParentType();
                null != c || (0, e.default)(0),
                  t.reportError(
                    new r.GraphQLError(
                      'The field '
                        .concat(c.name, '.')
                        .concat(a.name, ' is deprecated. ')
                        .concat(o),
                      n
                    )
                  );
              }
            },
            Argument: function (n) {
              var a = t.getArgument(),
                o = null == a ? void 0 : a.deprecationReason;
              if (a && null != o) {
                var c = t.getDirective();
                if (null != c)
                  t.reportError(
                    new r.GraphQLError(
                      'Directive "@'
                        .concat(c.name, '" argument "')
                        .concat(a.name, '" is deprecated. ')
                        .concat(o),
                      n
                    )
                  );
                else {
                  var u = t.getParentType(),
                    i = t.getFieldDef();
                  (null != u && null != i) || (0, e.default)(0),
                    t.reportError(
                      new r.GraphQLError(
                        'Field "'
                          .concat(u.name, '.')
                          .concat(i.name, '" argument "')
                          .concat(a.name, '" is deprecated. ')
                          .concat(o),
                        n
                      )
                    );
                }
              }
            },
            ObjectField: function (e) {
              var a = (0, n.getNamedType)(t.getParentInputType());
              if ((0, n.isInputObjectType)(a)) {
                var o = a.getFields()[e.name.value],
                  c = null == o ? void 0 : o.deprecationReason;
                null != c &&
                  t.reportError(
                    new r.GraphQLError(
                      'The input field '
                        .concat(a.name, '.')
                        .concat(o.name, ' is deprecated. ')
                        .concat(c),
                      e
                    )
                  );
              }
            },
            EnumValue: function (a) {
              var o = t.getEnumValue(),
                c = null == o ? void 0 : o.deprecationReason;
              if (o && null != c) {
                var u = (0, n.getNamedType)(t.getInputType());
                null != u || (0, e.default)(0),
                  t.reportError(
                    new r.GraphQLError(
                      'The enum value "'
                        .concat(u.name, '.')
                        .concat(o.name, '" is deprecated. ')
                        .concat(c),
                      a
                    )
                  );
              }
            },
          };
        }
      },
      {
        '../../../jsutils/invariant.mjs': 'hYEN',
        '../../../error/GraphQLError.mjs': 'nXOl',
        '../../../type/definition.mjs': 'ENJe',
      },
    ],
    anmw: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.NoSchemaIntrospectionCustomRule = o);
        var e = require('../../../error/GraphQLError.mjs'),
          r = require('../../../type/definition.mjs'),
          t = require('../../../type/introspection.mjs');
        function o(o) {
          return {
            Field: function (n) {
              var i = (0, r.getNamedType)(o.getType());
              i &&
                (0, t.isIntrospectionType)(i) &&
                o.reportError(
                  new e.GraphQLError(
                    'GraphQL introspection has been disabled, but the requested query contained the field "'.concat(
                      n.name.value,
                      '".'
                    ),
                    n
                  )
                );
            },
          };
        }
      },
      {
        '../../../error/GraphQLError.mjs': 'nXOl',
        '../../../type/definition.mjs': 'ENJe',
        '../../../type/introspection.mjs': 'Y3NB',
      },
    ],
    ezhQ: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          Object.defineProperty(exports, 'validate', {
            enumerable: !0,
            get: function () {
              return e.validate;
            },
          }),
          Object.defineProperty(exports, 'ValidationContext', {
            enumerable: !0,
            get: function () {
              return r.ValidationContext;
            },
          }),
          Object.defineProperty(exports, 'specifiedRules', {
            enumerable: !0,
            get: function () {
              return u.specifiedRules;
            },
          }),
          Object.defineProperty(exports, 'ExecutableDefinitionsRule', {
            enumerable: !0,
            get: function () {
              return n.ExecutableDefinitionsRule;
            },
          }),
          Object.defineProperty(exports, 'FieldsOnCorrectTypeRule', {
            enumerable: !0,
            get: function () {
              return t.FieldsOnCorrectTypeRule;
            },
          }),
          Object.defineProperty(exports, 'FragmentsOnCompositeTypesRule', {
            enumerable: !0,
            get: function () {
              return i.FragmentsOnCompositeTypesRule;
            },
          }),
          Object.defineProperty(exports, 'KnownArgumentNamesRule', {
            enumerable: !0,
            get: function () {
              return s.KnownArgumentNamesRule;
            },
          }),
          Object.defineProperty(exports, 'KnownDirectivesRule', {
            enumerable: !0,
            get: function () {
              return l.KnownDirectivesRule;
            },
          }),
          Object.defineProperty(exports, 'KnownFragmentNamesRule', {
            enumerable: !0,
            get: function () {
              return o.KnownFragmentNamesRule;
            },
          }),
          Object.defineProperty(exports, 'KnownTypeNamesRule', {
            enumerable: !0,
            get: function () {
              return a.KnownTypeNamesRule;
            },
          }),
          Object.defineProperty(exports, 'LoneAnonymousOperationRule', {
            enumerable: !0,
            get: function () {
              return m.LoneAnonymousOperationRule;
            },
          }),
          Object.defineProperty(exports, 'NoFragmentCyclesRule', {
            enumerable: !0,
            get: function () {
              return p.NoFragmentCyclesRule;
            },
          }),
          Object.defineProperty(exports, 'NoUndefinedVariablesRule', {
            enumerable: !0,
            get: function () {
              return c.NoUndefinedVariablesRule;
            },
          }),
          Object.defineProperty(exports, 'NoUnusedFragmentsRule', {
            enumerable: !0,
            get: function () {
              return R.NoUnusedFragmentsRule;
            },
          }),
          Object.defineProperty(exports, 'NoUnusedVariablesRule', {
            enumerable: !0,
            get: function () {
              return b.NoUnusedVariablesRule;
            },
          }),
          Object.defineProperty(exports, 'OverlappingFieldsCanBeMergedRule', {
            enumerable: !0,
            get: function () {
              return f.OverlappingFieldsCanBeMergedRule;
            },
          }),
          Object.defineProperty(exports, 'PossibleFragmentSpreadsRule', {
            enumerable: !0,
            get: function () {
              return d.PossibleFragmentSpreadsRule;
            },
          }),
          Object.defineProperty(exports, 'ProvidedRequiredArgumentsRule', {
            enumerable: !0,
            get: function () {
              return j.ProvidedRequiredArgumentsRule;
            },
          }),
          Object.defineProperty(exports, 'ScalarLeafsRule', {
            enumerable: !0,
            get: function () {
              return g.ScalarLeafsRule;
            },
          }),
          Object.defineProperty(exports, 'SingleFieldSubscriptionsRule', {
            enumerable: !0,
            get: function () {
              return q.SingleFieldSubscriptionsRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueArgumentNamesRule', {
            enumerable: !0,
            get: function () {
              return y.UniqueArgumentNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueDirectivesPerLocationRule', {
            enumerable: !0,
            get: function () {
              return O.UniqueDirectivesPerLocationRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueFragmentNamesRule', {
            enumerable: !0,
            get: function () {
              return N.UniqueFragmentNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueInputFieldNamesRule', {
            enumerable: !0,
            get: function () {
              return P.UniqueInputFieldNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueOperationNamesRule', {
            enumerable: !0,
            get: function () {
              return x.UniqueOperationNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueVariableNamesRule', {
            enumerable: !0,
            get: function () {
              return U.UniqueVariableNamesRule;
            },
          }),
          Object.defineProperty(exports, 'ValuesOfCorrectTypeRule', {
            enumerable: !0,
            get: function () {
              return F.ValuesOfCorrectTypeRule;
            },
          }),
          Object.defineProperty(exports, 'VariablesAreInputTypesRule', {
            enumerable: !0,
            get: function () {
              return C.VariablesAreInputTypesRule;
            },
          }),
          Object.defineProperty(exports, 'VariablesInAllowedPositionRule', {
            enumerable: !0,
            get: function () {
              return T.VariablesInAllowedPositionRule;
            },
          }),
          Object.defineProperty(exports, 'LoneSchemaDefinitionRule', {
            enumerable: !0,
            get: function () {
              return V.LoneSchemaDefinitionRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueOperationTypesRule', {
            enumerable: !0,
            get: function () {
              return D.UniqueOperationTypesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueTypeNamesRule', {
            enumerable: !0,
            get: function () {
              return v.UniqueTypeNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueEnumValueNamesRule', {
            enumerable: !0,
            get: function () {
              return A.UniqueEnumValueNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueFieldDefinitionNamesRule', {
            enumerable: !0,
            get: function () {
              return S.UniqueFieldDefinitionNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueDirectiveNamesRule', {
            enumerable: !0,
            get: function () {
              return w.UniqueDirectiveNamesRule;
            },
          }),
          Object.defineProperty(exports, 'PossibleTypeExtensionsRule', {
            enumerable: !0,
            get: function () {
              return I.PossibleTypeExtensionsRule;
            },
          }),
          Object.defineProperty(exports, 'NoDeprecatedCustomRule', {
            enumerable: !0,
            get: function () {
              return K.NoDeprecatedCustomRule;
            },
          }),
          Object.defineProperty(exports, 'NoSchemaIntrospectionCustomRule', {
            enumerable: !0,
            get: function () {
              return L.NoSchemaIntrospectionCustomRule;
            },
          });
        var e = require('./validate.mjs'),
          r = require('./ValidationContext.mjs'),
          u = require('./specifiedRules.mjs'),
          n = require('./rules/ExecutableDefinitionsRule.mjs'),
          t = require('./rules/FieldsOnCorrectTypeRule.mjs'),
          i = require('./rules/FragmentsOnCompositeTypesRule.mjs'),
          s = require('./rules/KnownArgumentNamesRule.mjs'),
          l = require('./rules/KnownDirectivesRule.mjs'),
          o = require('./rules/KnownFragmentNamesRule.mjs'),
          a = require('./rules/KnownTypeNamesRule.mjs'),
          m = require('./rules/LoneAnonymousOperationRule.mjs'),
          p = require('./rules/NoFragmentCyclesRule.mjs'),
          c = require('./rules/NoUndefinedVariablesRule.mjs'),
          R = require('./rules/NoUnusedFragmentsRule.mjs'),
          b = require('./rules/NoUnusedVariablesRule.mjs'),
          f = require('./rules/OverlappingFieldsCanBeMergedRule.mjs'),
          d = require('./rules/PossibleFragmentSpreadsRule.mjs'),
          j = require('./rules/ProvidedRequiredArgumentsRule.mjs'),
          g = require('./rules/ScalarLeafsRule.mjs'),
          q = require('./rules/SingleFieldSubscriptionsRule.mjs'),
          y = require('./rules/UniqueArgumentNamesRule.mjs'),
          O = require('./rules/UniqueDirectivesPerLocationRule.mjs'),
          N = require('./rules/UniqueFragmentNamesRule.mjs'),
          P = require('./rules/UniqueInputFieldNamesRule.mjs'),
          x = require('./rules/UniqueOperationNamesRule.mjs'),
          U = require('./rules/UniqueVariableNamesRule.mjs'),
          F = require('./rules/ValuesOfCorrectTypeRule.mjs'),
          C = require('./rules/VariablesAreInputTypesRule.mjs'),
          T = require('./rules/VariablesInAllowedPositionRule.mjs'),
          V = require('./rules/LoneSchemaDefinitionRule.mjs'),
          D = require('./rules/UniqueOperationTypesRule.mjs'),
          v = require('./rules/UniqueTypeNamesRule.mjs'),
          A = require('./rules/UniqueEnumValueNamesRule.mjs'),
          S = require('./rules/UniqueFieldDefinitionNamesRule.mjs'),
          w = require('./rules/UniqueDirectiveNamesRule.mjs'),
          I = require('./rules/PossibleTypeExtensionsRule.mjs'),
          K = require('./rules/custom/NoDeprecatedCustomRule.mjs'),
          L = require('./rules/custom/NoSchemaIntrospectionCustomRule.mjs');
      },
      {
        './validate.mjs': 'w2YI',
        './ValidationContext.mjs': 'JnUq',
        './specifiedRules.mjs': 'WPQ4',
        './rules/ExecutableDefinitionsRule.mjs': 'UQVM',
        './rules/FieldsOnCorrectTypeRule.mjs': 'drEE',
        './rules/FragmentsOnCompositeTypesRule.mjs': 'Yv6f',
        './rules/KnownArgumentNamesRule.mjs': 'mdbM',
        './rules/KnownDirectivesRule.mjs': 'WWGg',
        './rules/KnownFragmentNamesRule.mjs': 'faZp',
        './rules/KnownTypeNamesRule.mjs': 'esbS',
        './rules/LoneAnonymousOperationRule.mjs': 'Phe5',
        './rules/NoFragmentCyclesRule.mjs': 'HKpc',
        './rules/NoUndefinedVariablesRule.mjs': 'qROH',
        './rules/NoUnusedFragmentsRule.mjs': 'U1wp',
        './rules/NoUnusedVariablesRule.mjs': 'UDbU',
        './rules/OverlappingFieldsCanBeMergedRule.mjs': 'xjBd',
        './rules/PossibleFragmentSpreadsRule.mjs': 'QFy5',
        './rules/ProvidedRequiredArgumentsRule.mjs': 'p3wD',
        './rules/ScalarLeafsRule.mjs': 'yHyM',
        './rules/SingleFieldSubscriptionsRule.mjs': 'D8Jo',
        './rules/UniqueArgumentNamesRule.mjs': 'HEPW',
        './rules/UniqueDirectivesPerLocationRule.mjs': 'ZRn6',
        './rules/UniqueFragmentNamesRule.mjs': 'tMSV',
        './rules/UniqueInputFieldNamesRule.mjs': 'ujOt',
        './rules/UniqueOperationNamesRule.mjs': 'Jooo',
        './rules/UniqueVariableNamesRule.mjs': 'P3nJ',
        './rules/ValuesOfCorrectTypeRule.mjs': 'Xva5',
        './rules/VariablesAreInputTypesRule.mjs': 'syHi',
        './rules/VariablesInAllowedPositionRule.mjs': 'S8fJ',
        './rules/LoneSchemaDefinitionRule.mjs': 'akcG',
        './rules/UniqueOperationTypesRule.mjs': 'L5TH',
        './rules/UniqueTypeNamesRule.mjs': 'U1Gu',
        './rules/UniqueEnumValueNamesRule.mjs': 'g8o6',
        './rules/UniqueFieldDefinitionNamesRule.mjs': 'Ppte',
        './rules/UniqueDirectiveNamesRule.mjs': 'rUoz',
        './rules/PossibleTypeExtensionsRule.mjs': 'a9uB',
        './rules/custom/NoDeprecatedCustomRule.mjs': 'cTHe',
        './rules/custom/NoSchemaIntrospectionCustomRule.mjs': 'anmw',
      },
    ],
    PcDs: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.formatError = s);
        var e = r(require('../jsutils/devAssert.mjs'));
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function s(r) {
          var s;
          r || (0, e.default)(0, 'Received null or undefined error.');
          var o =
              null !== (s = r.message) && void 0 !== s
                ? s
                : 'An unknown error occurred.',
            t = r.locations,
            n = r.path,
            u = r.extensions;
          return u
            ? { message: o, locations: t, path: n, extensions: u }
            : { message: o, locations: t, path: n };
        }
      },
      { '../jsutils/devAssert.mjs': 'wvjo' },
    ],
    VGnl: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          Object.defineProperty(exports, 'GraphQLError', {
            enumerable: !0,
            get: function () {
              return r.GraphQLError;
            },
          }),
          Object.defineProperty(exports, 'printError', {
            enumerable: !0,
            get: function () {
              return r.printError;
            },
          }),
          Object.defineProperty(exports, 'syntaxError', {
            enumerable: !0,
            get: function () {
              return e.syntaxError;
            },
          }),
          Object.defineProperty(exports, 'locatedError', {
            enumerable: !0,
            get: function () {
              return t.locatedError;
            },
          }),
          Object.defineProperty(exports, 'formatError', {
            enumerable: !0,
            get: function () {
              return o.formatError;
            },
          });
        var r = require('./GraphQLError.mjs'),
          e = require('./syntaxError.mjs'),
          t = require('./locatedError.mjs'),
          o = require('./formatError.mjs');
      },
      {
        './GraphQLError.mjs': 'nXOl',
        './syntaxError.mjs': 'c9WB',
        './locatedError.mjs': 'l6Q0',
        './formatError.mjs': 'PcDs',
      },
    ],
    ZMGe: [
      function (require, module, exports) {
        'use strict';
        function n(n, e) {
          var t = Object.keys(n);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(n);
            e &&
              (r = r.filter(function (e) {
                return Object.getOwnPropertyDescriptor(n, e).enumerable;
              })),
              t.push.apply(t, r);
          }
          return t;
        }
        function e(e) {
          for (var r = 1; r < arguments.length; r++) {
            var a = null != arguments[r] ? arguments[r] : {};
            r % 2
              ? n(Object(a), !0).forEach(function (n) {
                  t(e, n, a[n]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(a))
              : n(Object(a)).forEach(function (n) {
                  Object.defineProperty(
                    e,
                    n,
                    Object.getOwnPropertyDescriptor(a, n)
                  );
                });
          }
          return e;
        }
        function t(n, e, t) {
          return (
            e in n
              ? Object.defineProperty(n, e, {
                  value: t,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (n[e] = t),
            n
          );
        }
        function r(n) {
          var t = e(
              {
                descriptions: !0,
                specifiedByUrl: !1,
                directiveIsRepeatable: !1,
                schemaDescription: !1,
              },
              n
            ),
            r = t.descriptions ? 'description' : '',
            a = t.specifiedByUrl ? 'specifiedByUrl' : '',
            c = t.directiveIsRepeatable ? 'isRepeatable' : '',
            i = t.schemaDescription ? r : '';
          return '\n    query IntrospectionQuery {\n      __schema {\n        '
            .concat(
              i,
              '\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          '
            )
            .concat(r, '\n          ')
            .concat(
              c,
              '\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      '
            )
            .concat(r, '\n      ')
            .concat(
              a,
              '\n      fields(includeDeprecated: true) {\n        name\n        '
            )
            .concat(
              r,
              '\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        '
            )
            .concat(
              r,
              '\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      '
            )
            .concat(
              r,
              '\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  '
            );
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getIntrospectionQuery = r);
      },
      {},
    ],
    bfu4: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getOperationAST = n);
        var e = require('../language/kinds.mjs');
        function n(n, r) {
          for (var i = null, l = 0, t = n.definitions; l < t.length; l++) {
            var u,
              o = t[l];
            if (o.kind === e.Kind.OPERATION_DEFINITION)
              if (null == r) {
                if (i) return null;
                i = o;
              } else if (
                (null === (u = o.name) || void 0 === u ? void 0 : u.value) === r
              )
                return o;
          }
          return i;
        }
      },
      { '../language/kinds.mjs': 'HZ3k' },
    ],
    NJHr: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.introspectionFromSchema = s);
        var e = o(require('../jsutils/invariant.mjs')),
          r = require('../language/parser.mjs'),
          t = require('../execution/execute.mjs'),
          n = require('./getIntrospectionQuery.mjs');
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function c(e, r) {
          var t = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(e);
            r &&
              (n = n.filter(function (r) {
                return Object.getOwnPropertyDescriptor(e, r).enumerable;
              })),
              t.push.apply(t, n);
          }
          return t;
        }
        function i(e) {
          for (var r = 1; r < arguments.length; r++) {
            var t = null != arguments[r] ? arguments[r] : {};
            r % 2
              ? c(Object(t), !0).forEach(function (r) {
                  u(e, r, t[r]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t))
              : c(Object(t)).forEach(function (r) {
                  Object.defineProperty(
                    e,
                    r,
                    Object.getOwnPropertyDescriptor(t, r)
                  );
                });
          }
          return e;
        }
        function u(e, r, t) {
          return (
            r in e
              ? Object.defineProperty(e, r, {
                  value: t,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[r] = t),
            e
          );
        }
        function s(o, c) {
          var u = i({ directiveIsRepeatable: !0, schemaDescription: !0 }, c),
            s = (0, r.parse)((0, n.getIntrospectionQuery)(u)),
            a = (0, t.executeSync)({ schema: o, document: s });
          return (!a.errors && a.data) || (0, e.default)(0), a.data;
        }
      },
      {
        '../jsutils/invariant.mjs': 'hYEN',
        '../language/parser.mjs': 'JHRN',
        '../execution/execute.mjs': 'rlon',
        './getIntrospectionQuery.mjs': 'ZMGe',
      },
    ],
    NgX9: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.buildClientSchema = f);
        var e = d(require('../polyfills/objectValues.mjs')),
          r = d(require('../jsutils/inspect.mjs')),
          n = d(require('../jsutils/devAssert.mjs')),
          t = d(require('../jsutils/keyValMap.mjs')),
          i = d(require('../jsutils/isObjectLike.mjs')),
          s = require('../language/parser.mjs'),
          a = require('../type/schema.mjs'),
          o = require('../type/directives.mjs'),
          u = require('../type/scalars.mjs'),
          c = require('../type/introspection.mjs'),
          p = require('../type/definition.mjs'),
          l = require('./valueFromAST.mjs');
        function d(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function f(d, f) {
          ((0, i.default)(d) && (0, i.default)(d.__schema)) ||
            (0, n.default)(
              0,
              'Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: '.concat(
                (0, r.default)(d),
                '.'
              )
            );
          for (
            var m = d.__schema,
              y = (0, t.default)(
                m.types,
                function (e) {
                  return e.name;
                },
                function (e) {
                  return (function (e) {
                    if (null != e && null != e.name && null != e.kind)
                      switch (e.kind) {
                        case c.TypeKind.SCALAR:
                          return (
                            (s = e),
                            new p.GraphQLScalarType({
                              name: s.name,
                              description: s.description,
                              specifiedByUrl: s.specifiedByUrl,
                            })
                          );
                        case c.TypeKind.OBJECT:
                          return (
                            (i = e),
                            new p.GraphQLObjectType({
                              name: i.name,
                              description: i.description,
                              interfaces: function () {
                                return N(i);
                              },
                              fields: function () {
                                return V(i);
                              },
                            })
                          );
                        case c.TypeKind.INTERFACE:
                          return (
                            (n = e),
                            new p.GraphQLInterfaceType({
                              name: n.name,
                              description: n.description,
                              interfaces: function () {
                                return N(n);
                              },
                              fields: function () {
                                return V(n);
                              },
                            })
                          );
                        case c.TypeKind.UNION:
                          return (function (e) {
                            if (!e.possibleTypes) {
                              var n = (0, r.default)(e);
                              throw new Error(
                                'Introspection result missing possibleTypes: '.concat(
                                  n,
                                  '.'
                                )
                              );
                            }
                            return new p.GraphQLUnionType({
                              name: e.name,
                              description: e.description,
                              types: function () {
                                return e.possibleTypes.map(q);
                              },
                            });
                          })(e);
                        case c.TypeKind.ENUM:
                          return (function (e) {
                            if (!e.enumValues) {
                              var n = (0, r.default)(e);
                              throw new Error(
                                'Introspection result missing enumValues: '.concat(
                                  n,
                                  '.'
                                )
                              );
                            }
                            return new p.GraphQLEnumType({
                              name: e.name,
                              description: e.description,
                              values: (0, t.default)(
                                e.enumValues,
                                function (e) {
                                  return e.name;
                                },
                                function (e) {
                                  return {
                                    description: e.description,
                                    deprecationReason: e.deprecationReason,
                                  };
                                }
                              ),
                            });
                          })(e);
                        case c.TypeKind.INPUT_OBJECT:
                          return (function (e) {
                            if (!e.inputFields) {
                              var n = (0, r.default)(e);
                              throw new Error(
                                'Introspection result missing inputFields: '.concat(
                                  n,
                                  '.'
                                )
                              );
                            }
                            return new p.GraphQLInputObjectType({
                              name: e.name,
                              description: e.description,
                              fields: function () {
                                return O(e.inputFields);
                              },
                            });
                          })(e);
                      }
                    var n;
                    var i;
                    var s;
                    var a = (0, r.default)(e);
                    throw new Error(
                      'Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: '.concat(
                        a,
                        '.'
                      )
                    );
                  })(e);
                }
              ),
              v = 0,
              w = [].concat(u.specifiedScalarTypes, c.introspectionTypes);
            v < w.length;
            v++
          ) {
            var T = w[v];
            y[T.name] && (y[T.name] = T);
          }
          var h = m.queryType ? q(m.queryType) : null,
            E = m.mutationType ? q(m.mutationType) : null,
            g = m.subscriptionType ? q(m.subscriptionType) : null,
            j = m.directives
              ? m.directives.map(function (e) {
                  if (!e.args) {
                    var n = (0, r.default)(e);
                    throw new Error(
                      'Introspection result missing directive args: '.concat(
                        n,
                        '.'
                      )
                    );
                  }
                  if (!e.locations) {
                    var t = (0, r.default)(e);
                    throw new Error(
                      'Introspection result missing directive locations: '.concat(
                        t,
                        '.'
                      )
                    );
                  }
                  return new o.GraphQLDirective({
                    name: e.name,
                    description: e.description,
                    isRepeatable: e.isRepeatable,
                    locations: e.locations.slice(),
                    args: O(e.args),
                  });
                })
              : [];
          return new a.GraphQLSchema({
            description: m.description,
            query: h,
            mutation: E,
            subscription: g,
            types: (0, e.default)(y),
            directives: j,
            assumeValid: null == f ? void 0 : f.assumeValid,
          });
          function I(e) {
            if (e.kind === c.TypeKind.LIST) {
              var r = e.ofType;
              if (!r)
                throw new Error(
                  'Decorated type deeper than introspection query.'
                );
              return new p.GraphQLList(I(r));
            }
            if (e.kind === c.TypeKind.NON_NULL) {
              var n = e.ofType;
              if (!n)
                throw new Error(
                  'Decorated type deeper than introspection query.'
                );
              var t = I(n);
              return new p.GraphQLNonNull((0, p.assertNullableType)(t));
            }
            return b(e);
          }
          function b(e) {
            var n = e.name;
            if (!n)
              throw new Error(
                'Unknown type reference: '.concat((0, r.default)(e), '.')
              );
            var t = y[n];
            if (!t)
              throw new Error(
                'Invalid or incomplete schema, unknown type: '.concat(
                  n,
                  '. Ensure that a full introspection query is used in order to build a client schema.'
                )
              );
            return t;
          }
          function q(e) {
            return (0, p.assertObjectType)(b(e));
          }
          function L(e) {
            return (0, p.assertInterfaceType)(b(e));
          }
          function N(e) {
            if (null === e.interfaces && e.kind === c.TypeKind.INTERFACE)
              return [];
            if (!e.interfaces) {
              var n = (0, r.default)(e);
              throw new Error(
                'Introspection result missing interfaces: '.concat(n, '.')
              );
            }
            return e.interfaces.map(L);
          }
          function V(e) {
            if (!e.fields)
              throw new Error(
                'Introspection result missing fields: '.concat(
                  (0, r.default)(e),
                  '.'
                )
              );
            return (0, t.default)(
              e.fields,
              function (e) {
                return e.name;
              },
              G
            );
          }
          function G(e) {
            var n = I(e.type);
            if (!(0, p.isOutputType)(n)) {
              var t = (0, r.default)(n);
              throw new Error(
                'Introspection must provide output type for fields, but received: '.concat(
                  t,
                  '.'
                )
              );
            }
            if (!e.args) {
              var i = (0, r.default)(e);
              throw new Error(
                'Introspection result missing field args: '.concat(i, '.')
              );
            }
            return {
              description: e.description,
              deprecationReason: e.deprecationReason,
              type: n,
              args: O(e.args),
            };
          }
          function O(e) {
            return (0, t.default)(
              e,
              function (e) {
                return e.name;
              },
              Q
            );
          }
          function Q(e) {
            var n = I(e.type);
            if (!(0, p.isInputType)(n)) {
              var t = (0, r.default)(n);
              throw new Error(
                'Introspection must provide input type for arguments, but received: '.concat(
                  t,
                  '.'
                )
              );
            }
            var i =
              null != e.defaultValue
                ? (0, l.valueFromAST)((0, s.parseValue)(e.defaultValue), n)
                : void 0;
            return { description: e.description, type: n, defaultValue: i };
          }
        }
      },
      {
        '../polyfills/objectValues.mjs': 'pwpl',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/devAssert.mjs': 'wvjo',
        '../jsutils/keyValMap.mjs': 'K4f5',
        '../jsutils/isObjectLike.mjs': 'QGgI',
        '../language/parser.mjs': 'JHRN',
        '../type/schema.mjs': 'CzLQ',
        '../type/directives.mjs': 'sei5',
        '../type/scalars.mjs': 'rv3t',
        '../type/introspection.mjs': 'Y3NB',
        '../type/definition.mjs': 'ENJe',
        './valueFromAST.mjs': 'HWIe',
      },
    ],
    FXbR: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.extendSchema = O),
          (exports.extendSchemaImpl = S),
          (exports.getDescription = x);
        var e = N(require('../polyfills/objectValues.mjs')),
          n = N(require('../jsutils/keyMap.mjs')),
          t = N(require('../jsutils/inspect.mjs')),
          r = N(require('../jsutils/mapValue.mjs')),
          i = N(require('../jsutils/invariant.mjs')),
          o = N(require('../jsutils/devAssert.mjs')),
          a = require('../language/kinds.mjs'),
          u = require('../language/tokenKind.mjs'),
          s = require('../language/blockString.mjs'),
          l = require('../language/predicates.mjs'),
          c = require('../validation/validate.mjs'),
          d = require('../execution/values.mjs'),
          p = require('../type/schema.mjs'),
          f = require('../type/scalars.mjs'),
          v = require('../type/introspection.mjs'),
          y = require('../type/directives.mjs'),
          T = require('../type/definition.mjs'),
          m = require('./valueFromAST.mjs');
        function N(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function g(e, n) {
          var t = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            n &&
              (r = r.filter(function (n) {
                return Object.getOwnPropertyDescriptor(e, n).enumerable;
              })),
              t.push.apply(t, r);
          }
          return t;
        }
        function h(e) {
          for (var n = 1; n < arguments.length; n++) {
            var t = null != arguments[n] ? arguments[n] : {};
            n % 2
              ? g(Object(t), !0).forEach(function (n) {
                  j(e, n, t[n]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t))
              : g(Object(t)).forEach(function (n) {
                  Object.defineProperty(
                    e,
                    n,
                    Object.getOwnPropertyDescriptor(t, n)
                  );
                });
          }
          return e;
        }
        function j(e, n, t) {
          return (
            n in e
              ? Object.defineProperty(e, n, {
                  value: t,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[n] = t),
            e
          );
        }
        function O(e, n, t) {
          (0, p.assertSchema)(e),
            (null != n && n.kind === a.Kind.DOCUMENT) ||
              (0, o.default)(0, 'Must provide valid Document AST.'),
            !0 !== (null == t ? void 0 : t.assumeValid) &&
              !0 !== (null == t ? void 0 : t.assumeValidSDL) &&
              (0, c.assertValidSDLExtension)(n, e);
          var r = e.toConfig(),
            i = S(r, n, t);
          return r === i ? e : new p.GraphQLSchema(i);
        }
        function S(n, o, u) {
          for (
            var s,
              c,
              d,
              p,
              N,
              g = [],
              j = Object.create(null),
              O = [],
              S = [],
              w = 0,
              A = o.definitions;
            w < A.length;
            w++
          ) {
            var L = A[w];
            if (L.kind === a.Kind.SCHEMA_DEFINITION) N = L;
            else if (L.kind === a.Kind.SCHEMA_EXTENSION) S.push(L);
            else if ((0, l.isTypeDefinitionNode)(L)) g.push(L);
            else if ((0, l.isTypeExtensionNode)(L)) {
              var D = L.name.value,
                _ = j[D];
              j[D] = _ ? _.concat([L]) : [L];
            } else L.kind === a.Kind.DIRECTIVE_DEFINITION && O.push(L);
          }
          if (
            0 === Object.keys(j).length &&
            0 === g.length &&
            0 === O.length &&
            0 === S.length &&
            null == N
          )
            return n;
          for (
            var q = Object.create(null), G = 0, Q = n.types;
            G < Q.length;
            G++
          ) {
            var P = Q[G];
            q[P.name] = R(P);
          }
          for (var k = 0; k < g.length; k++) {
            var C,
              V = g[k],
              K = V.name.value;
            q[K] = null !== (C = I[K]) && void 0 !== C ? C : te(V);
          }
          var U = h(
            h(
              {
                query: n.query && M(n.query),
                mutation: n.mutation && M(n.mutation),
                subscription: n.subscription && M(n.subscription),
              },
              N && H([N])
            ),
            H(S)
          );
          return h(
            h(
              {
                description:
                  null === (s = N) || void 0 === s
                    ? void 0
                    : null === (c = s.description) || void 0 === c
                    ? void 0
                    : c.value,
              },
              U
            ),
            {},
            {
              types: (0, e.default)(q),
              directives: [].concat(
                n.directives.map(function (e) {
                  var n = e.toConfig();
                  return new y.GraphQLDirective(
                    h(h({}, n), {}, { args: (0, r.default)(n.args, B) })
                  );
                }),
                O.map(function (e) {
                  var n = e.locations.map(function (e) {
                    var n = e.value;
                    return n;
                  });
                  return new y.GraphQLDirective({
                    name: e.name.value,
                    description: x(e, u),
                    locations: n,
                    isRepeatable: e.repeatable,
                    args: W(e.arguments),
                    astNode: e,
                  });
                })
              ),
              extensions: void 0,
              astNode: null !== (d = N) && void 0 !== d ? d : n.astNode,
              extensionASTNodes: n.extensionASTNodes.concat(S),
              assumeValid:
                null !== (p = null == u ? void 0 : u.assumeValid) &&
                void 0 !== p &&
                p,
            }
          );
          function F(e) {
            return (0, T.isListType)(e)
              ? new T.GraphQLList(F(e.ofType))
              : (0, T.isNonNullType)(e)
              ? new T.GraphQLNonNull(F(e.ofType))
              : M(e);
          }
          function M(e) {
            return q[e.name];
          }
          function R(e) {
            return (0, v.isIntrospectionType)(e) ||
              (0, f.isSpecifiedScalarType)(e)
              ? e
              : (0, T.isScalarType)(e)
              ? (function (e) {
                  for (
                    var n,
                      t = e.toConfig(),
                      r = null !== (n = j[t.name]) && void 0 !== n ? n : [],
                      i = t.specifiedByUrl,
                      o = 0;
                    o < r.length;
                    o++
                  ) {
                    var a,
                      u = r[o];
                    i = null !== (a = E(u)) && void 0 !== a ? a : i;
                  }
                  return new T.GraphQLScalarType(
                    h(
                      h({}, t),
                      {},
                      {
                        specifiedByUrl: i,
                        extensionASTNodes: t.extensionASTNodes.concat(r),
                      }
                    )
                  );
                })(e)
              : (0, T.isObjectType)(e)
              ? (function (e) {
                  var n,
                    t = e.toConfig(),
                    i = null !== (n = j[t.name]) && void 0 !== n ? n : [];
                  return new T.GraphQLObjectType(
                    h(
                      h({}, t),
                      {},
                      {
                        interfaces: function () {
                          return [].concat(e.getInterfaces().map(M), ee(i));
                        },
                        fields: function () {
                          return h(h({}, (0, r.default)(t.fields, Y)), z(i));
                        },
                        extensionASTNodes: t.extensionASTNodes.concat(i),
                      }
                    )
                  );
                })(e)
              : (0, T.isInterfaceType)(e)
              ? (function (e) {
                  var n,
                    t = e.toConfig(),
                    i = null !== (n = j[t.name]) && void 0 !== n ? n : [];
                  return new T.GraphQLInterfaceType(
                    h(
                      h({}, t),
                      {},
                      {
                        interfaces: function () {
                          return [].concat(e.getInterfaces().map(M), ee(i));
                        },
                        fields: function () {
                          return h(h({}, (0, r.default)(t.fields, Y)), z(i));
                        },
                        extensionASTNodes: t.extensionASTNodes.concat(i),
                      }
                    )
                  );
                })(e)
              : (0, T.isUnionType)(e)
              ? (function (e) {
                  var n,
                    t = e.toConfig(),
                    r = null !== (n = j[t.name]) && void 0 !== n ? n : [];
                  return new T.GraphQLUnionType(
                    h(
                      h({}, t),
                      {},
                      {
                        types: function () {
                          return [].concat(e.getTypes().map(M), ne(r));
                        },
                        extensionASTNodes: t.extensionASTNodes.concat(r),
                      }
                    )
                  );
                })(e)
              : (0, T.isEnumType)(e)
              ? (function (e) {
                  var n,
                    t = e.toConfig(),
                    r = null !== (n = j[e.name]) && void 0 !== n ? n : [];
                  return new T.GraphQLEnumType(
                    h(
                      h({}, t),
                      {},
                      {
                        values: h(h({}, t.values), $(r)),
                        extensionASTNodes: t.extensionASTNodes.concat(r),
                      }
                    )
                  );
                })(e)
              : (0, T.isInputObjectType)(e)
              ? (function (e) {
                  var n,
                    t = e.toConfig(),
                    i = null !== (n = j[t.name]) && void 0 !== n ? n : [];
                  return new T.GraphQLInputObjectType(
                    h(
                      h({}, t),
                      {},
                      {
                        fields: function () {
                          return h(
                            h(
                              {},
                              (0, r.default)(t.fields, function (e) {
                                return h(h({}, e), {}, { type: F(e.type) });
                              })
                            ),
                            Z(i)
                          );
                        },
                        extensionASTNodes: t.extensionASTNodes.concat(i),
                      }
                    )
                  );
                })(e)
              : void (0, i.default)(0, 'Unexpected type: ' + (0, t.default)(e));
          }
          function Y(e) {
            return h(
              h({}, e),
              {},
              { type: F(e.type), args: (0, r.default)(e.args, B) }
            );
          }
          function B(e) {
            return h(h({}, e), {}, { type: F(e.type) });
          }
          function H(e) {
            for (var n = {}, t = 0; t < e.length; t++)
              for (
                var r,
                  i =
                    null !== (r = e[t].operationTypes) && void 0 !== r ? r : [],
                  o = 0;
                o < i.length;
                o++
              ) {
                var a = i[o];
                n[a.operation] = J(a.type);
              }
            return n;
          }
          function J(e) {
            var n,
              t = e.name.value,
              r = null !== (n = I[t]) && void 0 !== n ? n : q[t];
            if (void 0 === r)
              throw new Error('Unknown type: "'.concat(t, '".'));
            return r;
          }
          function X(e) {
            return e.kind === a.Kind.LIST_TYPE
              ? new T.GraphQLList(X(e.type))
              : e.kind === a.Kind.NON_NULL_TYPE
              ? new T.GraphQLNonNull(X(e.type))
              : J(e);
          }
          function z(e) {
            for (var n = Object.create(null), t = 0; t < e.length; t++)
              for (
                var r,
                  i = null !== (r = e[t].fields) && void 0 !== r ? r : [],
                  o = 0;
                o < i.length;
                o++
              ) {
                var a = i[o];
                n[a.name.value] = {
                  type: X(a.type),
                  description: x(a, u),
                  args: W(a.arguments),
                  deprecationReason: b(a),
                  astNode: a,
                };
              }
            return n;
          }
          function W(e) {
            for (
              var n = null != e ? e : [], t = Object.create(null), r = 0;
              r < n.length;
              r++
            ) {
              var i = n[r],
                o = X(i.type);
              t[i.name.value] = {
                type: o,
                description: x(i, u),
                defaultValue: (0, m.valueFromAST)(i.defaultValue, o),
                deprecationReason: b(i),
                astNode: i,
              };
            }
            return t;
          }
          function Z(e) {
            for (var n = Object.create(null), t = 0; t < e.length; t++)
              for (
                var r,
                  i = null !== (r = e[t].fields) && void 0 !== r ? r : [],
                  o = 0;
                o < i.length;
                o++
              ) {
                var a = i[o],
                  s = X(a.type);
                n[a.name.value] = {
                  type: s,
                  description: x(a, u),
                  defaultValue: (0, m.valueFromAST)(a.defaultValue, s),
                  deprecationReason: b(a),
                  astNode: a,
                };
              }
            return n;
          }
          function $(e) {
            for (var n = Object.create(null), t = 0; t < e.length; t++)
              for (
                var r,
                  i = null !== (r = e[t].values) && void 0 !== r ? r : [],
                  o = 0;
                o < i.length;
                o++
              ) {
                var a = i[o];
                n[a.name.value] = {
                  description: x(a, u),
                  deprecationReason: b(a),
                  astNode: a,
                };
              }
            return n;
          }
          function ee(e) {
            for (var n = [], t = 0; t < e.length; t++)
              for (
                var r,
                  i = null !== (r = e[t].interfaces) && void 0 !== r ? r : [],
                  o = 0;
                o < i.length;
                o++
              ) {
                var a = i[o];
                n.push(J(a));
              }
            return n;
          }
          function ne(e) {
            for (var n = [], t = 0; t < e.length; t++)
              for (
                var r,
                  i = null !== (r = e[t].types) && void 0 !== r ? r : [],
                  o = 0;
                o < i.length;
                o++
              ) {
                var a = i[o];
                n.push(J(a));
              }
            return n;
          }
          function te(e) {
            var n,
              r = e.name.value,
              o = x(e, u),
              s = null !== (n = j[r]) && void 0 !== n ? n : [];
            switch (e.kind) {
              case a.Kind.OBJECT_TYPE_DEFINITION:
                var l = s,
                  c = [e].concat(l);
                return new T.GraphQLObjectType({
                  name: r,
                  description: o,
                  interfaces: function () {
                    return ee(c);
                  },
                  fields: function () {
                    return z(c);
                  },
                  astNode: e,
                  extensionASTNodes: l,
                });
              case a.Kind.INTERFACE_TYPE_DEFINITION:
                var d = s,
                  p = [e].concat(d);
                return new T.GraphQLInterfaceType({
                  name: r,
                  description: o,
                  interfaces: function () {
                    return ee(p);
                  },
                  fields: function () {
                    return z(p);
                  },
                  astNode: e,
                  extensionASTNodes: d,
                });
              case a.Kind.ENUM_TYPE_DEFINITION:
                var f = s,
                  v = [e].concat(f);
                return new T.GraphQLEnumType({
                  name: r,
                  description: o,
                  values: $(v),
                  astNode: e,
                  extensionASTNodes: f,
                });
              case a.Kind.UNION_TYPE_DEFINITION:
                var y = s,
                  m = [e].concat(y);
                return new T.GraphQLUnionType({
                  name: r,
                  description: o,
                  types: function () {
                    return ne(m);
                  },
                  astNode: e,
                  extensionASTNodes: y,
                });
              case a.Kind.SCALAR_TYPE_DEFINITION:
                var N = s;
                return new T.GraphQLScalarType({
                  name: r,
                  description: o,
                  specifiedByUrl: E(e),
                  astNode: e,
                  extensionASTNodes: N,
                });
              case a.Kind.INPUT_OBJECT_TYPE_DEFINITION:
                var g = s,
                  h = [e].concat(g);
                return new T.GraphQLInputObjectType({
                  name: r,
                  description: o,
                  fields: function () {
                    return Z(h);
                  },
                  astNode: e,
                  extensionASTNodes: g,
                });
            }
            (0, i.default)(
              0,
              'Unexpected type definition node: ' + (0, t.default)(e)
            );
          }
        }
        var I = (0, n.default)(
          f.specifiedScalarTypes.concat(v.introspectionTypes),
          function (e) {
            return e.name;
          }
        );
        function b(e) {
          var n = (0, d.getDirectiveValues)(y.GraphQLDeprecatedDirective, e);
          return null == n ? void 0 : n.reason;
        }
        function E(e) {
          var n = (0, d.getDirectiveValues)(y.GraphQLSpecifiedByDirective, e);
          return null == n ? void 0 : n.url;
        }
        function x(e, n) {
          if (e.description) return e.description.value;
          if (!0 === (null == n ? void 0 : n.commentDescriptions)) {
            var t = w(e);
            if (void 0 !== t) return (0, s.dedentBlockStringValue)('\n' + t);
          }
        }
        function w(e) {
          var n = e.loc;
          if (n) {
            for (
              var t = [], r = n.startToken.prev;
              null != r &&
              r.kind === u.TokenKind.COMMENT &&
              r.next &&
              r.prev &&
              r.line + 1 === r.next.line &&
              r.line !== r.prev.line;

            ) {
              var i = String(r.value);
              t.push(i), (r = r.prev);
            }
            return t.length > 0 ? t.reverse().join('\n') : void 0;
          }
        }
      },
      {
        '../polyfills/objectValues.mjs': 'pwpl',
        '../jsutils/keyMap.mjs': 'pTwJ',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/mapValue.mjs': 'UTmL',
        '../jsutils/invariant.mjs': 'hYEN',
        '../jsutils/devAssert.mjs': 'wvjo',
        '../language/kinds.mjs': 'HZ3k',
        '../language/tokenKind.mjs': 'Axjv',
        '../language/blockString.mjs': 'SG8m',
        '../language/predicates.mjs': 'yNJb',
        '../validation/validate.mjs': 'w2YI',
        '../execution/values.mjs': 'sniH',
        '../type/schema.mjs': 'CzLQ',
        '../type/scalars.mjs': 'rv3t',
        '../type/introspection.mjs': 'Y3NB',
        '../type/directives.mjs': 'sei5',
        '../type/definition.mjs': 'ENJe',
        './valueFromAST.mjs': 'HWIe',
      },
    ],
    eGp3: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.buildASTSchema = u),
          (exports.buildSchema = o);
        var e = l(require('../jsutils/devAssert.mjs')),
          i = require('../language/kinds.mjs'),
          a = require('../language/parser.mjs'),
          s = require('../validation/validate.mjs'),
          n = require('../type/schema.mjs'),
          r = require('../type/directives.mjs'),
          t = require('./extendSchema.mjs');
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function u(a, l) {
          (null != a && a.kind === i.Kind.DOCUMENT) ||
            (0, e.default)(0, 'Must provide valid Document AST.'),
            !0 !== (null == l ? void 0 : l.assumeValid) &&
              !0 !== (null == l ? void 0 : l.assumeValidSDL) &&
              (0, s.assertValidSDL)(a);
          var u = {
              description: void 0,
              types: [],
              directives: [],
              extensions: void 0,
              extensionASTNodes: [],
              assumeValid: !1,
            },
            o = (0, t.extendSchemaImpl)(u, a, l);
          if (null == o.astNode)
            for (var d = 0, c = o.types; d < c.length; d++) {
              var m = c[d];
              switch (m.name) {
                case 'Query':
                  o.query = m;
                  break;
                case 'Mutation':
                  o.mutation = m;
                  break;
                case 'Subscription':
                  o.subscription = m;
              }
            }
          for (
            var v = o.directives,
              p = function (e) {
                var i = r.specifiedDirectives[e];
                v.every(function (e) {
                  return e.name !== i.name;
                }) && v.push(i);
              },
              S = 0;
            S < r.specifiedDirectives.length;
            S++
          )
            p(S);
          return new n.GraphQLSchema(o);
        }
        function o(e, i) {
          return u(
            (0, a.parse)(e, {
              noLocation: null == i ? void 0 : i.noLocation,
              allowLegacySDLEmptyFields:
                null == i ? void 0 : i.allowLegacySDLEmptyFields,
              allowLegacySDLImplementsInterfaces:
                null == i ? void 0 : i.allowLegacySDLImplementsInterfaces,
              experimentalFragmentVariables:
                null == i ? void 0 : i.experimentalFragmentVariables,
            }),
            {
              commentDescriptions: null == i ? void 0 : i.commentDescriptions,
              assumeValidSDL: null == i ? void 0 : i.assumeValidSDL,
              assumeValid: null == i ? void 0 : i.assumeValid,
            }
          );
        }
      },
      {
        '../jsutils/devAssert.mjs': 'wvjo',
        '../language/kinds.mjs': 'HZ3k',
        '../language/parser.mjs': 'JHRN',
        '../validation/validate.mjs': 'w2YI',
        '../type/schema.mjs': 'CzLQ',
        '../type/directives.mjs': 'sei5',
        './extendSchema.mjs': 'FXbR',
      },
    ],
    ewem: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.lexicographicSortSchema = l);
        var e = s(require('../polyfills/objectValues.mjs')),
          t = s(require('../jsutils/inspect.mjs')),
          r = s(require('../jsutils/invariant.mjs')),
          n = s(require('../jsutils/keyValMap.mjs')),
          i = require('../type/schema.mjs'),
          u = require('../type/directives.mjs'),
          o = require('../type/introspection.mjs'),
          c = require('../type/definition.mjs');
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function f(e, t) {
          var r = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(e);
            t &&
              (n = n.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              r.push.apply(r, n);
          }
          return r;
        }
        function a(e) {
          for (var t = 1; t < arguments.length; t++) {
            var r = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? f(Object(r), !0).forEach(function (t) {
                  p(e, t, r[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
              : f(Object(r)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(r, t)
                  );
                });
          }
          return e;
        }
        function p(e, t, r) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: r,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = r),
            e
          );
        }
        function l(s) {
          var f = s.toConfig(),
            p = (0, n.default)(
              j(f.types),
              function (e) {
                return e.name;
              },
              function (e) {
                if ((0, c.isScalarType)(e) || (0, o.isIntrospectionType)(e))
                  return e;
                if ((0, c.isObjectType)(e)) {
                  var n = e.toConfig();
                  return new c.GraphQLObjectType(
                    a(
                      a({}, n),
                      {},
                      {
                        interfaces: function () {
                          return g(n.interfaces);
                        },
                        fields: function () {
                          return d(n.fields);
                        },
                      }
                    )
                  );
                }
                if ((0, c.isInterfaceType)(e)) {
                  var i = e.toConfig();
                  return new c.GraphQLInterfaceType(
                    a(
                      a({}, i),
                      {},
                      {
                        interfaces: function () {
                          return g(i.interfaces);
                        },
                        fields: function () {
                          return d(i.fields);
                        },
                      }
                    )
                  );
                }
                if ((0, c.isUnionType)(e)) {
                  var u = e.toConfig();
                  return new c.GraphQLUnionType(
                    a(
                      a({}, u),
                      {},
                      {
                        types: function () {
                          return g(u.types);
                        },
                      }
                    )
                  );
                }
                if ((0, c.isEnumType)(e)) {
                  var s = e.toConfig();
                  return new c.GraphQLEnumType(
                    a(a({}, s), {}, { values: y(s.values) })
                  );
                }
                if ((0, c.isInputObjectType)(e)) {
                  var f = e.toConfig();
                  return new c.GraphQLInputObjectType(
                    a(
                      a({}, f),
                      {},
                      {
                        fields: function () {
                          return y(f.fields, function (e) {
                            return a(a({}, e), {}, { type: l(e.type) });
                          });
                        },
                      }
                    )
                  );
                }
                (0, r.default)(0, 'Unexpected type: ' + (0, t.default)(e));
              }
            );
          return new i.GraphQLSchema(
            a(
              a({}, f),
              {},
              {
                types: (0, e.default)(p),
                directives: j(f.directives).map(function (e) {
                  var t = e.toConfig();
                  return new u.GraphQLDirective(
                    a(
                      a({}, t),
                      {},
                      {
                        locations: b(t.locations, function (e) {
                          return e;
                        }),
                        args: v(t.args),
                      }
                    )
                  );
                }),
                query: O(f.query),
                mutation: O(f.mutation),
                subscription: O(f.subscription),
              }
            )
          );
          function l(e) {
            return (0, c.isListType)(e)
              ? new c.GraphQLList(l(e.ofType))
              : (0, c.isNonNullType)(e)
              ? new c.GraphQLNonNull(l(e.ofType))
              : m(e);
          }
          function m(e) {
            return p[e.name];
          }
          function O(e) {
            return e && m(e);
          }
          function v(e) {
            return y(e, function (e) {
              return a(a({}, e), {}, { type: l(e.type) });
            });
          }
          function d(e) {
            return y(e, function (e) {
              return a(a({}, e), {}, { type: l(e.type), args: v(e.args) });
            });
          }
          function g(e) {
            return j(e).map(m);
          }
        }
        function y(e, t) {
          for (
            var r = Object.create(null),
              n = b(Object.keys(e), function (e) {
                return e;
              }),
              i = 0;
            i < n.length;
            i++
          ) {
            var u = n[i],
              o = e[u];
            r[u] = t ? t(o) : o;
          }
          return r;
        }
        function j(e) {
          return b(e, function (e) {
            return e.name;
          });
        }
        function b(e, t) {
          return e.slice().sort(function (e, r) {
            var n = t(e),
              i = t(r);
            return n.localeCompare(i);
          });
        }
      },
      {
        '../polyfills/objectValues.mjs': 'pwpl',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/invariant.mjs': 'hYEN',
        '../jsutils/keyValMap.mjs': 'K4f5',
        '../type/schema.mjs': 'CzLQ',
        '../type/directives.mjs': 'sei5',
        '../type/introspection.mjs': 'Y3NB',
        '../type/definition.mjs': 'ENJe',
      },
    ],
    xUm9: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.printSchema = l),
          (exports.printIntrospectionSchema = f),
          (exports.printType = v);
        var e = s(require('../polyfills/objectValues.mjs')),
          n = s(require('../jsutils/inspect.mjs')),
          t = s(require('../jsutils/invariant.mjs')),
          r = require('../language/printer.mjs'),
          i = require('../language/blockString.mjs'),
          u = require('../type/introspection.mjs'),
          a = require('../type/scalars.mjs'),
          o = require('../type/directives.mjs'),
          c = require('../type/definition.mjs'),
          p = require('./astFromValue.mjs');
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function l(e, n) {
          return d(
            e,
            function (e) {
              return !(0, o.isSpecifiedDirective)(e);
            },
            m,
            n
          );
        }
        function f(e, n) {
          return d(e, o.isSpecifiedDirective, u.isIntrospectionType, n);
        }
        function m(e) {
          return (
            !(0, a.isSpecifiedScalarType)(e) && !(0, u.isIntrospectionType)(e)
          );
        }
        function d(n, t, r, i) {
          var u = n.getDirectives().filter(t),
            a = (0, e.default)(n.getTypeMap()).filter(r);
          return (
            [y(n)]
              .concat(
                u.map(function (e) {
                  return B(e, i);
                }),
                a.map(function (e) {
                  return v(e, i);
                })
              )
              .filter(Boolean)
              .join('\n\n') + '\n'
          );
        }
        function y(e) {
          if (null != e.description || !g(e)) {
            var n = [],
              t = e.getQueryType();
            t && n.push('  query: '.concat(t.name));
            var r = e.getMutationType();
            r && n.push('  mutation: '.concat(r.name));
            var i = e.getSubscriptionType();
            return (
              i && n.push('  subscription: '.concat(i.name)),
              R({}, e) + 'schema {\n'.concat(n.join('\n'), '\n}')
            );
          }
        }
        function g(e) {
          var n = e.getQueryType();
          if (n && 'Query' !== n.name) return !1;
          var t = e.getMutationType();
          if (t && 'Mutation' !== t.name) return !1;
          var r = e.getSubscriptionType();
          return !r || 'Subscription' === r.name;
        }
        function v(e, r) {
          return (0, c.isScalarType)(e)
            ? j(e, r)
            : (0, c.isObjectType)(e)
            ? S(e, r)
            : (0, c.isInterfaceType)(e)
            ? h(e, r)
            : (0, c.isUnionType)(e)
            ? b(e, r)
            : (0, c.isEnumType)(e)
            ? q(e, r)
            : (0, c.isInputObjectType)(e)
            ? F(e, r)
            : void (0, t.default)(0, 'Unexpected type: ' + (0, n.default)(e));
        }
        function j(e, n) {
          return R(n, e) + 'scalar '.concat(e.name) + M(e);
        }
        function T(e) {
          var n = e.getInterfaces();
          return n.length
            ? ' implements ' +
                n
                  .map(function (e) {
                    return e.name;
                  })
                  .join(' & ')
            : '';
        }
        function S(e, n) {
          return R(n, e) + 'type '.concat(e.name) + T(e) + V(n, e);
        }
        function h(e, n) {
          return R(n, e) + 'interface '.concat(e.name) + T(e) + V(n, e);
        }
        function b(e, n) {
          var t = e.getTypes(),
            r = t.length ? ' = ' + t.join(' | ') : '';
          return R(n, e) + 'union ' + e.name + r;
        }
        function q(e, n) {
          var t = e.getValues().map(function (e, t) {
            return R(n, e, '  ', !t) + '  ' + e.name + D(e.deprecationReason);
          });
          return R(n, e) + 'enum '.concat(e.name) + I(t);
        }
        function F(n, t) {
          var r = (0, e.default)(n.getFields()).map(function (e, n) {
            return R(t, e, '  ', !n) + '  ' + x(e);
          });
          return R(t, n) + 'input '.concat(n.name) + I(r);
        }
        function V(n, t) {
          return I(
            (0, e.default)(t.getFields()).map(function (e, t) {
              return (
                R(n, e, '  ', !t) +
                '  ' +
                e.name +
                U(n, e.args, '  ') +
                ': ' +
                String(e.type) +
                D(e.deprecationReason)
              );
            })
          );
        }
        function I(e) {
          return 0 !== e.length ? ' {\n' + e.join('\n') + '\n}' : '';
        }
        function U(e, n) {
          var t =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : '';
          return 0 === n.length
            ? ''
            : n.every(function (e) {
                return !e.description;
              })
            ? '(' + n.map(x).join(', ') + ')'
            : '(\n' +
              n
                .map(function (n, r) {
                  return R(e, n, '  ' + t, !r) + '  ' + t + x(n);
                })
                .join('\n') +
              '\n' +
              t +
              ')';
        }
        function x(e) {
          var n = (0, p.astFromValue)(e.defaultValue, e.type),
            t = e.name + ': ' + String(e.type);
          return (
            n && (t += ' = '.concat((0, r.print)(n))),
            t + D(e.deprecationReason)
          );
        }
        function B(e, n) {
          return (
            R(n, e) +
            'directive @' +
            e.name +
            U(n, e.args) +
            (e.isRepeatable ? ' repeatable' : '') +
            ' on ' +
            e.locations.join(' | ')
          );
        }
        function D(e) {
          if (null == e) return '';
          var n = (0, p.astFromValue)(e, a.GraphQLString);
          return n && e !== o.DEFAULT_DEPRECATION_REASON
            ? ' @deprecated(reason: ' + (0, r.print)(n) + ')'
            : ' @deprecated';
        }
        function M(e) {
          if (null == e.specifiedByUrl) return '';
          var n = e.specifiedByUrl,
            i = (0, p.astFromValue)(n, a.GraphQLString);
          return (
            i ||
              (0, t.default)(
                0,
                'Unexpected null value returned from `astFromValue` for specifiedByUrl'
              ),
            ' @specifiedBy(url: ' + (0, r.print)(i) + ')'
          );
        }
        function R(e, n) {
          var t =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : '',
            r =
              !(arguments.length > 3 && void 0 !== arguments[3]) ||
              arguments[3],
            u = n.description;
          if (null == u) return '';
          if (!0 === (null == e ? void 0 : e.commentDescriptions))
            return _(u, t, r);
          var a = u.length > 70;
          return (
            (t && !r ? '\n' + t : t) +
            (0, i.printBlockString)(u, '', a).replace(/\n/g, '\n' + t) +
            '\n'
          );
        }
        function _(e, n, t) {
          return (
            (n && !t ? '\n' : '') +
            e
              .split('\n')
              .map(function (e) {
                return n + ('' !== e ? '# ' + e : '#');
              })
              .join('\n') +
            '\n'
          );
        }
      },
      {
        '../polyfills/objectValues.mjs': 'pwpl',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/invariant.mjs': 'hYEN',
        '../language/printer.mjs': 'h28C',
        '../language/blockString.mjs': 'SG8m',
        '../type/introspection.mjs': 'Y3NB',
        '../type/scalars.mjs': 'rv3t',
        '../type/directives.mjs': 'sei5',
        '../type/definition.mjs': 'ENJe',
        './astFromValue.mjs': 'kRF4',
      },
    ],
    Gou2: [
      function (require, module, exports) {
        'use strict';
        function e(e) {
          for (var t = [], n = 0; n < e.length; n++) {
            var o = e[n];
            t = t.concat(o.definitions);
          }
          return { kind: 'Document', definitions: t };
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.concatAST = e);
      },
      {},
    ],
    S0W7: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.separateOperations = t);
        var e = require('../language/kinds.mjs'),
          n = require('../language/visitor.mjs');
        function t(t) {
          var a,
            u = [],
            o = Object.create(null);
          (0, n.visit)(t, {
            OperationDefinition: function (e) {
              (a = i(e)), u.push(e);
            },
            FragmentDefinition: function (e) {
              a = e.name.value;
            },
            FragmentSpread: function (e) {
              var n = e.name.value,
                t = o[a];
              void 0 === t && (t = o[a] = Object.create(null)), (t[n] = !0);
            },
          });
          for (
            var c = Object.create(null),
              l = function (n) {
                var a = u[n],
                  l = i(a),
                  f = Object.create(null);
                r(f, o, l),
                  (c[l] = {
                    kind: e.Kind.DOCUMENT,
                    definitions: t.definitions.filter(function (n) {
                      return (
                        n === a ||
                        (n.kind === e.Kind.FRAGMENT_DEFINITION &&
                          f[n.name.value])
                      );
                    }),
                  });
              },
              f = 0;
            f < u.length;
            f++
          )
            l(f);
          return c;
        }
        function i(e) {
          return e.name ? e.name.value : '';
        }
        function r(e, n, t) {
          var i = n[t];
          if (i)
            for (var a = 0, u = Object.keys(i); a < u.length; a++) {
              var o = u[a];
              e[o] || ((e[o] = !0), r(e, n, o));
            }
        }
      },
      { '../language/kinds.mjs': 'HZ3k', '../language/visitor.mjs': 'PDqk' },
    ],
    yIOk: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.stripIgnoredCharacters = t);
        var e = require('../language/source.mjs'),
          n = require('../language/tokenKind.mjs'),
          r = require('../language/lexer.mjs'),
          i = require('../language/blockString.mjs');
        function t(i) {
          for (
            var t = (0, e.isSource)(i) ? i : new e.Source(i),
              o = t.body,
              u = new r.Lexer(t),
              d = '',
              s = !1;
            u.advance().kind !== n.TokenKind.EOF;

          ) {
            var c = u.token,
              l = c.kind,
              g = !(0, r.isPunctuatorTokenKind)(c.kind);
            s && (g || c.kind === n.TokenKind.SPREAD) && (d += ' ');
            var k = o.slice(c.start, c.end);
            l === n.TokenKind.BLOCK_STRING ? (d += a(k)) : (d += k), (s = g);
          }
          return d;
        }
        function a(e) {
          var n = e.slice(3, -3),
            r = (0, i.dedentBlockStringValue)(n);
          (0, i.getBlockStringIndentation)(r) > 0 && (r = '\n' + r);
          var t = r[r.length - 1];
          return (
            (('"' === t && '\\"""' !== r.slice(-4)) || '\\' === t) &&
              (r += '\n'),
            '"""' + r + '"""'
          );
        }
      },
      {
        '../language/source.mjs': 'RlJT',
        '../language/tokenKind.mjs': 'Axjv',
        '../language/lexer.mjs': 'ITo1',
        '../language/blockString.mjs': 'SG8m',
      },
    ],
    AH50: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.findBreakingChanges = l),
          (exports.findDangerousChanges = y),
          (exports.DangerousChangeType = exports.BreakingChangeType = void 0);
        var e = i(require('../polyfills/objectValues.mjs')),
          t = i(require('../jsutils/keyMap.mjs')),
          n = i(require('../jsutils/inspect.mjs')),
          a = i(require('../jsutils/invariant.mjs')),
          r = require('../language/printer.mjs'),
          o = require('../language/visitor.mjs'),
          c = require('../type/scalars.mjs'),
          E = require('../type/definition.mjs'),
          p = require('./astFromValue.mjs');
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function s(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            t &&
              (a = a.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, a);
          }
          return n;
        }
        function u(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? s(Object(n), !0).forEach(function (t) {
                  D(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : s(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        function D(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        var d = Object.freeze({
          TYPE_REMOVED: 'TYPE_REMOVED',
          TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',
          TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',
          VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',
          REQUIRED_INPUT_FIELD_ADDED: 'REQUIRED_INPUT_FIELD_ADDED',
          IMPLEMENTED_INTERFACE_REMOVED: 'IMPLEMENTED_INTERFACE_REMOVED',
          FIELD_REMOVED: 'FIELD_REMOVED',
          FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',
          REQUIRED_ARG_ADDED: 'REQUIRED_ARG_ADDED',
          ARG_REMOVED: 'ARG_REMOVED',
          ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',
          DIRECTIVE_REMOVED: 'DIRECTIVE_REMOVED',
          DIRECTIVE_ARG_REMOVED: 'DIRECTIVE_ARG_REMOVED',
          REQUIRED_DIRECTIVE_ARG_ADDED: 'REQUIRED_DIRECTIVE_ARG_ADDED',
          DIRECTIVE_REPEATABLE_REMOVED: 'DIRECTIVE_REPEATABLE_REMOVED',
          DIRECTIVE_LOCATION_REMOVED: 'DIRECTIVE_LOCATION_REMOVED',
        });
        exports.BreakingChangeType = d;
        var _ = Object.freeze({
          VALUE_ADDED_TO_ENUM: 'VALUE_ADDED_TO_ENUM',
          TYPE_ADDED_TO_UNION: 'TYPE_ADDED_TO_UNION',
          OPTIONAL_INPUT_FIELD_ADDED: 'OPTIONAL_INPUT_FIELD_ADDED',
          OPTIONAL_ARG_ADDED: 'OPTIONAL_ARG_ADDED',
          IMPLEMENTED_INTERFACE_ADDED: 'IMPLEMENTED_INTERFACE_ADDED',
          ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE',
        });
        function l(e, t) {
          return f(e, t).filter(function (e) {
            return e.type in d;
          });
        }
        function y(e, t) {
          return f(e, t).filter(function (e) {
            return e.type in _;
          });
        }
        function f(e, t) {
          return [].concat(T(e, t), m(e, t));
        }
        function m(e, t) {
          for (
            var n = [],
              a = L(e.getDirectives(), t.getDirectives()),
              r = 0,
              o = a.removed;
            r < o.length;
            r++
          ) {
            var c = o[r];
            n.push({
              type: d.DIRECTIVE_REMOVED,
              description: ''.concat(c.name, ' was removed.'),
            });
          }
          for (var p = 0, i = a.persisted; p < i.length; p++) {
            for (
              var s = i[p],
                u = s[0],
                D = s[1],
                _ = L(u.args, D.args),
                l = 0,
                y = _.added;
              l < y.length;
              l++
            ) {
              var f = y[l];
              (0, E.isRequiredArgument)(f) &&
                n.push({
                  type: d.REQUIRED_DIRECTIVE_ARG_ADDED,
                  description: 'A required arg '
                    .concat(f.name, ' on directive ')
                    .concat(u.name, ' was added.'),
                });
            }
            for (var m = 0, T = _.removed; m < T.length; m++) {
              var I = T[m];
              n.push({
                type: d.DIRECTIVE_ARG_REMOVED,
                description: ''
                  .concat(I.name, ' was removed from ')
                  .concat(u.name, '.'),
              });
            }
            u.isRepeatable &&
              !D.isRepeatable &&
              n.push({
                type: d.DIRECTIVE_REPEATABLE_REMOVED,
                description: 'Repeatable flag was removed from '.concat(
                  u.name,
                  '.'
                ),
              });
            for (var R = 0, A = u.locations; R < A.length; R++) {
              var O = A[R];
              -1 === D.locations.indexOf(O) &&
                n.push({
                  type: d.DIRECTIVE_LOCATION_REMOVED,
                  description: ''
                    .concat(O, ' was removed from ')
                    .concat(u.name, '.'),
                });
            }
          }
          return n;
        }
        function T(t, n) {
          for (
            var a = [],
              r = L(
                (0, e.default)(t.getTypeMap()),
                (0, e.default)(n.getTypeMap())
              ),
              o = 0,
              p = r.removed;
            o < p.length;
            o++
          ) {
            var i = p[o];
            a.push({
              type: d.TYPE_REMOVED,
              description: (0, c.isSpecifiedScalarType)(i)
                ? 'Standard scalar '.concat(
                    i.name,
                    ' was removed because it is not referenced anymore.'
                  )
                : ''.concat(i.name, ' was removed.'),
            });
          }
          for (var s = 0, u = r.persisted; s < u.length; s++) {
            var D = u[s],
              _ = D[0],
              l = D[1];
            (0, E.isEnumType)(_) && (0, E.isEnumType)(l)
              ? a.push.apply(a, A(_, l))
              : (0, E.isUnionType)(_) && (0, E.isUnionType)(l)
              ? a.push.apply(a, R(_, l))
              : (0, E.isInputObjectType)(_) && (0, E.isInputObjectType)(l)
              ? a.push.apply(a, I(_, l))
              : (0, E.isObjectType)(_) && (0, E.isObjectType)(l)
              ? a.push.apply(a, v(_, l).concat(O(_, l)))
              : (0, E.isInterfaceType)(_) && (0, E.isInterfaceType)(l)
              ? a.push.apply(a, v(_, l).concat(O(_, l)))
              : _.constructor !== l.constructor &&
                a.push({
                  type: d.TYPE_CHANGED_KIND,
                  description:
                    ''.concat(_.name, ' changed from ') +
                    ''.concat(V(_), ' to ').concat(V(l), '.'),
                });
          }
          return a;
        }
        function I(t, n) {
          for (
            var a = [],
              r = L(
                (0, e.default)(t.getFields()),
                (0, e.default)(n.getFields())
              ),
              o = 0,
              c = r.added;
            o < c.length;
            o++
          ) {
            var p = c[o];
            (0, E.isRequiredInputField)(p)
              ? a.push({
                  type: d.REQUIRED_INPUT_FIELD_ADDED,
                  description: 'A required field '
                    .concat(p.name, ' on input type ')
                    .concat(t.name, ' was added.'),
                })
              : a.push({
                  type: _.OPTIONAL_INPUT_FIELD_ADDED,
                  description: 'An optional field '
                    .concat(p.name, ' on input type ')
                    .concat(t.name, ' was added.'),
                });
          }
          for (var i = 0, s = r.removed; i < s.length; i++) {
            var u = s[i];
            a.push({
              type: d.FIELD_REMOVED,
              description: ''
                .concat(t.name, '.')
                .concat(u.name, ' was removed.'),
            });
          }
          for (var D = 0, l = r.persisted; D < l.length; D++) {
            var y = l[D],
              f = y[0],
              m = y[1];
            h(f.type, m.type) ||
              a.push({
                type: d.FIELD_CHANGED_KIND,
                description:
                  ''.concat(t.name, '.').concat(f.name, ' changed type from ') +
                  ''.concat(String(f.type), ' to ').concat(String(m.type), '.'),
              });
          }
          return a;
        }
        function R(e, t) {
          for (
            var n = [], a = L(e.getTypes(), t.getTypes()), r = 0, o = a.added;
            r < o.length;
            r++
          ) {
            var c = o[r];
            n.push({
              type: _.TYPE_ADDED_TO_UNION,
              description: ''
                .concat(c.name, ' was added to union type ')
                .concat(e.name, '.'),
            });
          }
          for (var E = 0, p = a.removed; E < p.length; E++) {
            var i = p[E];
            n.push({
              type: d.TYPE_REMOVED_FROM_UNION,
              description: ''
                .concat(i.name, ' was removed from union type ')
                .concat(e.name, '.'),
            });
          }
          return n;
        }
        function A(e, t) {
          for (
            var n = [], a = L(e.getValues(), t.getValues()), r = 0, o = a.added;
            r < o.length;
            r++
          ) {
            var c = o[r];
            n.push({
              type: _.VALUE_ADDED_TO_ENUM,
              description: ''
                .concat(c.name, ' was added to enum type ')
                .concat(e.name, '.'),
            });
          }
          for (var E = 0, p = a.removed; E < p.length; E++) {
            var i = p[E];
            n.push({
              type: d.VALUE_REMOVED_FROM_ENUM,
              description: ''
                .concat(i.name, ' was removed from enum type ')
                .concat(e.name, '.'),
            });
          }
          return n;
        }
        function O(e, t) {
          for (
            var n = [],
              a = L(e.getInterfaces(), t.getInterfaces()),
              r = 0,
              o = a.added;
            r < o.length;
            r++
          ) {
            var c = o[r];
            n.push({
              type: _.IMPLEMENTED_INTERFACE_ADDED,
              description: ''
                .concat(c.name, ' added to interfaces implemented by ')
                .concat(e.name, '.'),
            });
          }
          for (var E = 0, p = a.removed; E < p.length; E++) {
            var i = p[E];
            n.push({
              type: d.IMPLEMENTED_INTERFACE_REMOVED,
              description: ''
                .concat(e.name, ' no longer implements interface ')
                .concat(i.name, '.'),
            });
          }
          return n;
        }
        function v(t, n) {
          for (
            var a = [],
              r = L(
                (0, e.default)(t.getFields()),
                (0, e.default)(n.getFields())
              ),
              o = 0,
              c = r.removed;
            o < c.length;
            o++
          ) {
            var E = c[o];
            a.push({
              type: d.FIELD_REMOVED,
              description: ''
                .concat(t.name, '.')
                .concat(E.name, ' was removed.'),
            });
          }
          for (var p = 0, i = r.persisted; p < i.length; p++) {
            var s = i[p],
              u = s[0],
              D = s[1];
            a.push.apply(a, g(t, u, D)),
              N(u.type, D.type) ||
                a.push({
                  type: d.FIELD_CHANGED_KIND,
                  description:
                    ''
                      .concat(t.name, '.')
                      .concat(u.name, ' changed type from ') +
                    ''
                      .concat(String(u.type), ' to ')
                      .concat(String(D.type), '.'),
                });
          }
          return a;
        }
        function g(e, t, n) {
          for (
            var a = [], r = L(t.args, n.args), o = 0, c = r.removed;
            o < c.length;
            o++
          ) {
            var p = c[o];
            a.push({
              type: d.ARG_REMOVED,
              description: ''
                .concat(e.name, '.')
                .concat(t.name, ' arg ')
                .concat(p.name, ' was removed.'),
            });
          }
          for (var i = 0, s = r.persisted; i < s.length; i++) {
            var u = s[i],
              D = u[0],
              l = u[1];
            if (h(D.type, l.type)) {
              if (void 0 !== D.defaultValue)
                if (void 0 === l.defaultValue)
                  a.push({
                    type: _.ARG_DEFAULT_VALUE_CHANGE,
                    description: ''
                      .concat(e.name, '.')
                      .concat(t.name, ' arg ')
                      .concat(D.name, ' defaultValue was removed.'),
                  });
                else {
                  var y = M(D.defaultValue, D.type),
                    f = M(l.defaultValue, l.type);
                  y !== f &&
                    a.push({
                      type: _.ARG_DEFAULT_VALUE_CHANGE,
                      description: ''
                        .concat(e.name, '.')
                        .concat(t.name, ' arg ')
                        .concat(D.name, ' has changed defaultValue from ')
                        .concat(y, ' to ')
                        .concat(f, '.'),
                    });
                }
            } else
              a.push({
                type: d.ARG_CHANGED_KIND,
                description:
                  ''
                    .concat(e.name, '.')
                    .concat(t.name, ' arg ')
                    .concat(D.name, ' has changed type from ') +
                  ''.concat(String(D.type), ' to ').concat(String(l.type), '.'),
              });
          }
          for (var m = 0, T = r.added; m < T.length; m++) {
            var I = T[m];
            (0, E.isRequiredArgument)(I)
              ? a.push({
                  type: d.REQUIRED_ARG_ADDED,
                  description: 'A required arg '
                    .concat(I.name, ' on ')
                    .concat(e.name, '.')
                    .concat(t.name, ' was added.'),
                })
              : a.push({
                  type: _.OPTIONAL_ARG_ADDED,
                  description: 'An optional arg '
                    .concat(I.name, ' on ')
                    .concat(e.name, '.')
                    .concat(t.name, ' was added.'),
                });
          }
          return a;
        }
        function N(e, t) {
          return (0, E.isListType)(e)
            ? ((0, E.isListType)(t) && N(e.ofType, t.ofType)) ||
                ((0, E.isNonNullType)(t) && N(e, t.ofType))
            : (0, E.isNonNullType)(e)
            ? (0, E.isNonNullType)(t) && N(e.ofType, t.ofType)
            : ((0, E.isNamedType)(t) && e.name === t.name) ||
              ((0, E.isNonNullType)(t) && N(e, t.ofType));
        }
        function h(e, t) {
          return (0, E.isListType)(e)
            ? (0, E.isListType)(t) && h(e.ofType, t.ofType)
            : (0, E.isNonNullType)(e)
            ? ((0, E.isNonNullType)(t) && h(e.ofType, t.ofType)) ||
              (!(0, E.isNonNullType)(t) && h(e.ofType, t))
            : (0, E.isNamedType)(t) && e.name === t.name;
        }
        function V(e) {
          return (0, E.isScalarType)(e)
            ? 'a Scalar type'
            : (0, E.isObjectType)(e)
            ? 'an Object type'
            : (0, E.isInterfaceType)(e)
            ? 'an Interface type'
            : (0, E.isUnionType)(e)
            ? 'a Union type'
            : (0, E.isEnumType)(e)
            ? 'an Enum type'
            : (0, E.isInputObjectType)(e)
            ? 'an Input type'
            : void (0, a.default)(0, 'Unexpected type: ' + (0, n.default)(e));
        }
        function M(e, t) {
          var n = (0, p.astFromValue)(e, t);
          null != n || (0, a.default)(0);
          var c = (0, o.visit)(n, {
            ObjectValue: function (e) {
              var t = [].concat(e.fields).sort(function (e, t) {
                return e.name.value.localeCompare(t.name.value);
              });
              return u(u({}, e), {}, { fields: t });
            },
          });
          return (0, r.print)(c);
        }
        function L(e, n) {
          for (
            var a = [],
              r = [],
              o = [],
              c = (0, t.default)(e, function (e) {
                return e.name;
              }),
              E = (0, t.default)(n, function (e) {
                return e.name;
              }),
              p = 0;
            p < e.length;
            p++
          ) {
            var i = e[p],
              s = E[i.name];
            void 0 === s ? r.push(i) : o.push([i, s]);
          }
          for (var u = 0; u < n.length; u++) {
            var D = n[u];
            void 0 === c[D.name] && a.push(D);
          }
          return { added: a, persisted: o, removed: r };
        }
        exports.DangerousChangeType = _;
      },
      {
        '../polyfills/objectValues.mjs': 'pwpl',
        '../jsutils/keyMap.mjs': 'pTwJ',
        '../jsutils/inspect.mjs': 'DIub',
        '../jsutils/invariant.mjs': 'hYEN',
        '../language/printer.mjs': 'h28C',
        '../language/visitor.mjs': 'PDqk',
        '../type/scalars.mjs': 'rv3t',
        '../type/definition.mjs': 'ENJe',
        './astFromValue.mjs': 'kRF4',
      },
    ],
    dFLo: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.findDeprecatedUsages = r);
        var e = require('../validation/validate.mjs'),
          t = require('../validation/rules/custom/NoDeprecatedCustomRule.mjs');
        function r(r, a) {
          return (0, e.validate)(r, a, [t.NoDeprecatedCustomRule]);
        }
      },
      {
        '../validation/validate.mjs': 'w2YI',
        '../validation/rules/custom/NoDeprecatedCustomRule.mjs': 'cTHe',
      },
    ],
    Bwm5: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          Object.defineProperty(exports, 'getIntrospectionQuery', {
            enumerable: !0,
            get: function () {
              return e.getIntrospectionQuery;
            },
          }),
          Object.defineProperty(exports, 'getOperationAST', {
            enumerable: !0,
            get: function () {
              return r.getOperationAST;
            },
          }),
          Object.defineProperty(exports, 'getOperationRootType', {
            enumerable: !0,
            get: function () {
              return t.getOperationRootType;
            },
          }),
          Object.defineProperty(exports, 'introspectionFromSchema', {
            enumerable: !0,
            get: function () {
              return n.introspectionFromSchema;
            },
          }),
          Object.defineProperty(exports, 'buildClientSchema', {
            enumerable: !0,
            get: function () {
              return o.buildClientSchema;
            },
          }),
          Object.defineProperty(exports, 'buildASTSchema', {
            enumerable: !0,
            get: function () {
              return i.buildASTSchema;
            },
          }),
          Object.defineProperty(exports, 'buildSchema', {
            enumerable: !0,
            get: function () {
              return i.buildSchema;
            },
          }),
          Object.defineProperty(exports, 'extendSchema', {
            enumerable: !0,
            get: function () {
              return u.extendSchema;
            },
          }),
          Object.defineProperty(exports, 'getDescription', {
            enumerable: !0,
            get: function () {
              return u.getDescription;
            },
          }),
          Object.defineProperty(exports, 'lexicographicSortSchema', {
            enumerable: !0,
            get: function () {
              return a.lexicographicSortSchema;
            },
          }),
          Object.defineProperty(exports, 'printSchema', {
            enumerable: !0,
            get: function () {
              return p.printSchema;
            },
          }),
          Object.defineProperty(exports, 'printType', {
            enumerable: !0,
            get: function () {
              return p.printType;
            },
          }),
          Object.defineProperty(exports, 'printIntrospectionSchema', {
            enumerable: !0,
            get: function () {
              return p.printIntrospectionSchema;
            },
          }),
          Object.defineProperty(exports, 'typeFromAST', {
            enumerable: !0,
            get: function () {
              return c.typeFromAST;
            },
          }),
          Object.defineProperty(exports, 'valueFromAST', {
            enumerable: !0,
            get: function () {
              return s.valueFromAST;
            },
          }),
          Object.defineProperty(exports, 'valueFromASTUntyped', {
            enumerable: !0,
            get: function () {
              return m.valueFromASTUntyped;
            },
          }),
          Object.defineProperty(exports, 'astFromValue', {
            enumerable: !0,
            get: function () {
              return f.astFromValue;
            },
          }),
          Object.defineProperty(exports, 'TypeInfo', {
            enumerable: !0,
            get: function () {
              return b.TypeInfo;
            },
          }),
          Object.defineProperty(exports, 'visitWithTypeInfo', {
            enumerable: !0,
            get: function () {
              return b.visitWithTypeInfo;
            },
          }),
          Object.defineProperty(exports, 'coerceInputValue', {
            enumerable: !0,
            get: function () {
              return g.coerceInputValue;
            },
          }),
          Object.defineProperty(exports, 'concatAST', {
            enumerable: !0,
            get: function () {
              return d.concatAST;
            },
          }),
          Object.defineProperty(exports, 'separateOperations', {
            enumerable: !0,
            get: function () {
              return l.separateOperations;
            },
          }),
          Object.defineProperty(exports, 'stripIgnoredCharacters', {
            enumerable: !0,
            get: function () {
              return y.stripIgnoredCharacters;
            },
          }),
          Object.defineProperty(exports, 'isEqualType', {
            enumerable: !0,
            get: function () {
              return j.isEqualType;
            },
          }),
          Object.defineProperty(exports, 'isTypeSubTypeOf', {
            enumerable: !0,
            get: function () {
              return j.isTypeSubTypeOf;
            },
          }),
          Object.defineProperty(exports, 'doTypesOverlap', {
            enumerable: !0,
            get: function () {
              return j.doTypesOverlap;
            },
          }),
          Object.defineProperty(exports, 'assertValidName', {
            enumerable: !0,
            get: function () {
              return O.assertValidName;
            },
          }),
          Object.defineProperty(exports, 'isValidNameError', {
            enumerable: !0,
            get: function () {
              return O.isValidNameError;
            },
          }),
          Object.defineProperty(exports, 'BreakingChangeType', {
            enumerable: !0,
            get: function () {
              return S.BreakingChangeType;
            },
          }),
          Object.defineProperty(exports, 'DangerousChangeType', {
            enumerable: !0,
            get: function () {
              return S.DangerousChangeType;
            },
          }),
          Object.defineProperty(exports, 'findBreakingChanges', {
            enumerable: !0,
            get: function () {
              return S.findBreakingChanges;
            },
          }),
          Object.defineProperty(exports, 'findDangerousChanges', {
            enumerable: !0,
            get: function () {
              return S.findDangerousChanges;
            },
          }),
          Object.defineProperty(exports, 'findDeprecatedUsages', {
            enumerable: !0,
            get: function () {
              return x.findDeprecatedUsages;
            },
          });
        var e = require('./getIntrospectionQuery.mjs'),
          r = require('./getOperationAST.mjs'),
          t = require('./getOperationRootType.mjs'),
          n = require('./introspectionFromSchema.mjs'),
          o = require('./buildClientSchema.mjs'),
          i = require('./buildASTSchema.mjs'),
          u = require('./extendSchema.mjs'),
          a = require('./lexicographicSortSchema.mjs'),
          p = require('./printSchema.mjs'),
          c = require('./typeFromAST.mjs'),
          s = require('./valueFromAST.mjs'),
          m = require('./valueFromASTUntyped.mjs'),
          f = require('./astFromValue.mjs'),
          b = require('./TypeInfo.mjs'),
          g = require('./coerceInputValue.mjs'),
          d = require('./concatAST.mjs'),
          l = require('./separateOperations.mjs'),
          y = require('./stripIgnoredCharacters.mjs'),
          j = require('./typeComparators.mjs'),
          O = require('./assertValidName.mjs'),
          S = require('./findBreakingChanges.mjs'),
          x = require('./findDeprecatedUsages.mjs');
      },
      {
        './getIntrospectionQuery.mjs': 'ZMGe',
        './getOperationAST.mjs': 'bfu4',
        './getOperationRootType.mjs': 'Rx0U',
        './introspectionFromSchema.mjs': 'NJHr',
        './buildClientSchema.mjs': 'NgX9',
        './buildASTSchema.mjs': 'eGp3',
        './extendSchema.mjs': 'FXbR',
        './lexicographicSortSchema.mjs': 'ewem',
        './printSchema.mjs': 'xUm9',
        './typeFromAST.mjs': 'vTpZ',
        './valueFromAST.mjs': 'HWIe',
        './valueFromASTUntyped.mjs': 'hlsb',
        './astFromValue.mjs': 'kRF4',
        './TypeInfo.mjs': 'wMED',
        './coerceInputValue.mjs': 'AC1l',
        './concatAST.mjs': 'Gou2',
        './separateOperations.mjs': 'S0W7',
        './stripIgnoredCharacters.mjs': 'yIOk',
        './typeComparators.mjs': 'vGYW',
        './assertValidName.mjs': 'Mvmt',
        './findBreakingChanges.mjs': 'AH50',
        './findDeprecatedUsages.mjs': 'dFLo',
      },
    ],
    lFnJ: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          Object.defineProperty(exports, 'version', {
            enumerable: !0,
            get: function () {
              return e.version;
            },
          }),
          Object.defineProperty(exports, 'versionInfo', {
            enumerable: !0,
            get: function () {
              return e.versionInfo;
            },
          }),
          Object.defineProperty(exports, 'graphql', {
            enumerable: !0,
            get: function () {
              return r.graphql;
            },
          }),
          Object.defineProperty(exports, 'graphqlSync', {
            enumerable: !0,
            get: function () {
              return r.graphqlSync;
            },
          }),
          Object.defineProperty(exports, 'GraphQLSchema', {
            enumerable: !0,
            get: function () {
              return t.GraphQLSchema;
            },
          }),
          Object.defineProperty(exports, 'GraphQLDirective', {
            enumerable: !0,
            get: function () {
              return t.GraphQLDirective;
            },
          }),
          Object.defineProperty(exports, 'GraphQLScalarType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLScalarType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLObjectType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLObjectType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLInterfaceType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLInterfaceType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLUnionType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLUnionType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLEnumType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLEnumType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLInputObjectType', {
            enumerable: !0,
            get: function () {
              return t.GraphQLInputObjectType;
            },
          }),
          Object.defineProperty(exports, 'GraphQLList', {
            enumerable: !0,
            get: function () {
              return t.GraphQLList;
            },
          }),
          Object.defineProperty(exports, 'GraphQLNonNull', {
            enumerable: !0,
            get: function () {
              return t.GraphQLNonNull;
            },
          }),
          Object.defineProperty(exports, 'specifiedScalarTypes', {
            enumerable: !0,
            get: function () {
              return t.specifiedScalarTypes;
            },
          }),
          Object.defineProperty(exports, 'GraphQLInt', {
            enumerable: !0,
            get: function () {
              return t.GraphQLInt;
            },
          }),
          Object.defineProperty(exports, 'GraphQLFloat', {
            enumerable: !0,
            get: function () {
              return t.GraphQLFloat;
            },
          }),
          Object.defineProperty(exports, 'GraphQLString', {
            enumerable: !0,
            get: function () {
              return t.GraphQLString;
            },
          }),
          Object.defineProperty(exports, 'GraphQLBoolean', {
            enumerable: !0,
            get: function () {
              return t.GraphQLBoolean;
            },
          }),
          Object.defineProperty(exports, 'GraphQLID', {
            enumerable: !0,
            get: function () {
              return t.GraphQLID;
            },
          }),
          Object.defineProperty(exports, 'specifiedDirectives', {
            enumerable: !0,
            get: function () {
              return t.specifiedDirectives;
            },
          }),
          Object.defineProperty(exports, 'GraphQLIncludeDirective', {
            enumerable: !0,
            get: function () {
              return t.GraphQLIncludeDirective;
            },
          }),
          Object.defineProperty(exports, 'GraphQLSkipDirective', {
            enumerable: !0,
            get: function () {
              return t.GraphQLSkipDirective;
            },
          }),
          Object.defineProperty(exports, 'GraphQLDeprecatedDirective', {
            enumerable: !0,
            get: function () {
              return t.GraphQLDeprecatedDirective;
            },
          }),
          Object.defineProperty(exports, 'GraphQLSpecifiedByDirective', {
            enumerable: !0,
            get: function () {
              return t.GraphQLSpecifiedByDirective;
            },
          }),
          Object.defineProperty(exports, 'TypeKind', {
            enumerable: !0,
            get: function () {
              return t.TypeKind;
            },
          }),
          Object.defineProperty(exports, 'DEFAULT_DEPRECATION_REASON', {
            enumerable: !0,
            get: function () {
              return t.DEFAULT_DEPRECATION_REASON;
            },
          }),
          Object.defineProperty(exports, 'introspectionTypes', {
            enumerable: !0,
            get: function () {
              return t.introspectionTypes;
            },
          }),
          Object.defineProperty(exports, '__Schema', {
            enumerable: !0,
            get: function () {
              return t.__Schema;
            },
          }),
          Object.defineProperty(exports, '__Directive', {
            enumerable: !0,
            get: function () {
              return t.__Directive;
            },
          }),
          Object.defineProperty(exports, '__DirectiveLocation', {
            enumerable: !0,
            get: function () {
              return t.__DirectiveLocation;
            },
          }),
          Object.defineProperty(exports, '__Type', {
            enumerable: !0,
            get: function () {
              return t.__Type;
            },
          }),
          Object.defineProperty(exports, '__Field', {
            enumerable: !0,
            get: function () {
              return t.__Field;
            },
          }),
          Object.defineProperty(exports, '__InputValue', {
            enumerable: !0,
            get: function () {
              return t.__InputValue;
            },
          }),
          Object.defineProperty(exports, '__EnumValue', {
            enumerable: !0,
            get: function () {
              return t.__EnumValue;
            },
          }),
          Object.defineProperty(exports, '__TypeKind', {
            enumerable: !0,
            get: function () {
              return t.__TypeKind;
            },
          }),
          Object.defineProperty(exports, 'SchemaMetaFieldDef', {
            enumerable: !0,
            get: function () {
              return t.SchemaMetaFieldDef;
            },
          }),
          Object.defineProperty(exports, 'TypeMetaFieldDef', {
            enumerable: !0,
            get: function () {
              return t.TypeMetaFieldDef;
            },
          }),
          Object.defineProperty(exports, 'TypeNameMetaFieldDef', {
            enumerable: !0,
            get: function () {
              return t.TypeNameMetaFieldDef;
            },
          }),
          Object.defineProperty(exports, 'isSchema', {
            enumerable: !0,
            get: function () {
              return t.isSchema;
            },
          }),
          Object.defineProperty(exports, 'isDirective', {
            enumerable: !0,
            get: function () {
              return t.isDirective;
            },
          }),
          Object.defineProperty(exports, 'isType', {
            enumerable: !0,
            get: function () {
              return t.isType;
            },
          }),
          Object.defineProperty(exports, 'isScalarType', {
            enumerable: !0,
            get: function () {
              return t.isScalarType;
            },
          }),
          Object.defineProperty(exports, 'isObjectType', {
            enumerable: !0,
            get: function () {
              return t.isObjectType;
            },
          }),
          Object.defineProperty(exports, 'isInterfaceType', {
            enumerable: !0,
            get: function () {
              return t.isInterfaceType;
            },
          }),
          Object.defineProperty(exports, 'isUnionType', {
            enumerable: !0,
            get: function () {
              return t.isUnionType;
            },
          }),
          Object.defineProperty(exports, 'isEnumType', {
            enumerable: !0,
            get: function () {
              return t.isEnumType;
            },
          }),
          Object.defineProperty(exports, 'isInputObjectType', {
            enumerable: !0,
            get: function () {
              return t.isInputObjectType;
            },
          }),
          Object.defineProperty(exports, 'isListType', {
            enumerable: !0,
            get: function () {
              return t.isListType;
            },
          }),
          Object.defineProperty(exports, 'isNonNullType', {
            enumerable: !0,
            get: function () {
              return t.isNonNullType;
            },
          }),
          Object.defineProperty(exports, 'isInputType', {
            enumerable: !0,
            get: function () {
              return t.isInputType;
            },
          }),
          Object.defineProperty(exports, 'isOutputType', {
            enumerable: !0,
            get: function () {
              return t.isOutputType;
            },
          }),
          Object.defineProperty(exports, 'isLeafType', {
            enumerable: !0,
            get: function () {
              return t.isLeafType;
            },
          }),
          Object.defineProperty(exports, 'isCompositeType', {
            enumerable: !0,
            get: function () {
              return t.isCompositeType;
            },
          }),
          Object.defineProperty(exports, 'isAbstractType', {
            enumerable: !0,
            get: function () {
              return t.isAbstractType;
            },
          }),
          Object.defineProperty(exports, 'isWrappingType', {
            enumerable: !0,
            get: function () {
              return t.isWrappingType;
            },
          }),
          Object.defineProperty(exports, 'isNullableType', {
            enumerable: !0,
            get: function () {
              return t.isNullableType;
            },
          }),
          Object.defineProperty(exports, 'isNamedType', {
            enumerable: !0,
            get: function () {
              return t.isNamedType;
            },
          }),
          Object.defineProperty(exports, 'isRequiredArgument', {
            enumerable: !0,
            get: function () {
              return t.isRequiredArgument;
            },
          }),
          Object.defineProperty(exports, 'isRequiredInputField', {
            enumerable: !0,
            get: function () {
              return t.isRequiredInputField;
            },
          }),
          Object.defineProperty(exports, 'isSpecifiedScalarType', {
            enumerable: !0,
            get: function () {
              return t.isSpecifiedScalarType;
            },
          }),
          Object.defineProperty(exports, 'isIntrospectionType', {
            enumerable: !0,
            get: function () {
              return t.isIntrospectionType;
            },
          }),
          Object.defineProperty(exports, 'isSpecifiedDirective', {
            enumerable: !0,
            get: function () {
              return t.isSpecifiedDirective;
            },
          }),
          Object.defineProperty(exports, 'assertSchema', {
            enumerable: !0,
            get: function () {
              return t.assertSchema;
            },
          }),
          Object.defineProperty(exports, 'assertDirective', {
            enumerable: !0,
            get: function () {
              return t.assertDirective;
            },
          }),
          Object.defineProperty(exports, 'assertType', {
            enumerable: !0,
            get: function () {
              return t.assertType;
            },
          }),
          Object.defineProperty(exports, 'assertScalarType', {
            enumerable: !0,
            get: function () {
              return t.assertScalarType;
            },
          }),
          Object.defineProperty(exports, 'assertObjectType', {
            enumerable: !0,
            get: function () {
              return t.assertObjectType;
            },
          }),
          Object.defineProperty(exports, 'assertInterfaceType', {
            enumerable: !0,
            get: function () {
              return t.assertInterfaceType;
            },
          }),
          Object.defineProperty(exports, 'assertUnionType', {
            enumerable: !0,
            get: function () {
              return t.assertUnionType;
            },
          }),
          Object.defineProperty(exports, 'assertEnumType', {
            enumerable: !0,
            get: function () {
              return t.assertEnumType;
            },
          }),
          Object.defineProperty(exports, 'assertInputObjectType', {
            enumerable: !0,
            get: function () {
              return t.assertInputObjectType;
            },
          }),
          Object.defineProperty(exports, 'assertListType', {
            enumerable: !0,
            get: function () {
              return t.assertListType;
            },
          }),
          Object.defineProperty(exports, 'assertNonNullType', {
            enumerable: !0,
            get: function () {
              return t.assertNonNullType;
            },
          }),
          Object.defineProperty(exports, 'assertInputType', {
            enumerable: !0,
            get: function () {
              return t.assertInputType;
            },
          }),
          Object.defineProperty(exports, 'assertOutputType', {
            enumerable: !0,
            get: function () {
              return t.assertOutputType;
            },
          }),
          Object.defineProperty(exports, 'assertLeafType', {
            enumerable: !0,
            get: function () {
              return t.assertLeafType;
            },
          }),
          Object.defineProperty(exports, 'assertCompositeType', {
            enumerable: !0,
            get: function () {
              return t.assertCompositeType;
            },
          }),
          Object.defineProperty(exports, 'assertAbstractType', {
            enumerable: !0,
            get: function () {
              return t.assertAbstractType;
            },
          }),
          Object.defineProperty(exports, 'assertWrappingType', {
            enumerable: !0,
            get: function () {
              return t.assertWrappingType;
            },
          }),
          Object.defineProperty(exports, 'assertNullableType', {
            enumerable: !0,
            get: function () {
              return t.assertNullableType;
            },
          }),
          Object.defineProperty(exports, 'assertNamedType', {
            enumerable: !0,
            get: function () {
              return t.assertNamedType;
            },
          }),
          Object.defineProperty(exports, 'getNullableType', {
            enumerable: !0,
            get: function () {
              return t.getNullableType;
            },
          }),
          Object.defineProperty(exports, 'getNamedType', {
            enumerable: !0,
            get: function () {
              return t.getNamedType;
            },
          }),
          Object.defineProperty(exports, 'validateSchema', {
            enumerable: !0,
            get: function () {
              return t.validateSchema;
            },
          }),
          Object.defineProperty(exports, 'assertValidSchema', {
            enumerable: !0,
            get: function () {
              return t.assertValidSchema;
            },
          }),
          Object.defineProperty(exports, 'Token', {
            enumerable: !0,
            get: function () {
              return n.Token;
            },
          }),
          Object.defineProperty(exports, 'Source', {
            enumerable: !0,
            get: function () {
              return n.Source;
            },
          }),
          Object.defineProperty(exports, 'Location', {
            enumerable: !0,
            get: function () {
              return n.Location;
            },
          }),
          Object.defineProperty(exports, 'getLocation', {
            enumerable: !0,
            get: function () {
              return n.getLocation;
            },
          }),
          Object.defineProperty(exports, 'printLocation', {
            enumerable: !0,
            get: function () {
              return n.printLocation;
            },
          }),
          Object.defineProperty(exports, 'printSourceLocation', {
            enumerable: !0,
            get: function () {
              return n.printSourceLocation;
            },
          }),
          Object.defineProperty(exports, 'Lexer', {
            enumerable: !0,
            get: function () {
              return n.Lexer;
            },
          }),
          Object.defineProperty(exports, 'TokenKind', {
            enumerable: !0,
            get: function () {
              return n.TokenKind;
            },
          }),
          Object.defineProperty(exports, 'parse', {
            enumerable: !0,
            get: function () {
              return n.parse;
            },
          }),
          Object.defineProperty(exports, 'parseValue', {
            enumerable: !0,
            get: function () {
              return n.parseValue;
            },
          }),
          Object.defineProperty(exports, 'parseType', {
            enumerable: !0,
            get: function () {
              return n.parseType;
            },
          }),
          Object.defineProperty(exports, 'print', {
            enumerable: !0,
            get: function () {
              return n.print;
            },
          }),
          Object.defineProperty(exports, 'visit', {
            enumerable: !0,
            get: function () {
              return n.visit;
            },
          }),
          Object.defineProperty(exports, 'visitInParallel', {
            enumerable: !0,
            get: function () {
              return n.visitInParallel;
            },
          }),
          Object.defineProperty(exports, 'getVisitFn', {
            enumerable: !0,
            get: function () {
              return n.getVisitFn;
            },
          }),
          Object.defineProperty(exports, 'BREAK', {
            enumerable: !0,
            get: function () {
              return n.BREAK;
            },
          }),
          Object.defineProperty(exports, 'Kind', {
            enumerable: !0,
            get: function () {
              return n.Kind;
            },
          }),
          Object.defineProperty(exports, 'DirectiveLocation', {
            enumerable: !0,
            get: function () {
              return n.DirectiveLocation;
            },
          }),
          Object.defineProperty(exports, 'isDefinitionNode', {
            enumerable: !0,
            get: function () {
              return n.isDefinitionNode;
            },
          }),
          Object.defineProperty(exports, 'isExecutableDefinitionNode', {
            enumerable: !0,
            get: function () {
              return n.isExecutableDefinitionNode;
            },
          }),
          Object.defineProperty(exports, 'isSelectionNode', {
            enumerable: !0,
            get: function () {
              return n.isSelectionNode;
            },
          }),
          Object.defineProperty(exports, 'isValueNode', {
            enumerable: !0,
            get: function () {
              return n.isValueNode;
            },
          }),
          Object.defineProperty(exports, 'isTypeNode', {
            enumerable: !0,
            get: function () {
              return n.isTypeNode;
            },
          }),
          Object.defineProperty(exports, 'isTypeSystemDefinitionNode', {
            enumerable: !0,
            get: function () {
              return n.isTypeSystemDefinitionNode;
            },
          }),
          Object.defineProperty(exports, 'isTypeDefinitionNode', {
            enumerable: !0,
            get: function () {
              return n.isTypeDefinitionNode;
            },
          }),
          Object.defineProperty(exports, 'isTypeSystemExtensionNode', {
            enumerable: !0,
            get: function () {
              return n.isTypeSystemExtensionNode;
            },
          }),
          Object.defineProperty(exports, 'isTypeExtensionNode', {
            enumerable: !0,
            get: function () {
              return n.isTypeExtensionNode;
            },
          }),
          Object.defineProperty(exports, 'execute', {
            enumerable: !0,
            get: function () {
              return i.execute;
            },
          }),
          Object.defineProperty(exports, 'executeSync', {
            enumerable: !0,
            get: function () {
              return i.executeSync;
            },
          }),
          Object.defineProperty(exports, 'defaultFieldResolver', {
            enumerable: !0,
            get: function () {
              return i.defaultFieldResolver;
            },
          }),
          Object.defineProperty(exports, 'defaultTypeResolver', {
            enumerable: !0,
            get: function () {
              return i.defaultTypeResolver;
            },
          }),
          Object.defineProperty(exports, 'responsePathAsArray', {
            enumerable: !0,
            get: function () {
              return i.responsePathAsArray;
            },
          }),
          Object.defineProperty(exports, 'getDirectiveValues', {
            enumerable: !0,
            get: function () {
              return i.getDirectiveValues;
            },
          }),
          Object.defineProperty(exports, 'subscribe', {
            enumerable: !0,
            get: function () {
              return o.subscribe;
            },
          }),
          Object.defineProperty(exports, 'createSourceEventStream', {
            enumerable: !0,
            get: function () {
              return o.createSourceEventStream;
            },
          }),
          Object.defineProperty(exports, 'validate', {
            enumerable: !0,
            get: function () {
              return u.validate;
            },
          }),
          Object.defineProperty(exports, 'ValidationContext', {
            enumerable: !0,
            get: function () {
              return u.ValidationContext;
            },
          }),
          Object.defineProperty(exports, 'specifiedRules', {
            enumerable: !0,
            get: function () {
              return u.specifiedRules;
            },
          }),
          Object.defineProperty(exports, 'ExecutableDefinitionsRule', {
            enumerable: !0,
            get: function () {
              return u.ExecutableDefinitionsRule;
            },
          }),
          Object.defineProperty(exports, 'FieldsOnCorrectTypeRule', {
            enumerable: !0,
            get: function () {
              return u.FieldsOnCorrectTypeRule;
            },
          }),
          Object.defineProperty(exports, 'FragmentsOnCompositeTypesRule', {
            enumerable: !0,
            get: function () {
              return u.FragmentsOnCompositeTypesRule;
            },
          }),
          Object.defineProperty(exports, 'KnownArgumentNamesRule', {
            enumerable: !0,
            get: function () {
              return u.KnownArgumentNamesRule;
            },
          }),
          Object.defineProperty(exports, 'KnownDirectivesRule', {
            enumerable: !0,
            get: function () {
              return u.KnownDirectivesRule;
            },
          }),
          Object.defineProperty(exports, 'KnownFragmentNamesRule', {
            enumerable: !0,
            get: function () {
              return u.KnownFragmentNamesRule;
            },
          }),
          Object.defineProperty(exports, 'KnownTypeNamesRule', {
            enumerable: !0,
            get: function () {
              return u.KnownTypeNamesRule;
            },
          }),
          Object.defineProperty(exports, 'LoneAnonymousOperationRule', {
            enumerable: !0,
            get: function () {
              return u.LoneAnonymousOperationRule;
            },
          }),
          Object.defineProperty(exports, 'NoFragmentCyclesRule', {
            enumerable: !0,
            get: function () {
              return u.NoFragmentCyclesRule;
            },
          }),
          Object.defineProperty(exports, 'NoUndefinedVariablesRule', {
            enumerable: !0,
            get: function () {
              return u.NoUndefinedVariablesRule;
            },
          }),
          Object.defineProperty(exports, 'NoUnusedFragmentsRule', {
            enumerable: !0,
            get: function () {
              return u.NoUnusedFragmentsRule;
            },
          }),
          Object.defineProperty(exports, 'NoUnusedVariablesRule', {
            enumerable: !0,
            get: function () {
              return u.NoUnusedVariablesRule;
            },
          }),
          Object.defineProperty(exports, 'OverlappingFieldsCanBeMergedRule', {
            enumerable: !0,
            get: function () {
              return u.OverlappingFieldsCanBeMergedRule;
            },
          }),
          Object.defineProperty(exports, 'PossibleFragmentSpreadsRule', {
            enumerable: !0,
            get: function () {
              return u.PossibleFragmentSpreadsRule;
            },
          }),
          Object.defineProperty(exports, 'ProvidedRequiredArgumentsRule', {
            enumerable: !0,
            get: function () {
              return u.ProvidedRequiredArgumentsRule;
            },
          }),
          Object.defineProperty(exports, 'ScalarLeafsRule', {
            enumerable: !0,
            get: function () {
              return u.ScalarLeafsRule;
            },
          }),
          Object.defineProperty(exports, 'SingleFieldSubscriptionsRule', {
            enumerable: !0,
            get: function () {
              return u.SingleFieldSubscriptionsRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueArgumentNamesRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueArgumentNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueDirectivesPerLocationRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueDirectivesPerLocationRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueFragmentNamesRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueFragmentNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueInputFieldNamesRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueInputFieldNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueOperationNamesRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueOperationNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueVariableNamesRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueVariableNamesRule;
            },
          }),
          Object.defineProperty(exports, 'ValuesOfCorrectTypeRule', {
            enumerable: !0,
            get: function () {
              return u.ValuesOfCorrectTypeRule;
            },
          }),
          Object.defineProperty(exports, 'VariablesAreInputTypesRule', {
            enumerable: !0,
            get: function () {
              return u.VariablesAreInputTypesRule;
            },
          }),
          Object.defineProperty(exports, 'VariablesInAllowedPositionRule', {
            enumerable: !0,
            get: function () {
              return u.VariablesInAllowedPositionRule;
            },
          }),
          Object.defineProperty(exports, 'LoneSchemaDefinitionRule', {
            enumerable: !0,
            get: function () {
              return u.LoneSchemaDefinitionRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueOperationTypesRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueOperationTypesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueTypeNamesRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueTypeNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueEnumValueNamesRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueEnumValueNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueFieldDefinitionNamesRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueFieldDefinitionNamesRule;
            },
          }),
          Object.defineProperty(exports, 'UniqueDirectiveNamesRule', {
            enumerable: !0,
            get: function () {
              return u.UniqueDirectiveNamesRule;
            },
          }),
          Object.defineProperty(exports, 'PossibleTypeExtensionsRule', {
            enumerable: !0,
            get: function () {
              return u.PossibleTypeExtensionsRule;
            },
          }),
          Object.defineProperty(exports, 'NoDeprecatedCustomRule', {
            enumerable: !0,
            get: function () {
              return u.NoDeprecatedCustomRule;
            },
          }),
          Object.defineProperty(exports, 'NoSchemaIntrospectionCustomRule', {
            enumerable: !0,
            get: function () {
              return u.NoSchemaIntrospectionCustomRule;
            },
          }),
          Object.defineProperty(exports, 'GraphQLError', {
            enumerable: !0,
            get: function () {
              return p.GraphQLError;
            },
          }),
          Object.defineProperty(exports, 'syntaxError', {
            enumerable: !0,
            get: function () {
              return p.syntaxError;
            },
          }),
          Object.defineProperty(exports, 'locatedError', {
            enumerable: !0,
            get: function () {
              return p.locatedError;
            },
          }),
          Object.defineProperty(exports, 'printError', {
            enumerable: !0,
            get: function () {
              return p.printError;
            },
          }),
          Object.defineProperty(exports, 'formatError', {
            enumerable: !0,
            get: function () {
              return p.formatError;
            },
          }),
          Object.defineProperty(exports, 'getIntrospectionQuery', {
            enumerable: !0,
            get: function () {
              return a.getIntrospectionQuery;
            },
          }),
          Object.defineProperty(exports, 'getOperationAST', {
            enumerable: !0,
            get: function () {
              return a.getOperationAST;
            },
          }),
          Object.defineProperty(exports, 'getOperationRootType', {
            enumerable: !0,
            get: function () {
              return a.getOperationRootType;
            },
          }),
          Object.defineProperty(exports, 'introspectionFromSchema', {
            enumerable: !0,
            get: function () {
              return a.introspectionFromSchema;
            },
          }),
          Object.defineProperty(exports, 'buildClientSchema', {
            enumerable: !0,
            get: function () {
              return a.buildClientSchema;
            },
          }),
          Object.defineProperty(exports, 'buildASTSchema', {
            enumerable: !0,
            get: function () {
              return a.buildASTSchema;
            },
          }),
          Object.defineProperty(exports, 'buildSchema', {
            enumerable: !0,
            get: function () {
              return a.buildSchema;
            },
          }),
          Object.defineProperty(exports, 'getDescription', {
            enumerable: !0,
            get: function () {
              return a.getDescription;
            },
          }),
          Object.defineProperty(exports, 'extendSchema', {
            enumerable: !0,
            get: function () {
              return a.extendSchema;
            },
          }),
          Object.defineProperty(exports, 'lexicographicSortSchema', {
            enumerable: !0,
            get: function () {
              return a.lexicographicSortSchema;
            },
          }),
          Object.defineProperty(exports, 'printSchema', {
            enumerable: !0,
            get: function () {
              return a.printSchema;
            },
          }),
          Object.defineProperty(exports, 'printType', {
            enumerable: !0,
            get: function () {
              return a.printType;
            },
          }),
          Object.defineProperty(exports, 'printIntrospectionSchema', {
            enumerable: !0,
            get: function () {
              return a.printIntrospectionSchema;
            },
          }),
          Object.defineProperty(exports, 'typeFromAST', {
            enumerable: !0,
            get: function () {
              return a.typeFromAST;
            },
          }),
          Object.defineProperty(exports, 'valueFromAST', {
            enumerable: !0,
            get: function () {
              return a.valueFromAST;
            },
          }),
          Object.defineProperty(exports, 'valueFromASTUntyped', {
            enumerable: !0,
            get: function () {
              return a.valueFromASTUntyped;
            },
          }),
          Object.defineProperty(exports, 'astFromValue', {
            enumerable: !0,
            get: function () {
              return a.astFromValue;
            },
          }),
          Object.defineProperty(exports, 'TypeInfo', {
            enumerable: !0,
            get: function () {
              return a.TypeInfo;
            },
          }),
          Object.defineProperty(exports, 'visitWithTypeInfo', {
            enumerable: !0,
            get: function () {
              return a.visitWithTypeInfo;
            },
          }),
          Object.defineProperty(exports, 'coerceInputValue', {
            enumerable: !0,
            get: function () {
              return a.coerceInputValue;
            },
          }),
          Object.defineProperty(exports, 'concatAST', {
            enumerable: !0,
            get: function () {
              return a.concatAST;
            },
          }),
          Object.defineProperty(exports, 'separateOperations', {
            enumerable: !0,
            get: function () {
              return a.separateOperations;
            },
          }),
          Object.defineProperty(exports, 'stripIgnoredCharacters', {
            enumerable: !0,
            get: function () {
              return a.stripIgnoredCharacters;
            },
          }),
          Object.defineProperty(exports, 'isEqualType', {
            enumerable: !0,
            get: function () {
              return a.isEqualType;
            },
          }),
          Object.defineProperty(exports, 'isTypeSubTypeOf', {
            enumerable: !0,
            get: function () {
              return a.isTypeSubTypeOf;
            },
          }),
          Object.defineProperty(exports, 'doTypesOverlap', {
            enumerable: !0,
            get: function () {
              return a.doTypesOverlap;
            },
          }),
          Object.defineProperty(exports, 'assertValidName', {
            enumerable: !0,
            get: function () {
              return a.assertValidName;
            },
          }),
          Object.defineProperty(exports, 'isValidNameError', {
            enumerable: !0,
            get: function () {
              return a.isValidNameError;
            },
          }),
          Object.defineProperty(exports, 'BreakingChangeType', {
            enumerable: !0,
            get: function () {
              return a.BreakingChangeType;
            },
          }),
          Object.defineProperty(exports, 'DangerousChangeType', {
            enumerable: !0,
            get: function () {
              return a.DangerousChangeType;
            },
          }),
          Object.defineProperty(exports, 'findBreakingChanges', {
            enumerable: !0,
            get: function () {
              return a.findBreakingChanges;
            },
          }),
          Object.defineProperty(exports, 'findDangerousChanges', {
            enumerable: !0,
            get: function () {
              return a.findDangerousChanges;
            },
          }),
          Object.defineProperty(exports, 'findDeprecatedUsages', {
            enumerable: !0,
            get: function () {
              return a.findDeprecatedUsages;
            },
          });
        var e = require('./version.mjs'),
          r = require('./graphql.mjs'),
          t = require('./type/index.mjs'),
          n = require('./language/index.mjs'),
          i = require('./execution/index.mjs'),
          o = require('./subscription/index.mjs'),
          u = require('./validation/index.mjs'),
          p = require('./error/index.mjs'),
          a = require('./utilities/index.mjs');
      },
      {
        './version.mjs': 'Kt8e',
        './graphql.mjs': 'VMBp',
        './type/index.mjs': 'cuXl',
        './language/index.mjs': 'AddW',
        './execution/index.mjs': 'llep',
        './subscription/index.mjs': 'Hvoe',
        './validation/index.mjs': 'ezhQ',
        './error/index.mjs': 'VGnl',
        './utilities/index.mjs': 'Bwm5',
      },
    ],
    FW8M: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.defaultSchemaBuilder = o),
          (exports.defaultSchemaLoader = void 0);
        var e = require('graphql'),
          t = function (e, t, n, o) {
            return new (n || (n = Promise))(function (r, i) {
              function u(e) {
                try {
                  c(o.next(e));
                } catch (t) {
                  i(t);
                }
              }
              function a(e) {
                try {
                  c(o.throw(e));
                } catch (t) {
                  i(t);
                }
              }
              function c(e) {
                var t;
                e.done
                  ? r(e.value)
                  : ((t = e.value),
                    t instanceof n
                      ? t
                      : new n(function (e) {
                          e(t);
                        })).then(u, a);
              }
              c((o = o.apply(e, t || [])).next());
            });
          };
        const n = (n) =>
          t(void 0, void 0, void 0, function* () {
            var t;
            const { requestOpts: o, uri: r, introspectionOptions: i } = n;
            if (!r) return null;
            const u = yield fetch(
                r,
                Object.assign(
                  {
                    method:
                      null !== (t = null == o ? void 0 : o.method) &&
                      void 0 !== t
                        ? t
                        : 'post',
                    body: JSON.stringify({
                      query: (0, e.getIntrospectionQuery)(i),
                      operationName: 'IntrospectionQuery',
                    }),
                    credentials: 'omit',
                    headers: (null == o ? void 0 : o.headers) || {
                      'Content-Type': 'application/json',
                    },
                  },
                  o
                )
              ),
              a = yield u.json();
            return null == a ? void 0 : a.data;
          });
        function o(t, n) {
          if (!t) throw Error('Empty schema response');
          return '__schema' in t
            ? (0, e.buildClientSchema)(t, n)
            : (0, e.buildASTSchema)(t, n);
        }
        exports.defaultSchemaLoader = n;
      },
      { graphql: 'lFnJ' },
    ],
    Choh: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = u);
        var t = n(require('./nodejsCustomInspectSymbol.js'));
        function n(t) {
          return t && t.__esModule ? t : { default: t };
        }
        function r(t) {
          return (r =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (t) {
                  return typeof t;
                }
              : function (t) {
                  return t &&
                    'function' == typeof Symbol &&
                    t.constructor === Symbol &&
                    t !== Symbol.prototype
                    ? 'symbol'
                    : typeof t;
                })(t);
        }
        var e = 10,
          o = 2;
        function u(t) {
          return i(t, []);
        }
        function i(t, n) {
          switch (r(t)) {
            case 'string':
              return JSON.stringify(t);
            case 'function':
              return t.name ? '[function '.concat(t.name, ']') : '[function]';
            case 'object':
              return null === t ? 'null' : c(t, n);
            default:
              return String(t);
          }
        }
        function c(t, n) {
          if (-1 !== n.indexOf(t)) return '[Circular]';
          var r = [].concat(n, [t]),
            e = l(t);
          if (void 0 !== e) {
            var o = e.call(t);
            if (o !== t) return 'string' == typeof o ? o : i(o, r);
          } else if (Array.isArray(t)) return a(t, r);
          return f(t, r);
        }
        function f(t, n) {
          var r = Object.keys(t);
          return 0 === r.length
            ? '{}'
            : n.length > o
            ? '[' + s(t) + ']'
            : '{ ' +
              r
                .map(function (r) {
                  return r + ': ' + i(t[r], n);
                })
                .join(', ') +
              ' }';
        }
        function a(t, n) {
          if (0 === t.length) return '[]';
          if (n.length > o) return '[Array]';
          for (
            var r = Math.min(e, t.length), u = t.length - r, c = [], f = 0;
            f < r;
            ++f
          )
            c.push(i(t[f], n));
          return (
            1 === u
              ? c.push('... 1 more item')
              : u > 1 && c.push('... '.concat(u, ' more items')),
            '[' + c.join(', ') + ']'
          );
        }
        function l(n) {
          var r = n[String(t.default)];
          return 'function' == typeof r
            ? r
            : 'function' == typeof n.inspect
            ? n.inspect
            : void 0;
        }
        function s(t) {
          var n = Object.prototype.toString
            .call(t)
            .replace(/^\[object /, '')
            .replace(/]$/, '');
          if ('Object' === n && 'function' == typeof t.constructor) {
            var r = t.constructor.name;
            if ('string' == typeof r && '' !== r) return r;
          }
          return n;
        }
      },
      { './nodejsCustomInspectSymbol.js': 'gw2R' },
    ],
    TNFZ: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = r);
        var e = o(require('./invariant.js')),
          t = o(require('./nodejsCustomInspectSymbol.js'));
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function r(o) {
          var r = o.prototype.toJSON;
          'function' == typeof r || (0, e.default)(0),
            (o.prototype.inspect = r),
            t.default && (o.prototype[t.default] = r);
        }
      },
      { './invariant.js': 'hYEN', './nodejsCustomInspectSymbol.js': 'gw2R' },
    ],
    x996: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isNode = s),
          (exports.Token = exports.Location = void 0);
        var t = e(require('../jsutils/defineInspect.js'));
        function e(t) {
          return t && t.__esModule ? t : { default: t };
        }
        var n = (function () {
          function t(t, e, n) {
            (this.start = t.start),
              (this.end = e.end),
              (this.startToken = t),
              (this.endToken = e),
              (this.source = n);
          }
          return (
            (t.prototype.toJSON = function () {
              return { start: this.start, end: this.end };
            }),
            t
          );
        })();
        (exports.Location = n), (0, t.default)(n);
        var i = (function () {
          function t(t, e, n, i, s, o, r) {
            (this.kind = t),
              (this.start = e),
              (this.end = n),
              (this.line = i),
              (this.column = s),
              (this.value = r),
              (this.prev = o),
              (this.next = null);
          }
          return (
            (t.prototype.toJSON = function () {
              return {
                kind: this.kind,
                value: this.value,
                line: this.line,
                column: this.column,
              };
            }),
            t
          );
        })();
        function s(t) {
          return null != t && 'string' == typeof t.kind;
        }
        (exports.Token = i), (0, t.default)(i);
      },
      { '../jsutils/defineInspect.js': 'TNFZ' },
    ],
    pmZl: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.visit = a),
          (exports.visitInParallel = s),
          (exports.getVisitFn = o),
          (exports.BREAK = exports.QueryDocumentKeys = void 0);
        var e = n(require('../jsutils/inspect.js')),
          i = require('./ast.js');
        function n(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var t = {
          Name: [],
          Document: ['definitions'],
          OperationDefinition: [
            'name',
            'variableDefinitions',
            'directives',
            'selectionSet',
          ],
          VariableDefinition: [
            'variable',
            'type',
            'defaultValue',
            'directives',
          ],
          Variable: ['name'],
          SelectionSet: ['selections'],
          Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],
          Argument: ['name', 'value'],
          FragmentSpread: ['name', 'directives'],
          InlineFragment: ['typeCondition', 'directives', 'selectionSet'],
          FragmentDefinition: [
            'name',
            'variableDefinitions',
            'typeCondition',
            'directives',
            'selectionSet',
          ],
          IntValue: [],
          FloatValue: [],
          StringValue: [],
          BooleanValue: [],
          NullValue: [],
          EnumValue: [],
          ListValue: ['values'],
          ObjectValue: ['fields'],
          ObjectField: ['name', 'value'],
          Directive: ['name', 'arguments'],
          NamedType: ['name'],
          ListType: ['type'],
          NonNullType: ['type'],
          SchemaDefinition: ['description', 'directives', 'operationTypes'],
          OperationTypeDefinition: ['type'],
          ScalarTypeDefinition: ['description', 'name', 'directives'],
          ObjectTypeDefinition: [
            'description',
            'name',
            'interfaces',
            'directives',
            'fields',
          ],
          FieldDefinition: [
            'description',
            'name',
            'arguments',
            'type',
            'directives',
          ],
          InputValueDefinition: [
            'description',
            'name',
            'type',
            'defaultValue',
            'directives',
          ],
          InterfaceTypeDefinition: [
            'description',
            'name',
            'interfaces',
            'directives',
            'fields',
          ],
          UnionTypeDefinition: ['description', 'name', 'directives', 'types'],
          EnumTypeDefinition: ['description', 'name', 'directives', 'values'],
          EnumValueDefinition: ['description', 'name', 'directives'],
          InputObjectTypeDefinition: [
            'description',
            'name',
            'directives',
            'fields',
          ],
          DirectiveDefinition: [
            'description',
            'name',
            'arguments',
            'locations',
          ],
          SchemaExtension: ['directives', 'operationTypes'],
          ScalarTypeExtension: ['name', 'directives'],
          ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],
          InterfaceTypeExtension: [
            'name',
            'interfaces',
            'directives',
            'fields',
          ],
          UnionTypeExtension: ['name', 'directives', 'types'],
          EnumTypeExtension: ['name', 'directives', 'values'],
          InputObjectTypeExtension: ['name', 'directives', 'fields'],
        };
        exports.QueryDocumentKeys = t;
        var r = Object.freeze({});
        function a(n, a) {
          var s =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : t,
            l = void 0,
            c = Array.isArray(n),
            d = [n],
            f = -1,
            p = [],
            u = void 0,
            v = void 0,
            y = void 0,
            m = [],
            g = [],
            D = n;
          do {
            var h = ++f === d.length,
              T = h && 0 !== p.length;
            if (h) {
              if (
                ((v = 0 === g.length ? void 0 : m[m.length - 1]),
                (u = y),
                (y = g.pop()),
                T)
              ) {
                if (c) u = u.slice();
                else {
                  for (
                    var x = {}, b = 0, V = Object.keys(u);
                    b < V.length;
                    b++
                  ) {
                    var E = V[b];
                    x[E] = u[E];
                  }
                  u = x;
                }
                for (var A = 0, S = 0; S < p.length; S++) {
                  var j = p[S][0],
                    O = p[S][1];
                  c && (j -= A),
                    c && null === O ? (u.splice(j, 1), A++) : (u[j] = O);
                }
              }
              (f = l.index),
                (d = l.keys),
                (p = l.edits),
                (c = l.inArray),
                (l = l.prev);
            } else {
              if (
                ((v = y ? (c ? f : d[f]) : void 0), null == (u = y ? y[v] : D))
              )
                continue;
              y && m.push(v);
            }
            var I,
              k = void 0;
            if (!Array.isArray(u)) {
              if (!(0, i.isNode)(u))
                throw new Error(
                  'Invalid AST Node: '.concat((0, e.default)(u), '.')
                );
              var F = o(a, u.kind, h);
              if (F) {
                if ((k = F.call(a, u, v, y, m, g)) === r) break;
                if (!1 === k) {
                  if (!h) {
                    m.pop();
                    continue;
                  }
                } else if (void 0 !== k && (p.push([v, k]), !h)) {
                  if (!(0, i.isNode)(k)) {
                    m.pop();
                    continue;
                  }
                  u = k;
                }
              }
            }
            if ((void 0 === k && T && p.push([v, u]), h)) m.pop();
            else
              (l = { inArray: c, index: f, keys: d, edits: p, prev: l }),
                (d = (c = Array.isArray(u))
                  ? u
                  : null !== (I = s[u.kind]) && void 0 !== I
                  ? I
                  : []),
                (f = -1),
                (p = []),
                y && g.push(y),
                (y = u);
          } while (void 0 !== l);
          return 0 !== p.length && (D = p[p.length - 1][1]), D;
        }
        function s(e) {
          var i = new Array(e.length);
          return {
            enter: function (n) {
              for (var t = 0; t < e.length; t++)
                if (null == i[t]) {
                  var a = o(e[t], n.kind, !1);
                  if (a) {
                    var s = a.apply(e[t], arguments);
                    if (!1 === s) i[t] = n;
                    else if (s === r) i[t] = r;
                    else if (void 0 !== s) return s;
                  }
                }
            },
            leave: function (n) {
              for (var t = 0; t < e.length; t++)
                if (null == i[t]) {
                  var a = o(e[t], n.kind, !0);
                  if (a) {
                    var s = a.apply(e[t], arguments);
                    if (s === r) i[t] = r;
                    else if (void 0 !== s && !1 !== s) return s;
                  }
                } else i[t] === n && (i[t] = null);
            },
          };
        }
        function o(e, i, n) {
          var t = e[i];
          if (t) {
            if (!n && 'function' == typeof t) return t;
            var r = n ? t.leave : t.enter;
            if ('function' == typeof r) return r;
          } else {
            var a = n ? e.leave : e.enter;
            if (a) {
              if ('function' == typeof a) return a;
              var s = a[i];
              if ('function' == typeof s) return s;
            }
          }
        }
        exports.BREAK = r;
      },
      { '../jsutils/inspect.js': 'Choh', './ast.js': 'x996' },
    ],
    h5rv: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.print = t);
        var n = require('./visitor.js'),
          e = require('./blockString.js');
        function t(e) {
          return (0, n.visit)(e, { leave: r });
        }
        var i = 80,
          r = {
            Name: function (n) {
              return n.value;
            },
            Variable: function (n) {
              return '$' + n.name;
            },
            Document: function (n) {
              return a(n.definitions, '\n\n') + '\n';
            },
            OperationDefinition: function (n) {
              var e = n.operation,
                t = n.name,
                i = c('(', a(n.variableDefinitions, ', '), ')'),
                r = a(n.directives, ' '),
                u = n.selectionSet;
              return t || r || i || 'query' !== e
                ? a([e, a([t, i]), r, u], ' ')
                : u;
            },
            VariableDefinition: function (n) {
              var e = n.variable,
                t = n.type,
                i = n.defaultValue,
                r = n.directives;
              return e + ': ' + t + c(' = ', i) + c(' ', a(r, ' '));
            },
            SelectionSet: function (n) {
              return o(n.selections);
            },
            Field: function (n) {
              var e = n.alias,
                t = n.name,
                r = n.arguments,
                u = n.directives,
                o = n.selectionSet,
                l = c('', e, ': ') + t,
                s = l + c('(', a(r, ', '), ')');
              return (
                s.length > i && (s = l + c('(\n', f(a(r, '\n')), '\n)')),
                a([s, a(u, ' '), o], ' ')
              );
            },
            Argument: function (n) {
              return n.name + ': ' + n.value;
            },
            FragmentSpread: function (n) {
              return '...' + n.name + c(' ', a(n.directives, ' '));
            },
            InlineFragment: function (n) {
              var e = n.typeCondition,
                t = n.directives,
                i = n.selectionSet;
              return a(['...', c('on ', e), a(t, ' '), i], ' ');
            },
            FragmentDefinition: function (n) {
              var e = n.name,
                t = n.typeCondition,
                i = n.variableDefinitions,
                r = n.directives,
                u = n.selectionSet;
              return (
                'fragment '.concat(e).concat(c('(', a(i, ', '), ')'), ' ') +
                'on '.concat(t, ' ').concat(c('', a(r, ' '), ' ')) +
                u
              );
            },
            IntValue: function (n) {
              return n.value;
            },
            FloatValue: function (n) {
              return n.value;
            },
            StringValue: function (n, t) {
              var i = n.value;
              return n.block
                ? (0, e.printBlockString)(i, 'description' === t ? '' : '  ')
                : JSON.stringify(i);
            },
            BooleanValue: function (n) {
              return n.value ? 'true' : 'false';
            },
            NullValue: function () {
              return 'null';
            },
            EnumValue: function (n) {
              return n.value;
            },
            ListValue: function (n) {
              return '[' + a(n.values, ', ') + ']';
            },
            ObjectValue: function (n) {
              return '{' + a(n.fields, ', ') + '}';
            },
            ObjectField: function (n) {
              return n.name + ': ' + n.value;
            },
            Directive: function (n) {
              return '@' + n.name + c('(', a(n.arguments, ', '), ')');
            },
            NamedType: function (n) {
              return n.name;
            },
            ListType: function (n) {
              return '[' + n.type + ']';
            },
            NonNullType: function (n) {
              return n.type + '!';
            },
            SchemaDefinition: u(function (n) {
              var e = n.directives,
                t = n.operationTypes;
              return a(['schema', a(e, ' '), o(t)], ' ');
            }),
            OperationTypeDefinition: function (n) {
              return n.operation + ': ' + n.type;
            },
            ScalarTypeDefinition: u(function (n) {
              return a(['scalar', n.name, a(n.directives, ' ')], ' ');
            }),
            ObjectTypeDefinition: u(function (n) {
              var e = n.name,
                t = n.interfaces,
                i = n.directives,
                r = n.fields;
              return a(
                ['type', e, c('implements ', a(t, ' & ')), a(i, ' '), o(r)],
                ' '
              );
            }),
            FieldDefinition: u(function (n) {
              var e = n.name,
                t = n.arguments,
                i = n.type,
                r = n.directives;
              return (
                e +
                (s(t)
                  ? c('(\n', f(a(t, '\n')), '\n)')
                  : c('(', a(t, ', '), ')')) +
                ': ' +
                i +
                c(' ', a(r, ' '))
              );
            }),
            InputValueDefinition: u(function (n) {
              var e = n.name,
                t = n.type,
                i = n.defaultValue,
                r = n.directives;
              return a([e + ': ' + t, c('= ', i), a(r, ' ')], ' ');
            }),
            InterfaceTypeDefinition: u(function (n) {
              var e = n.name,
                t = n.interfaces,
                i = n.directives,
                r = n.fields;
              return a(
                [
                  'interface',
                  e,
                  c('implements ', a(t, ' & ')),
                  a(i, ' '),
                  o(r),
                ],
                ' '
              );
            }),
            UnionTypeDefinition: u(function (n) {
              var e = n.name,
                t = n.directives,
                i = n.types;
              return a(
                [
                  'union',
                  e,
                  a(t, ' '),
                  i && 0 !== i.length ? '= ' + a(i, ' | ') : '',
                ],
                ' '
              );
            }),
            EnumTypeDefinition: u(function (n) {
              var e = n.name,
                t = n.directives,
                i = n.values;
              return a(['enum', e, a(t, ' '), o(i)], ' ');
            }),
            EnumValueDefinition: u(function (n) {
              return a([n.name, a(n.directives, ' ')], ' ');
            }),
            InputObjectTypeDefinition: u(function (n) {
              var e = n.name,
                t = n.directives,
                i = n.fields;
              return a(['input', e, a(t, ' '), o(i)], ' ');
            }),
            DirectiveDefinition: u(function (n) {
              var e = n.name,
                t = n.arguments,
                i = n.repeatable,
                r = n.locations;
              return (
                'directive @' +
                e +
                (s(t)
                  ? c('(\n', f(a(t, '\n')), '\n)')
                  : c('(', a(t, ', '), ')')) +
                (i ? ' repeatable' : '') +
                ' on ' +
                a(r, ' | ')
              );
            }),
            SchemaExtension: function (n) {
              var e = n.directives,
                t = n.operationTypes;
              return a(['extend schema', a(e, ' '), o(t)], ' ');
            },
            ScalarTypeExtension: function (n) {
              return a(['extend scalar', n.name, a(n.directives, ' ')], ' ');
            },
            ObjectTypeExtension: function (n) {
              var e = n.name,
                t = n.interfaces,
                i = n.directives,
                r = n.fields;
              return a(
                [
                  'extend type',
                  e,
                  c('implements ', a(t, ' & ')),
                  a(i, ' '),
                  o(r),
                ],
                ' '
              );
            },
            InterfaceTypeExtension: function (n) {
              var e = n.name,
                t = n.interfaces,
                i = n.directives,
                r = n.fields;
              return a(
                [
                  'extend interface',
                  e,
                  c('implements ', a(t, ' & ')),
                  a(i, ' '),
                  o(r),
                ],
                ' '
              );
            },
            UnionTypeExtension: function (n) {
              var e = n.name,
                t = n.directives,
                i = n.types;
              return a(
                [
                  'extend union',
                  e,
                  a(t, ' '),
                  i && 0 !== i.length ? '= ' + a(i, ' | ') : '',
                ],
                ' '
              );
            },
            EnumTypeExtension: function (n) {
              var e = n.name,
                t = n.directives,
                i = n.values;
              return a(['extend enum', e, a(t, ' '), o(i)], ' ');
            },
            InputObjectTypeExtension: function (n) {
              var e = n.name,
                t = n.directives,
                i = n.fields;
              return a(['extend input', e, a(t, ' '), o(i)], ' ');
            },
          };
        function u(n) {
          return function (e) {
            return a([e.description, n(e)], '\n');
          };
        }
        function a(n) {
          var e,
            t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : '';
          return null !==
            (e =
              null == n
                ? void 0
                : n
                    .filter(function (n) {
                      return n;
                    })
                    .join(t)) && void 0 !== e
            ? e
            : '';
        }
        function o(n) {
          return c('{\n', f(a(n, '\n')), '\n}');
        }
        function c(n, e) {
          var t =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : '';
          return null != e && '' !== e ? n + e + t : '';
        }
        function f(n) {
          return c('  ', n.replace(/\n/g, '\n  '));
        }
        function l(n) {
          return -1 !== n.indexOf('\n');
        }
        function s(n) {
          return null != n && n.some(l);
        }
      },
      { './visitor.js': 'pmZl', './blockString.js': 'SG8m' },
    ],
    dKnG: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = void 0);
        var r = require('./symbols.js'),
          e =
            Array.from ||
            function (e, t, o) {
              if (null == e)
                throw new TypeError(
                  'Array.from requires an array-like object - not null or undefined'
                );
              var n = e[r.SYMBOL_ITERATOR];
              if ('function' == typeof n) {
                for (
                  var a, l = n.call(e), u = [], i = 0;
                  !(a = l.next()).done;
                  ++i
                )
                  if ((u.push(t.call(o, a.value, i)), i > 9999999))
                    throw new TypeError('Near-infinite iteration.');
                return u;
              }
              var f = e.length;
              if ('number' == typeof f && f >= 0 && f % 1 == 0) {
                for (var p = [], s = 0; s < f; ++s)
                  Object.prototype.hasOwnProperty.call(e, s) &&
                    p.push(t.call(o, e[s], s));
                return p;
              }
              return [];
            },
          t = e;
        exports.default = t;
      },
      { './symbols.js': 'jjn7' },
    ],
    Fnua: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = e);
        var t = require('../polyfills/symbols.js');
        function o(t) {
          return (o =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (t) {
                  return typeof t;
                }
              : function (t) {
                  return t &&
                    'function' == typeof Symbol &&
                    t.constructor === Symbol &&
                    t !== Symbol.prototype
                    ? 'symbol'
                    : typeof t;
                })(t);
        }
        function e(e) {
          if (null == e || 'object' !== o(e)) return !1;
          var r = e.length;
          return (
            ('number' == typeof r && r >= 0 && r % 1 == 0) ||
            'function' == typeof e[t.SYMBOL_ITERATOR]
          );
        }
      },
      { '../polyfills/symbols.js': 'jjn7' },
    ],
    Xjvh: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.printLocation = t),
          (exports.printSourceLocation = o);
        var n = require('./location.js');
        function t(t) {
          return o(t.source, (0, n.getLocation)(t.source, t.start));
        }
        function o(n, t) {
          var o = n.locationOffset.column - 1,
            c = e(o) + n.body,
            i = t.line - 1,
            a = n.locationOffset.line - 1,
            u = t.line + a,
            l = 1 === t.line ? o : 0,
            f = t.column + l,
            s = ''.concat(n.name, ':').concat(u, ':').concat(f, '\n'),
            p = c.split(/\r\n|[\n\r]/g),
            h = p[i];
          if (h.length > 120) {
            for (
              var m = Math.floor(f / 80), v = f % 80, g = [], d = 0;
              d < h.length;
              d += 80
            )
              g.push(h.slice(d, d + 80));
            return (
              s +
              r(
                [[''.concat(u), g[0]]].concat(
                  g.slice(1, m + 1).map(function (n) {
                    return ['', n];
                  }),
                  [
                    [' ', e(v - 1) + '^'],
                    ['', g[m + 1]],
                  ]
                )
              )
            );
          }
          return (
            s +
            r([
              [''.concat(u - 1), p[i - 1]],
              [''.concat(u), h],
              ['', e(f - 1) + '^'],
              [''.concat(u + 1), p[i + 1]],
            ])
          );
        }
        function r(n) {
          var t = n.filter(function (n) {
              n[0];
              return void 0 !== n[1];
            }),
            o = Math.max.apply(
              Math,
              t.map(function (n) {
                return n[0].length;
              })
            );
          return t
            .map(function (n) {
              var t = n[0],
                r = n[1];
              return c(o, t) + (r ? ' | ' + r : ' |');
            })
            .join('\n');
        }
        function e(n) {
          return Array(n + 1).join(' ');
        }
        function c(n, t) {
          return e(n - t.length) + t;
        }
      },
      { './location.js': 'KRTj' },
    ],
    zFQB: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.printError = O),
          (exports.GraphQLError = void 0);
        var e = o(require('../jsutils/isObjectLike.js')),
          t = require('../polyfills/symbols.js'),
          r = require('../language/location.js'),
          n = require('../language/printLocation.js');
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function u(e) {
          return (u =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e;
                })(e);
        }
        function i(e, t) {
          if (!(e instanceof t))
            throw new TypeError('Cannot call a class as a function');
        }
        function c(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r];
            (n.enumerable = n.enumerable || !1),
              (n.configurable = !0),
              'value' in n && (n.writable = !0),
              Object.defineProperty(e, n.key, n);
          }
        }
        function l(e, t, r) {
          return t && c(e.prototype, t), r && c(e, r), e;
        }
        function a(e, t) {
          if ('function' != typeof t && null !== t)
            throw new TypeError(
              'Super expression must either be null or a function'
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            t && h(e, t);
        }
        function f(e) {
          var t = b();
          return function () {
            var r,
              n = g(e);
            if (t) {
              var o = g(this).constructor;
              r = Reflect.construct(n, arguments, o);
            } else r = n.apply(this, arguments);
            return s(this, r);
          };
        }
        function s(e, t) {
          return !t || ('object' !== u(t) && 'function' != typeof t) ? p(e) : t;
        }
        function p(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function v(e) {
          var t = 'function' == typeof Map ? new Map() : void 0;
          return (v = function (e) {
            if (null === e || !d(e)) return e;
            if ('function' != typeof e)
              throw new TypeError(
                'Super expression must either be null or a function'
              );
            if (void 0 !== t) {
              if (t.has(e)) return t.get(e);
              t.set(e, r);
            }
            function r() {
              return y(e, arguments, g(this).constructor);
            }
            return (
              (r.prototype = Object.create(e.prototype, {
                constructor: {
                  value: r,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
              h(r, e)
            );
          })(e);
        }
        function y(e, t, r) {
          return (y = b()
            ? Reflect.construct
            : function (e, t, r) {
                var n = [null];
                n.push.apply(n, t);
                var o = new (Function.bind.apply(e, n))();
                return r && h(o, r.prototype), o;
              }).apply(null, arguments);
        }
        function b() {
          if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ('function' == typeof Proxy) return !0;
          try {
            return (
              Date.prototype.toString.call(
                Reflect.construct(Date, [], function () {})
              ),
              !0
            );
          } catch (e) {
            return !1;
          }
        }
        function d(e) {
          return -1 !== Function.toString.call(e).indexOf('[native code]');
        }
        function h(e, t) {
          return (h =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function g(e) {
          return (g = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        var m = (function (n) {
          a(u, v(Error));
          var o = f(u);
          function u(t, n, c, l, a, f, v) {
            var y, b, d, h, g;
            i(this, u), (g = o.call(this, t));
            var m,
              O = Array.isArray(n)
                ? 0 !== n.length
                  ? n
                  : void 0
                : n
                ? [n]
                : void 0,
              j = c;
            !j &&
              O &&
              (j = null === (m = O[0].loc) || void 0 === m ? void 0 : m.source);
            var w,
              S = l;
            !S &&
              O &&
              (S = O.reduce(function (e, t) {
                return t.loc && e.push(t.loc.start), e;
              }, [])),
              S && 0 === S.length && (S = void 0),
              l && c
                ? (w = l.map(function (e) {
                    return (0, r.getLocation)(c, e);
                  }))
                : O &&
                  (w = O.reduce(function (e, t) {
                    return (
                      t.loc &&
                        e.push((0, r.getLocation)(t.loc.source, t.loc.start)),
                      e
                    );
                  }, []));
            var _ = v;
            if (null == _ && null != f) {
              var E = f.extensions;
              (0, e.default)(E) && (_ = E);
            }
            return (
              Object.defineProperties(p(g), {
                name: { value: 'GraphQLError' },
                message: { value: t, enumerable: !0, writable: !0 },
                locations: {
                  value: null !== (y = w) && void 0 !== y ? y : void 0,
                  enumerable: null != w,
                },
                path: { value: null != a ? a : void 0, enumerable: null != a },
                nodes: { value: null != O ? O : void 0 },
                source: {
                  value: null !== (b = j) && void 0 !== b ? b : void 0,
                },
                positions: {
                  value: null !== (d = S) && void 0 !== d ? d : void 0,
                },
                originalError: { value: f },
                extensions: {
                  value: null !== (h = _) && void 0 !== h ? h : void 0,
                  enumerable: null != _,
                },
              }),
              (null == f ? void 0 : f.stack)
                ? (Object.defineProperty(p(g), 'stack', {
                    value: f.stack,
                    writable: !0,
                    configurable: !0,
                  }),
                  s(g))
                : (Error.captureStackTrace
                    ? Error.captureStackTrace(p(g), u)
                    : Object.defineProperty(p(g), 'stack', {
                        value: Error().stack,
                        writable: !0,
                        configurable: !0,
                      }),
                  g)
            );
          }
          return (
            l(u, [
              {
                key: 'toString',
                value: function () {
                  return O(this);
                },
              },
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'Object';
                },
              },
            ]),
            u
          );
        })();
        function O(e) {
          var t = e.message;
          if (e.nodes)
            for (var r = 0, o = e.nodes; r < o.length; r++) {
              var u = o[r];
              u.loc && (t += '\n\n' + (0, n.printLocation)(u.loc));
            }
          else if (e.source && e.locations)
            for (var i = 0, c = e.locations; i < c.length; i++) {
              var l = c[i];
              t += '\n\n' + (0, n.printSourceLocation)(e.source, l);
            }
          return t;
        }
        exports.GraphQLError = m;
      },
      {
        '../jsutils/isObjectLike.js': 'QGgI',
        '../polyfills/symbols.js': 'jjn7',
        '../language/location.js': 'KRTj',
        '../language/printLocation.js': 'Xjvh',
      },
    ],
    A8z2: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = r);
        var e = t(require('../polyfills/objectEntries.js'));
        function t(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function r(t, r) {
          for (
            var u = Object.create(null), l = 0, n = (0, e.default)(t);
            l < n.length;
            l++
          ) {
            var o = n[l],
              s = o[0],
              a = o[1];
            u[s] = r(a, s);
          }
          return u;
        }
      },
      { '../polyfills/objectEntries.js': 'wKrj' },
    ],
    zyB0: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = r);
        var e = t(require('../polyfills/objectEntries.js'));
        function t(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function r(t) {
          if (null === Object.getPrototypeOf(t)) return t;
          for (
            var r = Object.create(null), u = 0, l = (0, e.default)(t);
            u < l.length;
            u++
          ) {
            var n = l[u],
              o = n[0],
              f = n[1];
            r[o] = f;
          }
          return r;
        }
      },
      { '../polyfills/objectEntries.js': 'wKrj' },
    ],
    V2lb: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.valueFromASTUntyped = t);
        var e = a(require('../jsutils/inspect.js')),
          n = a(require('../jsutils/invariant.js')),
          u = a(require('../jsutils/keyValMap.js')),
          r = require('../language/kinds.js');
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function t(a, s) {
          switch (a.kind) {
            case r.Kind.NULL:
              return null;
            case r.Kind.INT:
              return parseInt(a.value, 10);
            case r.Kind.FLOAT:
              return parseFloat(a.value);
            case r.Kind.STRING:
            case r.Kind.ENUM:
            case r.Kind.BOOLEAN:
              return a.value;
            case r.Kind.LIST:
              return a.values.map(function (e) {
                return t(e, s);
              });
            case r.Kind.OBJECT:
              return (0, u.default)(
                a.fields,
                function (e) {
                  return e.name.value;
                },
                function (e) {
                  return t(e.value, s);
                }
              );
            case r.Kind.VARIABLE:
              return null == s ? void 0 : s[a.name.value];
          }
          (0, n.default)(0, 'Unexpected value node: ' + (0, e.default)(a));
        }
      },
      {
        '../jsutils/inspect.js': 'Choh',
        '../jsutils/invariant.js': 'hYEN',
        '../jsutils/keyValMap.js': 'K4f5',
        '../language/kinds.js': 'HZ3k',
      },
    ],
    McYM: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isType = g),
          (exports.assertType = b),
          (exports.isScalarType = L),
          (exports.assertScalarType = S),
          (exports.isObjectType = _),
          (exports.assertObjectType = G),
          (exports.isInterfaceType = w),
          (exports.assertInterfaceType = j),
          (exports.isUnionType = O),
          (exports.assertUnionType = E),
          (exports.isEnumType = A),
          (exports.assertEnumType = Q),
          (exports.isInputObjectType = I),
          (exports.assertInputObjectType = R),
          (exports.isListType = V),
          (exports.assertListType = M),
          (exports.isNonNullType = k),
          (exports.assertNonNullType = q),
          (exports.isInputType = U),
          (exports.assertInputType = B),
          (exports.isOutputType = F),
          (exports.assertOutputType = C),
          (exports.isLeafType = Y),
          (exports.assertLeafType = z),
          (exports.isCompositeType = J),
          (exports.assertCompositeType = D),
          (exports.isAbstractType = P),
          (exports.assertAbstractType = W),
          (exports.GraphQLList = K),
          (exports.GraphQLNonNull = H),
          (exports.isWrappingType = X),
          (exports.assertWrappingType = Z),
          (exports.isNullableType = $),
          (exports.assertNullableType = ee),
          (exports.getNullableType = te),
          (exports.isNamedType = ne),
          (exports.assertNamedType = re),
          (exports.getNamedType = se),
          (exports.argsToArgsConfig = le),
          (exports.isRequiredArgument = he),
          (exports.isRequiredInputField = Le),
          (exports.GraphQLInputObjectType = exports.GraphQLEnumType = exports.GraphQLUnionType = exports.GraphQLInterfaceType = exports.GraphQLObjectType = exports.GraphQLScalarType = void 0);
        var e = v(require('../polyfills/objectEntries.js')),
          t = require('../polyfills/symbols.js'),
          n = v(require('../jsutils/inspect.js')),
          r = v(require('../jsutils/keyMap.js')),
          s = v(require('../jsutils/mapValue.js')),
          i = v(require('../jsutils/toObjMap.js')),
          o = v(require('../jsutils/devAssert.js')),
          a = v(require('../jsutils/keyValMap.js')),
          u = v(require('../jsutils/instanceOf.js')),
          p = v(require('../jsutils/didYouMean.js')),
          c = v(require('../jsutils/isObjectLike.js')),
          f = v(require('../jsutils/identityFunc.js')),
          d = v(require('../jsutils/defineInspect.js')),
          l = v(require('../jsutils/suggestionList.js')),
          h = require('../error/GraphQLError.js'),
          y = require('../language/kinds.js'),
          x = require('../language/printer.js'),
          T = require('../utilities/valueFromASTUntyped.js');
        function v(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function m(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              'value' in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function N(e, t, n) {
          return t && m(e.prototype, t), n && m(e, n), e;
        }
        function g(e) {
          return L(e) || _(e) || w(e) || O(e) || A(e) || I(e) || V(e) || k(e);
        }
        function b(e) {
          if (!g(e))
            throw new Error(
              'Expected '.concat((0, n.default)(e), ' to be a GraphQL type.')
            );
          return e;
        }
        function L(e) {
          return (0, u.default)(e, ae);
        }
        function S(e) {
          if (!L(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Scalar type.'
              )
            );
          return e;
        }
        function _(e) {
          return (0, u.default)(e, ue);
        }
        function G(e) {
          if (!_(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Object type.'
              )
            );
          return e;
        }
        function w(e) {
          return (0, u.default)(e, ye);
        }
        function j(e) {
          if (!w(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Interface type.'
              )
            );
          return e;
        }
        function O(e) {
          return (0, u.default)(e, xe);
        }
        function E(e) {
          if (!O(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Union type.'
              )
            );
          return e;
        }
        function A(e) {
          return (0, u.default)(e, ve);
        }
        function Q(e) {
          if (!A(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Enum type.'
              )
            );
          return e;
        }
        function I(e) {
          return (0, u.default)(e, ge);
        }
        function R(e) {
          if (!I(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Input Object type.'
              )
            );
          return e;
        }
        function V(e) {
          return (0, u.default)(e, K);
        }
        function M(e) {
          if (!V(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL List type.'
              )
            );
          return e;
        }
        function k(e) {
          return (0, u.default)(e, H);
        }
        function q(e) {
          if (!k(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL Non-Null type.'
              )
            );
          return e;
        }
        function U(e) {
          return L(e) || A(e) || I(e) || (X(e) && U(e.ofType));
        }
        function B(e) {
          if (!U(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL input type.'
              )
            );
          return e;
        }
        function F(e) {
          return L(e) || _(e) || w(e) || O(e) || A(e) || (X(e) && F(e.ofType));
        }
        function C(e) {
          if (!F(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL output type.'
              )
            );
          return e;
        }
        function Y(e) {
          return L(e) || A(e);
        }
        function z(e) {
          if (!Y(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL leaf type.'
              )
            );
          return e;
        }
        function J(e) {
          return _(e) || w(e) || O(e);
        }
        function D(e) {
          if (!J(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL composite type.'
              )
            );
          return e;
        }
        function P(e) {
          return w(e) || O(e);
        }
        function W(e) {
          if (!P(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL abstract type.'
              )
            );
          return e;
        }
        function K(e) {
          if (!(this instanceof K)) return new K(e);
          this.ofType = b(e);
        }
        function H(e) {
          if (!(this instanceof H)) return new H(e);
          this.ofType = ee(e);
        }
        function X(e) {
          return V(e) || k(e);
        }
        function Z(e) {
          if (!X(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL wrapping type.'
              )
            );
          return e;
        }
        function $(e) {
          return g(e) && !k(e);
        }
        function ee(e) {
          if (!$(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL nullable type.'
              )
            );
          return e;
        }
        function te(e) {
          if (e) return k(e) ? e.ofType : e;
        }
        function ne(e) {
          return L(e) || _(e) || w(e) || O(e) || A(e) || I(e);
        }
        function re(e) {
          if (!ne(e))
            throw new Error(
              'Expected '.concat(
                (0, n.default)(e),
                ' to be a GraphQL named type.'
              )
            );
          return e;
        }
        function se(e) {
          if (e) {
            for (var t = e; X(t); ) t = t.ofType;
            return t;
          }
        }
        function ie(e) {
          return 'function' == typeof e ? e() : e;
        }
        function oe(e) {
          return e && e.length > 0 ? e : void 0;
        }
        (K.prototype.toString = function () {
          return '[' + String(this.ofType) + ']';
        }),
          (K.prototype.toJSON = function () {
            return this.toString();
          }),
          Object.defineProperty(K.prototype, t.SYMBOL_TO_STRING_TAG, {
            get: function () {
              return 'GraphQLList';
            },
          }),
          (0, d.default)(K),
          (H.prototype.toString = function () {
            return String(this.ofType) + '!';
          }),
          (H.prototype.toJSON = function () {
            return this.toString();
          }),
          Object.defineProperty(H.prototype, t.SYMBOL_TO_STRING_TAG, {
            get: function () {
              return 'GraphQLNonNull';
            },
          }),
          (0, d.default)(H);
        var ae = (function () {
          function e(e) {
            var t,
              r,
              s,
              a = null !== (t = e.parseValue) && void 0 !== t ? t : f.default;
            (this.name = e.name),
              (this.description = e.description),
              (this.specifiedByUrl = e.specifiedByUrl),
              (this.serialize =
                null !== (r = e.serialize) && void 0 !== r ? r : f.default),
              (this.parseValue = a),
              (this.parseLiteral =
                null !== (s = e.parseLiteral) && void 0 !== s
                  ? s
                  : function (e, t) {
                      return a((0, T.valueFromASTUntyped)(e, t));
                    }),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.'),
              null == e.specifiedByUrl ||
                'string' == typeof e.specifiedByUrl ||
                (0, o.default)(
                  0,
                  ''.concat(
                    this.name,
                    ' must provide "specifiedByUrl" as a string, '
                  ) + 'but got: '.concat((0, n.default)(e.specifiedByUrl), '.')
                ),
              null == e.serialize ||
                'function' == typeof e.serialize ||
                (0, o.default)(
                  0,
                  ''.concat(
                    this.name,
                    ' must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.'
                  )
                ),
              e.parseLiteral &&
                (('function' == typeof e.parseValue &&
                  'function' == typeof e.parseLiteral) ||
                  (0, o.default)(
                    0,
                    ''.concat(
                      this.name,
                      ' must provide both "parseValue" and "parseLiteral" functions.'
                    )
                  ));
          }
          var r = e.prototype;
          return (
            (r.toConfig = function () {
              var e;
              return {
                name: this.name,
                description: this.description,
                specifiedByUrl: this.specifiedByUrl,
                serialize: this.serialize,
                parseValue: this.parseValue,
                parseLiteral: this.parseLiteral,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
              };
            }),
            (r.toString = function () {
              return this.name;
            }),
            (r.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLScalarType';
                },
              },
            ]),
            e
          );
        })();
        (exports.GraphQLScalarType = ae), (0, d.default)(ae);
        var ue = (function () {
          function e(e) {
            (this.name = e.name),
              (this.description = e.description),
              (this.isTypeOf = e.isTypeOf),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              (this._fields = ce.bind(void 0, e)),
              (this._interfaces = pe.bind(void 0, e)),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.'),
              null == e.isTypeOf ||
                'function' == typeof e.isTypeOf ||
                (0, o.default)(
                  0,
                  ''.concat(
                    this.name,
                    ' must provide "isTypeOf" as a function, '
                  ) + 'but got: '.concat((0, n.default)(e.isTypeOf), '.')
                );
          }
          var r = e.prototype;
          return (
            (r.getFields = function () {
              return (
                'function' == typeof this._fields &&
                  (this._fields = this._fields()),
                this._fields
              );
            }),
            (r.getInterfaces = function () {
              return (
                'function' == typeof this._interfaces &&
                  (this._interfaces = this._interfaces()),
                this._interfaces
              );
            }),
            (r.toConfig = function () {
              return {
                name: this.name,
                description: this.description,
                interfaces: this.getInterfaces(),
                fields: de(this.getFields()),
                isTypeOf: this.isTypeOf,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes: this.extensionASTNodes || [],
              };
            }),
            (r.toString = function () {
              return this.name;
            }),
            (r.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLObjectType';
                },
              },
            ]),
            e
          );
        })();
        function pe(e) {
          var t,
            n = null !== (t = ie(e.interfaces)) && void 0 !== t ? t : [];
          return (
            Array.isArray(n) ||
              (0, o.default)(
                0,
                ''.concat(
                  e.name,
                  ' interfaces must be an Array or a function which returns an Array.'
                )
              ),
            n
          );
        }
        function ce(t) {
          var r = ie(t.fields);
          return (
            fe(r) ||
              (0, o.default)(
                0,
                ''.concat(
                  t.name,
                  ' fields must be an object with field names as keys or a function which returns such an object.'
                )
              ),
            (0, s.default)(r, function (r, s) {
              var a;
              fe(r) ||
                (0, o.default)(
                  0,
                  ''
                    .concat(t.name, '.')
                    .concat(s, ' field config must be an object.')
                ),
                !('isDeprecated' in r) ||
                  (0, o.default)(
                    0,
                    ''
                      .concat(t.name, '.')
                      .concat(
                        s,
                        ' should provide "deprecationReason" instead of "isDeprecated".'
                      )
                  ),
                null == r.resolve ||
                  'function' == typeof r.resolve ||
                  (0, o.default)(
                    0,
                    ''
                      .concat(t.name, '.')
                      .concat(s, ' field resolver must be a function if ') +
                      'provided, but got: '.concat(
                        (0, n.default)(r.resolve),
                        '.'
                      )
                  );
              var u = null !== (a = r.args) && void 0 !== a ? a : {};
              fe(u) ||
                (0, o.default)(
                  0,
                  ''
                    .concat(t.name, '.')
                    .concat(
                      s,
                      ' args must be an object with argument names as keys.'
                    )
                );
              var p = (0, e.default)(u).map(function (e) {
                var t = e[0],
                  n = e[1];
                return {
                  name: t,
                  description: n.description,
                  type: n.type,
                  defaultValue: n.defaultValue,
                  deprecationReason: n.deprecationReason,
                  extensions: n.extensions && (0, i.default)(n.extensions),
                  astNode: n.astNode,
                };
              });
              return {
                name: s,
                description: r.description,
                type: r.type,
                args: p,
                resolve: r.resolve,
                subscribe: r.subscribe,
                isDeprecated: null != r.deprecationReason,
                deprecationReason: r.deprecationReason,
                extensions: r.extensions && (0, i.default)(r.extensions),
                astNode: r.astNode,
              };
            })
          );
        }
        function fe(e) {
          return (0, c.default)(e) && !Array.isArray(e);
        }
        function de(e) {
          return (0, s.default)(e, function (e) {
            return {
              description: e.description,
              type: e.type,
              args: le(e.args),
              resolve: e.resolve,
              subscribe: e.subscribe,
              deprecationReason: e.deprecationReason,
              extensions: e.extensions,
              astNode: e.astNode,
            };
          });
        }
        function le(e) {
          return (0, a.default)(
            e,
            function (e) {
              return e.name;
            },
            function (e) {
              return {
                description: e.description,
                type: e.type,
                defaultValue: e.defaultValue,
                deprecationReason: e.deprecationReason,
                extensions: e.extensions,
                astNode: e.astNode,
              };
            }
          );
        }
        function he(e) {
          return k(e.type) && void 0 === e.defaultValue;
        }
        (exports.GraphQLObjectType = ue), (0, d.default)(ue);
        var ye = (function () {
          function e(e) {
            (this.name = e.name),
              (this.description = e.description),
              (this.resolveType = e.resolveType),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              (this._fields = ce.bind(void 0, e)),
              (this._interfaces = pe.bind(void 0, e)),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.'),
              null == e.resolveType ||
                'function' == typeof e.resolveType ||
                (0, o.default)(
                  0,
                  ''.concat(
                    this.name,
                    ' must provide "resolveType" as a function, '
                  ) + 'but got: '.concat((0, n.default)(e.resolveType), '.')
                );
          }
          var r = e.prototype;
          return (
            (r.getFields = function () {
              return (
                'function' == typeof this._fields &&
                  (this._fields = this._fields()),
                this._fields
              );
            }),
            (r.getInterfaces = function () {
              return (
                'function' == typeof this._interfaces &&
                  (this._interfaces = this._interfaces()),
                this._interfaces
              );
            }),
            (r.toConfig = function () {
              var e;
              return {
                name: this.name,
                description: this.description,
                interfaces: this.getInterfaces(),
                fields: de(this.getFields()),
                resolveType: this.resolveType,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
              };
            }),
            (r.toString = function () {
              return this.name;
            }),
            (r.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLInterfaceType';
                },
              },
            ]),
            e
          );
        })();
        (exports.GraphQLInterfaceType = ye), (0, d.default)(ye);
        var xe = (function () {
          function e(e) {
            (this.name = e.name),
              (this.description = e.description),
              (this.resolveType = e.resolveType),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              (this._types = Te.bind(void 0, e)),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.'),
              null == e.resolveType ||
                'function' == typeof e.resolveType ||
                (0, o.default)(
                  0,
                  ''.concat(
                    this.name,
                    ' must provide "resolveType" as a function, '
                  ) + 'but got: '.concat((0, n.default)(e.resolveType), '.')
                );
          }
          var r = e.prototype;
          return (
            (r.getTypes = function () {
              return (
                'function' == typeof this._types &&
                  (this._types = this._types()),
                this._types
              );
            }),
            (r.toConfig = function () {
              var e;
              return {
                name: this.name,
                description: this.description,
                types: this.getTypes(),
                resolveType: this.resolveType,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
              };
            }),
            (r.toString = function () {
              return this.name;
            }),
            (r.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLUnionType';
                },
              },
            ]),
            e
          );
        })();
        function Te(e) {
          var t = ie(e.types);
          return (
            Array.isArray(t) ||
              (0, o.default)(
                0,
                'Must provide Array of types or a function which returns such an array for Union '.concat(
                  e.name,
                  '.'
                )
              ),
            t
          );
        }
        (exports.GraphQLUnionType = xe), (0, d.default)(xe);
        var ve = (function () {
          function e(e) {
            (this.name = e.name),
              (this.description = e.description),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              (this._values = Ne(this.name, e.values)),
              (this._valueLookup = new Map(
                this._values.map(function (e) {
                  return [e.value, e];
                })
              )),
              (this._nameLookup = (0, r.default)(this._values, function (e) {
                return e.name;
              })),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.');
          }
          var s = e.prototype;
          return (
            (s.getValues = function () {
              return this._values;
            }),
            (s.getValue = function (e) {
              return this._nameLookup[e];
            }),
            (s.serialize = function (e) {
              var t = this._valueLookup.get(e);
              if (void 0 === t)
                throw new h.GraphQLError(
                  'Enum "'
                    .concat(this.name, '" cannot represent value: ')
                    .concat((0, n.default)(e))
                );
              return t.name;
            }),
            (s.parseValue = function (e) {
              if ('string' != typeof e) {
                var t = (0, n.default)(e);
                throw new h.GraphQLError(
                  'Enum "'
                    .concat(this.name, '" cannot represent non-string value: ')
                    .concat(t, '.') + me(this, t)
                );
              }
              var r = this.getValue(e);
              if (null == r)
                throw new h.GraphQLError(
                  'Value "'
                    .concat(e, '" does not exist in "')
                    .concat(this.name, '" enum.') + me(this, e)
                );
              return r.value;
            }),
            (s.parseLiteral = function (e, t) {
              if (e.kind !== y.Kind.ENUM) {
                var n = (0, x.print)(e);
                throw new h.GraphQLError(
                  'Enum "'
                    .concat(this.name, '" cannot represent non-enum value: ')
                    .concat(n, '.') + me(this, n),
                  e
                );
              }
              var r = this.getValue(e.value);
              if (null == r) {
                var s = (0, x.print)(e);
                throw new h.GraphQLError(
                  'Value "'
                    .concat(s, '" does not exist in "')
                    .concat(this.name, '" enum.') + me(this, s),
                  e
                );
              }
              return r.value;
            }),
            (s.toConfig = function () {
              var e,
                t = (0, a.default)(
                  this.getValues(),
                  function (e) {
                    return e.name;
                  },
                  function (e) {
                    return {
                      description: e.description,
                      value: e.value,
                      deprecationReason: e.deprecationReason,
                      extensions: e.extensions,
                      astNode: e.astNode,
                    };
                  }
                );
              return {
                name: this.name,
                description: this.description,
                values: t,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
              };
            }),
            (s.toString = function () {
              return this.name;
            }),
            (s.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLEnumType';
                },
              },
            ]),
            e
          );
        })();
        function me(e, t) {
          var n = e.getValues().map(function (e) {
              return e.name;
            }),
            r = (0, l.default)(t, n);
          return (0, p.default)('the enum value', r);
        }
        function Ne(t, r) {
          return (
            fe(r) ||
              (0, o.default)(
                0,
                ''.concat(
                  t,
                  ' values must be an object with value names as keys.'
                )
              ),
            (0, e.default)(r).map(function (e) {
              var r = e[0],
                s = e[1];
              return (
                fe(s) ||
                  (0, o.default)(
                    0,
                    ''
                      .concat(t, '.')
                      .concat(
                        r,
                        ' must refer to an object with a "value" key '
                      ) +
                      'representing an internal value but got: '.concat(
                        (0, n.default)(s),
                        '.'
                      )
                  ),
                !('isDeprecated' in s) ||
                  (0, o.default)(
                    0,
                    ''
                      .concat(t, '.')
                      .concat(
                        r,
                        ' should provide "deprecationReason" instead of "isDeprecated".'
                      )
                  ),
                {
                  name: r,
                  description: s.description,
                  value: void 0 !== s.value ? s.value : r,
                  isDeprecated: null != s.deprecationReason,
                  deprecationReason: s.deprecationReason,
                  extensions: s.extensions && (0, i.default)(s.extensions),
                  astNode: s.astNode,
                }
              );
            })
          );
        }
        (exports.GraphQLEnumType = ve), (0, d.default)(ve);
        var ge = (function () {
          function e(e) {
            (this.name = e.name),
              (this.description = e.description),
              (this.extensions = e.extensions && (0, i.default)(e.extensions)),
              (this.astNode = e.astNode),
              (this.extensionASTNodes = oe(e.extensionASTNodes)),
              (this._fields = be.bind(void 0, e)),
              'string' == typeof e.name ||
                (0, o.default)(0, 'Must provide name.');
          }
          var n = e.prototype;
          return (
            (n.getFields = function () {
              return (
                'function' == typeof this._fields &&
                  (this._fields = this._fields()),
                this._fields
              );
            }),
            (n.toConfig = function () {
              var e,
                t = (0, s.default)(this.getFields(), function (e) {
                  return {
                    description: e.description,
                    type: e.type,
                    defaultValue: e.defaultValue,
                    extensions: e.extensions,
                    astNode: e.astNode,
                  };
                });
              return {
                name: this.name,
                description: this.description,
                fields: t,
                extensions: this.extensions,
                astNode: this.astNode,
                extensionASTNodes:
                  null !== (e = this.extensionASTNodes) && void 0 !== e
                    ? e
                    : [],
              };
            }),
            (n.toString = function () {
              return this.name;
            }),
            (n.toJSON = function () {
              return this.toString();
            }),
            N(e, [
              {
                key: t.SYMBOL_TO_STRING_TAG,
                get: function () {
                  return 'GraphQLInputObjectType';
                },
              },
            ]),
            e
          );
        })();
        function be(e) {
          var t = ie(e.fields);
          return (
            fe(t) ||
              (0, o.default)(
                0,
                ''.concat(
                  e.name,
                  ' fields must be an object with field names as keys or a function which returns such an object.'
                )
              ),
            (0, s.default)(t, function (t, n) {
              return (
                !('resolve' in t) ||
                  (0, o.default)(
                    0,
                    ''
                      .concat(e.name, '.')
                      .concat(
                        n,
                        ' field has a resolve property, but Input Types cannot define resolvers.'
                      )
                  ),
                {
                  name: n,
                  description: t.description,
                  type: t.type,
                  defaultValue: t.defaultValue,
                  deprecationReason: t.deprecationReason,
                  extensions: t.extensions && (0, i.default)(t.extensions),
                  astNode: t.astNode,
                }
              );
            })
          );
        }
        function Le(e) {
          return k(e.type) && void 0 === e.defaultValue;
        }
        (exports.GraphQLInputObjectType = ge), (0, d.default)(ge);
      },
      {
        '../polyfills/objectEntries.js': 'wKrj',
        '../polyfills/symbols.js': 'jjn7',
        '../jsutils/inspect.js': 'Choh',
        '../jsutils/keyMap.js': 'pTwJ',
        '../jsutils/mapValue.js': 'A8z2',
        '../jsutils/toObjMap.js': 'zyB0',
        '../jsutils/devAssert.js': 'wvjo',
        '../jsutils/keyValMap.js': 'K4f5',
        '../jsutils/instanceOf.js': 'nGk9',
        '../jsutils/didYouMean.js': 'F689',
        '../jsutils/isObjectLike.js': 'QGgI',
        '../jsutils/identityFunc.js': 'd0Jw',
        '../jsutils/defineInspect.js': 'TNFZ',
        '../jsutils/suggestionList.js': 'ZMIN',
        '../error/GraphQLError.js': 'zFQB',
        '../language/kinds.js': 'HZ3k',
        '../language/printer.js': 'h5rv',
        '../utilities/valueFromASTUntyped.js': 'V2lb',
      },
    ],
    w9ro: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isSpecifiedScalarType = x),
          (exports.specifiedScalarTypes = exports.GraphQLID = exports.GraphQLBoolean = exports.GraphQLString = exports.GraphQLFloat = exports.GraphQLInt = void 0);
        var e = s(require('../polyfills/isFinite.js')),
          r = s(require('../polyfills/isInteger.js')),
          n = s(require('../jsutils/inspect.js')),
          t = s(require('../jsutils/isObjectLike.js')),
          a = require('../language/kinds.js'),
          o = require('../language/printer.js'),
          i = require('../error/GraphQLError.js'),
          p = require('./definition.js');
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var u = 2147483647,
          l = -2147483648;
        function c(e) {
          var t = L(e);
          if ('boolean' == typeof t) return t ? 1 : 0;
          var a = t;
          if (
            ('string' == typeof t && '' !== t && (a = Number(t)),
            !(0, r.default)(a))
          )
            throw new i.GraphQLError(
              'Int cannot represent non-integer value: '.concat(
                (0, n.default)(t)
              )
            );
          if (a > u || a < l)
            throw new i.GraphQLError(
              'Int cannot represent non 32-bit signed integer value: ' +
                (0, n.default)(t)
            );
          return a;
        }
        function f(e) {
          if (!(0, r.default)(e))
            throw new i.GraphQLError(
              'Int cannot represent non-integer value: '.concat(
                (0, n.default)(e)
              )
            );
          if (e > u || e < l)
            throw new i.GraphQLError(
              'Int cannot represent non 32-bit signed integer value: '.concat(e)
            );
          return e;
        }
        var d = new p.GraphQLScalarType({
          name: 'Int',
          description:
            'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',
          serialize: c,
          parseValue: f,
          parseLiteral: function (e) {
            if (e.kind !== a.Kind.INT)
              throw new i.GraphQLError(
                'Int cannot represent non-integer value: '.concat(
                  (0, o.print)(e)
                ),
                e
              );
            var r = parseInt(e.value, 10);
            if (r > u || r < l)
              throw new i.GraphQLError(
                'Int cannot represent non 32-bit signed integer value: '.concat(
                  e.value
                ),
                e
              );
            return r;
          },
        });
        function h(r) {
          var t = L(r);
          if ('boolean' == typeof t) return t ? 1 : 0;
          var a = t;
          if (
            ('string' == typeof t && '' !== t && (a = Number(t)),
            !(0, e.default)(a))
          )
            throw new i.GraphQLError(
              'Float cannot represent non numeric value: '.concat(
                (0, n.default)(t)
              )
            );
          return a;
        }
        function v(r) {
          if (!(0, e.default)(r))
            throw new i.GraphQLError(
              'Float cannot represent non numeric value: '.concat(
                (0, n.default)(r)
              )
            );
          return r;
        }
        exports.GraphQLInt = d;
        var w = new p.GraphQLScalarType({
          name: 'Float',
          description:
            'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',
          serialize: h,
          parseValue: v,
          parseLiteral: function (e) {
            if (e.kind !== a.Kind.FLOAT && e.kind !== a.Kind.INT)
              throw new i.GraphQLError(
                'Float cannot represent non numeric value: '.concat(
                  (0, o.print)(e)
                ),
                e
              );
            return parseFloat(e.value);
          },
        });
        function L(e) {
          if ((0, t.default)(e)) {
            if ('function' == typeof e.valueOf) {
              var r = e.valueOf();
              if (!(0, t.default)(r)) return r;
            }
            if ('function' == typeof e.toJSON) return e.toJSON();
          }
          return e;
        }
        function g(r) {
          var t = L(r);
          if ('string' == typeof t) return t;
          if ('boolean' == typeof t) return t ? 'true' : 'false';
          if ((0, e.default)(t)) return t.toString();
          throw new i.GraphQLError(
            'String cannot represent value: '.concat((0, n.default)(r))
          );
        }
        function G(e) {
          if ('string' != typeof e)
            throw new i.GraphQLError(
              'String cannot represent a non string value: '.concat(
                (0, n.default)(e)
              )
            );
          return e;
        }
        exports.GraphQLFloat = w;
        var y = new p.GraphQLScalarType({
          name: 'String',
          description:
            'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',
          serialize: g,
          parseValue: G,
          parseLiteral: function (e) {
            if (e.kind !== a.Kind.STRING)
              throw new i.GraphQLError(
                'String cannot represent a non string value: '.concat(
                  (0, o.print)(e)
                ),
                e
              );
            return e.value;
          },
        });
        function Q(r) {
          var t = L(r);
          if ('boolean' == typeof t) return t;
          if ((0, e.default)(t)) return 0 !== t;
          throw new i.GraphQLError(
            'Boolean cannot represent a non boolean value: '.concat(
              (0, n.default)(t)
            )
          );
        }
        function I(e) {
          if ('boolean' != typeof e)
            throw new i.GraphQLError(
              'Boolean cannot represent a non boolean value: '.concat(
                (0, n.default)(e)
              )
            );
          return e;
        }
        exports.GraphQLString = y;
        var E = new p.GraphQLScalarType({
          name: 'Boolean',
          description:
            'The `Boolean` scalar type represents `true` or `false`.',
          serialize: Q,
          parseValue: I,
          parseLiteral: function (e) {
            if (e.kind !== a.Kind.BOOLEAN)
              throw new i.GraphQLError(
                'Boolean cannot represent a non boolean value: '.concat(
                  (0, o.print)(e)
                ),
                e
              );
            return e.value;
          },
        });
        function S(e) {
          var t = L(e);
          if ('string' == typeof t) return t;
          if ((0, r.default)(t)) return String(t);
          throw new i.GraphQLError(
            'ID cannot represent value: '.concat((0, n.default)(e))
          );
        }
        function b(e) {
          if ('string' == typeof e) return e;
          if ((0, r.default)(e)) return e.toString();
          throw new i.GraphQLError(
            'ID cannot represent value: '.concat((0, n.default)(e))
          );
        }
        exports.GraphQLBoolean = E;
        var T = new p.GraphQLScalarType({
          name: 'ID',
          description:
            'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',
          serialize: S,
          parseValue: b,
          parseLiteral: function (e) {
            if (e.kind !== a.Kind.STRING && e.kind !== a.Kind.INT)
              throw new i.GraphQLError(
                'ID cannot represent a non-string and non-integer value: ' +
                  (0, o.print)(e),
                e
              );
            return e.value;
          },
        });
        exports.GraphQLID = T;
        var m = Object.freeze([y, d, w, E, T]);
        function x(e) {
          return m.some(function (r) {
            var n = r.name;
            return e.name === n;
          });
        }
        exports.specifiedScalarTypes = m;
      },
      {
        '../polyfills/isFinite.js': 'iJ7N',
        '../polyfills/isInteger.js': 'STFZ',
        '../jsutils/inspect.js': 'Choh',
        '../jsutils/isObjectLike.js': 'QGgI',
        '../language/kinds.js': 'HZ3k',
        '../language/printer.js': 'h5rv',
        '../error/GraphQLError.js': 'zFQB',
        './definition.js': 'McYM',
      },
    ],
    QiJY: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.astFromValue = o);
        var e = f(require('../polyfills/isFinite.js')),
          i = f(require('../polyfills/arrayFrom.js')),
          n = f(require('../polyfills/objectValues.js')),
          r = f(require('../jsutils/inspect.js')),
          u = f(require('../jsutils/invariant.js')),
          t = f(require('../jsutils/isObjectLike.js')),
          l = f(require('../jsutils/isCollection.js')),
          s = require('../language/kinds.js'),
          a = require('../type/scalars.js'),
          d = require('../type/definition.js');
        function f(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function o(f, v) {
          if ((0, d.isNonNullType)(v)) {
            var y = o(f, v.ofType);
            return (null == y ? void 0 : y.kind) === s.Kind.NULL ? null : y;
          }
          if (null === f) return { kind: s.Kind.NULL };
          if (void 0 === f) return null;
          if ((0, d.isListType)(v)) {
            var j = v.ofType;
            if ((0, l.default)(f)) {
              for (
                var T = [], c = 0, k = (0, i.default)(f);
                c < k.length;
                c++
              ) {
                var K = o(k[c], j);
                null != K && T.push(K);
              }
              return { kind: s.Kind.LIST, values: T };
            }
            return o(f, j);
          }
          if ((0, d.isInputObjectType)(v)) {
            if (!(0, t.default)(f)) return null;
            for (
              var L = [], q = 0, N = (0, n.default)(v.getFields());
              q < N.length;
              q++
            ) {
              var E = N[q],
                O = o(f[E.name], E.type);
              O &&
                L.push({
                  kind: s.Kind.OBJECT_FIELD,
                  name: { kind: s.Kind.NAME, value: E.name },
                  value: O,
                });
            }
            return { kind: s.Kind.OBJECT, fields: L };
          }
          if ((0, d.isLeafType)(v)) {
            var g = v.serialize(f);
            if (null == g) return null;
            if ('boolean' == typeof g)
              return { kind: s.Kind.BOOLEAN, value: g };
            if ('number' == typeof g && (0, e.default)(g)) {
              var m = String(g);
              return p.test(m)
                ? { kind: s.Kind.INT, value: m }
                : { kind: s.Kind.FLOAT, value: m };
            }
            if ('string' == typeof g)
              return (0, d.isEnumType)(v)
                ? { kind: s.Kind.ENUM, value: g }
                : v === a.GraphQLID && p.test(g)
                ? { kind: s.Kind.INT, value: g }
                : { kind: s.Kind.STRING, value: g };
            throw new TypeError(
              'Cannot convert value to AST: '.concat((0, r.default)(g), '.')
            );
          }
          (0, u.default)(0, 'Unexpected input type: ' + (0, r.default)(v));
        }
        var p = /^-?(?:0|[1-9][0-9]*)$/;
      },
      {
        '../polyfills/isFinite.js': 'iJ7N',
        '../polyfills/arrayFrom.js': 'dKnG',
        '../polyfills/objectValues.js': 'pwpl',
        '../jsutils/inspect.js': 'Choh',
        '../jsutils/invariant.js': 'hYEN',
        '../jsutils/isObjectLike.js': 'QGgI',
        '../jsutils/isCollection.js': 'Fnua',
        '../language/kinds.js': 'HZ3k',
        '../type/scalars.js': 'w9ro',
        '../type/definition.js': 'McYM',
      },
    ],
    jF4P: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isIntrospectionType = _),
          (exports.introspectionTypes = exports.TypeNameMetaFieldDef = exports.TypeMetaFieldDef = exports.SchemaMetaFieldDef = exports.__TypeKind = exports.TypeKind = exports.__EnumValue = exports.__InputValue = exports.__Field = exports.__Type = exports.__DirectiveLocation = exports.__Directive = exports.__Schema = void 0);
        var e = p(require('../polyfills/objectValues.js')),
          t = p(require('../jsutils/inspect.js')),
          n = p(require('../jsutils/invariant.js')),
          i = require('../language/printer.js'),
          r = require('../language/directiveLocation.js'),
          a = require('../utilities/astFromValue.js'),
          o = require('./scalars.js'),
          s = require('./definition.js');
        function p(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var c = new s.GraphQLObjectType({
          name: '__Schema',
          description:
            'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',
          fields: function () {
            return {
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.description;
                },
              },
              types: {
                description: 'A list of all types supported by this server.',
                type: new s.GraphQLNonNull(
                  new s.GraphQLList(new s.GraphQLNonNull(d))
                ),
                resolve: function (t) {
                  return (0, e.default)(t.getTypeMap());
                },
              },
              queryType: {
                description:
                  'The type that query operations will be rooted at.',
                type: new s.GraphQLNonNull(d),
                resolve: function (e) {
                  return e.getQueryType();
                },
              },
              mutationType: {
                description:
                  'If this server supports mutation, the type that mutation operations will be rooted at.',
                type: d,
                resolve: function (e) {
                  return e.getMutationType();
                },
              },
              subscriptionType: {
                description:
                  'If this server support subscription, the type that subscription operations will be rooted at.',
                type: d,
                resolve: function (e) {
                  return e.getSubscriptionType();
                },
              },
              directives: {
                description:
                  'A list of all directives supported by this server.',
                type: new s.GraphQLNonNull(
                  new s.GraphQLList(new s.GraphQLNonNull(l))
                ),
                resolve: function (e) {
                  return e.getDirectives();
                },
              },
            };
          },
        });
        exports.__Schema = c;
        var l = new s.GraphQLObjectType({
          name: '__Directive',
          description:
            "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          fields: function () {
            return {
              name: {
                type: new s.GraphQLNonNull(o.GraphQLString),
                resolve: function (e) {
                  return e.name;
                },
              },
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.description;
                },
              },
              isRepeatable: {
                type: new s.GraphQLNonNull(o.GraphQLBoolean),
                resolve: function (e) {
                  return e.isRepeatable;
                },
              },
              locations: {
                type: new s.GraphQLNonNull(
                  new s.GraphQLList(new s.GraphQLNonNull(u))
                ),
                resolve: function (e) {
                  return e.locations;
                },
              },
              args: {
                type: new s.GraphQLNonNull(
                  new s.GraphQLList(new s.GraphQLNonNull(f))
                ),
                resolve: function (e) {
                  return e.args;
                },
              },
            };
          },
        });
        exports.__Directive = l;
        var u = new s.GraphQLEnumType({
          name: '__DirectiveLocation',
          description:
            'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',
          values: {
            QUERY: {
              value: r.DirectiveLocation.QUERY,
              description: 'Location adjacent to a query operation.',
            },
            MUTATION: {
              value: r.DirectiveLocation.MUTATION,
              description: 'Location adjacent to a mutation operation.',
            },
            SUBSCRIPTION: {
              value: r.DirectiveLocation.SUBSCRIPTION,
              description: 'Location adjacent to a subscription operation.',
            },
            FIELD: {
              value: r.DirectiveLocation.FIELD,
              description: 'Location adjacent to a field.',
            },
            FRAGMENT_DEFINITION: {
              value: r.DirectiveLocation.FRAGMENT_DEFINITION,
              description: 'Location adjacent to a fragment definition.',
            },
            FRAGMENT_SPREAD: {
              value: r.DirectiveLocation.FRAGMENT_SPREAD,
              description: 'Location adjacent to a fragment spread.',
            },
            INLINE_FRAGMENT: {
              value: r.DirectiveLocation.INLINE_FRAGMENT,
              description: 'Location adjacent to an inline fragment.',
            },
            VARIABLE_DEFINITION: {
              value: r.DirectiveLocation.VARIABLE_DEFINITION,
              description: 'Location adjacent to a variable definition.',
            },
            SCHEMA: {
              value: r.DirectiveLocation.SCHEMA,
              description: 'Location adjacent to a schema definition.',
            },
            SCALAR: {
              value: r.DirectiveLocation.SCALAR,
              description: 'Location adjacent to a scalar definition.',
            },
            OBJECT: {
              value: r.DirectiveLocation.OBJECT,
              description: 'Location adjacent to an object type definition.',
            },
            FIELD_DEFINITION: {
              value: r.DirectiveLocation.FIELD_DEFINITION,
              description: 'Location adjacent to a field definition.',
            },
            ARGUMENT_DEFINITION: {
              value: r.DirectiveLocation.ARGUMENT_DEFINITION,
              description: 'Location adjacent to an argument definition.',
            },
            INTERFACE: {
              value: r.DirectiveLocation.INTERFACE,
              description: 'Location adjacent to an interface definition.',
            },
            UNION: {
              value: r.DirectiveLocation.UNION,
              description: 'Location adjacent to a union definition.',
            },
            ENUM: {
              value: r.DirectiveLocation.ENUM,
              description: 'Location adjacent to an enum definition.',
            },
            ENUM_VALUE: {
              value: r.DirectiveLocation.ENUM_VALUE,
              description: 'Location adjacent to an enum value definition.',
            },
            INPUT_OBJECT: {
              value: r.DirectiveLocation.INPUT_OBJECT,
              description:
                'Location adjacent to an input object type definition.',
            },
            INPUT_FIELD_DEFINITION: {
              value: r.DirectiveLocation.INPUT_FIELD_DEFINITION,
              description:
                'Location adjacent to an input object field definition.',
            },
          },
        });
        exports.__DirectiveLocation = u;
        var d = new s.GraphQLObjectType({
          name: '__Type',
          description:
            'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',
          fields: function () {
            return {
              kind: {
                type: new s.GraphQLNonNull(N),
                resolve: function (e) {
                  return (0, s.isScalarType)(e)
                    ? L.SCALAR
                    : (0, s.isObjectType)(e)
                    ? L.OBJECT
                    : (0, s.isInterfaceType)(e)
                    ? L.INTERFACE
                    : (0, s.isUnionType)(e)
                    ? L.UNION
                    : (0, s.isEnumType)(e)
                    ? L.ENUM
                    : (0, s.isInputObjectType)(e)
                    ? L.INPUT_OBJECT
                    : (0, s.isListType)(e)
                    ? L.LIST
                    : (0, s.isNonNullType)(e)
                    ? L.NON_NULL
                    : void (0, n.default)(
                        0,
                        'Unexpected type: "'.concat((0, t.default)(e), '".')
                      );
                },
              },
              name: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return void 0 !== e.name ? e.name : void 0;
                },
              },
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return void 0 !== e.description ? e.description : void 0;
                },
              },
              specifiedByUrl: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return void 0 !== e.specifiedByUrl
                    ? e.specifiedByUrl
                    : void 0;
                },
              },
              fields: {
                type: new s.GraphQLList(new s.GraphQLNonNull(v)),
                args: {
                  includeDeprecated: {
                    type: o.GraphQLBoolean,
                    defaultValue: !1,
                  },
                },
                resolve: function (t, n) {
                  var i = n.includeDeprecated;
                  if ((0, s.isObjectType)(t) || (0, s.isInterfaceType)(t)) {
                    var r = (0, e.default)(t.getFields());
                    return i
                      ? r
                      : r.filter(function (e) {
                          return null == e.deprecationReason;
                        });
                  }
                },
              },
              interfaces: {
                type: new s.GraphQLList(new s.GraphQLNonNull(d)),
                resolve: function (e) {
                  if ((0, s.isObjectType)(e) || (0, s.isInterfaceType)(e))
                    return e.getInterfaces();
                },
              },
              possibleTypes: {
                type: new s.GraphQLList(new s.GraphQLNonNull(d)),
                resolve: function (e, t, n, i) {
                  var r = i.schema;
                  if ((0, s.isAbstractType)(e)) return r.getPossibleTypes(e);
                },
              },
              enumValues: {
                type: new s.GraphQLList(new s.GraphQLNonNull(y)),
                args: {
                  includeDeprecated: {
                    type: o.GraphQLBoolean,
                    defaultValue: !1,
                  },
                },
                resolve: function (e, t) {
                  var n = t.includeDeprecated;
                  if ((0, s.isEnumType)(e)) {
                    var i = e.getValues();
                    return n
                      ? i
                      : i.filter(function (e) {
                          return null == e.deprecationReason;
                        });
                  }
                },
              },
              inputFields: {
                type: new s.GraphQLList(new s.GraphQLNonNull(f)),
                args: {
                  includeDeprecated: {
                    type: o.GraphQLBoolean,
                    defaultValue: !1,
                  },
                },
                resolve: function (t, n) {
                  var i = n.includeDeprecated;
                  if ((0, s.isInputObjectType)(t)) {
                    var r = (0, e.default)(t.getFields());
                    return i
                      ? r
                      : r.filter(function (e) {
                          return null == e.deprecationReason;
                        });
                  }
                },
              },
              ofType: {
                type: d,
                resolve: function (e) {
                  return void 0 !== e.ofType ? e.ofType : void 0;
                },
              },
            };
          },
        });
        exports.__Type = d;
        var v = new s.GraphQLObjectType({
          name: '__Field',
          description:
            'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',
          fields: function () {
            return {
              name: {
                type: new s.GraphQLNonNull(o.GraphQLString),
                resolve: function (e) {
                  return e.name;
                },
              },
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.description;
                },
              },
              args: {
                type: new s.GraphQLNonNull(
                  new s.GraphQLList(new s.GraphQLNonNull(f))
                ),
                args: {
                  includeDeprecated: {
                    type: o.GraphQLBoolean,
                    defaultValue: !1,
                  },
                },
                resolve: function (e, t) {
                  return t.includeDeprecated
                    ? e.args
                    : e.args.filter(function (e) {
                        return null == e.deprecationReason;
                      });
                },
              },
              type: {
                type: new s.GraphQLNonNull(d),
                resolve: function (e) {
                  return e.type;
                },
              },
              isDeprecated: {
                type: new s.GraphQLNonNull(o.GraphQLBoolean),
                resolve: function (e) {
                  return null != e.deprecationReason;
                },
              },
              deprecationReason: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.deprecationReason;
                },
              },
            };
          },
        });
        exports.__Field = v;
        var f = new s.GraphQLObjectType({
          name: '__InputValue',
          description:
            'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',
          fields: function () {
            return {
              name: {
                type: new s.GraphQLNonNull(o.GraphQLString),
                resolve: function (e) {
                  return e.name;
                },
              },
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.description;
                },
              },
              type: {
                type: new s.GraphQLNonNull(d),
                resolve: function (e) {
                  return e.type;
                },
              },
              defaultValue: {
                type: o.GraphQLString,
                description:
                  'A GraphQL-formatted string representing the default value for this input value.',
                resolve: function (e) {
                  var t = e.type,
                    n = e.defaultValue,
                    r = (0, a.astFromValue)(n, t);
                  return r ? (0, i.print)(r) : null;
                },
              },
              isDeprecated: {
                type: new s.GraphQLNonNull(o.GraphQLBoolean),
                resolve: function (e) {
                  return null != e.deprecationReason;
                },
              },
              deprecationReason: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.deprecationReason;
                },
              },
            };
          },
        });
        exports.__InputValue = f;
        var y = new s.GraphQLObjectType({
          name: '__EnumValue',
          description:
            'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',
          fields: function () {
            return {
              name: {
                type: new s.GraphQLNonNull(o.GraphQLString),
                resolve: function (e) {
                  return e.name;
                },
              },
              description: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.description;
                },
              },
              isDeprecated: {
                type: new s.GraphQLNonNull(o.GraphQLBoolean),
                resolve: function (e) {
                  return null != e.deprecationReason;
                },
              },
              deprecationReason: {
                type: o.GraphQLString,
                resolve: function (e) {
                  return e.deprecationReason;
                },
              },
            };
          },
        });
        exports.__EnumValue = y;
        var L = Object.freeze({
          SCALAR: 'SCALAR',
          OBJECT: 'OBJECT',
          INTERFACE: 'INTERFACE',
          UNION: 'UNION',
          ENUM: 'ENUM',
          INPUT_OBJECT: 'INPUT_OBJECT',
          LIST: 'LIST',
          NON_NULL: 'NON_NULL',
        });
        exports.TypeKind = L;
        var N = new s.GraphQLEnumType({
          name: '__TypeKind',
          description:
            'An enum describing what kind of type a given `__Type` is.',
          values: {
            SCALAR: {
              value: L.SCALAR,
              description: 'Indicates this type is a scalar.',
            },
            OBJECT: {
              value: L.OBJECT,
              description:
                'Indicates this type is an object. `fields` and `interfaces` are valid fields.',
            },
            INTERFACE: {
              value: L.INTERFACE,
              description:
                'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',
            },
            UNION: {
              value: L.UNION,
              description:
                'Indicates this type is a union. `possibleTypes` is a valid field.',
            },
            ENUM: {
              value: L.ENUM,
              description:
                'Indicates this type is an enum. `enumValues` is a valid field.',
            },
            INPUT_OBJECT: {
              value: L.INPUT_OBJECT,
              description:
                'Indicates this type is an input object. `inputFields` is a valid field.',
            },
            LIST: {
              value: L.LIST,
              description:
                'Indicates this type is a list. `ofType` is a valid field.',
            },
            NON_NULL: {
              value: L.NON_NULL,
              description:
                'Indicates this type is a non-null. `ofType` is a valid field.',
            },
          },
        });
        exports.__TypeKind = N;
        var h = {
          name: '__schema',
          type: new s.GraphQLNonNull(c),
          description: 'Access the current type schema of this server.',
          args: [],
          resolve: function (e, t, n, i) {
            return i.schema;
          },
          isDeprecated: !1,
          deprecationReason: void 0,
          extensions: void 0,
          astNode: void 0,
        };
        exports.SchemaMetaFieldDef = h;
        var T = {
          name: '__type',
          type: d,
          description: 'Request the type information of a single type.',
          args: [
            {
              name: 'name',
              description: void 0,
              type: new s.GraphQLNonNull(o.GraphQLString),
              defaultValue: void 0,
              deprecationReason: void 0,
              extensions: void 0,
              astNode: void 0,
            },
          ],
          resolve: function (e, t, n, i) {
            var r = t.name;
            return i.schema.getType(r);
          },
          isDeprecated: !1,
          deprecationReason: void 0,
          extensions: void 0,
          astNode: void 0,
        };
        exports.TypeMetaFieldDef = T;
        var I = {
          name: '__typename',
          type: new s.GraphQLNonNull(o.GraphQLString),
          description: 'The name of the current Object type at runtime.',
          args: [],
          resolve: function (e, t, n, i) {
            return i.parentType.name;
          },
          isDeprecated: !1,
          deprecationReason: void 0,
          extensions: void 0,
          astNode: void 0,
        };
        exports.TypeNameMetaFieldDef = I;
        var m = Object.freeze([c, l, u, d, v, f, y, N]);
        function _(e) {
          return m.some(function (t) {
            var n = t.name;
            return e.name === n;
          });
        }
        exports.introspectionTypes = m;
      },
      {
        '../polyfills/objectValues.js': 'pwpl',
        '../jsutils/inspect.js': 'Choh',
        '../jsutils/invariant.js': 'hYEN',
        '../language/printer.js': 'h5rv',
        '../language/directiveLocation.js': 'kRNH',
        '../utilities/astFromValue.js': 'QiJY',
        './scalars.js': 'w9ro',
        './definition.js': 'McYM',
      },
    ],
    jV6c: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getDefinitionState = n),
          (exports.getFieldDef = r),
          (exports.forEachState = i),
          (exports.objectValues = o),
          (exports.hintList = a);
        var e = require('graphql'),
          t = require('graphql/type/introspection');
        function n(e) {
          let t;
          return (
            i(e, (e) => {
              switch (e.kind) {
                case 'Query':
                case 'ShortQuery':
                case 'Mutation':
                case 'Subscription':
                case 'FragmentDefinition':
                  t = e;
              }
            }),
            t
          );
        }
        function r(n, r, i) {
          return i === t.SchemaMetaFieldDef.name && n.getQueryType() === r
            ? t.SchemaMetaFieldDef
            : i === t.TypeMetaFieldDef.name && n.getQueryType() === r
            ? t.TypeMetaFieldDef
            : i === t.TypeNameMetaFieldDef.name && (0, e.isCompositeType)(r)
            ? t.TypeNameMetaFieldDef
            : 'getFields' in r
            ? r.getFields()[i]
            : null;
        }
        function i(e, t) {
          const n = [];
          let r = e;
          for (; r && r.kind; ) n.push(r), (r = r.prevState);
          for (let i = n.length - 1; i >= 0; i--) t(n[i]);
        }
        function o(e) {
          const t = Object.keys(e),
            n = t.length,
            r = new Array(n);
          for (let i = 0; i < n; ++i) r[i] = e[t[i]];
          return r;
        }
        function a(e, t) {
          return l(t, c(e.string));
        }
        function l(e, t) {
          if (!t) return s(e, (e) => !e.isDeprecated);
          return s(
            s(
              e.map((e) => ({ proximity: u(c(e.label), t), entry: e })),
              (e) => e.proximity <= 2
            ),
            (e) => !e.entry.isDeprecated
          )
            .sort(
              (e, t) =>
                (e.entry.isDeprecated ? 1 : 0) -
                  (t.entry.isDeprecated ? 1 : 0) ||
                e.proximity - t.proximity ||
                e.entry.label.length - t.entry.label.length
            )
            .map((e) => e.entry);
        }
        function s(e, t) {
          const n = e.filter(t);
          return 0 === n.length ? e : n;
        }
        function c(e) {
          return e.toLowerCase().replace(/\W/g, '');
        }
        function u(e, t) {
          let n = p(t, e);
          return (
            e.length > t.length &&
              ((n -= e.length - t.length - 1),
              (n += 0 === e.indexOf(t) ? 0 : 0.5)),
            n
          );
        }
        function p(e, t) {
          let n, r;
          const i = [],
            o = e.length,
            a = t.length;
          for (n = 0; n <= o; n++) i[n] = [n];
          for (r = 1; r <= a; r++) i[0][r] = r;
          for (n = 1; n <= o; n++)
            for (r = 1; r <= a; r++) {
              const o = e[n - 1] === t[r - 1] ? 0 : 1;
              (i[n][r] = Math.min(
                i[n - 1][r] + 1,
                i[n][r - 1] + 1,
                i[n - 1][r - 1] + o
              )),
                n > 1 &&
                  r > 1 &&
                  e[n - 1] === t[r - 2] &&
                  e[n - 2] === t[r - 1] &&
                  (i[n][r] = Math.min(i[n][r], i[n - 2][r - 2] + o));
            }
          return i[o][a];
        }
      },
      { graphql: 'lFnJ', 'graphql/type/introspection': 'jF4P' },
    ],
    IJhn: [
      function (require, module, exports) {
        'use strict';
        var e, t, n, r, i, o, s, a, c, u, d, f, p, g, l, x, m, h, v, b;
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.TextDocument = exports.EOL = exports.SelectionRange = exports.DocumentLink = exports.FormattingOptions = exports.CodeLens = exports.CodeAction = exports.CodeActionContext = exports.CodeActionKind = exports.DocumentSymbol = exports.SymbolInformation = exports.SymbolTag = exports.SymbolKind = exports.DocumentHighlight = exports.DocumentHighlightKind = exports.SignatureInformation = exports.ParameterInformation = exports.Hover = exports.MarkedString = exports.CompletionList = exports.CompletionItem = exports.CompletionItemTag = exports.InsertTextFormat = exports.CompletionItemKind = exports.MarkupContent = exports.MarkupKind = exports.TextDocumentItem = exports.VersionedTextDocumentIdentifier = exports.TextDocumentIdentifier = exports.WorkspaceChange = exports.WorkspaceEdit = exports.DeleteFile = exports.RenameFile = exports.CreateFile = exports.TextDocumentEdit = exports.TextEdit = exports.Command = exports.Diagnostic = exports.DiagnosticTag = exports.DiagnosticSeverity = exports.DiagnosticRelatedInformation = exports.FoldingRange = exports.FoldingRangeKind = exports.ColorPresentation = exports.ColorInformation = exports.Color = exports.LocationLink = exports.Location = exports.Range = exports.Position = void 0),
          (exports.Position = e),
          (function (e) {
            (e.create = function (e, t) {
              return { line: e, character: t };
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  X.objectLiteral(t) &&
                  X.number(t.line) &&
                  X.number(t.character)
                );
              });
          })(e || (exports.Position = e = {})),
          (exports.Range = t),
          (function (t) {
            (t.create = function (t, n, r, i) {
              if (X.number(t) && X.number(n) && X.number(r) && X.number(i))
                return { start: e.create(t, n), end: e.create(r, i) };
              if (e.is(t) && e.is(n)) return { start: t, end: n };
              throw new Error(
                'Range#create called with invalid arguments[' +
                  t +
                  ', ' +
                  n +
                  ', ' +
                  r +
                  ', ' +
                  i +
                  ']'
              );
            }),
              (t.is = function (t) {
                var n = t;
                return X.objectLiteral(n) && e.is(n.start) && e.is(n.end);
              });
          })(t || (exports.Range = t = {})),
          (exports.Location = n),
          (function (e) {
            (e.create = function (e, t) {
              return { uri: e, range: t };
            }),
              (e.is = function (e) {
                var n = e;
                return (
                  X.defined(n) &&
                  t.is(n.range) &&
                  (X.string(n.uri) || X.undefined(n.uri))
                );
              });
          })(n || (exports.Location = n = {})),
          (exports.LocationLink = r),
          (function (e) {
            (e.create = function (e, t, n, r) {
              return {
                targetUri: e,
                targetRange: t,
                targetSelectionRange: n,
                originSelectionRange: r,
              };
            }),
              (e.is = function (e) {
                var n = e;
                return (
                  X.defined(n) &&
                  t.is(n.targetRange) &&
                  X.string(n.targetUri) &&
                  (t.is(n.targetSelectionRange) ||
                    X.undefined(n.targetSelectionRange)) &&
                  (t.is(n.originSelectionRange) ||
                    X.undefined(n.originSelectionRange))
                );
              });
          })(r || (exports.LocationLink = r = {})),
          (exports.Color = i),
          (function (e) {
            (e.create = function (e, t, n, r) {
              return { red: e, green: t, blue: n, alpha: r };
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  X.number(t.red) &&
                  X.number(t.green) &&
                  X.number(t.blue) &&
                  X.number(t.alpha)
                );
              });
          })(i || (exports.Color = i = {})),
          (exports.ColorInformation = o),
          (function (e) {
            (e.create = function (e, t) {
              return { range: e, color: t };
            }),
              (e.is = function (e) {
                var n = e;
                return t.is(n.range) && i.is(n.color);
              });
          })(o || (exports.ColorInformation = o = {})),
          (exports.ColorPresentation = s),
          (function (e) {
            (e.create = function (e, t, n) {
              return { label: e, textEdit: t, additionalTextEdits: n };
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  X.string(t.label) &&
                  (X.undefined(t.textEdit) || l.is(t)) &&
                  (X.undefined(t.additionalTextEdits) ||
                    X.typedArray(t.additionalTextEdits, l.is))
                );
              });
          })(s || (exports.ColorPresentation = s = {})),
          (exports.FoldingRangeKind = a),
          (function (e) {
            (e.Comment = 'comment'),
              (e.Imports = 'imports'),
              (e.Region = 'region');
          })(a || (exports.FoldingRangeKind = a = {})),
          (exports.FoldingRange = c),
          (function (e) {
            (e.create = function (e, t, n, r, i) {
              var o = { startLine: e, endLine: t };
              return (
                X.defined(n) && (o.startCharacter = n),
                X.defined(r) && (o.endCharacter = r),
                X.defined(i) && (o.kind = i),
                o
              );
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  X.number(t.startLine) &&
                  X.number(t.startLine) &&
                  (X.undefined(t.startCharacter) ||
                    X.number(t.startCharacter)) &&
                  (X.undefined(t.endCharacter) || X.number(t.endCharacter)) &&
                  (X.undefined(t.kind) || X.string(t.kind))
                );
              });
          })(c || (exports.FoldingRange = c = {})),
          (exports.DiagnosticRelatedInformation = u),
          (function (e) {
            (e.create = function (e, t) {
              return { location: e, message: t };
            }),
              (e.is = function (e) {
                var t = e;
                return X.defined(t) && n.is(t.location) && X.string(t.message);
              });
          })(u || (exports.DiagnosticRelatedInformation = u = {})),
          (exports.DiagnosticSeverity = d),
          (function (e) {
            (e.Error = 1), (e.Warning = 2), (e.Information = 3), (e.Hint = 4);
          })(d || (exports.DiagnosticSeverity = d = {})),
          (exports.DiagnosticTag = f),
          (function (e) {
            (e.Unnecessary = 1), (e.Deprecated = 2);
          })(f || (exports.DiagnosticTag = f = {})),
          (exports.Diagnostic = p),
          (function (e) {
            (e.create = function (e, t, n, r, i, o) {
              var s = { range: e, message: t };
              return (
                X.defined(n) && (s.severity = n),
                X.defined(r) && (s.code = r),
                X.defined(i) && (s.source = i),
                X.defined(o) && (s.relatedInformation = o),
                s
              );
            }),
              (e.is = function (e) {
                var n = e;
                return (
                  X.defined(n) &&
                  t.is(n.range) &&
                  X.string(n.message) &&
                  (X.number(n.severity) || X.undefined(n.severity)) &&
                  (X.number(n.code) ||
                    X.string(n.code) ||
                    X.undefined(n.code)) &&
                  (X.string(n.source) || X.undefined(n.source)) &&
                  (X.undefined(n.relatedInformation) ||
                    X.typedArray(n.relatedInformation, u.is))
                );
              });
          })(p || (exports.Diagnostic = p = {})),
          (exports.Command = g),
          (function (e) {
            (e.create = function (e, t) {
              for (var n = [], r = 2; r < arguments.length; r++)
                n[r - 2] = arguments[r];
              var i = { title: e, command: t };
              return X.defined(n) && n.length > 0 && (i.arguments = n), i;
            }),
              (e.is = function (e) {
                var t = e;
                return X.defined(t) && X.string(t.title) && X.string(t.command);
              });
          })(g || (exports.Command = g = {})),
          (exports.TextEdit = l),
          (function (e) {
            (e.replace = function (e, t) {
              return { range: e, newText: t };
            }),
              (e.insert = function (e, t) {
                return { range: { start: e, end: e }, newText: t };
              }),
              (e.del = function (e) {
                return { range: e, newText: '' };
              }),
              (e.is = function (e) {
                var n = e;
                return (
                  X.objectLiteral(n) && X.string(n.newText) && t.is(n.range)
                );
              });
          })(l || (exports.TextEdit = l = {})),
          (exports.TextDocumentEdit = x),
          (function (e) {
            (e.create = function (e, t) {
              return { textDocument: e, edits: t };
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  X.defined(t) && y.is(t.textDocument) && Array.isArray(t.edits)
                );
              });
          })(x || (exports.TextDocumentEdit = x = {})),
          (exports.CreateFile = m),
          (function (e) {
            (e.create = function (e, t) {
              var n = { kind: 'create', uri: e };
              return (
                void 0 === t ||
                  (void 0 === t.overwrite && void 0 === t.ignoreIfExists) ||
                  (n.options = t),
                n
              );
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  t &&
                  'create' === t.kind &&
                  X.string(t.uri) &&
                  (void 0 === t.options ||
                    ((void 0 === t.options.overwrite ||
                      X.boolean(t.options.overwrite)) &&
                      (void 0 === t.options.ignoreIfExists ||
                        X.boolean(t.options.ignoreIfExists))))
                );
              });
          })(m || (exports.CreateFile = m = {})),
          (exports.RenameFile = h),
          (function (e) {
            (e.create = function (e, t, n) {
              var r = { kind: 'rename', oldUri: e, newUri: t };
              return (
                void 0 === n ||
                  (void 0 === n.overwrite && void 0 === n.ignoreIfExists) ||
                  (r.options = n),
                r
              );
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  t &&
                  'rename' === t.kind &&
                  X.string(t.oldUri) &&
                  X.string(t.newUri) &&
                  (void 0 === t.options ||
                    ((void 0 === t.options.overwrite ||
                      X.boolean(t.options.overwrite)) &&
                      (void 0 === t.options.ignoreIfExists ||
                        X.boolean(t.options.ignoreIfExists))))
                );
              });
          })(h || (exports.RenameFile = h = {})),
          (exports.DeleteFile = v),
          (function (e) {
            (e.create = function (e, t) {
              var n = { kind: 'delete', uri: e };
              return (
                void 0 === t ||
                  (void 0 === t.recursive && void 0 === t.ignoreIfNotExists) ||
                  (n.options = t),
                n
              );
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  t &&
                  'delete' === t.kind &&
                  X.string(t.uri) &&
                  (void 0 === t.options ||
                    ((void 0 === t.options.recursive ||
                      X.boolean(t.options.recursive)) &&
                      (void 0 === t.options.ignoreIfNotExists ||
                        X.boolean(t.options.ignoreIfNotExists))))
                );
              });
          })(v || (exports.DeleteFile = v = {})),
          (exports.WorkspaceEdit = b),
          (function (e) {
            e.is = function (e) {
              var t = e;
              return (
                t &&
                (void 0 !== t.changes || void 0 !== t.documentChanges) &&
                (void 0 === t.documentChanges ||
                  t.documentChanges.every(function (e) {
                    return X.string(e.kind)
                      ? m.is(e) || h.is(e) || v.is(e)
                      : x.is(e);
                  }))
              );
            };
          })(b || (exports.WorkspaceEdit = b = {}));
        var C,
          y,
          k,
          E,
          I,
          D,
          w,
          T,
          _,
          S,
          R,
          A,
          L,
          F,
          O,
          P,
          M,
          j,
          K,
          H,
          W,
          N,
          U,
          V,
          z,
          q,
          B,
          Q = (function () {
            function e(e) {
              this.edits = e;
            }
            return (
              (e.prototype.insert = function (e, t) {
                this.edits.push(l.insert(e, t));
              }),
              (e.prototype.replace = function (e, t) {
                this.edits.push(l.replace(e, t));
              }),
              (e.prototype.delete = function (e) {
                this.edits.push(l.del(e));
              }),
              (e.prototype.add = function (e) {
                this.edits.push(e);
              }),
              (e.prototype.all = function () {
                return this.edits;
              }),
              (e.prototype.clear = function () {
                this.edits.splice(0, this.edits.length);
              }),
              e
            );
          })(),
          $ = (function () {
            function e(e) {
              var t = this;
              (this._textEditChanges = Object.create(null)),
                e &&
                  ((this._workspaceEdit = e),
                  e.documentChanges
                    ? e.documentChanges.forEach(function (e) {
                        if (x.is(e)) {
                          var n = new Q(e.edits);
                          t._textEditChanges[e.textDocument.uri] = n;
                        }
                      })
                    : e.changes &&
                      Object.keys(e.changes).forEach(function (n) {
                        var r = new Q(e.changes[n]);
                        t._textEditChanges[n] = r;
                      }));
            }
            return (
              Object.defineProperty(e.prototype, 'edit', {
                get: function () {
                  return this._workspaceEdit;
                },
                enumerable: !0,
                configurable: !0,
              }),
              (e.prototype.getTextEditChange = function (e) {
                if (y.is(e)) {
                  if (
                    (this._workspaceEdit ||
                      (this._workspaceEdit = { documentChanges: [] }),
                    !this._workspaceEdit.documentChanges)
                  )
                    throw new Error(
                      'Workspace edit is not configured for document changes.'
                    );
                  var t = e;
                  if (!(r = this._textEditChanges[t.uri])) {
                    var n = { textDocument: t, edits: (i = []) };
                    this._workspaceEdit.documentChanges.push(n),
                      (r = new Q(i)),
                      (this._textEditChanges[t.uri] = r);
                  }
                  return r;
                }
                if (
                  (this._workspaceEdit ||
                    (this._workspaceEdit = { changes: Object.create(null) }),
                  !this._workspaceEdit.changes)
                )
                  throw new Error(
                    'Workspace edit is not configured for normal text edit changes.'
                  );
                var r;
                if (!(r = this._textEditChanges[e])) {
                  var i = [];
                  (this._workspaceEdit.changes[e] = i),
                    (r = new Q(i)),
                    (this._textEditChanges[e] = r);
                }
                return r;
              }),
              (e.prototype.createFile = function (e, t) {
                this.checkDocumentChanges(),
                  this._workspaceEdit.documentChanges.push(m.create(e, t));
              }),
              (e.prototype.renameFile = function (e, t, n) {
                this.checkDocumentChanges(),
                  this._workspaceEdit.documentChanges.push(h.create(e, t, n));
              }),
              (e.prototype.deleteFile = function (e, t) {
                this.checkDocumentChanges(),
                  this._workspaceEdit.documentChanges.push(v.create(e, t));
              }),
              (e.prototype.checkDocumentChanges = function () {
                if (
                  !this._workspaceEdit ||
                  !this._workspaceEdit.documentChanges
                )
                  throw new Error(
                    'Workspace edit is not configured for document changes.'
                  );
              }),
              e
            );
          })();
        (exports.WorkspaceChange = $),
          (exports.TextDocumentIdentifier = C),
          (function (e) {
            (e.create = function (e) {
              return { uri: e };
            }),
              (e.is = function (e) {
                var t = e;
                return X.defined(t) && X.string(t.uri);
              });
          })(C || (exports.TextDocumentIdentifier = C = {})),
          (exports.VersionedTextDocumentIdentifier = y),
          (function (e) {
            (e.create = function (e, t) {
              return { uri: e, version: t };
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  X.defined(t) &&
                  X.string(t.uri) &&
                  (null === t.version || X.number(t.version))
                );
              });
          })(y || (exports.VersionedTextDocumentIdentifier = y = {})),
          (exports.TextDocumentItem = k),
          (function (e) {
            (e.create = function (e, t, n, r) {
              return { uri: e, languageId: t, version: n, text: r };
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  X.defined(t) &&
                  X.string(t.uri) &&
                  X.string(t.languageId) &&
                  X.number(t.version) &&
                  X.string(t.text)
                );
              });
          })(k || (exports.TextDocumentItem = k = {})),
          (exports.MarkupKind = E),
          (function (e) {
            (e.PlainText = 'plaintext'), (e.Markdown = 'markdown');
          })(E || (exports.MarkupKind = E = {})),
          (function (e) {
            e.is = function (t) {
              var n = t;
              return n === e.PlainText || n === e.Markdown;
            };
          })(E || (exports.MarkupKind = E = {})),
          (exports.MarkupContent = I),
          (function (e) {
            e.is = function (e) {
              var t = e;
              return X.objectLiteral(e) && E.is(t.kind) && X.string(t.value);
            };
          })(I || (exports.MarkupContent = I = {})),
          (exports.CompletionItemKind = D),
          (function (e) {
            (e.Text = 1),
              (e.Method = 2),
              (e.Function = 3),
              (e.Constructor = 4),
              (e.Field = 5),
              (e.Variable = 6),
              (e.Class = 7),
              (e.Interface = 8),
              (e.Module = 9),
              (e.Property = 10),
              (e.Unit = 11),
              (e.Value = 12),
              (e.Enum = 13),
              (e.Keyword = 14),
              (e.Snippet = 15),
              (e.Color = 16),
              (e.File = 17),
              (e.Reference = 18),
              (e.Folder = 19),
              (e.EnumMember = 20),
              (e.Constant = 21),
              (e.Struct = 22),
              (e.Event = 23),
              (e.Operator = 24),
              (e.TypeParameter = 25);
          })(D || (exports.CompletionItemKind = D = {})),
          (exports.InsertTextFormat = w),
          (function (e) {
            (e.PlainText = 1), (e.Snippet = 2);
          })(w || (exports.InsertTextFormat = w = {})),
          (exports.CompletionItemTag = T),
          (function (e) {
            e.Deprecated = 1;
          })(T || (exports.CompletionItemTag = T = {})),
          (exports.CompletionItem = _),
          (function (e) {
            e.create = function (e) {
              return { label: e };
            };
          })(_ || (exports.CompletionItem = _ = {})),
          (exports.CompletionList = S),
          (function (e) {
            e.create = function (e, t) {
              return { items: e || [], isIncomplete: !!t };
            };
          })(S || (exports.CompletionList = S = {})),
          (exports.MarkedString = R),
          (function (e) {
            (e.fromPlainText = function (e) {
              return e.replace(/[\\`*_{}[\]()#+\-.!]/g, '\\$&');
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  X.string(t) ||
                  (X.objectLiteral(t) &&
                    X.string(t.language) &&
                    X.string(t.value))
                );
              });
          })(R || (exports.MarkedString = R = {})),
          (exports.Hover = A),
          (function (e) {
            e.is = function (e) {
              var n = e;
              return (
                !!n &&
                X.objectLiteral(n) &&
                (I.is(n.contents) ||
                  R.is(n.contents) ||
                  X.typedArray(n.contents, R.is)) &&
                (void 0 === e.range || t.is(e.range))
              );
            };
          })(A || (exports.Hover = A = {})),
          (exports.ParameterInformation = L),
          (function (e) {
            e.create = function (e, t) {
              return t ? { label: e, documentation: t } : { label: e };
            };
          })(L || (exports.ParameterInformation = L = {})),
          (exports.SignatureInformation = F),
          (function (e) {
            e.create = function (e, t) {
              for (var n = [], r = 2; r < arguments.length; r++)
                n[r - 2] = arguments[r];
              var i = { label: e };
              return (
                X.defined(t) && (i.documentation = t),
                X.defined(n) ? (i.parameters = n) : (i.parameters = []),
                i
              );
            };
          })(F || (exports.SignatureInformation = F = {})),
          (exports.DocumentHighlightKind = O),
          (function (e) {
            (e.Text = 1), (e.Read = 2), (e.Write = 3);
          })(O || (exports.DocumentHighlightKind = O = {})),
          (exports.DocumentHighlight = P),
          (function (e) {
            e.create = function (e, t) {
              var n = { range: e };
              return X.number(t) && (n.kind = t), n;
            };
          })(P || (exports.DocumentHighlight = P = {})),
          (exports.SymbolKind = M),
          (function (e) {
            (e.File = 1),
              (e.Module = 2),
              (e.Namespace = 3),
              (e.Package = 4),
              (e.Class = 5),
              (e.Method = 6),
              (e.Property = 7),
              (e.Field = 8),
              (e.Constructor = 9),
              (e.Enum = 10),
              (e.Interface = 11),
              (e.Function = 12),
              (e.Variable = 13),
              (e.Constant = 14),
              (e.String = 15),
              (e.Number = 16),
              (e.Boolean = 17),
              (e.Array = 18),
              (e.Object = 19),
              (e.Key = 20),
              (e.Null = 21),
              (e.EnumMember = 22),
              (e.Struct = 23),
              (e.Event = 24),
              (e.Operator = 25),
              (e.TypeParameter = 26);
          })(M || (exports.SymbolKind = M = {})),
          (exports.SymbolTag = j),
          (function (e) {
            e.Deprecated = 1;
          })(j || (exports.SymbolTag = j = {})),
          (exports.SymbolInformation = K),
          (function (e) {
            e.create = function (e, t, n, r, i) {
              var o = { name: e, kind: t, location: { uri: r, range: n } };
              return i && (o.containerName = i), o;
            };
          })(K || (exports.SymbolInformation = K = {})),
          (exports.DocumentSymbol = H),
          (function (e) {
            (e.create = function (e, t, n, r, i, o) {
              var s = {
                name: e,
                detail: t,
                kind: n,
                range: r,
                selectionRange: i,
              };
              return void 0 !== o && (s.children = o), s;
            }),
              (e.is = function (e) {
                var n = e;
                return (
                  n &&
                  X.string(n.name) &&
                  X.number(n.kind) &&
                  t.is(n.range) &&
                  t.is(n.selectionRange) &&
                  (void 0 === n.detail || X.string(n.detail)) &&
                  (void 0 === n.deprecated || X.boolean(n.deprecated)) &&
                  (void 0 === n.children || Array.isArray(n.children))
                );
              });
          })(H || (exports.DocumentSymbol = H = {})),
          (exports.CodeActionKind = W),
          (function (e) {
            (e.Empty = ''),
              (e.QuickFix = 'quickfix'),
              (e.Refactor = 'refactor'),
              (e.RefactorExtract = 'refactor.extract'),
              (e.RefactorInline = 'refactor.inline'),
              (e.RefactorRewrite = 'refactor.rewrite'),
              (e.Source = 'source'),
              (e.SourceOrganizeImports = 'source.organizeImports'),
              (e.SourceFixAll = 'source.fixAll');
          })(W || (exports.CodeActionKind = W = {})),
          (exports.CodeActionContext = N),
          (function (e) {
            (e.create = function (e, t) {
              var n = { diagnostics: e };
              return null != t && (n.only = t), n;
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  X.defined(t) &&
                  X.typedArray(t.diagnostics, p.is) &&
                  (void 0 === t.only || X.typedArray(t.only, X.string))
                );
              });
          })(N || (exports.CodeActionContext = N = {})),
          (exports.CodeAction = U),
          (function (e) {
            (e.create = function (e, t, n) {
              var r = { title: e };
              return (
                g.is(t) ? (r.command = t) : (r.edit = t),
                void 0 !== n && (r.kind = n),
                r
              );
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  t &&
                  X.string(t.title) &&
                  (void 0 === t.diagnostics ||
                    X.typedArray(t.diagnostics, p.is)) &&
                  (void 0 === t.kind || X.string(t.kind)) &&
                  (void 0 !== t.edit || void 0 !== t.command) &&
                  (void 0 === t.command || g.is(t.command)) &&
                  (void 0 === t.isPreferred || X.boolean(t.isPreferred)) &&
                  (void 0 === t.edit || b.is(t.edit))
                );
              });
          })(U || (exports.CodeAction = U = {})),
          (exports.CodeLens = V),
          (function (e) {
            (e.create = function (e, t) {
              var n = { range: e };
              return X.defined(t) && (n.data = t), n;
            }),
              (e.is = function (e) {
                var n = e;
                return (
                  X.defined(n) &&
                  t.is(n.range) &&
                  (X.undefined(n.command) || g.is(n.command))
                );
              });
          })(V || (exports.CodeLens = V = {})),
          (exports.FormattingOptions = z),
          (function (e) {
            (e.create = function (e, t) {
              return { tabSize: e, insertSpaces: t };
            }),
              (e.is = function (e) {
                var t = e;
                return (
                  X.defined(t) &&
                  X.number(t.tabSize) &&
                  X.boolean(t.insertSpaces)
                );
              });
          })(z || (exports.FormattingOptions = z = {})),
          (exports.DocumentLink = q),
          (function (e) {
            (e.create = function (e, t, n) {
              return { range: e, target: t, data: n };
            }),
              (e.is = function (e) {
                var n = e;
                return (
                  X.defined(n) &&
                  t.is(n.range) &&
                  (X.undefined(n.target) || X.string(n.target))
                );
              });
          })(q || (exports.DocumentLink = q = {})),
          (exports.SelectionRange = B),
          (function (e) {
            (e.create = function (e, t) {
              return { range: e, parent: t };
            }),
              (e.is = function (n) {
                var r = n;
                return (
                  void 0 !== r &&
                  t.is(r.range) &&
                  (void 0 === r.parent || e.is(r.parent))
                );
              });
          })(B || (exports.SelectionRange = B = {}));
        var G,
          J = ['\n', '\r\n', '\r'];
        (exports.EOL = J),
          (exports.TextDocument = G),
          (function (e) {
            (e.create = function (e, t, n, r) {
              return new Y(e, t, n, r);
            }),
              (e.is = function (e) {
                var t = e;
                return !!(
                  X.defined(t) &&
                  X.string(t.uri) &&
                  (X.undefined(t.languageId) || X.string(t.languageId)) &&
                  X.number(t.lineCount) &&
                  X.func(t.getText) &&
                  X.func(t.positionAt) &&
                  X.func(t.offsetAt)
                );
              }),
              (e.applyEdits = function (e, t) {
                for (
                  var n = e.getText(),
                    r = (function e(t, n) {
                      if (t.length <= 1) return t;
                      var r = (t.length / 2) | 0,
                        i = t.slice(0, r),
                        o = t.slice(r);
                      e(i, n), e(o, n);
                      for (
                        var s = 0, a = 0, c = 0;
                        s < i.length && a < o.length;

                      ) {
                        var u = n(i[s], o[a]);
                        t[c++] = u <= 0 ? i[s++] : o[a++];
                      }
                      for (; s < i.length; ) t[c++] = i[s++];
                      for (; a < o.length; ) t[c++] = o[a++];
                      return t;
                    })(t, function (e, t) {
                      var n = e.range.start.line - t.range.start.line;
                      return 0 === n
                        ? e.range.start.character - t.range.start.character
                        : n;
                    }),
                    i = n.length,
                    o = r.length - 1;
                  o >= 0;
                  o--
                ) {
                  var s = r[o],
                    a = e.offsetAt(s.range.start),
                    c = e.offsetAt(s.range.end);
                  if (!(c <= i)) throw new Error('Overlapping edit');
                  (n =
                    n.substring(0, a) + s.newText + n.substring(c, n.length)),
                    (i = a);
                }
                return n;
              });
          })(G || (exports.TextDocument = G = {}));
        var X,
          Y = (function () {
            function t(e, t, n, r) {
              (this._uri = e),
                (this._languageId = t),
                (this._version = n),
                (this._content = r),
                (this._lineOffsets = void 0);
            }
            return (
              Object.defineProperty(t.prototype, 'uri', {
                get: function () {
                  return this._uri;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(t.prototype, 'languageId', {
                get: function () {
                  return this._languageId;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(t.prototype, 'version', {
                get: function () {
                  return this._version;
                },
                enumerable: !0,
                configurable: !0,
              }),
              (t.prototype.getText = function (e) {
                if (e) {
                  var t = this.offsetAt(e.start),
                    n = this.offsetAt(e.end);
                  return this._content.substring(t, n);
                }
                return this._content;
              }),
              (t.prototype.update = function (e, t) {
                (this._content = e.text),
                  (this._version = t),
                  (this._lineOffsets = void 0);
              }),
              (t.prototype.getLineOffsets = function () {
                if (void 0 === this._lineOffsets) {
                  for (
                    var e = [], t = this._content, n = !0, r = 0;
                    r < t.length;
                    r++
                  ) {
                    n && (e.push(r), (n = !1));
                    var i = t.charAt(r);
                    (n = '\r' === i || '\n' === i),
                      '\r' === i &&
                        r + 1 < t.length &&
                        '\n' === t.charAt(r + 1) &&
                        r++;
                  }
                  n && t.length > 0 && e.push(t.length),
                    (this._lineOffsets = e);
                }
                return this._lineOffsets;
              }),
              (t.prototype.positionAt = function (t) {
                t = Math.max(Math.min(t, this._content.length), 0);
                var n = this.getLineOffsets(),
                  r = 0,
                  i = n.length;
                if (0 === i) return e.create(0, t);
                for (; r < i; ) {
                  var o = Math.floor((r + i) / 2);
                  n[o] > t ? (i = o) : (r = o + 1);
                }
                var s = r - 1;
                return e.create(s, t - n[s]);
              }),
              (t.prototype.offsetAt = function (e) {
                var t = this.getLineOffsets();
                if (e.line >= t.length) return this._content.length;
                if (e.line < 0) return 0;
                var n = t[e.line],
                  r =
                    e.line + 1 < t.length
                      ? t[e.line + 1]
                      : this._content.length;
                return Math.max(Math.min(n + e.character, r), n);
              }),
              Object.defineProperty(t.prototype, 'lineCount', {
                get: function () {
                  return this.getLineOffsets().length;
                },
                enumerable: !0,
                configurable: !0,
              }),
              t
            );
          })();
        !(function (e) {
          var t = Object.prototype.toString;
          (e.defined = function (e) {
            return void 0 !== e;
          }),
            (e.undefined = function (e) {
              return void 0 === e;
            }),
            (e.boolean = function (e) {
              return !0 === e || !1 === e;
            }),
            (e.string = function (e) {
              return '[object String]' === t.call(e);
            }),
            (e.number = function (e) {
              return '[object Number]' === t.call(e);
            }),
            (e.func = function (e) {
              return '[object Function]' === t.call(e);
            }),
            (e.objectLiteral = function (e) {
              return null !== e && 'object' == typeof e;
            }),
            (e.typedArray = function (e, t) {
              return Array.isArray(e) && e.every(t);
            });
        })(X || (X = {}));
      },
      {},
    ],
    Cfch: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = void 0);
        class t {
          constructor(t) {
            (this.getStartOfToken = () => this._start),
              (this.getCurrentPosition = () => this._pos),
              (this.eol = () => this._sourceText.length === this._pos),
              (this.sol = () => 0 === this._pos),
              (this.peek = () =>
                this._sourceText.charAt(this._pos)
                  ? this._sourceText.charAt(this._pos)
                  : null),
              (this.next = () => {
                const t = this._sourceText.charAt(this._pos);
                return this._pos++, t;
              }),
              (this.eat = (t) => {
                if (this._testNextCharacter(t))
                  return (
                    (this._start = this._pos),
                    this._pos++,
                    this._sourceText.charAt(this._pos - 1)
                  );
              }),
              (this.eatWhile = (t) => {
                let s = this._testNextCharacter(t),
                  e = !1;
                for (s && ((e = s), (this._start = this._pos)); s; )
                  this._pos++, (s = this._testNextCharacter(t)), (e = !0);
                return e;
              }),
              (this.eatSpace = () => this.eatWhile(/[\s\u00a0]/)),
              (this.skipToEnd = () => {
                this._pos = this._sourceText.length;
              }),
              (this.skipTo = (t) => {
                this._pos = t;
              }),
              (this.match = (t, s = !0, e = !1) => {
                let i = null,
                  h = null;
                if ('string' == typeof t) {
                  (h = new RegExp(t, e ? 'i' : 'g').test(
                    this._sourceText.substr(this._pos, t.length)
                  )),
                    (i = t);
                } else
                  t instanceof RegExp &&
                    (i =
                      (h = this._sourceText.slice(this._pos).match(t)) && h[0]);
                return (
                  !(
                    null == h ||
                    !(
                      'string' == typeof t ||
                      (h instanceof Array &&
                        this._sourceText.startsWith(h[0], this._pos))
                    )
                  ) &&
                  (s &&
                    ((this._start = this._pos),
                    i && i.length && (this._pos += i.length)),
                  h)
                );
              }),
              (this.backUp = (t) => {
                this._pos -= t;
              }),
              (this.column = () => this._pos),
              (this.indentation = () => {
                const t = this._sourceText.match(/\s*/);
                let s = 0;
                if (t && 0 === t.length) {
                  const e = t[0];
                  let i = 0;
                  for (; e.length > i; )
                    9 === e.charCodeAt(i) ? (s += 2) : s++, i++;
                }
                return s;
              }),
              (this.current = () =>
                this._sourceText.slice(this._start, this._pos)),
              (this._start = 0),
              (this._pos = 0),
              (this._sourceText = t);
          }
          _testNextCharacter(t) {
            const s = this._sourceText.charAt(this._pos);
            let e = !1;
            return (e =
              'string' == typeof t
                ? s === t
                : t instanceof RegExp
                ? t.test(s)
                : t(s));
          }
        }
        exports.default = t;
      },
      {},
    ],
    J4JT: [
      function (require, module, exports) {
        'use strict';
        function t(t) {
          return { ofRule: t };
        }
        function e(t, e) {
          return { ofRule: t, isList: !0, separator: e };
        }
        function n(t, e) {
          const n = t.match;
          return (
            (t.match = (t) => {
              let r = !1;
              return (
                n && (r = n(t)), r && e.every((e) => e.match && !e.match(t))
              );
            }),
            t
          );
        }
        function r(t, e) {
          return { style: e, match: (e) => e.kind === t };
        }
        function u(t, e) {
          return {
            style: e || 'punctuation',
            match: (e) => 'Punctuation' === e.kind && e.value === t,
          };
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.opt = t),
          (exports.list = e),
          (exports.butNot = n),
          (exports.t = r),
          (exports.p = u);
      },
      {},
    ],
    fHMB: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.ParseRules = exports.LexRules = exports.isIgnored = void 0);
        var e = require('./RuleHelpers');
        const t = (e) =>
          ' ' === e ||
          '\t' === e ||
          ',' === e ||
          '\n' === e ||
          '\r' === e ||
          '\ufeff' === e ||
          ' ' === e;
        exports.isIgnored = t;
        const i = {
          Name: /^[_A-Za-z][_0-9A-Za-z]*/,
          Punctuation: /^(?:!|\$|\(|\)|\.\.\.|:|=|@|\[|]|\{|\||\})/,
          Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,
          String: /^(?:"""(?:\\"""|[^"]|"[^"]|""[^"])*(?:""")?|"(?:[^"\\]|\\(?:"|\/|\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*"?)/,
          Comment: /^#.*/,
        };
        exports.LexRules = i;
        const r = {
          Document: [(0, e.list)('Definition')],
          Definition(e) {
            switch (e.value) {
              case '{':
                return 'ShortQuery';
              case 'query':
                return 'Query';
              case 'mutation':
                return 'Mutation';
              case 'subscription':
                return 'Subscription';
              case 'fragment':
                return 'FragmentDefinition';
              case 'schema':
                return 'SchemaDef';
              case 'scalar':
                return 'ScalarDef';
              case 'type':
                return 'ObjectTypeDef';
              case 'interface':
                return 'InterfaceDef';
              case 'union':
                return 'UnionDef';
              case 'enum':
                return 'EnumDef';
              case 'input':
                return 'InputDef';
              case 'extend':
                return 'ExtendDef';
              case 'directive':
                return 'DirectiveDef';
            }
          },
          ShortQuery: ['SelectionSet'],
          Query: [
            n('query'),
            (0, e.opt)(a('def')),
            (0, e.opt)('VariableDefinitions'),
            (0, e.list)('Directive'),
            'SelectionSet',
          ],
          Mutation: [
            n('mutation'),
            (0, e.opt)(a('def')),
            (0, e.opt)('VariableDefinitions'),
            (0, e.list)('Directive'),
            'SelectionSet',
          ],
          Subscription: [
            n('subscription'),
            (0, e.opt)(a('def')),
            (0, e.opt)('VariableDefinitions'),
            (0, e.list)('Directive'),
            'SelectionSet',
          ],
          VariableDefinitions: [
            (0, e.p)('('),
            (0, e.list)('VariableDefinition'),
            (0, e.p)(')'),
          ],
          VariableDefinition: [
            'Variable',
            (0, e.p)(':'),
            'Type',
            (0, e.opt)('DefaultValue'),
          ],
          Variable: [(0, e.p)('$', 'variable'), a('variable')],
          DefaultValue: [(0, e.p)('='), 'Value'],
          SelectionSet: [
            (0, e.p)('{'),
            (0, e.list)('Selection'),
            (0, e.p)('}'),
          ],
          Selection: (e, t) =>
            '...' === e.value
              ? t.match(/[\s\u00a0,]*(on\b|@|{)/, !1)
                ? 'InlineFragment'
                : 'FragmentSpread'
              : t.match(/[\s\u00a0,]*:/, !1)
              ? 'AliasedField'
              : 'Field',
          AliasedField: [
            a('property'),
            (0, e.p)(':'),
            a('qualifier'),
            (0, e.opt)('Arguments'),
            (0, e.list)('Directive'),
            (0, e.opt)('SelectionSet'),
          ],
          Field: [
            a('property'),
            (0, e.opt)('Arguments'),
            (0, e.list)('Directive'),
            (0, e.opt)('SelectionSet'),
          ],
          Arguments: [(0, e.p)('('), (0, e.list)('Argument'), (0, e.p)(')')],
          Argument: [a('attribute'), (0, e.p)(':'), 'Value'],
          FragmentSpread: [(0, e.p)('...'), a('def'), (0, e.list)('Directive')],
          InlineFragment: [
            (0, e.p)('...'),
            (0, e.opt)('TypeCondition'),
            (0, e.list)('Directive'),
            'SelectionSet',
          ],
          FragmentDefinition: [
            n('fragment'),
            (0, e.opt)((0, e.butNot)(a('def'), [n('on')])),
            'TypeCondition',
            (0, e.list)('Directive'),
            'SelectionSet',
          ],
          TypeCondition: [n('on'), 'NamedType'],
          Value(e) {
            switch (e.kind) {
              case 'Number':
                return 'NumberValue';
              case 'String':
                return 'StringValue';
              case 'Punctuation':
                switch (e.value) {
                  case '[':
                    return 'ListValue';
                  case '{':
                    return 'ObjectValue';
                  case '$':
                    return 'Variable';
                }
                return null;
              case 'Name':
                switch (e.value) {
                  case 'true':
                  case 'false':
                    return 'BooleanValue';
                }
                return 'null' === e.value ? 'NullValue' : 'EnumValue';
            }
          },
          NumberValue: [(0, e.t)('Number', 'number')],
          StringValue: [(0, e.t)('String', 'string')],
          BooleanValue: [(0, e.t)('Name', 'builtin')],
          NullValue: [(0, e.t)('Name', 'keyword')],
          EnumValue: [a('string-2')],
          ListValue: [(0, e.p)('['), (0, e.list)('Value'), (0, e.p)(']')],
          ObjectValue: [
            (0, e.p)('{'),
            (0, e.list)('ObjectField'),
            (0, e.p)('}'),
          ],
          ObjectField: [a('attribute'), (0, e.p)(':'), 'Value'],
          Type: (e) => ('[' === e.value ? 'ListType' : 'NonNullType'),
          ListType: [
            (0, e.p)('['),
            'Type',
            (0, e.p)(']'),
            (0, e.opt)((0, e.p)('!')),
          ],
          NonNullType: ['NamedType', (0, e.opt)((0, e.p)('!'))],
          NamedType: [u('atom')],
          Directive: [
            (0, e.p)('@', 'meta'),
            a('meta'),
            (0, e.opt)('Arguments'),
          ],
          SchemaDef: [
            n('schema'),
            (0, e.list)('Directive'),
            (0, e.p)('{'),
            (0, e.list)('OperationTypeDef'),
            (0, e.p)('}'),
          ],
          OperationTypeDef: [a('keyword'), (0, e.p)(':'), a('atom')],
          ScalarDef: [n('scalar'), a('atom'), (0, e.list)('Directive')],
          ObjectTypeDef: [
            n('type'),
            a('atom'),
            (0, e.opt)('Implements'),
            (0, e.list)('Directive'),
            (0, e.p)('{'),
            (0, e.list)('FieldDef'),
            (0, e.p)('}'),
          ],
          Implements: [n('implements'), (0, e.list)('NamedType')],
          FieldDef: [
            a('property'),
            (0, e.opt)('ArgumentsDef'),
            (0, e.p)(':'),
            'Type',
            (0, e.list)('Directive'),
          ],
          ArgumentsDef: [
            (0, e.p)('('),
            (0, e.list)('InputValueDef'),
            (0, e.p)(')'),
          ],
          InputValueDef: [
            a('attribute'),
            (0, e.p)(':'),
            'Type',
            (0, e.opt)('DefaultValue'),
            (0, e.list)('Directive'),
          ],
          InterfaceDef: [
            n('interface'),
            a('atom'),
            (0, e.list)('Directive'),
            (0, e.p)('{'),
            (0, e.list)('FieldDef'),
            (0, e.p)('}'),
          ],
          UnionDef: [
            n('union'),
            a('atom'),
            (0, e.list)('Directive'),
            (0, e.p)('='),
            (0, e.list)('UnionMember', (0, e.p)('|')),
          ],
          UnionMember: ['NamedType'],
          EnumDef: [
            n('enum'),
            a('atom'),
            (0, e.list)('Directive'),
            (0, e.p)('{'),
            (0, e.list)('EnumValueDef'),
            (0, e.p)('}'),
          ],
          EnumValueDef: [a('string-2'), (0, e.list)('Directive')],
          InputDef: [
            n('input'),
            a('atom'),
            (0, e.list)('Directive'),
            (0, e.p)('{'),
            (0, e.list)('InputValueDef'),
            (0, e.p)('}'),
          ],
          ExtendDef: [n('extend'), 'ObjectTypeDef'],
          DirectiveDef: [
            n('directive'),
            (0, e.p)('@', 'meta'),
            a('meta'),
            (0, e.opt)('ArgumentsDef'),
            n('on'),
            (0, e.list)('DirectiveLocation', (0, e.p)('|')),
          ],
          DirectiveLocation: [a('string-2')],
        };
        function n(e) {
          return {
            style: 'keyword',
            match: (t) => 'Name' === t.kind && t.value === e,
          };
        }
        function a(e) {
          return {
            style: e,
            match: (e) => 'Name' === e.kind,
            update(e, t) {
              e.name = t.value;
            },
          };
        }
        function u(e) {
          return {
            style: e,
            match: (e) => 'Name' === e.kind,
            update(e, t) {
              e.prevState &&
                e.prevState.prevState &&
                ((e.name = t.value), (e.prevState.prevState.type = t.value));
            },
          };
        }
        exports.ParseRules = r;
      },
      { './RuleHelpers': 'J4JT' },
    ],
    jBkl: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.default = t);
        var e = require('./Rules');
        function t(
          t = {
            eatWhitespace: (t) => t.eatWhile(e.isIgnored),
            lexRules: e.LexRules,
            parseRules: e.ParseRules,
            editorConfig: {},
          }
        ) {
          return {
            startState() {
              const e = {
                level: 0,
                step: 0,
                name: null,
                kind: null,
                type: null,
                rule: null,
                needsSeperator: !1,
                prevState: null,
              };
              return s(t.parseRules, e, 'Document'), e;
            },
            token: (e, n) => r(e, n, t),
          };
        }
        function r(e, t, r) {
          const {
            lexRules: o,
            parseRules: c,
            eatWhitespace: d,
            editorConfig: f,
          } = r;
          if (
            (t.rule && 0 === t.rule.length
              ? a(t)
              : t.needsAdvance && ((t.needsAdvance = !1), u(t, !0)),
            e.sol())
          ) {
            const r = (f && f.tabSize) || 2;
            t.indentLevel = Math.floor(e.indentation() / r);
          }
          if (d(e)) return 'ws';
          const v = p(o, e);
          if (!v) {
            return (
              e.match(/\S+/) || e.match(/\s/), s(l, t, 'Invalid'), 'invalidchar'
            );
          }
          if ('Comment' === v.kind) return s(l, t, 'Comment'), 'comment';
          const S = n({}, t);
          if ('Punctuation' === v.kind)
            if (/^[{([]/.test(v.value))
              void 0 !== t.indentLevel &&
                (t.levels = (t.levels || []).concat(t.indentLevel + 1));
            else if (/^[})\]]/.test(v.value)) {
              const e = (t.levels = (t.levels || []).slice(0, -1));
              t.indentLevel &&
                e.length > 0 &&
                e[e.length - 1] < t.indentLevel &&
                (t.indentLevel = e[e.length - 1]);
            }
          for (; t.rule; ) {
            let r =
              'function' == typeof t.rule
                ? 0 === t.step
                  ? t.rule(v, e)
                  : null
                : t.rule[t.step];
            if ((t.needsSeperator && (r = r && r.separator), r)) {
              if ((r.ofRule && (r = r.ofRule), 'string' == typeof r)) {
                s(c, t, r);
                continue;
              }
              if (r.match && r.match(v))
                return (
                  r.update && r.update(t, v),
                  'Punctuation' === v.kind ? u(t, !0) : (t.needsAdvance = !0),
                  r.style
                );
            }
            i(t);
          }
          return n(t, S), s(l, t, 'Invalid'), 'invalidchar';
        }
        function n(e, t) {
          const r = Object.keys(t);
          for (let n = 0; n < r.length; n++) e[r[n]] = t[r[n]];
          return e;
        }
        const l = { Invalid: [], Comment: [] };
        function s(e, t, r) {
          if (!e[r]) throw new TypeError('Unknown rule: ' + r);
          (t.prevState = Object.assign({}, t)),
            (t.kind = r),
            (t.name = null),
            (t.type = null),
            (t.rule = e[r]),
            (t.step = 0),
            (t.needsSeperator = !1);
        }
        function a(e) {
          e.prevState &&
            ((e.kind = e.prevState.kind),
            (e.name = e.prevState.name),
            (e.type = e.prevState.type),
            (e.rule = e.prevState.rule),
            (e.step = e.prevState.step),
            (e.needsSeperator = e.prevState.needsSeperator),
            (e.prevState = e.prevState.prevState));
        }
        function u(e, t) {
          if (o(e) && e.rule) {
            const r = e.rule[e.step];
            if (r.separator) {
              const t = r.separator;
              if (
                ((e.needsSeperator = !e.needsSeperator),
                !e.needsSeperator && t.ofRule)
              )
                return;
            }
            if (t) return;
          }
          for (
            e.needsSeperator = !1, e.step++;
            e.rule && !(Array.isArray(e.rule) && e.step < e.rule.length);

          )
            a(e),
              e.rule &&
                (o(e)
                  ? e.rule &&
                    e.rule[e.step].separator &&
                    (e.needsSeperator = !e.needsSeperator)
                  : ((e.needsSeperator = !1), e.step++));
        }
        function o(e) {
          const t =
            Array.isArray(e.rule) &&
            'string' != typeof e.rule[e.step] &&
            e.rule[e.step];
          return t && t.isList;
        }
        function i(e) {
          for (; e.rule && (!Array.isArray(e.rule) || !e.rule[e.step].ofRule); )
            a(e);
          e.rule && u(e, !1);
        }
        function p(e, t) {
          const r = Object.keys(e);
          for (let n = 0; n < r.length; n++) {
            const l = t.match(e[r[n]]);
            if (l && l instanceof Array) return { kind: r[n], value: l[0] };
          }
        }
      },
      { './Rules': 'fHMB' },
    ],
    E8qw: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.RuleKinds = exports.AdditionalRuleKinds = void 0);
        var e = require('graphql');
        const E = {
          ALIASED_FIELD: 'AliasedField',
          ARGUMENTS: 'Arguments',
          SHORT_QUERY: 'ShortQuery',
          QUERY: 'Query',
          MUTATION: 'Mutation',
          SUBSCRIPTION: 'Subscription',
          TYPE_CONDITION: 'TypeCondition',
          INVALID: 'Invalid',
          COMMENT: 'Comment',
          SCHEMA_DEF: 'SchemaDef',
          SCALAR_DEF: 'ScalarDef',
          OBJECT_TYPE_DEF: 'ObjectTypeDef',
          OBJECT_VALUE: 'ObjectValue',
          LIST_VALUE: 'ListValue',
          INTERFACE_DEF: 'InterfaceDef',
          UNION_DEF: 'UnionDef',
          ENUM_DEF: 'EnumDef',
          ENUM_VALUE: 'EnumValue',
          FIELD_DEF: 'FieldDef',
          INPUT_DEF: 'InputDef',
          INPUT_VALUE_DEF: 'InputValueDef',
          ARGUMENTS_DEF: 'ArgumentsDef',
          EXTEND_DEF: 'ExtendDef',
          DIRECTIVE_DEF: 'DirectiveDef',
        };
        exports.AdditionalRuleKinds = E;
        const D = Object.assign(Object.assign({}, e.Kind), E);
        exports.RuleKinds = D;
      },
      { graphql: 'lFnJ' },
    ],
    WgdC: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 });
        var e = {
          CharacterStream: !0,
          LexRules: !0,
          ParseRules: !0,
          isIgnored: !0,
          butNot: !0,
          list: !0,
          opt: !0,
          p: !0,
          t: !0,
          onlineParser: !0,
        };
        Object.defineProperty(exports, 'CharacterStream', {
          enumerable: !0,
          get: function () {
            return r.default;
          },
        }),
          Object.defineProperty(exports, 'LexRules', {
            enumerable: !0,
            get: function () {
              return t.LexRules;
            },
          }),
          Object.defineProperty(exports, 'ParseRules', {
            enumerable: !0,
            get: function () {
              return t.ParseRules;
            },
          }),
          Object.defineProperty(exports, 'isIgnored', {
            enumerable: !0,
            get: function () {
              return t.isIgnored;
            },
          }),
          Object.defineProperty(exports, 'butNot', {
            enumerable: !0,
            get: function () {
              return n.butNot;
            },
          }),
          Object.defineProperty(exports, 'list', {
            enumerable: !0,
            get: function () {
              return n.list;
            },
          }),
          Object.defineProperty(exports, 'opt', {
            enumerable: !0,
            get: function () {
              return n.opt;
            },
          }),
          Object.defineProperty(exports, 'p', {
            enumerable: !0,
            get: function () {
              return n.p;
            },
          }),
          Object.defineProperty(exports, 't', {
            enumerable: !0,
            get: function () {
              return n.t;
            },
          }),
          Object.defineProperty(exports, 'onlineParser', {
            enumerable: !0,
            get: function () {
              return u.default;
            },
          });
        var r = s(require('./CharacterStream')),
          t = require('./Rules'),
          n = require('./RuleHelpers'),
          u = s(require('./onlineParser')),
          o = require('./types');
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.keys(o).forEach(function (r) {
          'default' !== r &&
            '__esModule' !== r &&
            (Object.prototype.hasOwnProperty.call(e, r) ||
              (r in exports && exports[r] === o[r]) ||
              Object.defineProperty(exports, r, {
                enumerable: !0,
                get: function () {
                  return o[r];
                },
              }));
        });
      },
      {
        './CharacterStream': 'Cfch',
        './Rules': 'fHMB',
        './RuleHelpers': 'J4JT',
        './onlineParser': 'jBkl',
        './types': 'E8qw',
      },
    ],
    sDGg: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getAutocompleteSuggestions = a),
          (exports.getFragmentDefinitions = d),
          (exports.getTokenAtPosition = c),
          (exports.runOnlineParser = E),
          (exports.canUseDirective = T),
          (exports.getTypeInfo = I);
        var e = require('vscode-languageserver-types'),
          n = require('graphql'),
          t = require('graphql-language-service-parser'),
          i = require('./autocompleteUtils');
        function a(a, d, E, T, m) {
          const R = T || c(d, E),
            f = 'Invalid' === R.state.kind ? R.state.prevState : R.state;
          if (!f) return [];
          const N = f.kind,
            K = f.step,
            D = I(a, R.state);
          if (N === t.RuleKinds.DOCUMENT)
            return (0, i.hintList)(R, [
              { label: 'query', kind: e.CompletionItemKind.Function },
              { label: 'mutation', kind: e.CompletionItemKind.Function },
              { label: 'subscription', kind: e.CompletionItemKind.Function },
              { label: 'fragment', kind: e.CompletionItemKind.Function },
              { label: '{', kind: e.CompletionItemKind.Constructor },
            ]);
          if (
            N === t.RuleKinds.SELECTION_SET ||
            N === t.RuleKinds.FIELD ||
            N === t.RuleKinds.ALIASED_FIELD
          )
            return r(R, D, a, N);
          if (
            N === t.RuleKinds.ARGUMENTS ||
            (N === t.RuleKinds.ARGUMENT && 0 === K)
          ) {
            const n = D.argDefs;
            if (n)
              return (0, i.hintList)(
                R,
                n.map((n) => {
                  var t;
                  return {
                    label: n.name,
                    detail: String(n.type),
                    documentation:
                      null !== (t = n.description) && void 0 !== t ? t : void 0,
                    kind: e.CompletionItemKind.Variable,
                  };
                })
              );
          }
          if (
            (N === t.RuleKinds.OBJECT_VALUE ||
              (N === t.RuleKinds.OBJECT_FIELD && 0 === K)) &&
            D.objectFieldDefs
          ) {
            const n = (0, i.objectValues)(D.objectFieldDefs),
              a =
                N === t.RuleKinds.OBJECT_VALUE
                  ? e.CompletionItemKind.Value
                  : e.CompletionItemKind.Field;
            return (0, i.hintList)(
              R,
              n.map((e) => {
                var n;
                return {
                  label: e.name,
                  detail: String(e.type),
                  documentation:
                    null !== (n = e.description) && void 0 !== n ? n : void 0,
                  kind: a,
                };
              })
            );
          }
          if (
            N === t.RuleKinds.ENUM_VALUE ||
            (N === t.RuleKinds.LIST_VALUE && 1 === K) ||
            (N === t.RuleKinds.OBJECT_FIELD && 2 === K) ||
            (N === t.RuleKinds.ARGUMENT && 2 === K)
          )
            return s(R, D, N);
          if (N === t.RuleKinds.VARIABLE && 1 === K) {
            const t = [];
            return (
              (0, n.visit)(
                (0, n.parse)(d, {
                  allowLegacySDLEmptyFields: !0,
                  allowLegacySDLImplementsInterfaces: !0,
                }),
                {
                  VariableDefinition(e) {
                    t.push(e);
                  },
                }
              ),
              (0, i.hintList)(
                R,
                t.map((n) => ({
                  label: `$${n.variable.name.value}`,
                  kind: e.CompletionItemKind.Variable,
                  detail: 'name' in n.type ? n.type.name.value : 'Variable',
                }))
              )
            );
          }
          return (N === t.RuleKinds.TYPE_CONDITION && 1 === K) ||
            (N === t.RuleKinds.NAMED_TYPE &&
              null != f.prevState &&
              f.prevState.kind === t.RuleKinds.TYPE_CONDITION)
            ? l(R, D, a, N)
            : N === t.RuleKinds.FRAGMENT_SPREAD && 1 === K
            ? u(R, D, a, d, m)
            : (N === t.RuleKinds.VARIABLE_DEFINITION && 2 === K) ||
              (N === t.RuleKinds.LIST_TYPE && 1 === K) ||
              (N === t.RuleKinds.NAMED_TYPE &&
                f.prevState &&
                (f.prevState.kind === t.RuleKinds.VARIABLE_DEFINITION ||
                  f.prevState.kind === t.RuleKinds.LIST_TYPE ||
                  f.prevState.kind === t.RuleKinds.NON_NULL_TYPE))
            ? o(R, a, N)
            : N === t.RuleKinds.DIRECTIVE
            ? p(R, f, a, N)
            : [];
        }
        function r(t, a, r, s) {
          if (a.parentType) {
            const s = a.parentType;
            let l = [];
            return (
              'getFields' in s && (l = (0, i.objectValues)(s.getFields())),
              (0, n.isCompositeType)(s) && l.push(n.TypeNameMetaFieldDef),
              s === r.getQueryType() &&
                l.push(n.SchemaMetaFieldDef, n.TypeMetaFieldDef),
              (0, i.hintList)(
                t,
                l.map((n, t) => {
                  var i;
                  return {
                    sortText: String(t) + n.name,
                    label: n.name,
                    detail: String(n.type),
                    documentation:
                      null !== (i = n.description) && void 0 !== i ? i : void 0,
                    deprecated: n.isDeprecated,
                    isDeprecated: n.isDeprecated,
                    deprecationReason: n.deprecationReason,
                    kind: e.CompletionItemKind.Field,
                  };
                })
              )
            );
          }
          return [];
        }
        function s(t, a, r) {
          const s = (0, n.getNamedType)(a.inputType);
          if (s instanceof n.GraphQLEnumType) {
            const n = s.getValues();
            return (0, i.hintList)(
              t,
              n.map((n) => {
                var t;
                return {
                  label: n.name,
                  detail: String(s),
                  documentation:
                    null !== (t = n.description) && void 0 !== t ? t : void 0,
                  deprecated: n.isDeprecated,
                  isDeprecated: n.isDeprecated,
                  deprecationReason: n.deprecationReason,
                  kind: e.CompletionItemKind.EnumMember,
                };
              })
            );
          }
          return s === n.GraphQLBoolean
            ? (0, i.hintList)(t, [
                {
                  label: 'true',
                  detail: String(n.GraphQLBoolean),
                  documentation: 'Not false.',
                  kind: e.CompletionItemKind.Variable,
                },
                {
                  label: 'false',
                  detail: String(n.GraphQLBoolean),
                  documentation: 'Not true.',
                  kind: e.CompletionItemKind.Variable,
                },
              ])
            : [];
        }
        function l(t, a, r, s) {
          let l;
          if (a.parentType)
            if ((0, n.isAbstractType)(a.parentType)) {
              const e = (0, n.assertAbstractType)(a.parentType),
                t = r.getPossibleTypes(e),
                s = Object.create(null);
              t.forEach((e) => {
                e.getInterfaces().forEach((e) => {
                  s[e.name] = e;
                });
              }),
                (l = t.concat((0, i.objectValues)(s)));
            } else l = [a.parentType];
          else {
            const e = r.getTypeMap();
            l = (0, i.objectValues)(e).filter(n.isCompositeType);
          }
          return (0, i.hintList)(
            t,
            l.map((t) => {
              const i = (0, n.getNamedType)(t);
              return {
                label: String(t),
                documentation: (i && i.description) || '',
                kind: e.CompletionItemKind.Field,
              };
            })
          );
        }
        function u(a, r, s, l, u) {
          const o = s.getTypeMap(),
            p = (0, i.getDefinitionState)(a.state),
            c = d(l);
          u && c.push(...u);
          const E = c.filter(
            (e) =>
              o[e.typeCondition.name.value] &&
              !(
                p &&
                p.kind === t.RuleKinds.FRAGMENT_DEFINITION &&
                p.name === e.name.value
              ) &&
              (0, n.isCompositeType)(r.parentType) &&
              (0, n.isCompositeType)(o[e.typeCondition.name.value]) &&
              (0, n.doTypesOverlap)(
                s,
                r.parentType,
                o[e.typeCondition.name.value]
              )
          );
          return (0, i.hintList)(
            a,
            E.map((n) => ({
              label: n.name.value,
              detail: String(o[n.typeCondition.name.value]),
              documentation: `fragment ${n.name.value} on ${n.typeCondition.name.value}`,
              kind: e.CompletionItemKind.Field,
            }))
          );
        }
        function d(e) {
          const n = [];
          return (
            E(e, (e, i) => {
              i.kind === t.RuleKinds.FRAGMENT_DEFINITION &&
                i.name &&
                i.type &&
                n.push({
                  kind: t.RuleKinds.FRAGMENT_DEFINITION,
                  name: { kind: 'Name', value: i.name },
                  selectionSet: {
                    kind: t.RuleKinds.SELECTION_SET,
                    selections: [],
                  },
                  typeCondition: {
                    kind: t.RuleKinds.NAMED_TYPE,
                    name: { kind: 'Name', value: i.type },
                  },
                });
            }),
            n
          );
        }
        function o(t, a, r) {
          const s = a.getTypeMap(),
            l = (0, i.objectValues)(s).filter(n.isInputType);
          return (0, i.hintList)(
            t,
            l.map((n) => ({
              label: n.name,
              documentation: n.description,
              kind: e.CompletionItemKind.Variable,
            }))
          );
        }
        function p(n, t, a, r) {
          if (t.prevState && t.prevState.kind) {
            const r = a.getDirectives().filter((e) => T(t.prevState, e));
            return (0, i.hintList)(
              n,
              r.map((n) => ({
                label: n.name,
                documentation: n.description || '',
                kind: e.CompletionItemKind.Function,
              }))
            );
          }
          return [];
        }
        function c(e, n) {
          let t = null,
            i = null,
            a = null;
          const r = E(e, (e, r, s, l) => {
            if (l === n.line && e.getCurrentPosition() >= n.character)
              return (
                (t = s), (i = Object.assign({}, r)), (a = e.current()), 'BREAK'
              );
          });
          return {
            start: r.start,
            end: r.end,
            string: a || r.string,
            state: i || r.state,
            style: t || r.style,
          };
        }
        function E(e, n) {
          const i = e.split('\n'),
            a = (0, t.onlineParser)();
          let r = a.startState(),
            s = '',
            l = new t.CharacterStream('');
          for (let u = 0; u < i.length; u++) {
            for (l = new t.CharacterStream(i[u]); !l.eol(); ) {
              if ('BREAK' === n(l, r, (s = a.token(l, r)), u)) break;
            }
            n(l, r, s, u), r.kind || (r = a.startState());
          }
          return {
            start: l.getStartOfToken(),
            end: l.getCurrentPosition(),
            string: l.current(),
            state: r,
            style: s,
          };
        }
        function T(e, n) {
          if (!e || !e.kind) return !1;
          const i = e.kind,
            a = n.locations;
          switch (i) {
            case t.RuleKinds.QUERY:
              return -1 !== a.indexOf('QUERY');
            case t.RuleKinds.MUTATION:
              return -1 !== a.indexOf('MUTATION');
            case t.RuleKinds.SUBSCRIPTION:
              return -1 !== a.indexOf('SUBSCRIPTION');
            case t.RuleKinds.FIELD:
            case t.RuleKinds.ALIASED_FIELD:
              return -1 !== a.indexOf('FIELD');
            case t.RuleKinds.FRAGMENT_DEFINITION:
              return -1 !== a.indexOf('FRAGMENT_DEFINITION');
            case t.RuleKinds.FRAGMENT_SPREAD:
              return -1 !== a.indexOf('FRAGMENT_SPREAD');
            case t.RuleKinds.INLINE_FRAGMENT:
              return -1 !== a.indexOf('INLINE_FRAGMENT');
            case t.RuleKinds.SCHEMA_DEF:
              return -1 !== a.indexOf('SCHEMA');
            case t.RuleKinds.SCALAR_DEF:
              return -1 !== a.indexOf('SCALAR');
            case t.RuleKinds.OBJECT_TYPE_DEF:
              return -1 !== a.indexOf('OBJECT');
            case t.RuleKinds.FIELD_DEF:
              return -1 !== a.indexOf('FIELD_DEFINITION');
            case t.RuleKinds.INTERFACE_DEF:
              return -1 !== a.indexOf('INTERFACE');
            case t.RuleKinds.UNION_DEF:
              return -1 !== a.indexOf('UNION');
            case t.RuleKinds.ENUM_DEF:
              return -1 !== a.indexOf('ENUM');
            case t.RuleKinds.ENUM_VALUE:
              return -1 !== a.indexOf('ENUM_VALUE');
            case t.RuleKinds.INPUT_DEF:
              return -1 !== a.indexOf('INPUT_OBJECT');
            case t.RuleKinds.INPUT_VALUE_DEF:
              switch (e.prevState && e.prevState.kind) {
                case t.RuleKinds.ARGUMENTS_DEF:
                  return -1 !== a.indexOf('ARGUMENT_DEFINITION');
                case t.RuleKinds.INPUT_DEF:
                  return -1 !== a.indexOf('INPUT_FIELD_DEFINITION');
              }
          }
          return !1;
        }
        function I(e, a) {
          let r, s, l, u, d, o, p, c, E;
          return (
            (0, i.forEachState)(a, (a) => {
              switch (a.kind) {
                case t.RuleKinds.QUERY:
                case 'ShortQuery':
                  E = e.getQueryType();
                  break;
                case t.RuleKinds.MUTATION:
                  E = e.getMutationType();
                  break;
                case t.RuleKinds.SUBSCRIPTION:
                  E = e.getSubscriptionType();
                  break;
                case t.RuleKinds.INLINE_FRAGMENT:
                case t.RuleKinds.FRAGMENT_DEFINITION:
                  a.type && (E = e.getType(a.type));
                  break;
                case t.RuleKinds.FIELD:
                case t.RuleKinds.ALIASED_FIELD:
                  E && a.name
                    ? ((d = c ? (0, i.getFieldDef)(e, c, a.name) : null),
                      (E = d ? d.type : null))
                    : (d = null);
                  break;
                case t.RuleKinds.SELECTION_SET:
                  c = (0, n.getNamedType)(E);
                  break;
                case t.RuleKinds.DIRECTIVE:
                  l = a.name ? e.getDirective(a.name) : null;
                  break;
                case t.RuleKinds.ARGUMENTS:
                  if (a.prevState)
                    switch (a.prevState.kind) {
                      case t.RuleKinds.FIELD:
                        s = d && d.args;
                        break;
                      case t.RuleKinds.DIRECTIVE:
                        s = l && l.args;
                        break;
                      case t.RuleKinds.ALIASED_FIELD:
                        const n = a.prevState && a.prevState.name;
                        if (!n) {
                          s = null;
                          break;
                        }
                        const r = c ? (0, i.getFieldDef)(e, c, n) : null;
                        if (!r) {
                          s = null;
                          break;
                        }
                        s = r.args;
                        break;
                      default:
                        s = null;
                    }
                  else s = null;
                  break;
                case t.RuleKinds.ARGUMENT:
                  if (s)
                    for (let e = 0; e < s.length; e++)
                      if (s[e].name === a.name) {
                        r = s[e];
                        break;
                      }
                  o = r && r.type;
                  break;
                case t.RuleKinds.ENUM_VALUE:
                  const T = (0, n.getNamedType)(o);
                  u =
                    T instanceof n.GraphQLEnumType
                      ? m(T.getValues(), (e) => e.value === a.name)
                      : null;
                  break;
                case t.RuleKinds.LIST_VALUE:
                  const I = (0, n.getNullableType)(o);
                  o = I instanceof n.GraphQLList ? I.ofType : null;
                  break;
                case t.RuleKinds.OBJECT_VALUE:
                  const R = (0, n.getNamedType)(o);
                  p =
                    R instanceof n.GraphQLInputObjectType
                      ? R.getFields()
                      : null;
                  break;
                case t.RuleKinds.OBJECT_FIELD:
                  const f = a.name && p ? p[a.name] : null;
                  o = f && f.type;
                  break;
                case t.RuleKinds.NAMED_TYPE:
                  a.name && (E = e.getType(a.name));
              }
            }),
            {
              argDef: r,
              argDefs: s,
              directiveDef: l,
              enumValue: u,
              fieldDef: d,
              inputType: o,
              objectFieldDefs: p,
              parentType: c,
              type: E,
            }
          );
        }
        function m(e, n) {
          for (let t = 0; t < e.length; t++) if (n(e[t])) return e[t];
          return null;
        }
      },
      {
        'vscode-languageserver-types': 'IJhn',
        graphql: 'lFnJ',
        'graphql-language-service-parser': 'WgdC',
        './autocompleteUtils': 'jV6c',
      },
    ],
    lu3o: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getASTNodeAtPosition = t),
          (exports.pointToOffset = r);
        var e = require('graphql');
        function t(t, n, o) {
          const c = r(t, o);
          let i;
          return (
            (0, e.visit)(n, {
              enter(e) {
                if (
                  !(
                    'Name' !== e.kind &&
                    e.loc &&
                    e.loc.start <= c &&
                    c <= e.loc.end
                  )
                )
                  return !1;
                i = e;
              },
              leave(e) {
                if (e.loc && e.loc.start <= c && c <= e.loc.end) return !1;
              },
            }),
            i
          );
        }
        function r(e, t) {
          const r = e.split('\n').slice(0, t.line);
          return (
            t.character + r.map((e) => e.length + 1).reduce((e, t) => e + t, 0)
          );
        }
      },
      { graphql: 'lFnJ' },
    ],
    vgAw: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.offsetToPosition = s),
          (exports.locToRange = n),
          (exports.Position = exports.Range = void 0);
        class t {
          constructor(t, e) {
            (this.containsPosition = (t) =>
              this.start.line === t.line
                ? this.start.character <= t.character
                : this.end.line === t.line
                ? this.end.character >= t.character
                : this.start.line <= t.line && this.end.line >= t.line),
              (this.start = t),
              (this.end = e);
          }
          setStart(t, s) {
            this.start = new e(t, s);
          }
          setEnd(t, s) {
            this.end = new e(t, s);
          }
        }
        exports.Range = t;
        class e {
          constructor(t, e) {
            (this.lessThanOrEqualTo = (t) =>
              this.line < t.line ||
              (this.line === t.line && this.character <= t.character)),
              (this.line = t),
              (this.character = e);
          }
          setLine(t) {
            this.line = t;
          }
          setCharacter(t) {
            this.character = t;
          }
        }
        function s(t, s) {
          const n = t.slice(0, s),
            i = n.split('\n').length - 1,
            r = n.lastIndexOf('\n');
          return new e(i, s - r - 1);
        }
        function n(e, n) {
          const i = s(e, n.start),
            r = s(e, n.end);
          return new t(i, r);
        }
        exports.Position = e;
      },
      {},
    ],
    qu6u: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.isDefinitionNode = i),
          (exports.isExecutableDefinitionNode = d),
          (exports.isSelectionNode = E),
          (exports.isValueNode = N),
          (exports.isTypeNode = e),
          (exports.isTypeSystemDefinitionNode = T),
          (exports.isTypeDefinitionNode = I),
          (exports.isTypeSystemExtensionNode = t),
          (exports.isTypeExtensionNode = _);
        var n = require('./kinds.js');
        function i(n) {
          return d(n) || T(n) || t(n);
        }
        function d(i) {
          return (
            i.kind === n.Kind.OPERATION_DEFINITION ||
            i.kind === n.Kind.FRAGMENT_DEFINITION
          );
        }
        function E(i) {
          return (
            i.kind === n.Kind.FIELD ||
            i.kind === n.Kind.FRAGMENT_SPREAD ||
            i.kind === n.Kind.INLINE_FRAGMENT
          );
        }
        function N(i) {
          return (
            i.kind === n.Kind.VARIABLE ||
            i.kind === n.Kind.INT ||
            i.kind === n.Kind.FLOAT ||
            i.kind === n.Kind.STRING ||
            i.kind === n.Kind.BOOLEAN ||
            i.kind === n.Kind.NULL ||
            i.kind === n.Kind.ENUM ||
            i.kind === n.Kind.LIST ||
            i.kind === n.Kind.OBJECT
          );
        }
        function e(i) {
          return (
            i.kind === n.Kind.NAMED_TYPE ||
            i.kind === n.Kind.LIST_TYPE ||
            i.kind === n.Kind.NON_NULL_TYPE
          );
        }
        function T(i) {
          return (
            i.kind === n.Kind.SCHEMA_DEFINITION ||
            I(i) ||
            i.kind === n.Kind.DIRECTIVE_DEFINITION
          );
        }
        function I(i) {
          return (
            i.kind === n.Kind.SCALAR_TYPE_DEFINITION ||
            i.kind === n.Kind.OBJECT_TYPE_DEFINITION ||
            i.kind === n.Kind.INTERFACE_TYPE_DEFINITION ||
            i.kind === n.Kind.UNION_TYPE_DEFINITION ||
            i.kind === n.Kind.ENUM_TYPE_DEFINITION ||
            i.kind === n.Kind.INPUT_OBJECT_TYPE_DEFINITION
          );
        }
        function t(i) {
          return i.kind === n.Kind.SCHEMA_EXTENSION || _(i);
        }
        function _(i) {
          return (
            i.kind === n.Kind.SCALAR_TYPE_EXTENSION ||
            i.kind === n.Kind.OBJECT_TYPE_EXTENSION ||
            i.kind === n.Kind.INTERFACE_TYPE_EXTENSION ||
            i.kind === n.Kind.UNION_TYPE_EXTENSION ||
            i.kind === n.Kind.ENUM_TYPE_EXTENSION ||
            i.kind === n.Kind.INPUT_OBJECT_TYPE_EXTENSION
          );
        }
      },
      { './kinds.js': 'HZ3k' },
    ],
    oc2l: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.ExecutableDefinitionsRule = n);
        var e = require('../../error/GraphQLError.js'),
          r = require('../../language/kinds.js'),
          i = require('../../language/predicates.js');
        function n(n) {
          return {
            Document: function (t) {
              for (var o = 0, a = t.definitions; o < a.length; o++) {
                var u = a[o];
                if (!(0, i.isExecutableDefinitionNode)(u)) {
                  var s =
                    u.kind === r.Kind.SCHEMA_DEFINITION ||
                    u.kind === r.Kind.SCHEMA_EXTENSION
                      ? 'schema'
                      : '"' + u.name.value + '"';
                  n.reportError(
                    new e.GraphQLError(
                      'The '.concat(s, ' definition is not executable.'),
                      u
                    )
                  );
                }
              }
              return !1;
            },
          };
        }
      },
      {
        '../../error/GraphQLError.js': 'zFQB',
        '../../language/kinds.js': 'HZ3k',
        '../../language/predicates.js': 'qu6u',
      },
    ],
    rXR1: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          Object.defineProperty(exports, 'ExecutableDefinitions', {
            enumerable: !0,
            get: function () {
              return e.ExecutableDefinitionsRule;
            },
          });
        var e = require('./ExecutableDefinitionsRule.js');
      },
      { './ExecutableDefinitionsRule.js': 'oc2l' },
    ],
    fQiT: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.validateWithCustomRules = t);
        var e = require('graphql'),
          n = require('graphql/validation/rules/ExecutableDefinitions');
        function t(t, i, r, s) {
          const a = e.specifiedRules.filter(
            (t) =>
              t !== e.NoUnusedFragmentsRule &&
              t !== n.ExecutableDefinitions &&
              (!s || t !== e.KnownFragmentNamesRule)
          );
          return (
            r && Array.prototype.push.apply(a, r),
            (0, e.validate)(t, i, a).filter((n) => {
              if (-1 !== n.message.indexOf('Unknown directive') && n.nodes) {
                const t = n.nodes[0];
                if (t && t.kind === e.Kind.DIRECTIVE) {
                  const e = t.name.value;
                  if ('arguments' === e || 'argumentDefinitions' === e)
                    return !1;
                }
              }
              return !0;
            })
          );
        }
      },
      {
        graphql: 'lFnJ',
        'graphql/validation/rules/ExecutableDefinitions': 'rXR1',
      },
    ],
    rU91: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          Object.defineProperty(exports, 'getASTNodeAtPosition', {
            enumerable: !0,
            get: function () {
              return e.getASTNodeAtPosition;
            },
          }),
          Object.defineProperty(exports, 'pointToOffset', {
            enumerable: !0,
            get: function () {
              return e.pointToOffset;
            },
          }),
          Object.defineProperty(exports, 'Position', {
            enumerable: !0,
            get: function () {
              return t.Position;
            },
          }),
          Object.defineProperty(exports, 'Range', {
            enumerable: !0,
            get: function () {
              return t.Range;
            },
          }),
          Object.defineProperty(exports, 'locToRange', {
            enumerable: !0,
            get: function () {
              return t.locToRange;
            },
          }),
          Object.defineProperty(exports, 'offsetToPosition', {
            enumerable: !0,
            get: function () {
              return t.offsetToPosition;
            },
          }),
          Object.defineProperty(exports, 'validateWithCustomRules', {
            enumerable: !0,
            get: function () {
              return o.validateWithCustomRules;
            },
          });
        var e = require('./getASTNodeAtPosition'),
          t = require('./Range'),
          o = require('./validateWithCustomRules');
      },
      {
        './getASTNodeAtPosition': 'lu3o',
        './Range': 'vgAw',
        './validateWithCustomRules': 'fQiT',
      },
    ],
    U79N: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getDefinitionQueryResultForNamedType = a),
          (exports.getDefinitionQueryResultForFragmentSpread = u),
          (exports.getDefinitionQueryResultForDefinitionNode = c),
          (exports.LANGUAGE = void 0);
        var e = require('graphql-language-service-utils'),
          n = function (e, n, t, o) {
            return new (t || (t = Promise))(function (i, r) {
              function a(e) {
                try {
                  c(o.next(e));
                } catch (n) {
                  r(n);
                }
              }
              function u(e) {
                try {
                  c(o.throw(e));
                } catch (n) {
                  r(n);
                }
              }
              function c(e) {
                var n;
                e.done
                  ? i(e.value)
                  : ((n = e.value),
                    n instanceof t
                      ? n
                      : new t(function (e) {
                          e(n);
                        })).then(a, u);
              }
              c((o = o.apply(e, n || [])).next());
            });
          };
        const t = 'GraphQL';
        function o(e, n) {
          if (!e) throw new Error(n);
        }
        function i(n, t) {
          const i = t.loc;
          return (
            o(i, 'Expected ASTNode to have a location.'),
            (0, e.locToRange)(n, i)
          );
        }
        function r(n, t) {
          const i = t.loc;
          return (
            o(i, 'Expected ASTNode to have a location.'),
            (0, e.offsetToPosition)(n, i.start)
          );
        }
        function a(e, t, o) {
          return n(this, void 0, void 0, function* () {
            const n = t.name.value,
              r = o.filter(({ definition: e }) => e.name && e.name.value === n);
            if (0 === r.length)
              throw Error(`Definition not found for GraphQL type ${n}`);
            const a = r.map(({ filePath: e, content: n, definition: t }) =>
              s(e || '', n, t)
            );
            return { definitions: a, queryRange: a.map((n) => i(e, t)) };
          });
        }
        function u(e, t, o) {
          return n(this, void 0, void 0, function* () {
            const n = t.name.value,
              r = o.filter(({ definition: e }) => e.name.value === n);
            if (0 === r.length)
              throw Error(`Definition not found for GraphQL fragment ${n}`);
            const a = r.map(({ filePath: e, content: n, definition: t }) =>
              f(e || '', n, t)
            );
            return { definitions: a, queryRange: a.map((n) => i(e, t)) };
          });
        }
        function c(e, n, t) {
          return {
            definitions: [f(e, n, t)],
            queryRange: t.name ? [i(n, t.name)] : [],
          };
        }
        function f(e, n, o) {
          const a = o.name;
          if (!a) throw Error('Expected ASTNode to have a Name.');
          return {
            path: e,
            position: r(n, o),
            range: i(n, o),
            name: a.value || '',
            language: t,
            projectRoot: e,
          };
        }
        function s(e, n, a) {
          const u = a.name;
          return (
            o(u, 'Expected ASTNode to have a Name.'),
            {
              path: e,
              position: r(n, a),
              range: i(n, a),
              name: u.value || '',
              language: t,
              projectRoot: e,
            }
          );
        }
        exports.LANGUAGE = t;
      },
      { 'graphql-language-service-utils': 'rU91' },
    ],
    YOwE: [
      function (require, module, exports) {
        'use strict';
        var r = Object.getOwnPropertySymbols,
          t = Object.prototype.hasOwnProperty,
          e = Object.prototype.propertyIsEnumerable;
        function n(r) {
          if (null == r)
            throw new TypeError(
              'Object.assign cannot be called with null or undefined'
            );
          return Object(r);
        }
        function o() {
          try {
            if (!Object.assign) return !1;
            var r = new String('abc');
            if (((r[5] = 'de'), '5' === Object.getOwnPropertyNames(r)[0]))
              return !1;
            for (var t = {}, e = 0; e < 10; e++)
              t['_' + String.fromCharCode(e)] = e;
            if (
              '0123456789' !==
              Object.getOwnPropertyNames(t)
                .map(function (r) {
                  return t[r];
                })
                .join('')
            )
              return !1;
            var n = {};
            return (
              'abcdefghijklmnopqrst'.split('').forEach(function (r) {
                n[r] = r;
              }),
              'abcdefghijklmnopqrst' ===
                Object.keys(Object.assign({}, n)).join('')
            );
          } catch (o) {
            return !1;
          }
        }
        module.exports = o()
          ? Object.assign
          : function (o, c) {
              for (var a, i, s = n(o), f = 1; f < arguments.length; f++) {
                for (var u in (a = Object(arguments[f])))
                  t.call(a, u) && (s[u] = a[u]);
                if (r) {
                  i = r(a);
                  for (var b = 0; b < i.length; b++)
                    e.call(a, i[b]) && (s[i[b]] = a[i[b]]);
                }
              }
              return s;
            };
      },
      {},
    ],
    ebtb: [
      function (require, module, exports) {
        module.exports = function (o) {
          return (
            o &&
            'object' == typeof o &&
            'function' == typeof o.copy &&
            'function' == typeof o.fill &&
            'function' == typeof o.readUInt8
          );
        };
      },
      {},
    ],
    Zvxt: [
      function (require, module, exports) {
        'function' == typeof Object.create
          ? (module.exports = function (t, e) {
              (t.super_ = e),
                (t.prototype = Object.create(e.prototype, {
                  constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0,
                  },
                }));
            })
          : (module.exports = function (t, e) {
              t.super_ = e;
              var o = function () {};
              (o.prototype = e.prototype),
                (t.prototype = new o()),
                (t.prototype.constructor = t);
            });
      },
      {},
    ],
    KpDW: [
      function (require, module, exports) {
        var global = arguments[3];
        var process = require('process');
        var e = arguments[3],
          t = require('process'),
          r = /%[sdj%]/g;
        (exports.format = function (e) {
          if (!v(e)) {
            for (var t = [], n = 0; n < arguments.length; n++)
              t.push(i(arguments[n]));
            return t.join(' ');
          }
          n = 1;
          for (
            var o = arguments,
              s = o.length,
              u = String(e).replace(r, function (e) {
                if ('%%' === e) return '%';
                if (n >= s) return e;
                switch (e) {
                  case '%s':
                    return String(o[n++]);
                  case '%d':
                    return Number(o[n++]);
                  case '%j':
                    try {
                      return JSON.stringify(o[n++]);
                    } catch (t) {
                      return '[Circular]';
                    }
                  default:
                    return e;
                }
              }),
              c = o[n];
            n < s;
            c = o[++n]
          )
            h(c) || !z(c) ? (u += ' ' + c) : (u += ' ' + i(c));
          return u;
        }),
          (exports.deprecate = function (r, n) {
            if (j(e.process))
              return function () {
                return exports.deprecate(r, n).apply(this, arguments);
              };
            if (!0 === t.noDeprecation) return r;
            var o = !1;
            return function () {
              if (!o) {
                if (t.throwDeprecation) throw new Error(n);
                t.traceDeprecation ? console.trace(n) : console.error(n),
                  (o = !0);
              }
              return r.apply(this, arguments);
            };
          });
        var n,
          o = {};
        function i(e, t) {
          var r = { seen: [], stylize: u };
          return (
            arguments.length >= 3 && (r.depth = arguments[2]),
            arguments.length >= 4 && (r.colors = arguments[3]),
            x(t) ? (r.showHidden = t) : t && exports._extend(r, t),
            j(r.showHidden) && (r.showHidden = !1),
            j(r.depth) && (r.depth = 2),
            j(r.colors) && (r.colors = !1),
            j(r.customInspect) && (r.customInspect = !0),
            r.colors && (r.stylize = s),
            p(r, e, r.depth)
          );
        }
        function s(e, t) {
          var r = i.styles[t];
          return r
            ? '[' + i.colors[r][0] + 'm' + e + '[' + i.colors[r][1] + 'm'
            : e;
        }
        function u(e, t) {
          return e;
        }
        function c(e) {
          var t = {};
          return (
            e.forEach(function (e, r) {
              t[e] = !0;
            }),
            t
          );
        }
        function p(e, t, r) {
          if (
            e.customInspect &&
            t &&
            D(t.inspect) &&
            t.inspect !== exports.inspect &&
            (!t.constructor || t.constructor.prototype !== t)
          ) {
            var n = t.inspect(r, e);
            return v(n) || (n = p(e, n, r)), n;
          }
          var o = l(e, t);
          if (o) return o;
          var i = Object.keys(t),
            s = c(i);
          if (
            (e.showHidden && (i = Object.getOwnPropertyNames(t)),
            E(t) &&
              (i.indexOf('message') >= 0 || i.indexOf('description') >= 0))
          )
            return a(t);
          if (0 === i.length) {
            if (D(t)) {
              var u = t.name ? ': ' + t.name : '';
              return e.stylize('[Function' + u + ']', 'special');
            }
            if (O(t))
              return e.stylize(RegExp.prototype.toString.call(t), 'regexp');
            if (w(t)) return e.stylize(Date.prototype.toString.call(t), 'date');
            if (E(t)) return a(t);
          }
          var x,
            h = '',
            b = !1,
            m = ['{', '}'];
          (d(t) && ((b = !0), (m = ['[', ']'])), D(t)) &&
            (h = ' [Function' + (t.name ? ': ' + t.name : '') + ']');
          return (
            O(t) && (h = ' ' + RegExp.prototype.toString.call(t)),
            w(t) && (h = ' ' + Date.prototype.toUTCString.call(t)),
            E(t) && (h = ' ' + a(t)),
            0 !== i.length || (b && 0 != t.length)
              ? r < 0
                ? O(t)
                  ? e.stylize(RegExp.prototype.toString.call(t), 'regexp')
                  : e.stylize('[Object]', 'special')
                : (e.seen.push(t),
                  (x = b
                    ? f(e, t, r, s, i)
                    : i.map(function (n) {
                        return g(e, t, r, s, n, b);
                      })),
                  e.seen.pop(),
                  y(x, h, m))
              : m[0] + h + m[1]
          );
        }
        function l(e, t) {
          if (j(t)) return e.stylize('undefined', 'undefined');
          if (v(t)) {
            var r =
              "'" +
              JSON.stringify(t)
                .replace(/^"|"$/g, '')
                .replace(/'/g, "\\'")
                .replace(/\\"/g, '"') +
              "'";
            return e.stylize(r, 'string');
          }
          return m(t)
            ? e.stylize('' + t, 'number')
            : x(t)
            ? e.stylize('' + t, 'boolean')
            : h(t)
            ? e.stylize('null', 'null')
            : void 0;
        }
        function a(e) {
          return '[' + Error.prototype.toString.call(e) + ']';
        }
        function f(e, t, r, n, o) {
          for (var i = [], s = 0, u = t.length; s < u; ++s)
            $(t, String(s)) ? i.push(g(e, t, r, n, String(s), !0)) : i.push('');
          return (
            o.forEach(function (o) {
              o.match(/^\d+$/) || i.push(g(e, t, r, n, o, !0));
            }),
            i
          );
        }
        function g(e, t, r, n, o, i) {
          var s, u, c;
          if (
            ((c = Object.getOwnPropertyDescriptor(t, o) || { value: t[o] }).get
              ? (u = c.set
                  ? e.stylize('[Getter/Setter]', 'special')
                  : e.stylize('[Getter]', 'special'))
              : c.set && (u = e.stylize('[Setter]', 'special')),
            $(n, o) || (s = '[' + o + ']'),
            u ||
              (e.seen.indexOf(c.value) < 0
                ? (u = h(r)
                    ? p(e, c.value, null)
                    : p(e, c.value, r - 1)).indexOf('\n') > -1 &&
                  (u = i
                    ? u
                        .split('\n')
                        .map(function (e) {
                          return '  ' + e;
                        })
                        .join('\n')
                        .substr(2)
                    : '\n' +
                      u
                        .split('\n')
                        .map(function (e) {
                          return '   ' + e;
                        })
                        .join('\n'))
                : (u = e.stylize('[Circular]', 'special'))),
            j(s))
          ) {
            if (i && o.match(/^\d+$/)) return u;
            (s = JSON.stringify('' + o)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)
              ? ((s = s.substr(1, s.length - 2)), (s = e.stylize(s, 'name')))
              : ((s = s
                  .replace(/'/g, "\\'")
                  .replace(/\\"/g, '"')
                  .replace(/(^"|"$)/g, "'")),
                (s = e.stylize(s, 'string')));
          }
          return s + ': ' + u;
        }
        function y(e, t, r) {
          return e.reduce(function (e, t) {
            return (
              0,
              t.indexOf('\n') >= 0 && 0,
              e + t.replace(/\u001b\[\d\d?m/g, '').length + 1
            );
          }, 0) > 60
            ? r[0] +
                ('' === t ? '' : t + '\n ') +
                ' ' +
                e.join(',\n  ') +
                ' ' +
                r[1]
            : r[0] + t + ' ' + e.join(', ') + ' ' + r[1];
        }
        function d(e) {
          return Array.isArray(e);
        }
        function x(e) {
          return 'boolean' == typeof e;
        }
        function h(e) {
          return null === e;
        }
        function b(e) {
          return null == e;
        }
        function m(e) {
          return 'number' == typeof e;
        }
        function v(e) {
          return 'string' == typeof e;
        }
        function S(e) {
          return 'symbol' == typeof e;
        }
        function j(e) {
          return void 0 === e;
        }
        function O(e) {
          return z(e) && '[object RegExp]' === A(e);
        }
        function z(e) {
          return 'object' == typeof e && null !== e;
        }
        function w(e) {
          return z(e) && '[object Date]' === A(e);
        }
        function E(e) {
          return z(e) && ('[object Error]' === A(e) || e instanceof Error);
        }
        function D(e) {
          return 'function' == typeof e;
        }
        function N(e) {
          return (
            null === e ||
            'boolean' == typeof e ||
            'number' == typeof e ||
            'string' == typeof e ||
            'symbol' == typeof e ||
            void 0 === e
          );
        }
        function A(e) {
          return Object.prototype.toString.call(e);
        }
        function J(e) {
          return e < 10 ? '0' + e.toString(10) : e.toString(10);
        }
        (exports.debuglog = function (e) {
          if ((j(n) && (n = ''), (e = e.toUpperCase()), !o[e]))
            if (new RegExp('\\b' + e + '\\b', 'i').test(n)) {
              var r = t.pid;
              o[e] = function () {
                var t = exports.format.apply(exports, arguments);
                console.error('%s %d: %s', e, r, t);
              };
            } else o[e] = function () {};
          return o[e];
        }),
          (exports.inspect = i),
          (i.colors = {
            bold: [1, 22],
            italic: [3, 23],
            underline: [4, 24],
            inverse: [7, 27],
            white: [37, 39],
            grey: [90, 39],
            black: [30, 39],
            blue: [34, 39],
            cyan: [36, 39],
            green: [32, 39],
            magenta: [35, 39],
            red: [31, 39],
            yellow: [33, 39],
          }),
          (i.styles = {
            special: 'cyan',
            number: 'yellow',
            boolean: 'yellow',
            undefined: 'grey',
            null: 'bold',
            string: 'green',
            date: 'magenta',
            regexp: 'red',
          }),
          (exports.isArray = d),
          (exports.isBoolean = x),
          (exports.isNull = h),
          (exports.isNullOrUndefined = b),
          (exports.isNumber = m),
          (exports.isString = v),
          (exports.isSymbol = S),
          (exports.isUndefined = j),
          (exports.isRegExp = O),
          (exports.isObject = z),
          (exports.isDate = w),
          (exports.isError = E),
          (exports.isFunction = D),
          (exports.isPrimitive = N),
          (exports.isBuffer = require('./support/isBuffer'));
        var R = [
          'Jan',
          'Feb',
          'Mar',
          'Apr',
          'May',
          'Jun',
          'Jul',
          'Aug',
          'Sep',
          'Oct',
          'Nov',
          'Dec',
        ];
        function H() {
          var e = new Date(),
            t = [J(e.getHours()), J(e.getMinutes()), J(e.getSeconds())].join(
              ':'
            );
          return [e.getDate(), R[e.getMonth()], t].join(' ');
        }
        function $(e, t) {
          return Object.prototype.hasOwnProperty.call(e, t);
        }
        (exports.log = function () {
          console.log('%s - %s', H(), exports.format.apply(exports, arguments));
        }),
          (exports.inherits = require('inherits')),
          (exports._extend = function (e, t) {
            if (!t || !z(t)) return e;
            for (var r = Object.keys(t), n = r.length; n--; ) e[r[n]] = t[r[n]];
            return e;
          });
      },
      { './support/isBuffer': 'ebtb', inherits: 'Zvxt', process: 'g5IB' },
    ],
    g2FE: [
      function (require, module, exports) {
        var global = arguments[3];
        var t = arguments[3],
          e = require('object-assign');
        function r(t, e) {
          if (t === e) return 0;
          for (
            var r = t.length, n = e.length, i = 0, o = Math.min(r, n);
            i < o;
            ++i
          )
            if (t[i] !== e[i]) {
              (r = t[i]), (n = e[i]);
              break;
            }
          return r < n ? -1 : n < r ? 1 : 0;
        }
        function n(e) {
          return t.Buffer && 'function' == typeof t.Buffer.isBuffer
            ? t.Buffer.isBuffer(e)
            : !(null == e || !e._isBuffer);
        }
        var i = require('util/'),
          o = Object.prototype.hasOwnProperty,
          u = Array.prototype.slice,
          a = 'foo' === function () {}.name;
        function c(t) {
          return Object.prototype.toString.call(t);
        }
        function f(e) {
          return (
            !n(e) &&
            'function' == typeof t.ArrayBuffer &&
            ('function' == typeof ArrayBuffer.isView
              ? ArrayBuffer.isView(e)
              : !!e &&
                (e instanceof DataView ||
                  !!(e.buffer && e.buffer instanceof ArrayBuffer)))
          );
        }
        var s = (module.exports = q),
          l = /\s*function\s+([^\(\s]*)\s*/;
        function p(t) {
          if (i.isFunction(t)) {
            if (a) return t.name;
            var e = t.toString().match(l);
            return e && e[1];
          }
        }
        function g(t, e) {
          return 'string' == typeof t ? (t.length < e ? t : t.slice(0, e)) : t;
        }
        function E(t) {
          if (a || !i.isFunction(t)) return i.inspect(t);
          var e = p(t);
          return '[Function' + (e ? ': ' + e : '') + ']';
        }
        function h(t) {
          return (
            g(E(t.actual), 128) + ' ' + t.operator + ' ' + g(E(t.expected), 128)
          );
        }
        function y(t, e, r, n, i) {
          throw new s.AssertionError({
            message: r,
            actual: t,
            expected: e,
            operator: n,
            stackStartFunction: i,
          });
        }
        function q(t, e) {
          t || y(t, !0, e, '==', s.ok);
        }
        function d(t, e, o, u) {
          if (t === e) return !0;
          if (n(t) && n(e)) return 0 === r(t, e);
          if (i.isDate(t) && i.isDate(e)) return t.getTime() === e.getTime();
          if (i.isRegExp(t) && i.isRegExp(e))
            return (
              t.source === e.source &&
              t.global === e.global &&
              t.multiline === e.multiline &&
              t.lastIndex === e.lastIndex &&
              t.ignoreCase === e.ignoreCase
            );
          if (
            (null !== t && 'object' == typeof t) ||
            (null !== e && 'object' == typeof e)
          ) {
            if (
              f(t) &&
              f(e) &&
              c(t) === c(e) &&
              !(t instanceof Float32Array || t instanceof Float64Array)
            )
              return (
                0 === r(new Uint8Array(t.buffer), new Uint8Array(e.buffer))
              );
            if (n(t) !== n(e)) return !1;
            var a = (u = u || { actual: [], expected: [] }).actual.indexOf(t);
            return (
              (-1 !== a && a === u.expected.indexOf(e)) ||
              (u.actual.push(t), u.expected.push(e), b(t, e, o, u))
            );
          }
          return o ? t === e : t == e;
        }
        function m(t) {
          return '[object Arguments]' == Object.prototype.toString.call(t);
        }
        function b(t, e, r, n) {
          if (null == t || null == e) return !1;
          if (i.isPrimitive(t) || i.isPrimitive(e)) return t === e;
          if (r && Object.getPrototypeOf(t) !== Object.getPrototypeOf(e))
            return !1;
          var o = m(t),
            a = m(e);
          if ((o && !a) || (!o && a)) return !1;
          if (o) return d((t = u.call(t)), (e = u.call(e)), r);
          var c,
            f,
            s = A(t),
            l = A(e);
          if (s.length !== l.length) return !1;
          for (s.sort(), l.sort(), f = s.length - 1; f >= 0; f--)
            if (s[f] !== l[f]) return !1;
          for (f = s.length - 1; f >= 0; f--)
            if (!d(t[(c = s[f])], e[c], r, n)) return !1;
          return !0;
        }
        function v(t, e, r) {
          d(t, e, !0) && y(t, e, r, 'notDeepStrictEqual', v);
        }
        function x(t, e) {
          if (!t || !e) return !1;
          if ('[object RegExp]' == Object.prototype.toString.call(e))
            return e.test(t);
          try {
            if (t instanceof e) return !0;
          } catch (r) {}
          return !Error.isPrototypeOf(e) && !0 === e.call({}, t);
        }
        function S(t) {
          var e;
          try {
            t();
          } catch (r) {
            e = r;
          }
          return e;
        }
        function w(t, e, r, n) {
          var o;
          if ('function' != typeof e)
            throw new TypeError('"block" argument must be a function');
          'string' == typeof r && ((n = r), (r = null)),
            (o = S(e)),
            (n =
              (r && r.name ? ' (' + r.name + ').' : '.') + (n ? ' ' + n : '.')),
            t && !o && y(o, r, 'Missing expected exception' + n);
          var u = 'string' == typeof n,
            a = !t && o && !r;
          if (
            (((!t && i.isError(o) && u && x(o, r)) || a) &&
              y(o, r, 'Got unwanted exception' + n),
            (t && o && r && !x(o, r)) || (!t && o))
          )
            throw o;
        }
        function O(t, e) {
          t || y(t, !0, e, '==', O);
        }
        (s.AssertionError = function (t) {
          (this.name = 'AssertionError'),
            (this.actual = t.actual),
            (this.expected = t.expected),
            (this.operator = t.operator),
            t.message
              ? ((this.message = t.message), (this.generatedMessage = !1))
              : ((this.message = h(this)), (this.generatedMessage = !0));
          var e = t.stackStartFunction || y;
          if (Error.captureStackTrace) Error.captureStackTrace(this, e);
          else {
            var r = new Error();
            if (r.stack) {
              var n = r.stack,
                i = p(e),
                o = n.indexOf('\n' + i);
              if (o >= 0) {
                var u = n.indexOf('\n', o + 1);
                n = n.substring(u + 1);
              }
              this.stack = n;
            }
          }
        }),
          i.inherits(s.AssertionError, Error),
          (s.fail = y),
          (s.ok = q),
          (s.equal = function (t, e, r) {
            t != e && y(t, e, r, '==', s.equal);
          }),
          (s.notEqual = function (t, e, r) {
            t == e && y(t, e, r, '!=', s.notEqual);
          }),
          (s.deepEqual = function (t, e, r) {
            d(t, e, !1) || y(t, e, r, 'deepEqual', s.deepEqual);
          }),
          (s.deepStrictEqual = function (t, e, r) {
            d(t, e, !0) || y(t, e, r, 'deepStrictEqual', s.deepStrictEqual);
          }),
          (s.notDeepEqual = function (t, e, r) {
            d(t, e, !1) && y(t, e, r, 'notDeepEqual', s.notDeepEqual);
          }),
          (s.notDeepStrictEqual = v),
          (s.strictEqual = function (t, e, r) {
            t !== e && y(t, e, r, '===', s.strictEqual);
          }),
          (s.notStrictEqual = function (t, e, r) {
            t === e && y(t, e, r, '!==', s.notStrictEqual);
          }),
          (s.throws = function (t, e, r) {
            w(!0, t, e, r);
          }),
          (s.doesNotThrow = function (t, e, r) {
            w(!1, t, e, r);
          }),
          (s.ifError = function (t) {
            if (t) throw t;
          }),
          (s.strict = e(O, s, {
            equal: s.strictEqual,
            deepEqual: s.deepStrictEqual,
            notEqual: s.notStrictEqual,
            notDeepEqual: s.notDeepStrictEqual,
          })),
          (s.strict.strict = s.strict);
        var A =
          Object.keys ||
          function (t) {
            var e = [];
            for (var r in t) o.call(t, r) && e.push(r);
            return e;
          };
      },
      { 'object-assign': 'YOwE', 'util/': 'KpDW' },
    ],
    UFVP: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getDiagnostics = s),
          (exports.validateQuery = l),
          (exports.getRange = p),
          (exports.DIAGNOSTIC_SEVERITY = exports.SEVERITY = void 0);
        var e = a(require('assert')),
          r = require('graphql'),
          n = require('graphql-language-service-parser'),
          t = require('graphql-language-service-utils');
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        const o = {
          Error: 'Error',
          Warning: 'Warning',
          Information: 'Information',
          Hint: 'Hint',
        };
        exports.SEVERITY = o;
        const i = {
          [o.Error]: 1,
          [o.Warning]: 2,
          [o.Information]: 3,
          [o.Hint]: 4,
        };
        function s(e, n = null, t, a) {
          let o = null;
          try {
            o = (0, r.parse)(e);
          } catch (s) {
            const r = p(s.locations[0], e);
            return [
              {
                severity: i.Error,
                message: s.message,
                source: 'GraphQL: Syntax',
                range: r,
              },
            ];
          }
          return l(o, n, t, a);
        }
        function l(e, n = null, a, o) {
          if (!n) return [];
          const s = u((0, t.validateWithCustomRules)(n, e, a, o), (e) =>
              c(e, i.Error, 'Validation')
            ),
            l = u((0, r.findDeprecatedUsages)(n, e), (e) =>
              c(e, i.Warning, 'Deprecation')
            );
          return s.concat(l);
        }
        function u(e, r) {
          return Array.prototype.concat.apply([], e.map(r));
        }
        function c(r, n, a) {
          if (!r.nodes) return [];
          const o = [];
          return (
            r.nodes.forEach((i) => {
              const s =
                'Variable' !== i.kind && 'name' in i && void 0 !== i.name
                  ? i.name
                  : 'variable' in i && void 0 !== i.variable
                  ? i.variable
                  : i;
              if (s) {
                (0, e.default)(
                  r.locations,
                  'GraphQL validation error requires locations.'
                );
                const i = r.locations[0],
                  l = g(s),
                  u = i.column + (l.end - l.start);
                o.push({
                  source: `GraphQL: ${a}`,
                  message: r.message,
                  severity: n,
                  range: new t.Range(
                    new t.Position(i.line - 1, i.column - 1),
                    new t.Position(i.line - 1, u)
                  ),
                });
              }
            }),
            o
          );
        }
        function p(r, a) {
          const o = (0, n.onlineParser)(),
            i = o.startState(),
            s = a.split('\n');
          (0, e.default)(
            s.length >= r.line,
            'Query text must have more lines than where the error happened'
          );
          let l = null;
          for (let e = 0; e < r.line; e++)
            for (l = new n.CharacterStream(s[e]); !l.eol(); ) {
              if ('invalidchar' === o.token(l, i)) break;
            }
          (0, e.default)(l, 'Expected Parser stream to be available.');
          const u = r.line - 1,
            c = l.getStartOfToken(),
            p = l.getCurrentPosition();
          return new t.Range(new t.Position(u, c), new t.Position(u, p));
        }
        function g(r) {
          const n = r.loc;
          return (0, e.default)(n, 'Expected ASTNode to have a location.'), n;
        }
        exports.DIAGNOSTIC_SEVERITY = i;
      },
      {
        assert: 'g2FE',
        graphql: 'lFnJ',
        'graphql-language-service-parser': 'WgdC',
        'graphql-language-service-utils': 'rU91',
      },
    ],
    XUKW: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getOutline = a);
        var e = require('graphql'),
          n = require('graphql-language-service-utils');
        const { INLINE_FRAGMENT: i } = e.Kind,
          t = {
            Field: !0,
            OperationDefinition: !0,
            Document: !0,
            SelectionSet: !0,
            Name: !0,
            FragmentDefinition: !0,
            FragmentSpread: !0,
            InlineFragment: !0,
            ObjectTypeDefinition: !0,
            InputObjectTypeDefinition: !0,
            InterfaceTypeDefinition: !0,
            EnumTypeDefinition: !0,
            EnumValueDefinition: !0,
            InputValueDefinition: !0,
            FieldDefinition: !0,
          };
        function a(n) {
          let i;
          try {
            i = (0, e.parse)(n);
          } catch (a) {
            return null;
          }
          const t = s(n);
          return {
            outlineTrees: (0, e.visit)(i, {
              leave: (e) => (void 0 !== t && e.kind in t ? t[e.kind](e) : null),
            }),
          };
        }
        function s(e) {
          const t = (i) => ({
            representativeName: i.name,
            startPosition: (0, n.offsetToPosition)(e, i.loc.start),
            endPosition: (0, n.offsetToPosition)(e, i.loc.end),
            kind: i.kind,
            children:
              i.selectionSet || i.fields || i.values || i.arguments || [],
          });
          return {
            Field: (e) => {
              const n = e.alias ? [o('plain', e.alias), o('plain', ': ')] : [];
              return (
                n.push(o('plain', e.name)),
                Object.assign({ tokenizedText: n }, t(e))
              );
            },
            OperationDefinition: (e) =>
              Object.assign(
                {
                  tokenizedText: [
                    o('keyword', e.operation),
                    o('whitespace', ' '),
                    o('class-name', e.name),
                  ],
                },
                t(e)
              ),
            Document: (e) => e.definitions,
            SelectionSet: (e) =>
              r(e.selections, (e) => (e.kind === i ? e.selectionSet : e)),
            Name: (e) => e.value,
            FragmentDefinition: (e) =>
              Object.assign(
                {
                  tokenizedText: [
                    o('keyword', 'fragment'),
                    o('whitespace', ' '),
                    o('class-name', e.name),
                  ],
                },
                t(e)
              ),
            InterfaceTypeDefinition: (e) =>
              Object.assign(
                {
                  tokenizedText: [
                    o('keyword', 'interface'),
                    o('whitespace', ' '),
                    o('class-name', e.name),
                  ],
                },
                t(e)
              ),
            EnumTypeDefinition: (e) =>
              Object.assign(
                {
                  tokenizedText: [
                    o('keyword', 'enum'),
                    o('whitespace', ' '),
                    o('class-name', e.name),
                  ],
                },
                t(e)
              ),
            EnumValueDefinition: (e) =>
              Object.assign({ tokenizedText: [o('plain', e.name)] }, t(e)),
            ObjectTypeDefinition: (e) =>
              Object.assign(
                {
                  tokenizedText: [
                    o('keyword', 'type'),
                    o('whitespace', ' '),
                    o('class-name', e.name),
                  ],
                },
                t(e)
              ),
            InputObjectTypeDefinition: (e) =>
              Object.assign(
                {
                  tokenizedText: [
                    o('keyword', 'input'),
                    o('whitespace', ' '),
                    o('class-name', e.name),
                  ],
                },
                t(e)
              ),
            FragmentSpread: (e) =>
              Object.assign(
                { tokenizedText: [o('plain', '...'), o('class-name', e.name)] },
                t(e)
              ),
            InputValueDefinition: (e) =>
              Object.assign({ tokenizedText: [o('plain', e.name)] }, t(e)),
            FieldDefinition: (e) =>
              Object.assign({ tokenizedText: [o('plain', e.name)] }, t(e)),
            InlineFragment: (e) => e.selectionSet,
          };
        }
        function o(e, n) {
          return { kind: e, value: n };
        }
        function r(e, n) {
          const i = [];
          for (let t = 0; t < e.length; t++) {
            const a = n(e[t], t);
            Array.isArray(a) ? i.push(...a) : i.push(a);
          }
          return i;
        }
      },
      { graphql: 'lFnJ', 'graphql-language-service-utils': 'rU91' },
    ],
    Cqrs: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.getHoverInformation = t);
        var e = require('graphql'),
          n = require('./getAutocompleteSuggestions');
        function t(e, t, r, u) {
          const p = u || (0, n.getTokenAtPosition)(t, r);
          if (!e || !p || !p.state) return '';
          const l = p.state,
            d = l.kind,
            m = l.step,
            D = (0, n.getTypeInfo)(e, p.state),
            y = { schema: e };
          if (
            ('Field' === d && 0 === m && D.fieldDef) ||
            ('AliasedField' === d && 2 === m && D.fieldDef)
          ) {
            const e = [];
            return i(e, D, y), a(e, y, D.fieldDef), e.join('').trim();
          }
          if ('Directive' === d && 1 === m && D.directiveDef) {
            const e = [];
            return o(e, D, y), a(e, y, D.directiveDef), e.join('').trim();
          }
          if ('Argument' === d && 0 === m && D.argDef) {
            const e = [];
            return f(e, D, y), a(e, y, D.argDef), e.join('').trim();
          }
          if (
            'EnumValue' === d &&
            D.enumValue &&
            'description' in D.enumValue
          ) {
            const e = [];
            return c(e, D, y), a(e, y, D.enumValue), e.join('').trim();
          }
          if ('NamedType' === d && D.type && 'description' in D.type) {
            const e = [];
            return s(e, D, y, D.type), a(e, y, D.type), e.join('').trim();
          }
          return '';
        }
        function i(e, n, t) {
          r(e, n, t), u(e, n, t, n.type);
        }
        function r(e, n, t) {
          if (!n.fieldDef) return;
          const i = n.fieldDef.name;
          '__' !== i.slice(0, 2) && (s(e, n, t, n.parentType), l(e, '.')),
            l(e, i);
        }
        function o(e, n, t) {
          if (!n.directiveDef) return;
          l(e, '@' + n.directiveDef.name);
        }
        function f(e, n, t) {
          if (
            (n.directiveDef ? o(e, n, t) : n.fieldDef && r(e, n, t), !n.argDef)
          )
            return;
          const i = n.argDef.name;
          l(e, '('), l(e, i), u(e, n, t, n.inputType), l(e, ')');
        }
        function u(e, n, t, i) {
          l(e, ': '), s(e, n, t, i);
        }
        function c(e, n, t) {
          if (!n.enumValue) return;
          const i = n.enumValue.name;
          s(e, n, t, n.inputType), l(e, '.'), l(e, i);
        }
        function s(n, t, i, r) {
          r &&
            (r instanceof e.GraphQLNonNull
              ? (s(n, t, i, r.ofType), l(n, '!'))
              : r instanceof e.GraphQLList
              ? (l(n, '['), s(n, t, i, r.ofType), l(n, ']'))
              : l(n, r.name));
        }
        function a(e, n, t) {
          if (!t) return;
          const i = 'string' == typeof t.description ? t.description : null;
          i && (l(e, '\n\n'), l(e, i)), p(e, n, t);
        }
        function p(e, n, t) {
          if (!t) return;
          const i = t.deprecationReason ? t.deprecationReason : null;
          i && (l(e, '\n\n'), l(e, 'Deprecated: '), l(e, i));
        }
        function l(e, n) {
          e.push(n);
        }
      },
      { graphql: 'lFnJ', './getAutocompleteSuggestions': 'sDGg' },
    ],
    GcCm: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.GraphQLLanguageService = void 0);
        var e = require('vscode-languageserver-types'),
          i = require('graphql'),
          t = require('./getAutocompleteSuggestions'),
          n = require('./getHoverInformation'),
          r = require('./getDiagnostics'),
          o = require('./getDefinition'),
          s = require('./getOutline'),
          a = require('graphql-language-service-utils'),
          c = function (e, i, t, n) {
            return new (t || (t = Promise))(function (r, o) {
              function s(e) {
                try {
                  c(n.next(e));
                } catch (i) {
                  o(i);
                }
              }
              function a(e) {
                try {
                  c(n.throw(e));
                } catch (i) {
                  o(i);
                }
              }
              function c(e) {
                var i;
                e.done
                  ? r(e.value)
                  : ((i = e.value),
                    i instanceof t
                      ? i
                      : new t(function (e) {
                          e(i);
                        })).then(s, a);
              }
              c((n = n.apply(e, i || [])).next());
            });
          };
        const {
            FRAGMENT_DEFINITION: d,
            OBJECT_TYPE_DEFINITION: u,
            INTERFACE_TYPE_DEFINITION: g,
            ENUM_TYPE_DEFINITION: l,
            UNION_TYPE_DEFINITION: h,
            SCALAR_TYPE_DEFINITION: I,
            INPUT_OBJECT_TYPE_DEFINITION: E,
            SCALAR_TYPE_EXTENSION: N,
            OBJECT_TYPE_EXTENSION: T,
            INTERFACE_TYPE_EXTENSION: _,
            UNION_TYPE_EXTENSION: f,
            ENUM_TYPE_EXTENSION: m,
            INPUT_OBJECT_TYPE_EXTENSION: p,
            DIRECTIVE_DEFINITION: F,
            FRAGMENT_SPREAD: y,
            OPERATION_DEFINITION: D,
            NAMED_TYPE: O,
          } = i.Kind,
          S = {
            [i.Kind.FIELD]: e.SymbolKind.Field,
            [i.Kind.OPERATION_DEFINITION]: e.SymbolKind.Class,
            [i.Kind.FRAGMENT_DEFINITION]: e.SymbolKind.Class,
            [i.Kind.FRAGMENT_SPREAD]: e.SymbolKind.Struct,
            [i.Kind.OBJECT_TYPE_DEFINITION]: e.SymbolKind.Class,
            [i.Kind.ENUM_TYPE_DEFINITION]: e.SymbolKind.Enum,
            [i.Kind.ENUM_VALUE_DEFINITION]: e.SymbolKind.EnumMember,
            [i.Kind.INPUT_OBJECT_TYPE_DEFINITION]: e.SymbolKind.Class,
            [i.Kind.INPUT_VALUE_DEFINITION]: e.SymbolKind.Field,
            [i.Kind.FIELD_DEFINITION]: e.SymbolKind.Field,
            [i.Kind.INTERFACE_TYPE_DEFINITION]: e.SymbolKind.Interface,
            [i.Kind.DOCUMENT]: e.SymbolKind.File,
            FieldWithArguments: e.SymbolKind.Method,
          };
        function C(e) {
          return 'FieldDefinition' === e.kind &&
            e.children &&
            e.children.length > 0
            ? S.FieldWithArguments
            : S[e.kind];
        }
        class v {
          constructor(e) {
            (this._graphQLCache = e),
              (this._graphQLConfig = e.getGraphQLConfig());
          }
          getConfigForURI(e) {
            const i = this._graphQLCache.getProjectForFile(e);
            if (i) return i;
            throw Error(`No config found for uri: ${e}`);
          }
          getDiagnostics(e, t, n) {
            return c(this, void 0, void 0, function* () {
              let o = !1;
              const s = this.getConfigForURI(t);
              if (!s) return [];
              const { schema: a, name: c, extensions: d } = s;
              try {
                const n = (0, i.parse)(e);
                (a && t === a) ||
                  (o = n.definitions.some((e) => {
                    switch (e.kind) {
                      case u:
                      case g:
                      case l:
                      case h:
                      case I:
                      case E:
                      case N:
                      case T:
                      case _:
                      case f:
                      case m:
                      case p:
                      case F:
                        return !0;
                    }
                    return !1;
                  }));
              } catch (v) {
                const i = (0, r.getRange)(v.locations[0], e);
                return [
                  {
                    severity: r.DIAGNOSTIC_SEVERITY.Error,
                    message: v.message,
                    source: 'GraphQL: Syntax',
                    range: i,
                  },
                ];
              }
              let y = e;
              const D = yield this._graphQLCache.getFragmentDefinitions(s);
              y = `${y} ${(yield this._graphQLCache.getFragmentDependencies(
                e,
                D
              )).reduce((e, t) => `${e} ${(0, i.print)(t.definition)}`, '')}`;
              let O = null;
              try {
                O = (0, i.parse)(y);
              } catch (v) {
                return [];
              }
              let S = null;
              (null == d ? void 0 : d.customValidationRules) &&
                'function' == typeof d.customValidationRules &&
                (S = d.customValidationRules(this._graphQLConfig));
              const C = yield this._graphQLCache.getSchema(c, o);
              return C ? (0, r.validateQuery)(O, C, S, n) : [];
            });
          }
          getAutocompleteSuggestions(e, i, n) {
            return c(this, void 0, void 0, function* () {
              const r = this.getConfigForURI(n),
                o = yield this._graphQLCache.getSchema(r.name),
                s = yield this._graphQLCache.getFragmentDefinitions(r),
                a = Array.from(s).map(([, e]) => e);
              return o
                ? (0, t.getAutocompleteSuggestions)(
                    o,
                    e,
                    i,
                    void 0,
                    a.map(({ definition: e }) => e)
                  )
                : [];
            });
          }
          getHoverInformation(e, i, t) {
            return c(this, void 0, void 0, function* () {
              const r = this.getConfigForURI(t),
                o = yield this._graphQLCache.getSchema(r.name);
              return o ? (0, n.getHoverInformation)(o, e, i) : '';
            });
          }
          getDefinition(e, t, n) {
            return c(this, void 0, void 0, function* () {
              const r = this.getConfigForURI(n);
              let s;
              try {
                s = (0, i.parse)(e);
              } catch (u) {
                return null;
              }
              const c = (0, a.getASTNodeAtPosition)(e, s, t);
              if (c)
                switch (c.kind) {
                  case y:
                    return this._getDefinitionForFragmentSpread(e, s, c, n, r);
                  case d:
                  case D:
                    return (0, o.getDefinitionQueryResultForDefinitionNode)(
                      n,
                      e,
                      c
                    );
                  case O:
                    return this._getDefinitionForNamedType(e, s, c, n, r);
                }
              return null;
            });
          }
          getDocumentSymbols(e, i) {
            return c(this, void 0, void 0, function* () {
              const t = yield this.getOutline(e);
              if (!t) return [];
              const n = [],
                r = t.outlineTrees.map((e) => [null, e]);
              for (; r.length > 0; ) {
                const e = r.pop();
                if (!e) return [];
                const [t, o] = e;
                if (!o) return [];
                n.push({
                  name: o.representativeName,
                  kind: C(o),
                  location: {
                    uri: i,
                    range: { start: o.startPosition, end: o.endPosition },
                  },
                  containerName: t ? t.representativeName : void 0,
                }),
                  r.push(...o.children.map((e) => [o, e]));
              }
              return n;
            });
          }
          _getDefinitionForNamedType(e, i, t, n, r) {
            return c(this, void 0, void 0, function* () {
              const s = yield this._graphQLCache.getObjectTypeDefinitions(r),
                a = yield this._graphQLCache.getObjectTypeDependenciesForAST(
                  i,
                  s
                ),
                c = i.definitions
                  .filter(
                    (e) =>
                      e.kind === u ||
                      e.kind === E ||
                      e.kind === l ||
                      e.kind === I ||
                      e.kind === g
                  )
                  .map((i) => ({ filePath: n, content: e, definition: i }));
              return yield (0,
              o.getDefinitionQueryResultForNamedType)(e, t, a.concat(c));
            });
          }
          _getDefinitionForFragmentSpread(e, i, t, n, r) {
            return c(this, void 0, void 0, function* () {
              const s = yield this._graphQLCache.getFragmentDefinitions(r),
                a = yield this._graphQLCache.getFragmentDependenciesForAST(
                  i,
                  s
                ),
                c = i.definitions
                  .filter((e) => e.kind === d)
                  .map((i) => ({ filePath: n, content: e, definition: i }));
              return yield (0,
              o.getDefinitionQueryResultForFragmentSpread)(e, t, a.concat(c));
            });
          }
          getOutline(e) {
            return c(this, void 0, void 0, function* () {
              return (0, s.getOutline)(e);
            });
          }
        }
        exports.GraphQLLanguageService = v;
      },
      {
        'vscode-languageserver-types': 'IJhn',
        graphql: 'lFnJ',
        './getAutocompleteSuggestions': 'sDGg',
        './getHoverInformation': 'Cqrs',
        './getDiagnostics': 'UFVP',
        './getDefinition': 'U79N',
        './getOutline': 'XUKW',
        'graphql-language-service-utils': 'rU91',
      },
    ],
    UuQT: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 });
        var e = { getOutline: !0, getHoverInformation: !0 };
        Object.defineProperty(exports, 'getOutline', {
          enumerable: !0,
          get: function () {
            return u.getOutline;
          },
        }),
          Object.defineProperty(exports, 'getHoverInformation', {
            enumerable: !0,
            get: function () {
              return i.getHoverInformation;
            },
          });
        var t = require('./autocompleteUtils');
        Object.keys(t).forEach(function (r) {
          'default' !== r &&
            '__esModule' !== r &&
            (Object.prototype.hasOwnProperty.call(e, r) ||
              (r in exports && exports[r] === t[r]) ||
              Object.defineProperty(exports, r, {
                enumerable: !0,
                get: function () {
                  return t[r];
                },
              }));
        });
        var r = require('./getAutocompleteSuggestions');
        Object.keys(r).forEach(function (t) {
          'default' !== t &&
            '__esModule' !== t &&
            (Object.prototype.hasOwnProperty.call(e, t) ||
              (t in exports && exports[t] === r[t]) ||
              Object.defineProperty(exports, t, {
                enumerable: !0,
                get: function () {
                  return r[t];
                },
              }));
        });
        var o = require('./getDefinition');
        Object.keys(o).forEach(function (t) {
          'default' !== t &&
            '__esModule' !== t &&
            (Object.prototype.hasOwnProperty.call(e, t) ||
              (t in exports && exports[t] === o[t]) ||
              Object.defineProperty(exports, t, {
                enumerable: !0,
                get: function () {
                  return o[t];
                },
              }));
        });
        var n = require('./getDiagnostics');
        Object.keys(n).forEach(function (t) {
          'default' !== t &&
            '__esModule' !== t &&
            (Object.prototype.hasOwnProperty.call(e, t) ||
              (t in exports && exports[t] === n[t]) ||
              Object.defineProperty(exports, t, {
                enumerable: !0,
                get: function () {
                  return n[t];
                },
              }));
        });
        var u = require('./getOutline'),
          i = require('./getHoverInformation'),
          c = require('./GraphQLLanguageService');
        Object.keys(c).forEach(function (t) {
          'default' !== t &&
            '__esModule' !== t &&
            (Object.prototype.hasOwnProperty.call(e, t) ||
              (t in exports && exports[t] === c[t]) ||
              Object.defineProperty(exports, t, {
                enumerable: !0,
                get: function () {
                  return c[t];
                },
              }));
        });
      },
      {
        './autocompleteUtils': 'jV6c',
        './getAutocompleteSuggestions': 'sDGg',
        './getDefinition': 'U79N',
        './getDiagnostics': 'UFVP',
        './getOutline': 'XUKW',
        './getHoverInformation': 'Cqrs',
        './GraphQLLanguageService': 'GcCm',
      },
    ],
    yDBM: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.LanguageService = void 0);
        var e = require('graphql'),
          s = require('graphql-language-service-interface'),
          t = require('./schemaLoader'),
          i = function (e, s, t, i) {
            return new (t || (t = Promise))(function (h, n) {
              function r(e) {
                try {
                  o(i.next(e));
                } catch (s) {
                  n(s);
                }
              }
              function a(e) {
                try {
                  o(i.throw(e));
                } catch (s) {
                  n(s);
                }
              }
              function o(e) {
                var s;
                e.done
                  ? h(e.value)
                  : ((s = e.value),
                    s instanceof t
                      ? s
                      : new t(function (e) {
                          e(s);
                        })).then(r, a);
              }
              o((i = i.apply(e, s || [])).next());
            });
          };
        class h {
          constructor({
            parser: h,
            schemaLoader: n,
            schemaBuilder: r,
            schemaConfig: a,
            schemaString: o,
            parseOptions: c,
          }) {
            (this._parser = e.parse),
              (this._schema = null),
              (this._schemaResponse = null),
              (this._schemaLoader = t.defaultSchemaLoader),
              (this._schemaBuilder = t.defaultSchemaBuilder),
              (this._schemaString = null),
              (this._parseOptions = void 0),
              (this.getCompletion = (e, t, h) =>
                i(this, void 0, void 0, function* () {
                  const e = yield this.getSchema();
                  return e ? (0, s.getAutocompleteSuggestions)(e, t, h) : [];
                })),
              (this.getDiagnostics = (e, t, h) =>
                i(this, void 0, void 0, function* () {
                  const e = yield this.getSchema();
                  return !t || t.length < 1 || !e
                    ? []
                    : (0, s.getDiagnostics)(t, e, h);
                })),
              (this.getHover = (e, t, h) =>
                i(this, void 0, void 0, function* () {
                  return (0,
                  s.getHoverInformation)(yield this.getSchema(), t, h);
                })),
              (this._schemaConfig = a),
              h && (this._parser = h),
              n && (this._schemaLoader = n),
              r && (this._schemaBuilder = r),
              o && (this._schemaString = o),
              c && (this._parseOptions = c);
          }
          get schema() {
            return this._schema;
          }
          getSchema() {
            return i(this, void 0, void 0, function* () {
              return this.schema ? this.schema : this.loadSchema();
            });
          }
          setSchema(e) {
            return i(this, void 0, void 0, function* () {
              (this._schemaString = e), yield this.loadSchema();
            });
          }
          getSchemaResponse() {
            return i(this, void 0, void 0, function* () {
              return this._schemaResponse
                ? this._schemaResponse
                : this.loadSchemaResponse();
            });
          }
          loadSchemaResponse() {
            var e;
            return i(this, void 0, void 0, function* () {
              return this._schemaString
                ? 'string' == typeof this._schemaString
                  ? this.parse(this._schemaString)
                  : this._schemaString
                : (
                    null === (e = this._schemaConfig) || void 0 === e
                      ? void 0
                      : e.uri
                  )
                ? ((this._schemaResponse = yield this._schemaLoader(
                    this._schemaConfig
                  )),
                  this._schemaResponse)
                : null;
            });
          }
          loadSchema() {
            return i(this, void 0, void 0, function* () {
              const e = yield this.loadSchemaResponse();
              return e
                ? ((this._schema = this._schemaBuilder(
                    e,
                    this._schemaConfig.buildSchemaOptions
                  )),
                  this._schema)
                : null;
            });
          }
          parse(e, s) {
            return i(this, void 0, void 0, function* () {
              return this._parser(e, s || this._parseOptions);
            });
          }
        }
        exports.LanguageService = h;
      },
      {
        graphql: 'lFnJ',
        'graphql-language-service-interface': 'UuQT',
        './schemaLoader': 'FW8M',
      },
    ],
    cZll: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.FileChangeTypeKind = void 0);
        const e = { Created: 1, Changed: 2, Deleted: 3 };
        exports.FileChangeTypeKind = e;
      },
      {},
    ],
    li70: [
      function (require, module, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: !0 });
        var e = require('./types');
        Object.keys(e).forEach(function (r) {
          'default' !== r &&
            '__esModule' !== r &&
            ((r in exports && exports[r] === e[r]) ||
              Object.defineProperty(exports, r, {
                enumerable: !0,
                get: function () {
                  return e[r];
                },
              }));
        });
        var r = require('./schemaLoader');
        Object.keys(r).forEach(function (e) {
          'default' !== e &&
            '__esModule' !== e &&
            ((e in exports && exports[e] === r[e]) ||
              Object.defineProperty(exports, e, {
                enumerable: !0,
                get: function () {
                  return r[e];
                },
              }));
        });
        var t = require('./LanguageService');
        Object.keys(t).forEach(function (e) {
          'default' !== e &&
            '__esModule' !== e &&
            ((e in exports && exports[e] === t[e]) ||
              Object.defineProperty(exports, e, {
                enumerable: !0,
                get: function () {
                  return t[e];
                },
              }));
        });
        var n = require('graphql-language-service-interface');
        Object.keys(n).forEach(function (e) {
          'default' !== e &&
            '__esModule' !== e &&
            ((e in exports && exports[e] === n[e]) ||
              Object.defineProperty(exports, e, {
                enumerable: !0,
                get: function () {
                  return n[e];
                },
              }));
        });
        var o = require('graphql-language-service-parser');
        Object.keys(o).forEach(function (e) {
          'default' !== e &&
            '__esModule' !== e &&
            ((e in exports && exports[e] === o[e]) ||
              Object.defineProperty(exports, e, {
                enumerable: !0,
                get: function () {
                  return o[e];
                },
              }));
        });
        var u = require('graphql-language-service-types');
        Object.keys(u).forEach(function (e) {
          'default' !== e &&
            '__esModule' !== e &&
            ((e in exports && exports[e] === u[e]) ||
              Object.defineProperty(exports, e, {
                enumerable: !0,
                get: function () {
                  return u[e];
                },
              }));
        });
      },
      {
        './types': 'pE3E',
        './schemaLoader': 'FW8M',
        './LanguageService': 'yDBM',
        'graphql-language-service-interface': 'UuQT',
        'graphql-language-service-parser': 'WgdC',
        'graphql-language-service-types': 'cZll',
      },
    ],
    O3mK: [
      function (require, module, exports) {
        'use strict';
        function e(e) {
          return {
            startLineNumber: e.start.line + 1,
            startColumn: e.start.character + 1,
            endLineNumber: e.end.line + 1,
            endColumn: e.end.character + 1,
          };
        }
        function t(e) {
          return { line: e.lineNumber - 1, character: e.column - 1 };
        }
        function r(t, r) {
          return {
            label: t.label,
            insertText:
              t.insertText ||
              (t.label.startsWith('$') ? t.label.substring(1) : t.label),
            sortText: t.sortText,
            filterText: t.filterText,
            documentation: t.documentation,
            detail: t.detail,
            range: r ? e(r) : void 0,
            kind: t.kind,
          };
        }
        function n(e) {
          return {
            startLineNumber: e.range.start.line + 1,
            endLineNumber: e.range.end.line + 1,
            startColumn: e.range.start.character + 1,
            endColumn: e.range.end.character,
            message: e.message,
            severity: 5,
            code: e.code || void 0,
          };
        }
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.toMarkerData = exports.toCompletion = exports.toGraphQLPosition = exports.toMonacoRange = void 0),
          (exports.toMonacoRange = e),
          (exports.toGraphQLPosition = t),
          (exports.toCompletion = r),
          (exports.toMarkerData = n);
      },
      {},
    ],
    sTmO: [
      function (require, module, exports) {
        var define;
        var global = arguments[3];
        var e,
          t = arguments[3];
        function n(e) {
          return S(e) || D(e) || A(e) || b();
        }
        function r(e, t, n) {
          return (r =
            'undefined' != typeof Reflect && Reflect.get
              ? Reflect.get
              : function (e, t, n) {
                  var r = u(e, t);
                  if (r) {
                    var a = Object.getOwnPropertyDescriptor(r, t);
                    return a.get ? a.get.call(n) : a.value;
                  }
                })(e, t, n || e);
        }
        function u(e, t) {
          for (
            ;
            !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = h(e));

          );
          return e;
        }
        function a(e, t) {
          if ('function' != typeof t && null !== t)
            throw new TypeError(
              'Super expression must either be null or a function'
            );
          (e.prototype = Object.create(t && t.prototype, {
            constructor: { value: e, writable: !0, configurable: !0 },
          })),
            t && d(e, t);
        }
        function i(e) {
          var t = p();
          return function () {
            var n,
              r = h(e);
            if (t) {
              var u = h(this).constructor;
              n = Reflect.construct(r, arguments, u);
            } else n = r.apply(this, arguments);
            return o(this, n);
          };
        }
        function o(e, t) {
          return !t || ('object' !== k(t) && 'function' != typeof t) ? s(e) : t;
        }
        function s(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        }
        function l(e) {
          var t = 'function' == typeof Map ? new Map() : void 0;
          return (l = function (e) {
            if (null === e || !f(e)) return e;
            if ('function' != typeof e)
              throw new TypeError(
                'Super expression must either be null or a function'
              );
            if (void 0 !== t) {
              if (t.has(e)) return t.get(e);
              t.set(e, n);
            }
            function n() {
              return c(e, arguments, h(this).constructor);
            }
            return (
              (n.prototype = Object.create(e.prototype, {
                constructor: {
                  value: n,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
              d(n, e)
            );
          })(e);
        }
        function c(e, t, n) {
          return (c = p()
            ? Reflect.construct
            : function (e, t, n) {
                var r = [null];
                r.push.apply(r, t);
                var u = new (Function.bind.apply(e, r))();
                return n && d(u, n.prototype), u;
              }).apply(null, arguments);
        }
        function p() {
          if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ('function' == typeof Proxy) return !0;
          try {
            return (
              Date.prototype.toString.call(
                Reflect.construct(Date, [], function () {})
              ),
              !0
            );
          } catch (e) {
            return !1;
          }
        }
        function f(e) {
          return -1 !== Function.toString.call(e).indexOf('[native code]');
        }
        function d(e, t) {
          return (d =
            Object.setPrototypeOf ||
            function (e, t) {
              return (e.__proto__ = t), e;
            })(e, t);
        }
        function h(e) {
          return (h = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (e) {
                return e.__proto__ || Object.getPrototypeOf(e);
              })(e);
        }
        function g(e, t) {
          var n;
          if ('undefined' == typeof Symbol || null == e[Symbol.iterator]) {
            if (
              Array.isArray(e) ||
              (n = A(e)) ||
              (t && e && 'number' == typeof e.length)
            ) {
              n && (e = n);
              var r = 0,
                u = function () {};
              return {
                s: u,
                n: function () {
                  return r >= e.length
                    ? { done: !0 }
                    : { done: !1, value: e[r++] };
                },
                e: function (e) {
                  throw e;
                },
                f: u,
              };
            }
            throw new TypeError(
              'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
            );
          }
          var a,
            i = !0,
            o = !1;
          return {
            s: function () {
              n = e[Symbol.iterator]();
            },
            n: function () {
              var e = n.next();
              return (i = e.done), e;
            },
            e: function (e) {
              (o = !0), (a = e);
            },
            f: function () {
              try {
                i || null == n.return || n.return();
              } finally {
                if (o) throw a;
              }
            },
          };
        }
        function m(e) {
          return v(e) || D(e) || A(e) || y();
        }
        function y() {
          throw new TypeError(
            'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
          );
        }
        function D(e) {
          if ('undefined' != typeof Symbol && Symbol.iterator in Object(e))
            return Array.from(e);
        }
        function v(e) {
          if (Array.isArray(e)) return F(e);
        }
        function E(e, t, n) {
          return (
            t in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        function C(e, t) {
          return S(e) || x(e, t) || A(e, t) || b();
        }
        function b() {
          throw new TypeError(
            'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
          );
        }
        function A(e, t) {
          if (e) {
            if ('string' == typeof e) return F(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return (
              'Object' === n && e.constructor && (n = e.constructor.name),
              'Map' === n || 'Set' === n
                ? Array.from(e)
                : 'Arguments' === n ||
                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                ? F(e, t)
                : void 0
            );
          }
        }
        function F(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
          return r;
        }
        function x(e, t) {
          if ('undefined' != typeof Symbol && Symbol.iterator in Object(e)) {
            var n = [],
              r = !0,
              u = !1,
              a = void 0;
            try {
              for (
                var i, o = e[Symbol.iterator]();
                !(r = (i = o.next()).done) &&
                (n.push(i.value), !t || n.length !== t);
                r = !0
              );
            } catch (s) {
              (u = !0), (a = s);
            } finally {
              try {
                r || null == o.return || o.return();
              } finally {
                if (u) throw a;
              }
            }
            return n;
          }
        }
        function S(e) {
          if (Array.isArray(e)) return e;
        }
        function w(e, t) {
          if (!(e instanceof t))
            throw new TypeError('Cannot call a class as a function');
        }
        function B(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1),
              (r.configurable = !0),
              'value' in r && (r.writable = !0),
              Object.defineProperty(e, r.key, r);
          }
        }
        function T(e, t, n) {
          return t && B(e.prototype, t), n && B(e, n), e;
        }
        function k(e) {
          return (k =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e;
                })(e);
        }
        !(function (t, n) {
          'object' ==
            ('undefined' == typeof exports ? 'undefined' : k(exports)) &&
          'undefined' != typeof module
            ? (module.exports = n())
            : 'function' == typeof e && e.amd
            ? e(n)
            : ((t =
                'undefined' != typeof globalThis
                  ? globalThis
                  : t || self).prettier = n());
        })(this, function () {
          'use strict';
          function e(e, t) {
            if (null == e) return {};
            var n,
              r,
              u = {},
              a = Object.keys(e);
            for (r = 0; r < a.length; r++)
              (n = a[r]), t.indexOf(n) >= 0 || (u[n] = e[n]);
            return u;
          }
          function u(e, t) {
            return (
              t || (t = e.slice(0)),
              Object.freeze(
                Object.defineProperties(e, { raw: { value: Object.freeze(t) } })
              )
            );
          }
          var o = '2.2.1';
          function s() {}
          function c(e, t, n, r, u) {
            for (var a = 0, i = t.length, o = 0, s = 0; a < i; a++) {
              var l = t[a];
              if (l.removed) {
                if (
                  ((l.value = e.join(r.slice(s, s + l.count))),
                  (s += l.count),
                  a && t[a - 1].added)
                ) {
                  var c = t[a - 1];
                  (t[a - 1] = t[a]), (t[a] = c);
                }
              } else {
                if (!l.added && u) {
                  var p = n.slice(o, o + l.count);
                  (p = p.map(function (e, t) {
                    var n = r[s + t];
                    return n.length > e.length ? n : e;
                  })),
                    (l.value = e.join(p));
                } else l.value = e.join(n.slice(o, o + l.count));
                (o += l.count), l.added || (s += l.count);
              }
            }
            var f = t[i - 1];
            return (
              i > 1 &&
                'string' == typeof f.value &&
                (f.added || f.removed) &&
                e.equals('', f.value) &&
                ((t[i - 2].value += f.value), t.pop()),
              t
            );
          }
          function p(e) {
            return { newPos: e.newPos, components: e.components.slice(0) };
          }
          s.prototype = {
            diff: function (e, t) {
              var n =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : {},
                r = n.callback;
              'function' == typeof n && ((r = n), (n = {})), (this.options = n);
              var u = this;
              function a(e) {
                return r
                  ? (setTimeout(function () {
                      r(void 0, e);
                    }, 0),
                    !0)
                  : e;
              }
              (e = this.castInput(e)),
                (t = this.castInput(t)),
                (e = this.removeEmpty(this.tokenize(e)));
              var i = (t = this.removeEmpty(this.tokenize(t))).length,
                o = e.length,
                s = 1,
                l = i + o,
                f = [{ newPos: -1, components: [] }],
                d = this.extractCommon(f[0], t, e, 0);
              if (f[0].newPos + 1 >= i && d + 1 >= o)
                return a([{ value: this.join(t), count: t.length }]);
              function h() {
                for (var n = -1 * s; n <= s; n += 2) {
                  var r = void 0,
                    l = f[n - 1],
                    d = f[n + 1],
                    h = (d ? d.newPos : 0) - n;
                  l && (f[n - 1] = void 0);
                  var g = l && l.newPos + 1 < i,
                    m = d && 0 <= h && h < o;
                  if (g || m) {
                    if (
                      (!g || (m && l.newPos < d.newPos)
                        ? ((r = p(d)),
                          u.pushComponent(r.components, void 0, !0))
                        : ((r = l).newPos++,
                          u.pushComponent(r.components, !0, void 0)),
                      (h = u.extractCommon(r, t, e, n)),
                      r.newPos + 1 >= i && h + 1 >= o)
                    )
                      return a(c(u, r.components, t, e, u.useLongestToken));
                    f[n] = r;
                  } else f[n] = void 0;
                }
                s++;
              }
              if (r)
                !(function e() {
                  setTimeout(function () {
                    if (s > l) return r();
                    h() || e();
                  }, 0);
                })();
              else
                for (; s <= l; ) {
                  var g = h();
                  if (g) return g;
                }
            },
            pushComponent: function (e, t, n) {
              var r = e[e.length - 1];
              r && r.added === t && r.removed === n
                ? (e[e.length - 1] = {
                    count: r.count + 1,
                    added: t,
                    removed: n,
                  })
                : e.push({ count: 1, added: t, removed: n });
            },
            extractCommon: function (e, t, n, r) {
              for (
                var u = t.length, a = n.length, i = e.newPos, o = i - r, s = 0;
                i + 1 < u && o + 1 < a && this.equals(t[i + 1], n[o + 1]);

              )
                i++, o++, s++;
              return s && e.components.push({ count: s }), (e.newPos = i), o;
            },
            equals: function (e, t) {
              return this.options.comparator
                ? this.options.comparator(e, t)
                : e === t ||
                    (this.options.ignoreCase &&
                      e.toLowerCase() === t.toLowerCase());
            },
            removeEmpty: function (e) {
              for (var t = [], n = 0; n < e.length; n++) e[n] && t.push(e[n]);
              return t;
            },
            castInput: function (e) {
              return e;
            },
            tokenize: function (e) {
              return e.split('');
            },
            join: function (e) {
              return e.join('');
            },
          };
          var f = new s();
          function d(e, t) {
            if ('function' == typeof e) t.callback = e;
            else if (e) for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            return t;
          }
          var y = /^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,
            D = /\S/,
            v = new s();
          (v.equals = function (e, t) {
            return (
              this.options.ignoreCase &&
                ((e = e.toLowerCase()), (t = t.toLowerCase())),
              e === t ||
                (this.options.ignoreWhitespace && !D.test(e) && !D.test(t))
            );
          }),
            (v.tokenize = function (e) {
              for (
                var t = e.split(/([^\S\r\n]+|[()[\]{}'"\r\n]|\b)/), n = 0;
                n < t.length - 1;
                n++
              )
                !t[n + 1] &&
                  t[n + 2] &&
                  y.test(t[n]) &&
                  y.test(t[n + 2]) &&
                  ((t[n] += t[n + 2]), t.splice(n + 1, 2), n--);
              return t;
            });
          var b = new s();
          function A(e, t, n) {
            return b.diff(e, t, n);
          }
          b.tokenize = function (e) {
            var t = [],
              n = e.split(/(\n|\r\n)/);
            n[n.length - 1] || n.pop();
            for (var r = 0; r < n.length; r++) {
              var u = n[r];
              r % 2 && !this.options.newlineIsToken
                ? (t[t.length - 1] += u)
                : (this.options.ignoreWhitespace && (u = u.trim()), t.push(u));
            }
            return t;
          };
          var F = new s();
          F.tokenize = function (e) {
            return e.split(/(\S.+?[.!?])(?=\s+|$)/);
          };
          var x = new s();
          function S(e) {
            return (S =
              'function' == typeof Symbol && 'symbol' == k(Symbol.iterator)
                ? function (e) {
                    return k(e);
                  }
                : function (e) {
                    return e &&
                      'function' == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? 'symbol'
                      : k(e);
                  })(e);
          }
          function B(e) {
            return (
              (function (e) {
                if (Array.isArray(e)) return N(e);
              })(e) ||
              (function (e) {
                if (
                  'undefined' != typeof Symbol &&
                  Symbol.iterator in Object(e)
                )
                  return Array.from(e);
              })(e) ||
              (function (e, t) {
                if (e) {
                  if ('string' == typeof e) return N(e, t);
                  var n = Object.prototype.toString.call(e).slice(8, -1);
                  return (
                    'Object' === n && e.constructor && (n = e.constructor.name),
                    'Map' === n || 'Set' === n
                      ? Array.from(e)
                      : 'Arguments' === n ||
                        /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                      ? N(e, t)
                      : void 0
                  );
                }
              })(e) ||
              (function () {
                throw new TypeError(
                  'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
                );
              })()
            );
          }
          function N(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r;
          }
          x.tokenize = function (e) {
            return e.split(/([{}:;,]|\s+)/);
          };
          var O = Object.prototype.toString,
            P = new s();
          function M(e, t, n, r, u) {
            var a, i;
            for (
              t = t || [], n = n || [], r && (e = r(u, e)), a = 0;
              a < t.length;
              a += 1
            )
              if (t[a] === e) return n[a];
            if ('[object Array]' === O.call(e)) {
              for (
                t.push(e), i = new Array(e.length), n.push(i), a = 0;
                a < e.length;
                a += 1
              )
                i[a] = M(e[a], t, n, r, u);
              return t.pop(), n.pop(), i;
            }
            if (
              (e && e.toJSON && (e = e.toJSON()),
              'object' === S(e) && null !== e)
            ) {
              t.push(e), (i = {}), n.push(i);
              var o,
                s = [];
              for (o in e) e.hasOwnProperty(o) && s.push(o);
              for (s.sort(), a = 0; a < s.length; a += 1)
                i[(o = s[a])] = M(e[o], t, n, r, o);
              t.pop(), n.pop();
            } else i = e;
            return i;
          }
          (P.useLongestToken = !0),
            (P.tokenize = b.tokenize),
            (P.castInput = function (e) {
              var t = this.options,
                n = t.undefinedReplacement,
                r = t.stringifyReplacer,
                u =
                  void 0 === r
                    ? function (e, t) {
                        return void 0 === t ? n : t;
                      }
                    : r;
              return 'string' == typeof e
                ? e
                : JSON.stringify(M(e, null, null, u), u, '  ');
            }),
            (P.equals = function (e, t) {
              return s.prototype.equals.call(
                P,
                e.replace(/,([\r\n])/g, '$1'),
                t.replace(/,([\r\n])/g, '$1')
              );
            });
          var I = new s();
          function j(e) {
            var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              n = e.split(/\r\n|[\n\v\f\r\x85]/),
              r = e.match(/\r\n|[\n\v\f\r\x85]/g) || [],
              u = [],
              a = 0;
            function i() {
              var e = {};
              for (u.push(e); a < n.length; ) {
                var r = n[a];
                if (/^(\-\-\-|\+\+\+|@@)\s/.test(r)) break;
                var i = /^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(r);
                i && (e.index = i[1]), a++;
              }
              for (o(e), o(e), e.hunks = []; a < n.length; ) {
                var l = n[a];
                if (/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(l)) break;
                if (/^@@/.test(l)) e.hunks.push(s());
                else {
                  if (l && t.strict)
                    throw new Error(
                      'Unknown line ' + (a + 1) + ' ' + JSON.stringify(l)
                    );
                  a++;
                }
              }
            }
            function o(e) {
              var t = /^(---|\+\+\+)\s+(.*)$/.exec(n[a]);
              if (t) {
                var r = '---' === t[1] ? 'old' : 'new',
                  u = t[2].split('\t', 2),
                  i = u[0].replace(/\\\\/g, '\\');
                /^".*"$/.test(i) && (i = i.substr(1, i.length - 2)),
                  (e[r + 'FileName'] = i),
                  (e[r + 'Header'] = (u[1] || '').trim()),
                  a++;
              }
            }
            function s() {
              var e = a,
                u = n[a++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),
                i = {
                  oldStart: +u[1],
                  oldLines: void 0 === u[2] ? 1 : +u[2],
                  newStart: +u[3],
                  newLines: void 0 === u[4] ? 1 : +u[4],
                  lines: [],
                  linedelimiters: [],
                };
              0 === i.oldLines && (i.oldStart += 1),
                0 === i.newLines && (i.newStart += 1);
              for (
                var o = 0, s = 0;
                a < n.length &&
                !(
                  0 === n[a].indexOf('--- ') &&
                  a + 2 < n.length &&
                  0 === n[a + 1].indexOf('+++ ') &&
                  0 === n[a + 2].indexOf('@@')
                );
                a++
              ) {
                var l = 0 == n[a].length && a != n.length - 1 ? ' ' : n[a][0];
                if ('+' !== l && '-' !== l && ' ' !== l && '\\' !== l) break;
                i.lines.push(n[a]),
                  i.linedelimiters.push(r[a] || '\n'),
                  '+' === l ? o++ : '-' === l ? s++ : ' ' === l && (o++, s++);
              }
              if (
                (o || 1 !== i.newLines || (i.newLines = 0),
                s || 1 !== i.oldLines || (i.oldLines = 0),
                t.strict)
              ) {
                if (o !== i.newLines)
                  throw new Error(
                    'Added line count did not match for hunk at line ' + (e + 1)
                  );
                if (s !== i.oldLines)
                  throw new Error(
                    'Removed line count did not match for hunk at line ' +
                      (e + 1)
                  );
              }
              return i;
            }
            for (; a < n.length; ) i();
            return u;
          }
          function L(e, t, n) {
            var r = !0,
              u = !1,
              a = !1,
              i = 1;
            return function o() {
              if (r && !a) {
                if ((u ? i++ : (r = !1), e + i <= n)) return i;
                a = !0;
              }
              if (!u) return a || (r = !0), t <= e - i ? -i++ : ((u = !0), o());
            };
          }
          function _(e, t) {
            var n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
            if (('string' == typeof t && (t = j(t)), Array.isArray(t))) {
              if (t.length > 1)
                throw new Error('applyPatch only works with a single input.');
              t = t[0];
            }
            var r,
              u,
              a = e.split(/\r\n|[\n\v\f\r\x85]/),
              i = e.match(/\r\n|[\n\v\f\r\x85]/g) || [],
              o = t.hunks,
              s =
                n.compareLine ||
                function (e, t, n, r) {
                  return t === r;
                },
              l = 0,
              c = n.fuzzFactor || 0,
              p = 0,
              f = 0;
            function d(e, t) {
              for (var n = 0; n < e.lines.length; n++) {
                var r = e.lines[n],
                  u = r.length > 0 ? r[0] : ' ',
                  i = r.length > 0 ? r.substr(1) : r;
                if (' ' === u || '-' === u) {
                  if (!s(t + 1, a[t], u, i) && ++l > c) return !1;
                  t++;
                }
              }
              return !0;
            }
            for (var h = 0; h < o.length; h++) {
              for (
                var g = o[h],
                  m = a.length - g.oldLines,
                  y = 0,
                  D = f + g.oldStart - 1,
                  v = L(D, p, m);
                void 0 !== y;
                y = v()
              )
                if (d(g, D + y)) {
                  g.offset = f += y;
                  break;
                }
              if (void 0 === y) return !1;
              p = g.offset + g.oldStart + g.oldLines;
            }
            for (var E = 0, C = 0; C < o.length; C++) {
              var b = o[C],
                A = b.oldStart + b.offset + E - 1;
              E += b.newLines - b.oldLines;
              for (var F = 0; F < b.lines.length; F++) {
                var x = b.lines[F],
                  S = x.length > 0 ? x[0] : ' ',
                  w = x.length > 0 ? x.substr(1) : x,
                  B = b.linedelimiters[F];
                if (' ' === S) A++;
                else if ('-' === S) a.splice(A, 1), i.splice(A, 1);
                else if ('+' === S) a.splice(A, 0, w), i.splice(A, 0, B), A++;
                else if ('\\' === S) {
                  var T = b.lines[F - 1] ? b.lines[F - 1][0] : null;
                  '+' === T ? (r = !0) : '-' === T && (u = !0);
                }
              }
            }
            if (r) for (; !a[a.length - 1]; ) a.pop(), i.pop();
            else u && (a.push(''), i.push('\n'));
            for (var k = 0; k < a.length - 1; k++) a[k] = a[k] + i[k];
            return a.join('');
          }
          function R(e, t, n, r, u, a, i) {
            i || (i = {}), void 0 === i.context && (i.context = 4);
            var o = A(n, r, i);
            function s(e) {
              return e.map(function (e) {
                return ' ' + e;
              });
            }
            o.push({ value: '', lines: [] });
            for (
              var l = [],
                c = 0,
                p = 0,
                f = [],
                d = 1,
                h = 1,
                g = function (e) {
                  var t = o[e],
                    u = t.lines || t.value.replace(/\n$/, '').split('\n');
                  if (((t.lines = u), t.added || t.removed)) {
                    var a;
                    if (!c) {
                      var g = o[e - 1];
                      (c = d),
                        (p = h),
                        g &&
                          ((f =
                            i.context > 0 ? s(g.lines.slice(-i.context)) : []),
                          (c -= f.length),
                          (p -= f.length));
                    }
                    (a = f).push.apply(
                      a,
                      B(
                        u.map(function (e) {
                          return (t.added ? '+' : '-') + e;
                        })
                      )
                    ),
                      t.added ? (h += u.length) : (d += u.length);
                  } else {
                    if (c)
                      if (u.length <= 2 * i.context && e < o.length - 2) {
                        var m;
                        (m = f).push.apply(m, B(s(u)));
                      } else {
                        var y,
                          D = Math.min(u.length, i.context);
                        (y = f).push.apply(y, B(s(u.slice(0, D))));
                        var v = {
                          oldStart: c,
                          oldLines: d - c + D,
                          newStart: p,
                          newLines: h - p + D,
                          lines: f,
                        };
                        if (e >= o.length - 2 && u.length <= i.context) {
                          var E = /\n$/.test(n),
                            C = /\n$/.test(r),
                            b = 0 == u.length && f.length > v.oldLines;
                          !E &&
                            b &&
                            n.length > 0 &&
                            f.splice(
                              v.oldLines,
                              0,
                              '\\ No newline at end of file'
                            ),
                            ((E || b) && C) ||
                              f.push('\\ No newline at end of file');
                        }
                        l.push(v), (c = 0), (p = 0), (f = []);
                      }
                    (d += u.length), (h += u.length);
                  }
                },
                m = 0;
              m < o.length;
              m++
            )
              g(m);
            return {
              oldFileName: e,
              newFileName: t,
              oldHeader: u,
              newHeader: a,
              hunks: l,
            };
          }
          function $(e, t, n, r, u, a, i) {
            return (function (e) {
              var t = [];
              e.oldFileName == e.newFileName &&
                t.push('Index: ' + e.oldFileName),
                t.push(
                  '==================================================================='
                ),
                t.push(
                  '--- ' +
                    e.oldFileName +
                    (void 0 === e.oldHeader ? '' : '\t' + e.oldHeader)
                ),
                t.push(
                  '+++ ' +
                    e.newFileName +
                    (void 0 === e.newHeader ? '' : '\t' + e.newHeader)
                );
              for (var n = 0; n < e.hunks.length; n++) {
                var r = e.hunks[n];
                0 === r.oldLines && (r.oldStart -= 1),
                  0 === r.newLines && (r.newStart -= 1),
                  t.push(
                    '@@ -' +
                      r.oldStart +
                      ',' +
                      r.oldLines +
                      ' +' +
                      r.newStart +
                      ',' +
                      r.newLines +
                      ' @@'
                  ),
                  t.push.apply(t, r.lines);
              }
              return t.join('\n') + '\n';
            })(R(e, t, n, r, u, a, i));
          }
          function V(e, t) {
            if (t.length > e.length) return !1;
            for (var n = 0; n < t.length; n++) if (t[n] !== e[n]) return !1;
            return !0;
          }
          function q(e) {
            var t = (function e(t) {
                var n = 0,
                  r = 0;
                return (
                  t.forEach(function (t) {
                    if ('string' != typeof t) {
                      var u = e(t.mine),
                        a = e(t.theirs);
                      void 0 !== n &&
                        (u.oldLines === a.oldLines
                          ? (n += u.oldLines)
                          : (n = void 0)),
                        void 0 !== r &&
                          (u.newLines === a.newLines
                            ? (r += u.newLines)
                            : (r = void 0));
                    } else void 0 === r || ('+' !== t[0] && ' ' !== t[0]) || r++, void 0 === n || ('-' !== t[0] && ' ' !== t[0]) || n++;
                  }),
                  { oldLines: n, newLines: r }
                );
              })(e.lines),
              n = t.oldLines,
              r = t.newLines;
            void 0 !== n ? (e.oldLines = n) : delete e.oldLines,
              void 0 !== r ? (e.newLines = r) : delete e.newLines;
          }
          function W(e, t) {
            if ('string' == typeof e) {
              if (/^@@/m.test(e) || /^Index:/m.test(e)) return j(e)[0];
              if (!t)
                throw new Error(
                  'Must provide a base reference or pass in a patch'
                );
              return R(void 0, void 0, t, e);
            }
            return e;
          }
          function U(e) {
            return e.newFileName && e.newFileName !== e.oldFileName;
          }
          function J(e, t, n) {
            return t === n ? t : ((e.conflict = !0), { mine: t, theirs: n });
          }
          function z(e, t) {
            return (
              e.oldStart < t.oldStart && e.oldStart + e.oldLines < t.oldStart
            );
          }
          function G(e, t) {
            return {
              oldStart: e.oldStart,
              oldLines: e.oldLines,
              newStart: e.newStart + t,
              newLines: e.newLines,
              lines: e.lines,
            };
          }
          function H(e, t, n, r, u) {
            var a = { offset: t, lines: n, index: 0 },
              i = { offset: r, lines: u, index: 0 };
            for (
              Q(e, a, i), Q(e, i, a);
              a.index < a.lines.length && i.index < i.lines.length;

            ) {
              var o,
                s = a.lines[a.index],
                l = i.lines[i.index];
              if (
                ('-' !== s[0] && '+' !== s[0]) ||
                ('-' !== l[0] && '+' !== l[0])
              )
                if ('+' === s[0] && ' ' === l[0])
                  (o = e.lines).push.apply(o, B(ee(a)));
                else if ('+' === l[0] && ' ' === s[0]) {
                  var c;
                  (c = e.lines).push.apply(c, B(ee(i)));
                } else
                  '-' === s[0] && ' ' === l[0]
                    ? Y(e, a, i)
                    : '-' === l[0] && ' ' === s[0]
                    ? Y(e, i, a, !0)
                    : s === l
                    ? (e.lines.push(s), a.index++, i.index++)
                    : K(e, ee(a), ee(i));
              else X(e, a, i);
            }
            Z(e, a), Z(e, i), q(e);
          }
          function X(e, t, n) {
            var r = ee(t),
              u = ee(n);
            if (te(r) && te(u)) {
              var a, i;
              if (V(r, u) && ne(n, r, r.length - u.length))
                return void (a = e.lines).push.apply(a, B(r));
              if (V(u, r) && ne(t, u, u.length - r.length))
                return void (i = e.lines).push.apply(i, B(u));
            } else if (
              (function (e, t) {
                return e.length === t.length && V(e, t);
              })(r, u)
            ) {
              var o;
              return void (o = e.lines).push.apply(o, B(r));
            }
            K(e, r, u);
          }
          function Y(e, t, n, r) {
            var u,
              a = ee(t),
              i = (function (e, t) {
                for (
                  var n = [], r = [], u = 0, a = !1, i = !1;
                  u < t.length && e.index < e.lines.length;

                ) {
                  var o = e.lines[e.index],
                    s = t[u];
                  if ('+' === s[0]) break;
                  if (((a = a || ' ' !== o[0]), r.push(s), u++, '+' === o[0]))
                    for (i = !0; '+' === o[0]; )
                      n.push(o), (o = e.lines[++e.index]);
                  s.substr(1) === o.substr(1)
                    ? (n.push(o), e.index++)
                    : (i = !0);
                }
                if (('+' === (t[u] || '')[0] && a && (i = !0), i)) return n;
                for (; u < t.length; ) r.push(t[u++]);
                return { merged: r, changes: n };
              })(n, a);
            i.merged
              ? (u = e.lines).push.apply(u, B(i.merged))
              : K(e, r ? i : a, r ? a : i);
          }
          function K(e, t, n) {
            (e.conflict = !0),
              e.lines.push({ conflict: !0, mine: t, theirs: n });
          }
          function Q(e, t, n) {
            for (; t.offset < n.offset && t.index < t.lines.length; ) {
              var r = t.lines[t.index++];
              e.lines.push(r), t.offset++;
            }
          }
          function Z(e, t) {
            for (; t.index < t.lines.length; ) {
              var n = t.lines[t.index++];
              e.lines.push(n);
            }
          }
          function ee(e) {
            for (
              var t = [], n = e.lines[e.index][0];
              e.index < e.lines.length;

            ) {
              var r = e.lines[e.index];
              if (('-' === n && '+' === r[0] && (n = '+'), n !== r[0])) break;
              t.push(r), e.index++;
            }
            return t;
          }
          function te(e) {
            return e.reduce(function (e, t) {
              return e && '-' === t[0];
            }, !0);
          }
          function ne(e, t, n) {
            for (var r = 0; r < n; r++) {
              var u = t[t.length - n + r].substr(1);
              if (e.lines[e.index + r] !== ' ' + u) return !1;
            }
            return (e.index += n), !0;
          }
          function re(e) {
            var t = e;
            return (t = (t = (t = t.replace(/&/g, '&amp;')).replace(
              /</g,
              '&lt;'
            )).replace(/>/g, '&gt;')).replace(/"/g, '&quot;');
          }
          (I.tokenize = function (e) {
            return e.slice();
          }),
            (I.join = I.removeEmpty = function (e) {
              return e;
            });
          var ue = Object.freeze({
            __proto__: null,
            Diff: s,
            applyPatch: _,
            applyPatches: function (e, t) {
              'string' == typeof e && (e = j(e));
              var n = 0;
              !(function r() {
                var u = e[n++];
                if (!u) return t.complete();
                t.loadFile(u, function (e, n) {
                  if (e) return t.complete(e);
                  var a = _(n, u, t);
                  t.patched(u, a, function (e) {
                    if (e) return t.complete(e);
                    r();
                  });
                });
              })();
            },
            canonicalize: M,
            convertChangesToDMP: function (e) {
              for (var t, n, r = [], u = 0; u < e.length; u++)
                (n = (t = e[u]).added ? 1 : t.removed ? -1 : 0),
                  r.push([n, t.value]);
              return r;
            },
            convertChangesToXML: function (e) {
              for (var t = [], n = 0; n < e.length; n++) {
                var r = e[n];
                r.added ? t.push('<ins>') : r.removed && t.push('<del>'),
                  t.push(re(r.value)),
                  r.added ? t.push('</ins>') : r.removed && t.push('</del>');
              }
              return t.join('');
            },
            createPatch: function (e, t, n, r, u, a) {
              return $(e, e, t, n, r, u, a);
            },
            createTwoFilesPatch: $,
            diffArrays: function (e, t, n) {
              return I.diff(e, t, n);
            },
            diffChars: function (e, t, n) {
              return f.diff(e, t, n);
            },
            diffCss: function (e, t, n) {
              return x.diff(e, t, n);
            },
            diffJson: function (e, t, n) {
              return P.diff(e, t, n);
            },
            diffLines: A,
            diffSentences: function (e, t, n) {
              return F.diff(e, t, n);
            },
            diffTrimmedLines: function (e, t, n) {
              var r = d(n, { ignoreWhitespace: !0 });
              return b.diff(e, t, r);
            },
            diffWords: function (e, t, n) {
              return (n = d(n, { ignoreWhitespace: !0 })), v.diff(e, t, n);
            },
            diffWordsWithSpace: function (e, t, n) {
              return v.diff(e, t, n);
            },
            merge: function (e, t, n) {
              (e = W(e, n)), (t = W(t, n));
              var r = {};
              (e.index || t.index) && (r.index = e.index || t.index),
                (e.newFileName || t.newFileName) &&
                  (U(e)
                    ? U(t)
                      ? ((r.oldFileName = J(r, e.oldFileName, t.oldFileName)),
                        (r.newFileName = J(r, e.newFileName, t.newFileName)),
                        (r.oldHeader = J(r, e.oldHeader, t.oldHeader)),
                        (r.newHeader = J(r, e.newHeader, t.newHeader)))
                      : ((r.oldFileName = e.oldFileName),
                        (r.newFileName = e.newFileName),
                        (r.oldHeader = e.oldHeader),
                        (r.newHeader = e.newHeader))
                    : ((r.oldFileName = t.oldFileName || e.oldFileName),
                      (r.newFileName = t.newFileName || e.newFileName),
                      (r.oldHeader = t.oldHeader || e.oldHeader),
                      (r.newHeader = t.newHeader || e.newHeader))),
                (r.hunks = []);
              for (
                var u = 0, a = 0, i = 0, o = 0;
                u < e.hunks.length || a < t.hunks.length;

              ) {
                var s = e.hunks[u] || { oldStart: 1 / 0 },
                  l = t.hunks[a] || { oldStart: 1 / 0 };
                if (z(s, l))
                  r.hunks.push(G(s, i)), u++, (o += s.newLines - s.oldLines);
                else if (z(l, s))
                  r.hunks.push(G(l, o)), a++, (i += l.newLines - l.oldLines);
                else {
                  var c = {
                    oldStart: Math.min(s.oldStart, l.oldStart),
                    oldLines: 0,
                    newStart: Math.min(s.newStart + i, l.oldStart + o),
                    newLines: 0,
                    lines: [],
                  };
                  H(c, s.oldStart, s.lines, l.oldStart, l.lines),
                    a++,
                    u++,
                    r.hunks.push(c);
                }
              }
              return r;
            },
            parsePatch: j,
            structuredPatch: R,
          });
          function ae(e) {
            return { type: 'concat', parts: e };
          }
          function ie(e) {
            return { type: 'indent', contents: e };
          }
          function oe(e, t) {
            return { type: 'align', contents: t, n: e };
          }
          function se(e, t) {
            return {
              type: 'group',
              id: (t = t || {}).id,
              contents: e,
              break: !!t.shouldBreak,
              expandedStates: t.expandedStates,
            };
          }
          var le = { type: 'break-parent' },
            ce = ae([{ type: 'line', hard: !0 }, le]),
            pe = ae([{ type: 'line', hard: !0, literal: !0 }, le]),
            fe = {
              concat: ae,
              join: function (e, t) {
                for (var n = [], r = 0; r < t.length; r++)
                  0 !== r && n.push(e), n.push(t[r]);
                return ae(n);
              },
              line: { type: 'line' },
              softline: { type: 'line', soft: !0 },
              hardline: ce,
              literalline: pe,
              group: se,
              conditionalGroup: function (e, t) {
                return se(e[0], Object.assign({}, t, { expandedStates: e }));
              },
              fill: function (e) {
                return { type: 'fill', parts: e };
              },
              lineSuffix: function (e) {
                return { type: 'line-suffix', contents: e };
              },
              lineSuffixBoundary: { type: 'line-suffix-boundary' },
              cursor: { type: 'cursor', placeholder: Symbol('cursor') },
              breakParent: le,
              ifBreak: function (e, t, n) {
                return {
                  type: 'if-break',
                  breakContents: e,
                  flatContents: t,
                  groupId: (n = n || {}).groupId,
                };
              },
              trim: { type: 'trim' },
              indent: ie,
              align: oe,
              addAlignmentToDoc: function (e, t, n) {
                var r = e;
                if (t > 0) {
                  for (var u = 0; u < Math.floor(t / n); ++u) r = ie(r);
                  (r = oe(t % n, r)), (r = oe(-1 / 0, r));
                }
                return r;
              },
              markAsRoot: function (e) {
                return oe({ type: 'root' }, e);
              },
              dedentToRoot: function (e) {
                return oe(-1 / 0, e);
              },
              dedent: function (e) {
                return oe(-1, e);
              },
            },
            de = function (e) {
              return (
                !Number.isNaN(e) &&
                e >= 4352 &&
                (e <= 4447 ||
                  9001 === e ||
                  9002 === e ||
                  (11904 <= e && e <= 12871 && 12351 !== e) ||
                  (12880 <= e && e <= 19903) ||
                  (19968 <= e && e <= 42182) ||
                  (43360 <= e && e <= 43388) ||
                  (44032 <= e && e <= 55203) ||
                  (63744 <= e && e <= 64255) ||
                  (65040 <= e && e <= 65049) ||
                  (65072 <= e && e <= 65131) ||
                  (65281 <= e && e <= 65376) ||
                  (65504 <= e && e <= 65510) ||
                  (110592 <= e && e <= 110593) ||
                  (127488 <= e && e <= 127569) ||
                  (131072 <= e && e <= 262141))
              );
            },
            he = de,
            ge = de;
          he.default = ge;
          var me = function (e) {
              if (
                'string' !=
                  typeof (e = e.replace(
                    /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g,
                    '  '
                  )) ||
                0 === e.length
              )
                return 0;
              e = (function (e) {
                return 'string' == typeof e
                  ? e.replace(
                      (function () {
                        var e = (arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {}
                          ).onlyFirst,
                          t = void 0 !== e && e,
                          n = [
                            '[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)',
                            '(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))',
                          ].join('|');
                        return new RegExp(n, t ? void 0 : 'g');
                      })(),
                      ''
                    )
                  : e;
              })(e);
              for (var t = 0, n = 0; n < e.length; n++) {
                var r = e.codePointAt(n);
                r <= 31 ||
                  (r >= 127 && r <= 159) ||
                  (r >= 768 && r <= 879) ||
                  (r > 65535 && n++, (t += he(r) ? 2 : 1));
              }
              return t;
            },
            ye = me,
            De = me;
          ye.default = De;
          var ve = function (e) {
              if ('string' != typeof e)
                throw new TypeError('Expected a string');
              return e
                .replace(/[|\\{}()[\]^$+*?.]/g, '\\$&')
                .replace(/-/g, '\\x2d');
            },
            Ee = function (e) {
              return e[e.length - 1];
            },
            Ce =
              void 0 !== t
                ? t
                : 'undefined' != typeof self
                ? self
                : 'undefined' != typeof window
                ? window
                : {};
          function be() {
            throw new Error('setTimeout has not been defined');
          }
          function Ae() {
            throw new Error('clearTimeout has not been defined');
          }
          var Fe = be,
            xe = Ae;
          function Se(e) {
            if (Fe === setTimeout) return setTimeout(e, 0);
            if ((Fe === be || !Fe) && setTimeout)
              return (Fe = setTimeout), setTimeout(e, 0);
            try {
              return Fe(e, 0);
            } catch (u) {
              try {
                return Fe.call(null, e, 0);
              } catch (u) {
                return Fe.call(this, e, 0);
              }
            }
          }
          'function' == typeof Ce.setTimeout && (Fe = setTimeout),
            'function' == typeof Ce.clearTimeout && (xe = clearTimeout);
          var we,
            Be = [],
            Te = !1,
            ke = -1;
          function Ne() {
            Te &&
              we &&
              ((Te = !1),
              we.length ? (Be = we.concat(Be)) : (ke = -1),
              Be.length && Oe());
          }
          function Oe() {
            if (!Te) {
              var e = Se(Ne);
              Te = !0;
              for (var t = Be.length; t; ) {
                for (we = Be, Be = []; ++ke < t; ) we && we[ke].run();
                (ke = -1), (t = Be.length);
              }
              (we = null),
                (Te = !1),
                (function (e) {
                  if (xe === clearTimeout) return clearTimeout(e);
                  if ((xe === Ae || !xe) && clearTimeout)
                    return (xe = clearTimeout), clearTimeout(e);
                  try {
                    xe(e);
                  } catch (t) {
                    try {
                      return xe.call(null, e);
                    } catch (t) {
                      return xe.call(this, e);
                    }
                  }
                })(e);
            }
          }
          function Pe(e, t) {
            (this.fun = e), (this.array = t);
          }
          function Me() {}
          Pe.prototype.run = function () {
            this.fun.apply(null, this.array);
          };
          var Ie = Me,
            je = Me,
            Le = Me,
            _e = Me,
            Re = Me,
            $e = Me,
            Ve = Me,
            qe = Ce.performance || {},
            We =
              qe.now ||
              qe.mozNow ||
              qe.msNow ||
              qe.oNow ||
              qe.webkitNow ||
              function () {
                return new Date().getTime();
              },
            Ue = new Date(),
            Je = {
              nextTick: function (e) {
                var t = new Array(arguments.length - 1);
                if (arguments.length > 1)
                  for (var n = 1; n < arguments.length; n++)
                    t[n - 1] = arguments[n];
                Be.push(new Pe(e, t)), 1 !== Be.length || Te || Se(Oe);
              },
              title: 'browser',
              browser: !0,
              env: {},
              argv: [],
              version: '',
              versions: {},
              on: Ie,
              addListener: je,
              once: Le,
              off: _e,
              removeListener: Re,
              removeAllListeners: $e,
              emit: Ve,
              binding: function (e) {
                throw new Error('process.binding is not supported');
              },
              cwd: function () {
                return '/';
              },
              chdir: function (e) {
                throw new Error('process.chdir is not supported');
              },
              umask: function () {
                return 0;
              },
              hrtime: function (e) {
                var t = 0.001 * We.call(qe),
                  n = Math.floor(t),
                  r = Math.floor((t % 1) * 1e9);
                return (
                  e && ((n -= e[0]), (r -= e[1]) < 0 && (n--, (r += 1e9))),
                  [n, r]
                );
              },
              platform: 'browser',
              release: {},
              config: {},
              uptime: function () {
                return (new Date() - Ue) / 1e3;
              },
            },
            ze =
              'object' == k(Je) &&
              Je.env &&
              Je.env.NODE_DEBUG &&
              /\bsemver\b/i.test(Je.env.NODE_DEBUG)
                ? function () {
                    for (
                      var e, t = arguments.length, n = new Array(t), r = 0;
                      r < t;
                      r++
                    )
                      n[r] = arguments[r];
                    return (e = console).error.apply(e, ['SEMVER'].concat(n));
                  }
                : function () {},
            Ge = {
              SEMVER_SPEC_VERSION: '2.0.0',
              MAX_LENGTH: 256,
              MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER || 9007199254740991,
              MAX_SAFE_COMPONENT_LENGTH: 16,
            },
            He =
              'undefined' != typeof globalThis
                ? globalThis
                : 'undefined' != typeof window
                ? window
                : void 0 !== t
                ? t
                : 'undefined' != typeof self
                ? self
                : {};
          function Xe(e, t, n) {
            return (
              e(
                (n = {
                  path: t,
                  exports: {},
                  require: function (e, t) {
                    return (function () {
                      throw new Error(
                        'Dynamic requires are not currently supported by @rollup/plugin-commonjs'
                      );
                    })(null == t && n.path);
                  },
                }),
                n.exports
              ),
              n.exports
            );
          }
          function Ye(e) {
            return e && Object.prototype.hasOwnProperty.call(e, 'default')
              ? e.default
              : e;
          }
          var Ke = Xe(function (e, t) {
              var n = Ge.MAX_SAFE_COMPONENT_LENGTH,
                r = ((t = e.exports = {}).re = []),
                u = (t.src = []),
                a = (t.t = {}),
                i = 0,
                o = function (e, t, n) {
                  var o = i++;
                  ze(o, t),
                    (a[e] = o),
                    (u[o] = t),
                    (r[o] = new RegExp(t, n ? 'g' : void 0));
                };
              o('NUMERICIDENTIFIER', '0|[1-9]\\d*'),
                o('NUMERICIDENTIFIERLOOSE', '[0-9]+'),
                o('NONNUMERICIDENTIFIER', '\\d*[a-zA-Z-][a-zA-Z0-9-]*'),
                o(
                  'MAINVERSION',
                  '('.concat(u[a.NUMERICIDENTIFIER], ')\\.') +
                    '('.concat(u[a.NUMERICIDENTIFIER], ')\\.') +
                    '('.concat(u[a.NUMERICIDENTIFIER], ')')
                ),
                o(
                  'MAINVERSIONLOOSE',
                  '('.concat(u[a.NUMERICIDENTIFIERLOOSE], ')\\.') +
                    '('.concat(u[a.NUMERICIDENTIFIERLOOSE], ')\\.') +
                    '('.concat(u[a.NUMERICIDENTIFIERLOOSE], ')')
                ),
                o(
                  'PRERELEASEIDENTIFIER',
                  '(?:'
                    .concat(u[a.NUMERICIDENTIFIER], '|')
                    .concat(u[a.NONNUMERICIDENTIFIER], ')')
                ),
                o(
                  'PRERELEASEIDENTIFIERLOOSE',
                  '(?:'
                    .concat(u[a.NUMERICIDENTIFIERLOOSE], '|')
                    .concat(u[a.NONNUMERICIDENTIFIER], ')')
                ),
                o(
                  'PRERELEASE',
                  '(?:-('
                    .concat(u[a.PRERELEASEIDENTIFIER], '(?:\\.')
                    .concat(u[a.PRERELEASEIDENTIFIER], ')*))')
                ),
                o(
                  'PRERELEASELOOSE',
                  '(?:-?('
                    .concat(u[a.PRERELEASEIDENTIFIERLOOSE], '(?:\\.')
                    .concat(u[a.PRERELEASEIDENTIFIERLOOSE], ')*))')
                ),
                o('BUILDIDENTIFIER', '[0-9A-Za-z-]+'),
                o(
                  'BUILD',
                  '(?:\\+('
                    .concat(u[a.BUILDIDENTIFIER], '(?:\\.')
                    .concat(u[a.BUILDIDENTIFIER], ')*))')
                ),
                o(
                  'FULLPLAIN',
                  'v?'
                    .concat(u[a.MAINVERSION])
                    .concat(u[a.PRERELEASE], '?')
                    .concat(u[a.BUILD], '?')
                ),
                o('FULL', '^'.concat(u[a.FULLPLAIN], '$')),
                o(
                  'LOOSEPLAIN',
                  '[v=\\s]*'
                    .concat(u[a.MAINVERSIONLOOSE])
                    .concat(u[a.PRERELEASELOOSE], '?')
                    .concat(u[a.BUILD], '?')
                ),
                o('LOOSE', '^'.concat(u[a.LOOSEPLAIN], '$')),
                o('GTLT', '((?:<|>)?=?)'),
                o(
                  'XRANGEIDENTIFIERLOOSE',
                  ''.concat(u[a.NUMERICIDENTIFIERLOOSE], '|x|X|\\*')
                ),
                o(
                  'XRANGEIDENTIFIER',
                  ''.concat(u[a.NUMERICIDENTIFIER], '|x|X|\\*')
                ),
                o(
                  'XRANGEPLAIN',
                  '[v=\\s]*('.concat(u[a.XRANGEIDENTIFIER], ')') +
                    '(?:\\.('.concat(u[a.XRANGEIDENTIFIER], ')') +
                    '(?:\\.('.concat(u[a.XRANGEIDENTIFIER], ')') +
                    '(?:'
                      .concat(u[a.PRERELEASE], ')?')
                      .concat(u[a.BUILD], '?') +
                    ')?)?'
                ),
                o(
                  'XRANGEPLAINLOOSE',
                  '[v=\\s]*('.concat(u[a.XRANGEIDENTIFIERLOOSE], ')') +
                    '(?:\\.('.concat(u[a.XRANGEIDENTIFIERLOOSE], ')') +
                    '(?:\\.('.concat(u[a.XRANGEIDENTIFIERLOOSE], ')') +
                    '(?:'
                      .concat(u[a.PRERELEASELOOSE], ')?')
                      .concat(u[a.BUILD], '?') +
                    ')?)?'
                ),
                o(
                  'XRANGE',
                  '^'.concat(u[a.GTLT], '\\s*').concat(u[a.XRANGEPLAIN], '$')
                ),
                o(
                  'XRANGELOOSE',
                  '^'
                    .concat(u[a.GTLT], '\\s*')
                    .concat(u[a.XRANGEPLAINLOOSE], '$')
                ),
                o(
                  'COERCE',
                  ''.concat('(^|[^\\d])(\\d{1,').concat(n, '})') +
                    '(?:\\.(\\d{1,'.concat(n, '}))?') +
                    '(?:\\.(\\d{1,'.concat(n, '}))?') +
                    '(?:$|[^\\d])'
                ),
                o('COERCERTL', u[a.COERCE], !0),
                o('LONETILDE', '(?:~>?)'),
                o('TILDETRIM', '(\\s*)'.concat(u[a.LONETILDE], '\\s+'), !0),
                (t.tildeTrimReplace = '$1~'),
                o(
                  'TILDE',
                  '^'.concat(u[a.LONETILDE]).concat(u[a.XRANGEPLAIN], '$')
                ),
                o(
                  'TILDELOOSE',
                  '^'.concat(u[a.LONETILDE]).concat(u[a.XRANGEPLAINLOOSE], '$')
                ),
                o('LONECARET', '(?:\\^)'),
                o('CARETTRIM', '(\\s*)'.concat(u[a.LONECARET], '\\s+'), !0),
                (t.caretTrimReplace = '$1^'),
                o(
                  'CARET',
                  '^'.concat(u[a.LONECARET]).concat(u[a.XRANGEPLAIN], '$')
                ),
                o(
                  'CARETLOOSE',
                  '^'.concat(u[a.LONECARET]).concat(u[a.XRANGEPLAINLOOSE], '$')
                ),
                o(
                  'COMPARATORLOOSE',
                  '^'
                    .concat(u[a.GTLT], '\\s*(')
                    .concat(u[a.LOOSEPLAIN], ')$|^$')
                ),
                o(
                  'COMPARATOR',
                  '^'.concat(u[a.GTLT], '\\s*(').concat(u[a.FULLPLAIN], ')$|^$')
                ),
                o(
                  'COMPARATORTRIM',
                  '(\\s*)'
                    .concat(u[a.GTLT], '\\s*(')
                    .concat(u[a.LOOSEPLAIN], '|')
                    .concat(u[a.XRANGEPLAIN], ')'),
                  !0
                ),
                (t.comparatorTrimReplace = '$1$2$3'),
                o(
                  'HYPHENRANGE',
                  '^\\s*('.concat(u[a.XRANGEPLAIN], ')') +
                    '\\s+-\\s+' +
                    '('.concat(u[a.XRANGEPLAIN], ')') +
                    '\\s*$'
                ),
                o(
                  'HYPHENRANGELOOSE',
                  '^\\s*('.concat(u[a.XRANGEPLAINLOOSE], ')') +
                    '\\s+-\\s+' +
                    '('.concat(u[a.XRANGEPLAINLOOSE], ')') +
                    '\\s*$'
                ),
                o('STAR', '(<|>)?=?\\s*\\*'),
                o('GTE0', '^\\s*>=\\s*0.0.0\\s*$'),
                o('GTE0PRE', '^\\s*>=\\s*0.0.0-0\\s*$');
            }),
            Qe = /^[0-9]+$/,
            Ze = function (e, t) {
              var n = Qe.test(e),
                r = Qe.test(t);
              return (
                n && r && ((e = +e), (t = +t)),
                e === t ? 0 : n && !r ? -1 : r && !n ? 1 : e < t ? -1 : 1
              );
            },
            et = Ze,
            tt = Ge.MAX_LENGTH,
            nt = Ge.MAX_SAFE_INTEGER,
            rt = Ke.re,
            ut = Ke.t,
            at = et,
            it = (function () {
              function e(t, n) {
                if (
                  (w(this, e),
                  (n && 'object' == k(n)) ||
                    (n = { loose: !!n, includePrerelease: !1 }),
                  t instanceof e)
                ) {
                  if (
                    t.loose === !!n.loose &&
                    t.includePrerelease === !!n.includePrerelease
                  )
                    return t;
                  t = t.version;
                } else if ('string' != typeof t)
                  throw new TypeError('Invalid Version: '.concat(t));
                if (t.length > tt)
                  throw new TypeError(
                    'version is longer than '.concat(tt, ' characters')
                  );
                ze('SemVer', t, n),
                  (this.options = n),
                  (this.loose = !!n.loose),
                  (this.includePrerelease = !!n.includePrerelease);
                var r = t.trim().match(n.loose ? rt[ut.LOOSE] : rt[ut.FULL]);
                if (!r) throw new TypeError('Invalid Version: '.concat(t));
                if (
                  ((this.raw = t),
                  (this.major = +r[1]),
                  (this.minor = +r[2]),
                  (this.patch = +r[3]),
                  this.major > nt || this.major < 0)
                )
                  throw new TypeError('Invalid major version');
                if (this.minor > nt || this.minor < 0)
                  throw new TypeError('Invalid minor version');
                if (this.patch > nt || this.patch < 0)
                  throw new TypeError('Invalid patch version');
                r[4]
                  ? (this.prerelease = r[4].split('.').map(function (e) {
                      if (/^[0-9]+$/.test(e)) {
                        var t = +e;
                        if (t >= 0 && t < nt) return t;
                      }
                      return e;
                    }))
                  : (this.prerelease = []),
                  (this.build = r[5] ? r[5].split('.') : []),
                  this.format();
              }
              return (
                T(e, [
                  {
                    key: 'format',
                    value: function () {
                      return (
                        (this.version = ''
                          .concat(this.major, '.')
                          .concat(this.minor, '.')
                          .concat(this.patch)),
                        this.prerelease.length &&
                          (this.version += '-'.concat(
                            this.prerelease.join('.')
                          )),
                        this.version
                      );
                    },
                  },
                  {
                    key: 'toString',
                    value: function () {
                      return this.version;
                    },
                  },
                  {
                    key: 'compare',
                    value: function (t) {
                      if (
                        (ze('SemVer.compare', this.version, this.options, t),
                        !(t instanceof e))
                      ) {
                        if ('string' == typeof t && t === this.version)
                          return 0;
                        t = new e(t, this.options);
                      }
                      return t.version === this.version
                        ? 0
                        : this.compareMain(t) || this.comparePre(t);
                    },
                  },
                  {
                    key: 'compareMain',
                    value: function (t) {
                      return (
                        t instanceof e || (t = new e(t, this.options)),
                        at(this.major, t.major) ||
                          at(this.minor, t.minor) ||
                          at(this.patch, t.patch)
                      );
                    },
                  },
                  {
                    key: 'comparePre',
                    value: function (t) {
                      if (
                        (t instanceof e || (t = new e(t, this.options)),
                        this.prerelease.length && !t.prerelease.length)
                      )
                        return -1;
                      if (!this.prerelease.length && t.prerelease.length)
                        return 1;
                      if (!this.prerelease.length && !t.prerelease.length)
                        return 0;
                      var n = 0;
                      do {
                        var r = this.prerelease[n],
                          u = t.prerelease[n];
                        if (
                          (ze('prerelease compare', n, r, u),
                          void 0 === r && void 0 === u)
                        )
                          return 0;
                        if (void 0 === u) return 1;
                        if (void 0 === r) return -1;
                        if (r !== u) return at(r, u);
                      } while (++n);
                    },
                  },
                  {
                    key: 'compareBuild',
                    value: function (t) {
                      t instanceof e || (t = new e(t, this.options));
                      var n = 0;
                      do {
                        var r = this.build[n],
                          u = t.build[n];
                        if (
                          (ze('prerelease compare', n, r, u),
                          void 0 === r && void 0 === u)
                        )
                          return 0;
                        if (void 0 === u) return 1;
                        if (void 0 === r) return -1;
                        if (r !== u) return at(r, u);
                      } while (++n);
                    },
                  },
                  {
                    key: 'inc',
                    value: function (e, t) {
                      switch (e) {
                        case 'premajor':
                          (this.prerelease.length = 0),
                            (this.patch = 0),
                            (this.minor = 0),
                            this.major++,
                            this.inc('pre', t);
                          break;
                        case 'preminor':
                          (this.prerelease.length = 0),
                            (this.patch = 0),
                            this.minor++,
                            this.inc('pre', t);
                          break;
                        case 'prepatch':
                          (this.prerelease.length = 0),
                            this.inc('patch', t),
                            this.inc('pre', t);
                          break;
                        case 'prerelease':
                          0 === this.prerelease.length && this.inc('patch', t),
                            this.inc('pre', t);
                          break;
                        case 'major':
                          (0 === this.minor &&
                            0 === this.patch &&
                            0 !== this.prerelease.length) ||
                            this.major++,
                            (this.minor = 0),
                            (this.patch = 0),
                            (this.prerelease = []);
                          break;
                        case 'minor':
                          (0 === this.patch && 0 !== this.prerelease.length) ||
                            this.minor++,
                            (this.patch = 0),
                            (this.prerelease = []);
                          break;
                        case 'patch':
                          0 === this.prerelease.length && this.patch++,
                            (this.prerelease = []);
                          break;
                        case 'pre':
                          if (0 === this.prerelease.length)
                            this.prerelease = [0];
                          else {
                            for (var n = this.prerelease.length; --n >= 0; )
                              'number' == typeof this.prerelease[n] &&
                                (this.prerelease[n]++, (n = -2));
                            -1 === n && this.prerelease.push(0);
                          }
                          t &&
                            (this.prerelease[0] === t
                              ? isNaN(this.prerelease[1]) &&
                                (this.prerelease = [t, 0])
                              : (this.prerelease = [t, 0]));
                          break;
                        default:
                          throw new Error(
                            'invalid increment argument: '.concat(e)
                          );
                      }
                      return this.format(), (this.raw = this.version), this;
                    },
                  },
                ]),
                e
              );
            })(),
            ot = function (e, t, n) {
              return new it(e, n).compare(new it(t, n));
            };
          function st() {
            var e = u([
              "\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\n      in order for it to be formatted.\n    ",
            ]);
            return (
              (st = function () {
                return e;
              }),
              e
            );
          }
          function lt() {
            var e = u([
              '\n      Format code starting at a given character offset.\n      The range will extend backwards to the start of the first line containing the selected statement.\n      This option cannot be used with --cursor-offset.\n    ',
            ]);
            return (
              (lt = function () {
                return e;
              }),
              e
            );
          }
          function ct() {
            var e = u([
              '\n      Format code ending at a given character offset (exclusive).\n      The range will extend forwards to the end of the selected statement.\n      This option cannot be used with --cursor-offset.\n    ',
            ]);
            return (
              (ct = function () {
                return e;
              }),
              e
            );
          }
          function pt() {
            var e = u([
              '\n      Custom directory that contains prettier plugins in node_modules subdirectory.\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\n      Multiple values are accepted.\n    ',
            ]);
            return (
              (pt = function () {
                return e;
              }),
              e
            );
          }
          function ft() {
            var e = u([
              "\n          Maintain existing\n          (mixed values within one file are normalised by looking at what's used after the first line)\n        ",
            ]);
            return (
              (ft = function () {
                return e;
              }),
              e
            );
          }
          function dt() {
            var e = u([
              '\n      Print (to stderr) where a cursor at the given position would move to after formatting.\n      This option cannot be used with --range-start and --range-end.\n    ',
            ]);
            return (
              (dt = function () {
                return e;
              }),
              e
            );
          }
          var ht = Xe(function (e, t) {
              function n() {
                for (var e = [], t = 0; t < arguments.length; t++)
                  e[t] = arguments[t];
              }
              function r() {
                return 'undefined' != typeof WeakMap
                  ? new WeakMap()
                  : {
                      add: n,
                      delete: n,
                      get: n,
                      set: n,
                      has: function (e) {
                        return !1;
                      },
                    };
              }
              Object.defineProperty(t, '__esModule', { value: !0 });
              var u = Object.prototype.hasOwnProperty,
                a = function (e, t) {
                  return u.call(e, t);
                };
              function i(e, t) {
                for (var n in t) a(t, n) && (e[n] = t[n]);
                return e;
              }
              var o = /^[ \t]*(?:\r\n|\r|\n)/,
                s = /(?:\r\n|\r|\n)[ \t]*$/,
                l = /^(?:[\r\n]|$)/,
                c = /(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/,
                p = /^[ \t]*[\r\n][ \t\r\n]*$/;
              function f(e, t, n) {
                var r = 0,
                  u = e[0].match(c);
                u && (r = u[1].length);
                var a = new RegExp('(\\r\\n|\\r|\\n).{0,' + r + '}', 'g');
                t && (e = e.slice(1));
                var i = n.newline,
                  l = n.trimLeadingNewline,
                  p = n.trimTrailingNewline,
                  f = 'string' == typeof i,
                  d = e.length;
                return e.map(function (e, t) {
                  return (
                    (e = e.replace(a, '$1')),
                    0 === t && l && (e = e.replace(o, '')),
                    t === d - 1 && p && (e = e.replace(s, '')),
                    f &&
                      (e = e.replace(/\r\n|\n|\r/g, function (e) {
                        return i;
                      })),
                    e
                  );
                });
              }
              function d(e) {
                return a(e, 'raw') && a(e, 'length');
              }
              var h = (function e(t) {
                var n = r(),
                  u = r();
                return i(
                  function r(a) {
                    for (var o = [], s = 1; s < arguments.length; s++)
                      o[s - 1] = arguments[s];
                    if (d(a)) {
                      var c = a,
                        g =
                          (o[0] === r || o[0] === h) &&
                          p.test(c[0]) &&
                          l.test(c[1]),
                        m = g ? u : n,
                        y = m.get(c);
                      return (
                        y || ((y = f(c, g, t)), m.set(c, y)),
                        0 === o.length
                          ? y[0]
                          : (function (e, t) {
                              for (var n = '', r = 0, u = e.length; r < u; r++)
                                (n += e[r]), r < u - 1 && (n += t[r]);
                              return n;
                            })(y, g ? o.slice(1) : o)
                      );
                    }
                    return e(i(i({}, t), a || {}));
                  },
                  {
                    string: function (e) {
                      return f([e], !1, t)[0];
                    },
                  }
                );
              })({ trimLeadingNewline: !0, trimTrailingNewline: !0 });
              (t.outdent = h), (t.default = h);
              try {
                (e.exports = h),
                  Object.defineProperty(h, '__esModule', { value: !0 }),
                  (h.default = h),
                  (h.outdent = h);
              } catch (e) {}
            }).outdent,
            gt = 'Config',
            mt = 'Editor',
            yt = 'Other',
            Dt = 'Global',
            vt = 'Special',
            Et = {
              cursorOffset: {
                since: '1.4.0',
                category: vt,
                type: 'int',
                default: -1,
                range: { start: -1, end: 1 / 0, step: 1 },
                description: ht(dt()),
                cliCategory: mt,
              },
              endOfLine: {
                since: '1.15.0',
                category: Dt,
                type: 'choice',
                default: [
                  { since: '1.15.0', value: 'auto' },
                  { since: '2.0.0', value: 'lf' },
                ],
                description: 'Which end of line characters to apply.',
                choices: [
                  {
                    value: 'lf',
                    description:
                      'Line Feed only (\\n), common on Linux and macOS as well as inside git repos',
                  },
                  {
                    value: 'crlf',
                    description:
                      'Carriage Return + Line Feed characters (\\r\\n), common on Windows',
                  },
                  {
                    value: 'cr',
                    description:
                      'Carriage Return character only (\\r), used very rarely',
                  },
                  { value: 'auto', description: ht(ft()) },
                ],
              },
              filepath: {
                since: '1.4.0',
                category: vt,
                type: 'path',
                description:
                  'Specify the input filepath. This will be used to do parser inference.',
                cliName: 'stdin-filepath',
                cliCategory: yt,
                cliDescription:
                  'Path to the file to pretend that stdin comes from.',
              },
              insertPragma: {
                since: '1.8.0',
                category: vt,
                type: 'boolean',
                default: !1,
                description:
                  "Insert @format pragma into file's first docblock comment.",
                cliCategory: yt,
              },
              parser: {
                since: '0.0.10',
                category: Dt,
                type: 'choice',
                default: [
                  { since: '0.0.10', value: 'babylon' },
                  { since: '1.13.0', value: void 0 },
                ],
                description: 'Which parser to use.',
                exception: function (e) {
                  return 'string' == typeof e || 'function' == typeof e;
                },
                choices: [
                  { value: 'flow', description: 'Flow' },
                  {
                    value: 'babel',
                    since: '1.16.0',
                    description: 'JavaScript',
                  },
                  { value: 'babel-flow', since: '1.16.0', description: 'Flow' },
                  {
                    value: 'babel-ts',
                    since: '2.0.0',
                    description: 'TypeScript',
                  },
                  {
                    value: 'typescript',
                    since: '1.4.0',
                    description: 'TypeScript',
                  },
                  {
                    value: 'espree',
                    since: '2.2.0',
                    description: 'JavaScript',
                  },
                  {
                    value: 'meriyah',
                    since: '2.2.0',
                    description: 'JavaScript',
                  },
                  { value: 'css', since: '1.7.1', description: 'CSS' },
                  { value: 'less', since: '1.7.1', description: 'Less' },
                  { value: 'scss', since: '1.7.1', description: 'SCSS' },
                  { value: 'json', since: '1.5.0', description: 'JSON' },
                  { value: 'json5', since: '1.13.0', description: 'JSON5' },
                  {
                    value: 'json-stringify',
                    since: '1.13.0',
                    description: 'JSON.stringify',
                  },
                  { value: 'graphql', since: '1.5.0', description: 'GraphQL' },
                  {
                    value: 'markdown',
                    since: '1.8.0',
                    description: 'Markdown',
                  },
                  { value: 'mdx', since: '1.15.0', description: 'MDX' },
                  { value: 'vue', since: '1.10.0', description: 'Vue' },
                  { value: 'yaml', since: '1.14.0', description: 'YAML' },
                  { value: 'glimmer', since: null, description: 'Handlebars' },
                  { value: 'html', since: '1.15.0', description: 'HTML' },
                  { value: 'angular', since: '1.15.0', description: 'Angular' },
                  {
                    value: 'lwc',
                    since: '1.17.0',
                    description: 'Lightning Web Components',
                  },
                ],
              },
              plugins: {
                since: '1.10.0',
                type: 'path',
                array: !0,
                default: [{ value: [] }],
                category: Dt,
                description:
                  'Add a plugin. Multiple plugins can be passed as separate `--plugin`s.',
                exception: function (e) {
                  return 'string' == typeof e || 'object' == k(e);
                },
                cliName: 'plugin',
                cliCategory: gt,
              },
              pluginSearchDirs: {
                since: '1.13.0',
                type: 'path',
                array: !0,
                default: [{ value: [] }],
                category: Dt,
                description: ht(pt()),
                exception: function (e) {
                  return 'string' == typeof e || 'object' == k(e);
                },
                cliName: 'plugin-search-dir',
                cliCategory: gt,
              },
              printWidth: {
                since: '0.0.0',
                category: Dt,
                type: 'int',
                default: 80,
                description: 'The line length where Prettier will try wrap.',
                range: { start: 0, end: 1 / 0, step: 1 },
              },
              rangeEnd: {
                since: '1.4.0',
                category: vt,
                type: 'int',
                default: 1 / 0,
                range: { start: 0, end: 1 / 0, step: 1 },
                description: ht(ct()),
                cliCategory: mt,
              },
              rangeStart: {
                since: '1.4.0',
                category: vt,
                type: 'int',
                default: 0,
                range: { start: 0, end: 1 / 0, step: 1 },
                description: ht(lt()),
                cliCategory: mt,
              },
              requirePragma: {
                since: '1.7.0',
                category: vt,
                type: 'boolean',
                default: !1,
                description: ht(st()),
                cliCategory: yt,
              },
              tabWidth: {
                type: 'int',
                category: Dt,
                default: 2,
                description: 'Number of spaces per indentation level.',
                range: { start: 0, end: 1 / 0, step: 1 },
              },
              useTabs: {
                since: '1.0.0',
                category: Dt,
                type: 'boolean',
                default: !1,
                description: 'Indent with tabs instead of spaces.',
              },
              embeddedLanguageFormatting: {
                since: '2.1.0',
                category: Dt,
                type: 'choice',
                default: [{ since: '2.1.0', value: 'auto' }],
                description:
                  'Control how Prettier formats quoted code embedded in the file.',
                choices: [
                  {
                    value: 'auto',
                    description:
                      'Format embedded code if Prettier can automatically identify it.',
                  },
                  {
                    value: 'off',
                    description: 'Never automatically format embedded code.',
                  },
                ],
              },
            },
            Ct = {
              compare: ot,
              lt: function (e, t, n) {
                return ot(e, t, n) < 0;
              },
              gte: function (e, t, n) {
                return ot(e, t, n) >= 0;
              },
            },
            bt = o,
            At = Et,
            Ft = function () {
              var t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                n = t.plugins,
                r = void 0 === n ? [] : n,
                u = t.showUnreleased,
                a = void 0 !== u && u,
                i = t.showDeprecated,
                o = void 0 !== i && i,
                s = t.showInternal,
                l = void 0 !== s && s,
                c = bt.split('-', 1)[0],
                p = r
                  .reduce(function (e, t) {
                    return e.concat(t.languages || []);
                  }, [])
                  .filter(d),
                f = (function (e, t) {
                  return Object.entries(e).map(function (e) {
                    var t = C(e, 2),
                      n = t[0],
                      r = t[1];
                    return Object.assign(E({}, 'name', n), r);
                  });
                })(
                  Object.assign.apply(
                    Object,
                    [{}].concat(
                      m(
                        r.map(function (e) {
                          return e.options;
                        })
                      ),
                      [At]
                    )
                  )
                )
                  .filter(function (e) {
                    return d(e) && h(e);
                  })
                  .sort(function (e, t) {
                    return e.name === t.name ? 0 : e.name < t.name ? -1 : 1;
                  })
                  .map(function (t) {
                    return l
                      ? t
                      : e(t, ['cliName', 'cliCategory', 'cliDescription']);
                  })
                  .map(function (e) {
                    (e = Object.assign({}, e)),
                      Array.isArray(e.default) &&
                        (e.default =
                          1 === e.default.length
                            ? e.default[0].value
                            : e.default.filter(d).sort(function (e, t) {
                                return Ct.compare(t.since, e.since);
                              })[0].value),
                      Array.isArray(e.choices) &&
                        ((e.choices = e.choices.filter(function (e) {
                          return d(e) && h(e);
                        })),
                        'parser' === e.name &&
                          (function (e, t, n) {
                            var r,
                              u = new Set(
                                e.choices.map(function (e) {
                                  return e.value;
                                })
                              ),
                              a = g(t);
                            try {
                              for (a.s(); !(r = a.n()).done; ) {
                                var i = r.value;
                                if (i.parsers) {
                                  var o,
                                    s = g(i.parsers);
                                  try {
                                    var l = function () {
                                      var t = o.value;
                                      if (!u.has(t)) {
                                        u.add(t);
                                        var r = n.find(function (e) {
                                            return e.parsers && e.parsers[t];
                                          }),
                                          a = i.name;
                                        r &&
                                          r.name &&
                                          (a += ' (plugin: '.concat(
                                            r.name,
                                            ')'
                                          )),
                                          e.choices.push({
                                            value: t,
                                            description: a,
                                          });
                                      }
                                    };
                                    for (s.s(); !(o = s.n()).done; ) l();
                                  } catch (c) {
                                    s.e(c);
                                  } finally {
                                    s.f();
                                  }
                                }
                              }
                            } catch (c) {
                              a.e(c);
                            } finally {
                              a.f();
                            }
                          })(e, p, r));
                    var t = r
                      .filter(function (t) {
                        return (
                          t.defaultOptions &&
                          void 0 !== t.defaultOptions[e.name]
                        );
                      })
                      .reduce(function (t, n) {
                        return (t[n.name] = n.defaultOptions[e.name]), t;
                      }, {});
                    return Object.assign({}, e, { pluginDefaults: t });
                  });
              return { languages: p, options: f };
              function d(e) {
                return a || !('since' in e) || (e.since && Ct.gte(c, e.since));
              }
              function h(e) {
                return (
                  o ||
                  !('deprecated' in e) ||
                  (e.deprecated && Ct.lt(c, e.deprecated))
                );
              }
            },
            xt = Ft,
            St = /[^\x20-\x7F]/;
          function wt(e) {
            return function (t, n, r) {
              var u = r && r.backwards;
              if (!1 === n) return !1;
              for (var a = t.length, i = n; i >= 0 && i < a; ) {
                var o = t.charAt(i);
                if (e instanceof RegExp) {
                  if (!e.test(o)) return i;
                } else if (!e.includes(o)) return i;
                u ? i-- : i++;
              }
              return (-1 === i || i === a) && i;
            };
          }
          var Bt = wt(/\s/),
            Tt = wt(' \t'),
            kt = wt(',; \t'),
            Nt = wt(/[^\n\r]/);
          function Ot(e, t) {
            if (!1 === t) return !1;
            if ('/' === e.charAt(t) && '*' === e.charAt(t + 1))
              for (var n = t + 2; n < e.length; ++n)
                if ('*' === e.charAt(n) && '/' === e.charAt(n + 1))
                  return n + 2;
            return t;
          }
          function Pt(e, t) {
            return (
              !1 !== t &&
              ('/' === e.charAt(t) && '/' === e.charAt(t + 1) ? Nt(e, t) : t)
            );
          }
          function Mt(e, t, n) {
            var r = n && n.backwards;
            if (!1 === t) return !1;
            var u = e.charAt(t);
            if (r) {
              if ('\r' === e.charAt(t - 1) && '\n' === u) return t - 2;
              if ('\n' === u || '\r' === u || '\u2028' === u || '\u2029' === u)
                return t - 1;
            } else {
              if ('\r' === u && '\n' === e.charAt(t + 1)) return t + 2;
              if ('\n' === u || '\r' === u || '\u2028' === u || '\u2029' === u)
                return t + 1;
            }
            return t;
          }
          function It(e, t, n) {
            var r = Tt(e, (n = n || {}).backwards ? t - 1 : t, n);
            return r !== Mt(e, r, n);
          }
          function jt(e, t) {
            for (var n = null, r = t; r !== n; )
              (n = r), (r = Ot(e, (r = kt(e, r)))), (r = Tt(e, r));
            return !1 !== (r = Mt(e, (r = Pt(e, r)))) && It(e, r);
          }
          function Lt(e, t) {
            for (var n = null, r = t; r !== n; )
              (n = r), (r = Mt(e, (r = Pt(e, (r = Ot(e, (r = Tt(e, r))))))));
            return r;
          }
          function _t(e, t, n) {
            return Lt(e, n(t));
          }
          function Rt(e, t, n) {
            for (var r = 0, u = (n = n || 0); u < e.length; ++u)
              '\t' === e[u] ? (r = r + t - (r % t)) : r++;
            return r;
          }
          function $t(e, t) {
            var n = e.slice(1, -1),
              r = { quote: '"', regex: /"/g },
              u = { quote: "'", regex: /'/g },
              a = "'" === t ? u : r,
              i = a === u ? r : u,
              o = a.quote;
            return (
              (n.includes(a.quote) || n.includes(i.quote)) &&
                (o =
                  (n.match(a.regex) || []).length >
                  (n.match(i.regex) || []).length
                    ? i.quote
                    : a.quote),
              o
            );
          }
          function Vt(e, t, n) {
            var r = '"' === t ? "'" : '"',
              u = e.replace(/\\([\S\s])|(["'])/g, function (e, u, a) {
                return u === r
                  ? u
                  : a === t
                  ? '\\' + a
                  : a ||
                    (n && /^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(u)
                      ? u
                      : '\\' + u);
              });
            return t + u + t;
          }
          function qt(e, t) {
            (e.comments || (e.comments = [])).push(t),
              (t.printed = !1),
              'JSXText' === e.type && (t.printed = !0);
          }
          var Wt,
            Ut = {
              inferParserByLanguage: function (e, t) {
                var n = xt({ plugins: t.plugins }).languages,
                  r =
                    n.find(function (t) {
                      return t.name.toLowerCase() === e;
                    }) ||
                    n.find(function (t) {
                      var n = t.aliases;
                      return Array.isArray(n) && n.includes(e);
                    }) ||
                    n.find(function (t) {
                      var n = t.extensions;
                      return Array.isArray(n) && n.includes('.'.concat(e));
                    });
                return r && r.parsers[0];
              },
              replaceEndOfLineWith: function (e, t) {
                var n,
                  r = [],
                  u = g(e.split('\n'));
                try {
                  for (u.s(); !(n = u.n()).done; ) {
                    var a = n.value;
                    0 !== r.length && r.push(t), r.push(a);
                  }
                } catch (i) {
                  u.e(i);
                } finally {
                  u.f();
                }
                return r;
              },
              getStringWidth: function (e) {
                return e ? (St.test(e) ? ye(e) : e.length) : 0;
              },
              getMaxContinuousCount: function (e, t) {
                var n = e.match(new RegExp('('.concat(ve(t), ')+'), 'g'));
                return null === n
                  ? 0
                  : n.reduce(function (e, n) {
                      return Math.max(e, n.length / t.length);
                    }, 0);
              },
              getMinNotPresentContinuousCount: function (e, t) {
                var n = e.match(new RegExp('('.concat(ve(t), ')+'), 'g'));
                if (null === n) return 0;
                var r,
                  u = new Map(),
                  a = 0,
                  i = g(n);
                try {
                  for (i.s(); !(r = i.n()).done; ) {
                    var o = r.value.length / t.length;
                    u.set(o, !0), o > a && (a = o);
                  }
                } catch (l) {
                  i.e(l);
                } finally {
                  i.f();
                }
                for (var s = 1; s < a; s++) if (!u.get(s)) return s;
                return a + 1;
              },
              getPenultimate: function (e) {
                return e[e.length - 2];
              },
              getLast: Ee,
              getNextNonSpaceNonCommentCharacterIndexWithStartIndex: Lt,
              getNextNonSpaceNonCommentCharacterIndex: _t,
              getNextNonSpaceNonCommentCharacter: function (e, t, n) {
                return e.charAt(_t(e, t, n));
              },
              skip: wt,
              skipWhitespace: Bt,
              skipSpaces: Tt,
              skipToLineEnd: kt,
              skipEverythingButNewLine: Nt,
              skipInlineComment: Ot,
              skipTrailingComment: Pt,
              skipNewline: Mt,
              isNextLineEmptyAfterIndex: jt,
              isNextLineEmpty: function (e, t, n) {
                return jt(e, n(t));
              },
              isPreviousLineEmpty: function (e, t, n) {
                var r = n(t) - 1;
                return (
                  (r = Mt(e, (r = Tt(e, r, { backwards: !0 })), {
                    backwards: !0,
                  })),
                  (r = Tt(e, r, { backwards: !0 })) !==
                    Mt(e, r, { backwards: !0 })
                );
              },
              hasNewline: It,
              hasNewlineInRange: function (e, t, n) {
                for (var r = t; r < n; ++r) if ('\n' === e.charAt(r)) return !0;
                return !1;
              },
              hasSpaces: function (e, t, n) {
                return Tt(e, (n = n || {}).backwards ? t - 1 : t, n) !== t;
              },
              getAlignmentSize: Rt,
              getIndentSize: function (e, t) {
                var n = e.lastIndexOf('\n');
                return -1 === n ? 0 : Rt(e.slice(n + 1).match(/^[\t ]*/)[0], t);
              },
              getPreferredQuote: $t,
              printString: function (e, t, n) {
                var r = e.slice(1, -1),
                  u = !r.includes('"') && !r.includes("'"),
                  a =
                    'json' === t.parser
                      ? '"'
                      : t.__isInHtmlAttribute
                      ? "'"
                      : $t(e, t.singleQuote ? "'" : '"');
                return n
                  ? u
                    ? a + r + a
                    : e
                  : Vt(
                      r,
                      a,
                      !(
                        'css' === t.parser ||
                        'less' === t.parser ||
                        'scss' === t.parser ||
                        t.embeddedInHtml
                      )
                    );
              },
              printNumber: function (e) {
                return e
                  .toLowerCase()
                  .replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/, '$1$2$3')
                  .replace(/^([+-]?[\d.]+)e[+-]?0+$/, '$1')
                  .replace(/^([+-])?\./, '$10.')
                  .replace(/(\.\d+?)0+(?=e|$)/, '$1')
                  .replace(/\.(?=e|$)/, '');
              },
              isNodeIgnoreComment: function (e) {
                return 'prettier-ignore' === e.value.trim();
              },
              makeString: Vt,
              addLeadingComment: function (e, t) {
                (t.leading = !0), (t.trailing = !1), qt(e, t);
              },
              addDanglingComment: function (e, t, n) {
                (t.leading = !1),
                  (t.trailing = !1),
                  n && (t.marker = n),
                  qt(e, t);
              },
              addTrailingComment: function (e, t) {
                (t.leading = !1), (t.trailing = !0), qt(e, t);
              },
              isFrontMatterNode: function (e) {
                return e && 'front-matter' === e.type;
              },
              getShebang: function (e) {
                if (!e.startsWith('#!')) return '';
                var t = e.indexOf('\n');
                return -1 === t ? e : e.slice(0, t);
              },
            },
            Jt = function (e) {
              var t = e.indexOf('\r');
              return t >= 0 ? ('\n' === e.charAt(t + 1) ? 'crlf' : 'cr') : 'lf';
            },
            zt = function (e) {
              switch (e) {
                case 'cr':
                  return '\r';
                case 'crlf':
                  return '\r\n';
                default:
                  return '\n';
              }
            },
            Gt = function (e, t) {
              var n;
              if ('\n' === t) n = /\n/g;
              else if ('\r' === t) n = /\r/g;
              else {
                if ('\r\n' !== t)
                  throw new Error(
                    'Unexpected "eol" '.concat(JSON.stringify(t), '.')
                  );
                n = /\r\n/g;
              }
              var r = e.match(n);
              return r ? r.length : 0;
            },
            Ht = function (e) {
              return e.replace(/\r\n?/g, '\n');
            },
            Xt = Ut.getStringWidth,
            Yt = zt,
            Kt = fe.concat,
            Qt = fe.fill,
            Zt = fe.cursor;
          function en(e, t) {
            return nn(e, { type: 'indent' }, t);
          }
          function tn(e, t, n) {
            return t === -1 / 0
              ? e.root || { value: '', length: 0, queue: [] }
              : t < 0
              ? nn(e, { type: 'dedent' }, n)
              : t
              ? 'root' === t.type
                ? Object.assign({}, e, { root: e })
                : nn(
                    e,
                    {
                      type:
                        'string' == typeof t ? 'stringAlign' : 'numberAlign',
                      n: t,
                    },
                    n
                  )
              : e;
          }
          function nn(e, t, n) {
            var r,
              u =
                'dedent' === t.type ? e.queue.slice(0, -1) : e.queue.concat(t),
              a = '',
              i = 0,
              o = 0,
              s = 0,
              l = g(u);
            try {
              for (l.s(); !(r = l.n()).done; ) {
                var c = r.value;
                switch (c.type) {
                  case 'indent':
                    d(), n.useTabs ? p(1) : f(n.tabWidth);
                    break;
                  case 'stringAlign':
                    d(), (a += c.n), (i += c.n.length);
                    break;
                  case 'numberAlign':
                    (o += 1), (s += c.n);
                    break;
                  default:
                    throw new Error("Unexpected type '".concat(c.type, "'"));
                }
              }
            } catch (y) {
              l.e(y);
            } finally {
              l.f();
            }
            return h(), Object.assign({}, e, { value: a, length: i, queue: u });
            function p(e) {
              (a += '\t'.repeat(e)), (i += n.tabWidth * e);
            }
            function f(e) {
              (a += ' '.repeat(e)), (i += e);
            }
            function d() {
              n.useTabs ? (o > 0 && p(o), m()) : h();
            }
            function h() {
              s > 0 && f(s), m();
            }
            function m() {
              (o = 0), (s = 0);
            }
          }
          function rn(e) {
            if (0 === e.length) return 0;
            for (
              var t = 0;
              e.length > 0 &&
              'string' == typeof e[e.length - 1] &&
              e[e.length - 1].match(/^[\t ]*$/);

            )
              t += e.pop().length;
            if (e.length && 'string' == typeof e[e.length - 1]) {
              var n = e[e.length - 1].replace(/[\t ]*$/, '');
              (t += e[e.length - 1].length - n.length), (e[e.length - 1] = n);
            }
            return t;
          }
          function un(e, t, n, r, u) {
            for (var a = t.length, i = [e], o = []; n >= 0; )
              if (0 !== i.length) {
                var s = C(i.pop(), 3),
                  l = s[0],
                  c = s[1],
                  p = s[2];
                if ('string' == typeof p) o.push(p), (n -= Xt(p));
                else
                  switch (p.type) {
                    case 'concat':
                      for (var f = p.parts.length - 1; f >= 0; f--)
                        i.push([l, c, p.parts[f]]);
                      break;
                    case 'indent':
                      i.push([en(l, r), c, p.contents]);
                      break;
                    case 'align':
                      i.push([tn(l, p.n, r), c, p.contents]);
                      break;
                    case 'trim':
                      n += rn(o);
                      break;
                    case 'group':
                      if (u && p.break) return !1;
                      i.push([l, p.break ? 1 : c, p.contents]),
                        p.id && (Wt[p.id] = i[i.length - 1][1]);
                      break;
                    case 'fill':
                      for (var d = p.parts.length - 1; d >= 0; d--)
                        i.push([l, c, p.parts[d]]);
                      break;
                    case 'if-break':
                      var h = p.groupId ? Wt[p.groupId] : c;
                      1 === h &&
                        p.breakContents &&
                        i.push([l, c, p.breakContents]),
                        2 === h &&
                          p.flatContents &&
                          i.push([l, c, p.flatContents]);
                      break;
                    case 'line':
                      switch (c) {
                        case 2:
                          if (!p.hard) {
                            p.soft || (o.push(' '), (n -= 1));
                            break;
                          }
                          return !0;
                        case 1:
                          return !0;
                      }
                  }
              } else {
                if (0 === a) return !0;
                i.push(t[a - 1]), a--;
              }
            return !1;
          }
          var an = fe.literalline,
            on = fe.concat,
            sn = {};
          function ln(e, t, n, r) {
            for (var u = [e]; 0 !== u.length; ) {
              var a = u.pop();
              if (a !== sn) {
                if ((n && u.push(a, sn), !t || !1 !== t(a)))
                  if ('concat' === a.type || 'fill' === a.type)
                    for (var i = a.parts.length - 1; i >= 0; --i)
                      u.push(a.parts[i]);
                  else if ('if-break' === a.type)
                    a.flatContents && u.push(a.flatContents),
                      a.breakContents && u.push(a.breakContents);
                  else if ('group' === a.type && a.expandedStates)
                    if (r)
                      for (var o = a.expandedStates.length - 1; o >= 0; --o)
                        u.push(a.expandedStates[o]);
                    else u.push(a.contents);
                  else a.contents && u.push(a.contents);
              } else n(u.pop());
            }
          }
          function cn(e, t) {
            if ('concat' === e.type || 'fill' === e.type) {
              var n = e.parts.map(function (e) {
                return cn(e, t);
              });
              return t(Object.assign({}, e, { parts: n }));
            }
            if ('if-break' === e.type) {
              var r = e.breakContents && cn(e.breakContents, t),
                u = e.flatContents && cn(e.flatContents, t);
              return t(
                Object.assign({}, e, { breakContents: r, flatContents: u })
              );
            }
            if (e.contents) {
              var a = cn(e.contents, t);
              return t(Object.assign({}, e, { contents: a }));
            }
            return t(e);
          }
          function pn(e, t, n) {
            var r = n,
              u = !1;
            return (
              ln(e, function (e) {
                var n = t(e);
                if ((void 0 !== n && ((u = !0), (r = n)), u)) return !1;
              }),
              r
            );
          }
          function fn(e) {
            return 'string' != typeof e && ('line' === e.type || void 0);
          }
          function dn(e) {
            return (
              !('group' !== e.type || !e.break) ||
              !('line' !== e.type || !e.hard) ||
              'break-parent' === e.type ||
              void 0
            );
          }
          function hn(e) {
            if (e.length > 0) {
              var t = e[e.length - 1];
              t.expandedStates || (t.break = !0);
            }
            return null;
          }
          function gn(e) {
            return 'line' !== e.type || e.hard
              ? 'if-break' === e.type
                ? e.flatContents || ''
                : e
              : e.soft
              ? ''
              : ' ';
          }
          function mn(e) {
            for (var t = [], n = e.filter(Boolean); 0 !== n.length; ) {
              var r = n.shift();
              r &&
                ('concat' !== r.type
                  ? 0 === t.length ||
                    'string' != typeof t[t.length - 1] ||
                    'string' != typeof r
                    ? t.push(r)
                    : (t[t.length - 1] += r)
                  : n.unshift.apply(n, m(r.parts)));
            }
            return t;
          }
          function yn(e) {
            if ('concat' === e.type) {
              for (var t = [], n = 0; n < e.parts.length; ++n) {
                var r = e.parts[n];
                if ('string' != typeof r && 'concat' === r.type)
                  t.push.apply(t, m(yn(r).parts));
                else {
                  var u = yn(r);
                  '' !== u && t.push(u);
                }
              }
              return Object.assign({}, e, { parts: t });
            }
            return 'if-break' === e.type
              ? Object.assign({}, e, {
                  breakContents:
                    null != e.breakContents ? yn(e.breakContents) : null,
                  flatContents:
                    null != e.flatContents ? yn(e.flatContents) : null,
                })
              : 'group' === e.type
              ? Object.assign({}, e, {
                  contents: yn(e.contents),
                  expandedStates: e.expandedStates
                    ? e.expandedStates.map(yn)
                    : e.expandedStates,
                })
              : e.contents
              ? Object.assign({}, e, { contents: yn(e.contents) })
              : e;
          }
          function Dn(e) {
            if ('string' == typeof e) return JSON.stringify(e);
            if ('line' === e.type)
              return e.literal
                ? 'literalline'
                : e.hard
                ? 'hardline'
                : e.soft
                ? 'softline'
                : 'line';
            if ('break-parent' === e.type) return 'breakParent';
            if ('trim' === e.type) return 'trim';
            if ('concat' === e.type)
              return '[' + e.parts.map(Dn).join(', ') + ']';
            if ('indent' === e.type) return 'indent(' + Dn(e.contents) + ')';
            if ('align' === e.type)
              return e.n === -1 / 0
                ? 'dedentToRoot(' + Dn(e.contents) + ')'
                : e.n < 0
                ? 'dedent(' + Dn(e.contents) + ')'
                : 'root' === e.n.type
                ? 'markAsRoot(' + Dn(e.contents) + ')'
                : 'align(' + JSON.stringify(e.n) + ', ' + Dn(e.contents) + ')';
            if ('if-break' === e.type)
              return (
                'ifBreak(' +
                Dn(e.breakContents) +
                (e.flatContents ? ', ' + Dn(e.flatContents) : '') +
                ')'
              );
            if ('group' === e.type)
              return e.expandedStates
                ? 'conditionalGroup([' +
                    e.expandedStates.map(Dn).join(',') +
                    '])'
                : (e.break ? 'wrappedGroup' : 'group') +
                    '(' +
                    Dn(e.contents) +
                    ')';
            if ('fill' === e.type)
              return 'fill(' + e.parts.map(Dn).join(', ') + ')';
            if ('line-suffix' === e.type)
              return 'lineSuffix(' + Dn(e.contents) + ')';
            if ('line-suffix-boundary' === e.type) return 'lineSuffixBoundary';
            throw new Error('Unknown doc type ' + e.type);
          }
          var vn = {
              builders: fe,
              printer: {
                printDocToString: function (e, t) {
                  Wt = {};
                  for (
                    var n = t.printWidth,
                      r = Yt(t.endOfLine),
                      u = 0,
                      a = [[{ value: '', length: 0, queue: [] }, 1, e]],
                      i = [],
                      o = !1,
                      s = [];
                    0 !== a.length;

                  ) {
                    var l = C(a.pop(), 3),
                      c = l[0],
                      p = l[1],
                      f = l[2];
                    if ('string' == typeof f) {
                      var d =
                        '\n' !== r && f.includes('\n')
                          ? f.replace(/\n/g, r)
                          : f;
                      i.push(d), (u += Xt(d));
                    } else
                      switch (f.type) {
                        case 'cursor':
                          i.push(Zt.placeholder);
                          break;
                        case 'concat':
                          for (var h = f.parts.length - 1; h >= 0; h--)
                            a.push([c, p, f.parts[h]]);
                          break;
                        case 'indent':
                          a.push([en(c, t), p, f.contents]);
                          break;
                        case 'align':
                          a.push([tn(c, f.n, t), p, f.contents]);
                          break;
                        case 'trim':
                          u -= rn(i);
                          break;
                        case 'group':
                          switch (p) {
                            case 2:
                              if (!o) {
                                a.push([c, f.break ? 1 : 2, f.contents]);
                                break;
                              }
                            case 1:
                              o = !1;
                              var g = [c, 2, f.contents],
                                y = n - u;
                              if (!f.break && un(g, a, y, t)) a.push(g);
                              else if (f.expandedStates) {
                                var D =
                                  f.expandedStates[f.expandedStates.length - 1];
                                if (f.break) {
                                  a.push([c, 1, D]);
                                  break;
                                }
                                for (
                                  var v = 1;
                                  v < f.expandedStates.length + 1;
                                  v++
                                ) {
                                  if (v >= f.expandedStates.length) {
                                    a.push([c, 1, D]);
                                    break;
                                  }
                                  var E = [c, 2, f.expandedStates[v]];
                                  if (un(E, a, y, t)) {
                                    a.push(E);
                                    break;
                                  }
                                }
                              } else a.push([c, 1, f.contents]);
                          }
                          f.id && (Wt[f.id] = a[a.length - 1][1]);
                          break;
                        case 'fill':
                          var b = n - u,
                            A = f.parts;
                          if (0 === A.length) break;
                          var F = C(A, 2),
                            x = F[0],
                            S = F[1],
                            w = [c, 2, x],
                            B = [c, 1, x],
                            T = un(w, [], b, t, !0);
                          if (1 === A.length) {
                            T ? a.push(w) : a.push(B);
                            break;
                          }
                          var k = [c, 2, S],
                            N = [c, 1, S];
                          if (2 === A.length) {
                            T ? (a.push(k), a.push(w)) : (a.push(N), a.push(B));
                            break;
                          }
                          A.splice(0, 2);
                          var O = [c, p, Qt(A)],
                            P = A[0];
                          un([c, 2, Kt([x, S, P])], [], b, t, !0)
                            ? (a.push(O), a.push(k), a.push(w))
                            : T
                            ? (a.push(O), a.push(N), a.push(w))
                            : (a.push(O), a.push(N), a.push(B));
                          break;
                        case 'if-break':
                          var M = f.groupId ? Wt[f.groupId] : p;
                          1 === M &&
                            f.breakContents &&
                            a.push([c, p, f.breakContents]),
                            2 === M &&
                              f.flatContents &&
                              a.push([c, p, f.flatContents]);
                          break;
                        case 'line-suffix':
                          s.push([c, p, f.contents]);
                          break;
                        case 'line-suffix-boundary':
                          s.length > 0 &&
                            a.push([c, p, { type: 'line', hard: !0 }]);
                          break;
                        case 'line':
                          switch (p) {
                            case 2:
                              if (!f.hard) {
                                f.soft || (i.push(' '), (u += 1));
                                break;
                              }
                              o = !0;
                            case 1:
                              if (s.length) {
                                a.push([c, p, f]),
                                  a.push.apply(a, m(s.reverse())),
                                  (s = []);
                                break;
                              }
                              f.literal
                                ? c.root
                                  ? (i.push(r, c.root.value),
                                    (u = c.root.length))
                                  : (i.push(r), (u = 0))
                                : ((u -= rn(i)),
                                  i.push(r + c.value),
                                  (u = c.length));
                          }
                      }
                    0 === a.length &&
                      s.length &&
                      (a.push.apply(a, m(s.reverse())), (s = []));
                  }
                  var I = i.indexOf(Zt.placeholder);
                  if (-1 !== I) {
                    var j = i.indexOf(Zt.placeholder, I + 1),
                      L = i.slice(0, I).join(''),
                      _ = i.slice(I + 1, j).join('');
                    return {
                      formatted: L + _ + i.slice(j + 1).join(''),
                      cursorNodeStart: L.length,
                      cursorNodeText: _,
                    };
                  }
                  return { formatted: i.join('') };
                },
              },
              utils: {
                isEmpty: function (e) {
                  return 'string' == typeof e && 0 === e.length;
                },
                willBreak: function (e) {
                  return pn(e, dn, !1);
                },
                isLineNext: function (e) {
                  return pn(e, fn, !1);
                },
                traverseDoc: ln,
                findInDoc: pn,
                mapDoc: cn,
                propagateBreaks: function (e) {
                  var t = new Set(),
                    n = [];
                  ln(
                    e,
                    function (e) {
                      if (
                        ('break-parent' === e.type && hn(n), 'group' === e.type)
                      ) {
                        if ((n.push(e), t.has(e))) return !1;
                        t.add(e);
                      }
                    },
                    function (e) {
                      'group' === e.type && n.pop().break && hn(n);
                    },
                    !0
                  );
                },
                removeLines: function (e) {
                  return cn(e, gn);
                },
                stripTrailingHardline: function e(t) {
                  var n =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  if ('concat' === t.type && 0 !== t.parts.length) {
                    var r = n
                        ? (function (e) {
                            for (
                              var t, n = e.parts, r = e.parts.length;
                              r > 0 && !t;
                              r--
                            )
                              t = n[r - 1];
                            return (
                              'group' === t.type && (n = t.contents.parts), n
                            );
                          })(t)
                        : t.parts,
                      u = r[r.length - 1];
                    if ('concat' === u.type)
                      return 2 === u.parts.length &&
                        u.parts[0].hard &&
                        'break-parent' === u.parts[1].type
                        ? { type: 'concat', parts: r.slice(0, -1) }
                        : {
                            type: 'concat',
                            parts: t.parts.slice(0, -1).concat(e(u)),
                          };
                  }
                  return t;
                },
                normalizeParts: mn,
                normalizeDoc: function (e) {
                  return cn(e, function (e) {
                    return e.parts
                      ? Object.assign({}, e, { parts: mn(e.parts) })
                      : e;
                  });
                },
                replaceNewlinesWithLiterallines: function (e) {
                  return cn(e, function (e) {
                    return 'string' == typeof e && e.includes('\n')
                      ? on(
                          e.split(/(\n)/g).map(function (e, t) {
                            return t % 2 == 0 ? e : an;
                          })
                        )
                      : e;
                  });
                },
              },
              debug: {
                printDocToDebug: function (e) {
                  return Dn(yn(e));
                },
              },
            },
            En = function () {
              return !1;
            },
            Cn = function () {
              return '';
            },
            bn = { existsSync: En, readFileSync: Cn },
            An = Object.freeze({
              __proto__: null,
              existsSync: En,
              readFileSync: Cn,
              default: bn,
            });
          function Fn(e) {
            if ('string' != typeof e)
              throw new TypeError(
                'Path must be a string. Received ' + JSON.stringify(e)
              );
          }
          function xn(e, t) {
            for (
              var n, r = '', u = 0, a = -1, i = 0, o = 0;
              o <= e.length;
              ++o
            ) {
              if (o < e.length) n = e.charCodeAt(o);
              else {
                if (47 === n) break;
                n = 47;
              }
              if (47 === n) {
                if (a === o - 1 || 1 === i);
                else if (a !== o - 1 && 2 === i) {
                  if (
                    r.length < 2 ||
                    2 !== u ||
                    46 !== r.charCodeAt(r.length - 1) ||
                    46 !== r.charCodeAt(r.length - 2)
                  )
                    if (r.length > 2) {
                      var s = r.lastIndexOf('/');
                      if (s !== r.length - 1) {
                        -1 === s
                          ? ((r = ''), (u = 0))
                          : (u =
                              (r = r.slice(0, s)).length -
                              1 -
                              r.lastIndexOf('/')),
                          (a = o),
                          (i = 0);
                        continue;
                      }
                    } else if (2 === r.length || 1 === r.length) {
                      (r = ''), (u = 0), (a = o), (i = 0);
                      continue;
                    }
                  t && (r.length > 0 ? (r += '/..') : (r = '..'), (u = 2));
                } else
                  r.length > 0
                    ? (r += '/' + e.slice(a + 1, o))
                    : (r = e.slice(a + 1, o)),
                    (u = o - a - 1);
                (a = o), (i = 0);
              } else 46 === n && -1 !== i ? ++i : (i = -1);
            }
            return r;
          }
          var Sn = {
            resolve: function () {
              for (
                var e, t = '', n = !1, r = arguments.length - 1;
                r >= -1 && !n;
                r--
              ) {
                var u;
                r >= 0
                  ? (u = arguments[r])
                  : (void 0 === e && (e = Je.cwd()), (u = e)),
                  Fn(u),
                  0 !== u.length &&
                    ((t = u + '/' + t), (n = 47 === u.charCodeAt(0)));
              }
              return (
                (t = xn(t, !n)),
                n ? (t.length > 0 ? '/' + t : '/') : t.length > 0 ? t : '.'
              );
            },
            normalize: function (e) {
              if ((Fn(e), 0 === e.length)) return '.';
              var t = 47 === e.charCodeAt(0),
                n = 47 === e.charCodeAt(e.length - 1);
              return (
                0 !== (e = xn(e, !t)).length || t || (e = '.'),
                e.length > 0 && n && (e += '/'),
                t ? '/' + e : e
              );
            },
            isAbsolute: function (e) {
              return Fn(e), e.length > 0 && 47 === e.charCodeAt(0);
            },
            join: function () {
              if (0 === arguments.length) return '.';
              for (var e, t = 0; t < arguments.length; ++t) {
                var n = arguments[t];
                Fn(n),
                  n.length > 0 && (void 0 === e ? (e = n) : (e += '/' + n));
              }
              return void 0 === e ? '.' : Sn.normalize(e);
            },
            relative: function (e, t) {
              if ((Fn(e), Fn(t), e === t)) return '';
              if ((e = Sn.resolve(e)) === (t = Sn.resolve(t))) return '';
              for (var n = 1; n < e.length && 47 === e.charCodeAt(n); ++n);
              for (
                var r = e.length, u = r - n, a = 1;
                a < t.length && 47 === t.charCodeAt(a);
                ++a
              );
              for (
                var i = t.length - a, o = u < i ? u : i, s = -1, l = 0;
                l <= o;
                ++l
              ) {
                if (l === o) {
                  if (i > o) {
                    if (47 === t.charCodeAt(a + l)) return t.slice(a + l + 1);
                    if (0 === l) return t.slice(a + l);
                  } else
                    u > o &&
                      (47 === e.charCodeAt(n + l)
                        ? (s = l)
                        : 0 === l && (s = 0));
                  break;
                }
                var c = e.charCodeAt(n + l);
                if (c !== t.charCodeAt(a + l)) break;
                47 === c && (s = l);
              }
              var p = '';
              for (l = n + s + 1; l <= r; ++l)
                (l !== r && 47 !== e.charCodeAt(l)) ||
                  (0 === p.length ? (p += '..') : (p += '/..'));
              return p.length > 0
                ? p + t.slice(a + s)
                : ((a += s), 47 === t.charCodeAt(a) && ++a, t.slice(a));
            },
            _makeLong: function (e) {
              return e;
            },
            dirname: function (e) {
              if ((Fn(e), 0 === e.length)) return '.';
              for (
                var t = e.charCodeAt(0),
                  n = 47 === t,
                  r = -1,
                  u = !0,
                  a = e.length - 1;
                a >= 1;
                --a
              )
                if (47 === (t = e.charCodeAt(a))) {
                  if (!u) {
                    r = a;
                    break;
                  }
                } else u = !1;
              return -1 === r
                ? n
                  ? '/'
                  : '.'
                : n && 1 === r
                ? '//'
                : e.slice(0, r);
            },
            basename: function (e, t) {
              if (void 0 !== t && 'string' != typeof t)
                throw new TypeError('"ext" argument must be a string');
              Fn(e);
              var n,
                r = 0,
                u = -1,
                a = !0;
              if (void 0 !== t && t.length > 0 && t.length <= e.length) {
                if (t.length === e.length && t === e) return '';
                var i = t.length - 1,
                  o = -1;
                for (n = e.length - 1; n >= 0; --n) {
                  var s = e.charCodeAt(n);
                  if (47 === s) {
                    if (!a) {
                      r = n + 1;
                      break;
                    }
                  } else
                    -1 === o && ((a = !1), (o = n + 1)),
                      i >= 0 &&
                        (s === t.charCodeAt(i)
                          ? -1 == --i && (u = n)
                          : ((i = -1), (u = o)));
                }
                return (
                  r === u ? (u = o) : -1 === u && (u = e.length), e.slice(r, u)
                );
              }
              for (n = e.length - 1; n >= 0; --n)
                if (47 === e.charCodeAt(n)) {
                  if (!a) {
                    r = n + 1;
                    break;
                  }
                } else -1 === u && ((a = !1), (u = n + 1));
              return -1 === u ? '' : e.slice(r, u);
            },
            extname: function (e) {
              Fn(e);
              for (
                var t = -1, n = 0, r = -1, u = !0, a = 0, i = e.length - 1;
                i >= 0;
                --i
              ) {
                var o = e.charCodeAt(i);
                if (47 !== o)
                  -1 === r && ((u = !1), (r = i + 1)),
                    46 === o
                      ? -1 === t
                        ? (t = i)
                        : 1 !== a && (a = 1)
                      : -1 !== t && (a = -1);
                else if (!u) {
                  n = i + 1;
                  break;
                }
              }
              return -1 === t ||
                -1 === r ||
                0 === a ||
                (1 === a && t === r - 1 && t === n + 1)
                ? ''
                : e.slice(t, r);
            },
            format: function (e) {
              if (null === e || 'object' != k(e))
                throw new TypeError(
                  'The "pathObject" argument must be of type Object. Received type ' +
                    k(e)
                );
              return (
                (n = (t = e).dir || t.root),
                (r = t.base || (t.name || '') + (t.ext || '')),
                n ? (n === t.root ? n + r : n + '/' + r) : r
              );
              var t, n, r;
            },
            parse: function (e) {
              Fn(e);
              var t = { root: '', dir: '', base: '', ext: '', name: '' };
              if (0 === e.length) return t;
              var n,
                r = e.charCodeAt(0),
                u = 47 === r;
              u ? ((t.root = '/'), (n = 1)) : (n = 0);
              for (
                var a = -1, i = 0, o = -1, s = !0, l = e.length - 1, c = 0;
                l >= n;
                --l
              )
                if (47 !== (r = e.charCodeAt(l)))
                  -1 === o && ((s = !1), (o = l + 1)),
                    46 === r
                      ? -1 === a
                        ? (a = l)
                        : 1 !== c && (c = 1)
                      : -1 !== a && (c = -1);
                else if (!s) {
                  i = l + 1;
                  break;
                }
              return (
                -1 === a ||
                -1 === o ||
                0 === c ||
                (1 === c && a === o - 1 && a === i + 1)
                  ? -1 !== o &&
                    (t.base = t.name =
                      0 === i && u ? e.slice(1, o) : e.slice(i, o))
                  : (0 === i && u
                      ? ((t.name = e.slice(1, a)), (t.base = e.slice(1, o)))
                      : ((t.name = e.slice(i, a)), (t.base = e.slice(i, o))),
                    (t.ext = e.slice(a, o))),
                i > 0 ? (t.dir = e.slice(0, i - 1)) : u && (t.dir = '/'),
                t
              );
            },
            sep: '/',
            delimiter: ':',
            win32: null,
            posix: null,
          };
          Sn.posix = Sn;
          var wn = Sn,
            Bn = Object.freeze(
              Object.assign(Object.create(null), wn, {
                default: wn,
                __moduleExports: wn,
              })
            ),
            Tn = [],
            kn = [],
            Nn = 'undefined' != typeof Uint8Array ? Uint8Array : Array,
            On = !1;
          function Pn() {
            On = !0;
            for (
              var e =
                  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
                t = 0,
                n = e.length;
              t < n;
              ++t
            )
              (Tn[t] = e[t]), (kn[e.charCodeAt(t)] = t);
            (kn['-'.charCodeAt(0)] = 62), (kn['_'.charCodeAt(0)] = 63);
          }
          function Mn(e, t, n) {
            for (var r, u, a = [], i = t; i < n; i += 3)
              (r = (e[i] << 16) + (e[i + 1] << 8) + e[i + 2]),
                a.push(
                  Tn[((u = r) >> 18) & 63] +
                    Tn[(u >> 12) & 63] +
                    Tn[(u >> 6) & 63] +
                    Tn[63 & u]
                );
            return a.join('');
          }
          function In(e) {
            var t;
            On || Pn();
            for (
              var n = e.length,
                r = n % 3,
                u = '',
                a = [],
                i = 16383,
                o = 0,
                s = n - r;
              o < s;
              o += i
            )
              a.push(Mn(e, o, o + i > s ? s : o + i));
            return (
              1 === r
                ? ((t = e[n - 1]),
                  (u += Tn[t >> 2]),
                  (u += Tn[(t << 4) & 63]),
                  (u += '=='))
                : 2 === r &&
                  ((t = (e[n - 2] << 8) + e[n - 1]),
                  (u += Tn[t >> 10]),
                  (u += Tn[(t >> 4) & 63]),
                  (u += Tn[(t << 2) & 63]),
                  (u += '=')),
              a.push(u),
              a.join('')
            );
          }
          function jn(e, t, n, r, u) {
            var a,
              i,
              o = 8 * u - r - 1,
              s = (1 << o) - 1,
              l = s >> 1,
              c = -7,
              p = n ? u - 1 : 0,
              f = n ? -1 : 1,
              d = e[t + p];
            for (
              p += f, a = d & ((1 << -c) - 1), d >>= -c, c += o;
              c > 0;
              a = 256 * a + e[t + p], p += f, c -= 8
            );
            for (
              i = a & ((1 << -c) - 1), a >>= -c, c += r;
              c > 0;
              i = 256 * i + e[t + p], p += f, c -= 8
            );
            if (0 === a) a = 1 - l;
            else {
              if (a === s) return i ? NaN : (1 / 0) * (d ? -1 : 1);
              (i += Math.pow(2, r)), (a -= l);
            }
            return (d ? -1 : 1) * i * Math.pow(2, a - r);
          }
          function Ln(e, t, n, r, u, a) {
            var i,
              o,
              s,
              l = 8 * a - u - 1,
              c = (1 << l) - 1,
              p = c >> 1,
              f = 23 === u ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
              d = r ? 0 : a - 1,
              h = r ? 1 : -1,
              g = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
            for (
              t = Math.abs(t),
                isNaN(t) || t === 1 / 0
                  ? ((o = isNaN(t) ? 1 : 0), (i = c))
                  : ((i = Math.floor(Math.log(t) / Math.LN2)),
                    t * (s = Math.pow(2, -i)) < 1 && (i--, (s *= 2)),
                    (t += i + p >= 1 ? f / s : f * Math.pow(2, 1 - p)) * s >=
                      2 && (i++, (s /= 2)),
                    i + p >= c
                      ? ((o = 0), (i = c))
                      : i + p >= 1
                      ? ((o = (t * s - 1) * Math.pow(2, u)), (i += p))
                      : ((o = t * Math.pow(2, p - 1) * Math.pow(2, u)),
                        (i = 0)));
              u >= 8;
              e[n + d] = 255 & o, d += h, o /= 256, u -= 8
            );
            for (
              i = (i << u) | o, l += u;
              l > 0;
              e[n + d] = 255 & i, d += h, i /= 256, l -= 8
            );
            e[n + d - h] |= 128 * g;
          }
          var _n = {}.toString,
            Rn =
              Array.isArray ||
              function (e) {
                return '[object Array]' == _n.call(e);
              };
          function $n() {
            return qn.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
          }
          function Vn(e, t) {
            if ($n() < t) throw new RangeError('Invalid typed array length');
            return (
              qn.TYPED_ARRAY_SUPPORT
                ? ((e = new Uint8Array(t)).__proto__ = qn.prototype)
                : (null === e && (e = new qn(t)), (e.length = t)),
              e
            );
          }
          function qn(e, t, n) {
            if (!(qn.TYPED_ARRAY_SUPPORT || this instanceof qn))
              return new qn(e, t, n);
            if ('number' == typeof e) {
              if ('string' == typeof t)
                throw new Error(
                  'If encoding is specified then the first argument must be a string'
                );
              return Jn(this, e);
            }
            return Wn(this, e, t, n);
          }
          function Wn(e, t, n, r) {
            if ('number' == typeof t)
              throw new TypeError('"value" argument must not be a number');
            return 'undefined' != typeof ArrayBuffer && t instanceof ArrayBuffer
              ? (function (e, t, n, r) {
                  if ((t.byteLength, n < 0 || t.byteLength < n))
                    throw new RangeError("'offset' is out of bounds");
                  if (t.byteLength < n + (r || 0))
                    throw new RangeError("'length' is out of bounds");
                  return (
                    (t =
                      void 0 === n && void 0 === r
                        ? new Uint8Array(t)
                        : void 0 === r
                        ? new Uint8Array(t, n)
                        : new Uint8Array(t, n, r)),
                    qn.TYPED_ARRAY_SUPPORT
                      ? ((e = t).__proto__ = qn.prototype)
                      : (e = zn(e, t)),
                    e
                  );
                })(e, t, n, r)
              : 'string' == typeof t
              ? (function (e, t, n) {
                  if (
                    (('string' == typeof n && '' !== n) || (n = 'utf8'),
                    !qn.isEncoding(n))
                  )
                    throw new TypeError(
                      '"encoding" must be a valid string encoding'
                    );
                  var r = 0 | Xn(t, n),
                    u = (e = Vn(e, r)).write(t, n);
                  return u !== r && (e = e.slice(0, u)), e;
                })(e, t, n)
              : (function (e, t) {
                  if (Hn(t)) {
                    var n = 0 | Gn(t.length);
                    return 0 === (e = Vn(e, n)).length || t.copy(e, 0, 0, n), e;
                  }
                  if (t) {
                    if (
                      ('undefined' != typeof ArrayBuffer &&
                        t.buffer instanceof ArrayBuffer) ||
                      'length' in t
                    )
                      return 'number' != typeof t.length || (r = t.length) != r
                        ? Vn(e, 0)
                        : zn(e, t);
                    if ('Buffer' === t.type && Rn(t.data)) return zn(e, t.data);
                  }
                  var r;
                  throw new TypeError(
                    'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.'
                  );
                })(e, t);
          }
          function Un(e) {
            if ('number' != typeof e)
              throw new TypeError('"size" argument must be a number');
            if (e < 0)
              throw new RangeError('"size" argument must not be negative');
          }
          function Jn(e, t) {
            if (
              (Un(t),
              (e = Vn(e, t < 0 ? 0 : 0 | Gn(t))),
              !qn.TYPED_ARRAY_SUPPORT)
            )
              for (var n = 0; n < t; ++n) e[n] = 0;
            return e;
          }
          function zn(e, t) {
            var n = t.length < 0 ? 0 : 0 | Gn(t.length);
            e = Vn(e, n);
            for (var r = 0; r < n; r += 1) e[r] = 255 & t[r];
            return e;
          }
          function Gn(e) {
            if (e >= $n())
              throw new RangeError(
                'Attempt to allocate Buffer larger than maximum size: 0x' +
                  $n().toString(16) +
                  ' bytes'
              );
            return 0 | e;
          }
          function Hn(e) {
            return !(null == e || !e._isBuffer);
          }
          function Xn(e, t) {
            if (Hn(e)) return e.length;
            if (
              'undefined' != typeof ArrayBuffer &&
              'function' == typeof ArrayBuffer.isView &&
              (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
            )
              return e.byteLength;
            'string' != typeof e && (e = '' + e);
            var n = e.length;
            if (0 === n) return 0;
            for (var r = !1; ; )
              switch (t) {
                case 'ascii':
                case 'latin1':
                case 'binary':
                  return n;
                case 'utf8':
                case 'utf-8':
                case void 0:
                  return Cr(e).length;
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return 2 * n;
                case 'hex':
                  return n >>> 1;
                case 'base64':
                  return br(e).length;
                default:
                  if (r) return Cr(e).length;
                  (t = ('' + t).toLowerCase()), (r = !0);
              }
          }
          function Yn(e, t, n) {
            var r = e[t];
            (e[t] = e[n]), (e[n] = r);
          }
          function Kn(e, t, n, r, u) {
            if (0 === e.length) return -1;
            if (
              ('string' == typeof n
                ? ((r = n), (n = 0))
                : n > 2147483647
                ? (n = 2147483647)
                : n < -2147483648 && (n = -2147483648),
              (n = +n),
              isNaN(n) && (n = u ? 0 : e.length - 1),
              n < 0 && (n = e.length + n),
              n >= e.length)
            ) {
              if (u) return -1;
              n = e.length - 1;
            } else if (n < 0) {
              if (!u) return -1;
              n = 0;
            }
            if (('string' == typeof t && (t = qn.from(t, r)), Hn(t)))
              return 0 === t.length ? -1 : Qn(e, t, n, r, u);
            if ('number' == typeof t)
              return (
                (t &= 255),
                qn.TYPED_ARRAY_SUPPORT &&
                'function' == typeof Uint8Array.prototype.indexOf
                  ? u
                    ? Uint8Array.prototype.indexOf.call(e, t, n)
                    : Uint8Array.prototype.lastIndexOf.call(e, t, n)
                  : Qn(e, [t], n, r, u)
              );
            throw new TypeError('val must be string, number or Buffer');
          }
          function Qn(e, t, n, r, u) {
            var a,
              i = 1,
              o = e.length,
              s = t.length;
            if (
              void 0 !== r &&
              ('ucs2' === (r = String(r).toLowerCase()) ||
                'ucs-2' === r ||
                'utf16le' === r ||
                'utf-16le' === r)
            ) {
              if (e.length < 2 || t.length < 2) return -1;
              (i = 2), (o /= 2), (s /= 2), (n /= 2);
            }
            function l(e, t) {
              return 1 === i ? e[t] : e.readUInt16BE(t * i);
            }
            if (u) {
              var c = -1;
              for (a = n; a < o; a++)
                if (l(e, a) === l(t, -1 === c ? 0 : a - c)) {
                  if ((-1 === c && (c = a), a - c + 1 === s)) return c * i;
                } else -1 !== c && (a -= a - c), (c = -1);
            } else
              for (n + s > o && (n = o - s), a = n; a >= 0; a--) {
                for (var p = !0, f = 0; f < s; f++)
                  if (l(e, a + f) !== l(t, f)) {
                    p = !1;
                    break;
                  }
                if (p) return a;
              }
            return -1;
          }
          function Zn(e, t, n, r) {
            n = Number(n) || 0;
            var u = e.length - n;
            r ? (r = Number(r)) > u && (r = u) : (r = u);
            var a = t.length;
            if (a % 2 != 0) throw new TypeError('Invalid hex string');
            r > a / 2 && (r = a / 2);
            for (var i = 0; i < r; ++i) {
              var o = parseInt(t.substr(2 * i, 2), 16);
              if (isNaN(o)) return i;
              e[n + i] = o;
            }
            return i;
          }
          function er(e, t, n, r) {
            return Ar(Cr(t, e.length - n), e, n, r);
          }
          function tr(e, t, n, r) {
            return Ar(
              (function (e) {
                for (var t = [], n = 0; n < e.length; ++n)
                  t.push(255 & e.charCodeAt(n));
                return t;
              })(t),
              e,
              n,
              r
            );
          }
          function nr(e, t, n, r) {
            return tr(e, t, n, r);
          }
          function rr(e, t, n, r) {
            return Ar(br(t), e, n, r);
          }
          function ur(e, t, n, r) {
            return Ar(
              (function (e, t) {
                for (
                  var n, r, u, a = [], i = 0;
                  i < e.length && !((t -= 2) < 0);
                  ++i
                )
                  (r = (n = e.charCodeAt(i)) >> 8),
                    (u = n % 256),
                    a.push(u),
                    a.push(r);
                return a;
              })(t, e.length - n),
              e,
              n,
              r
            );
          }
          function ar(e, t, n) {
            return 0 === t && n === e.length ? In(e) : In(e.slice(t, n));
          }
          function ir(e, t, n) {
            n = Math.min(e.length, n);
            for (var r = [], u = t; u < n; ) {
              var a,
                i,
                o,
                s,
                l = e[u],
                c = null,
                p = l > 239 ? 4 : l > 223 ? 3 : l > 191 ? 2 : 1;
              if (u + p <= n)
                switch (p) {
                  case 1:
                    l < 128 && (c = l);
                    break;
                  case 2:
                    128 == (192 & (a = e[u + 1])) &&
                      (s = ((31 & l) << 6) | (63 & a)) > 127 &&
                      (c = s);
                    break;
                  case 3:
                    (a = e[u + 1]),
                      (i = e[u + 2]),
                      128 == (192 & a) &&
                        128 == (192 & i) &&
                        (s = ((15 & l) << 12) | ((63 & a) << 6) | (63 & i)) >
                          2047 &&
                        (s < 55296 || s > 57343) &&
                        (c = s);
                    break;
                  case 4:
                    (a = e[u + 1]),
                      (i = e[u + 2]),
                      (o = e[u + 3]),
                      128 == (192 & a) &&
                        128 == (192 & i) &&
                        128 == (192 & o) &&
                        (s =
                          ((15 & l) << 18) |
                          ((63 & a) << 12) |
                          ((63 & i) << 6) |
                          (63 & o)) > 65535 &&
                        s < 1114112 &&
                        (c = s);
                }
              null === c
                ? ((c = 65533), (p = 1))
                : c > 65535 &&
                  ((c -= 65536),
                  r.push(((c >>> 10) & 1023) | 55296),
                  (c = 56320 | (1023 & c))),
                r.push(c),
                (u += p);
            }
            return (function (e) {
              var t = e.length;
              if (t <= or) return String.fromCharCode.apply(String, e);
              for (var n = '', r = 0; r < t; )
                n += String.fromCharCode.apply(String, e.slice(r, (r += or)));
              return n;
            })(r);
          }
          (qn.TYPED_ARRAY_SUPPORT =
            void 0 === Ce.TYPED_ARRAY_SUPPORT || Ce.TYPED_ARRAY_SUPPORT),
            (qn.poolSize = 8192),
            (qn._augment = function (e) {
              return (e.__proto__ = qn.prototype), e;
            }),
            (qn.from = function (e, t, n) {
              return Wn(null, e, t, n);
            }),
            qn.TYPED_ARRAY_SUPPORT &&
              ((qn.prototype.__proto__ = Uint8Array.prototype),
              (qn.__proto__ = Uint8Array)),
            (qn.alloc = function (e, t, n) {
              return (function (e, t, n, r) {
                return (
                  Un(t),
                  t <= 0
                    ? Vn(e, t)
                    : void 0 !== n
                    ? 'string' == typeof r
                      ? Vn(e, t).fill(n, r)
                      : Vn(e, t).fill(n)
                    : Vn(e, t)
                );
              })(null, e, t, n);
            }),
            (qn.allocUnsafe = function (e) {
              return Jn(null, e);
            }),
            (qn.allocUnsafeSlow = function (e) {
              return Jn(null, e);
            }),
            (qn.isBuffer = function (e) {
              return (
                null != e &&
                (!!e._isBuffer ||
                  Fr(e) ||
                  (function (e) {
                    return (
                      'function' == typeof e.readFloatLE &&
                      'function' == typeof e.slice &&
                      Fr(e.slice(0, 0))
                    );
                  })(e))
              );
            }),
            (qn.compare = function (e, t) {
              if (!Hn(e) || !Hn(t))
                throw new TypeError('Arguments must be Buffers');
              if (e === t) return 0;
              for (
                var n = e.length, r = t.length, u = 0, a = Math.min(n, r);
                u < a;
                ++u
              )
                if (e[u] !== t[u]) {
                  (n = e[u]), (r = t[u]);
                  break;
                }
              return n < r ? -1 : r < n ? 1 : 0;
            }),
            (qn.isEncoding = function (e) {
              switch (String(e).toLowerCase()) {
                case 'hex':
                case 'utf8':
                case 'utf-8':
                case 'ascii':
                case 'latin1':
                case 'binary':
                case 'base64':
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return !0;
                default:
                  return !1;
              }
            }),
            (qn.concat = function (e, t) {
              if (!Rn(e))
                throw new TypeError(
                  '"list" argument must be an Array of Buffers'
                );
              if (0 === e.length) return qn.alloc(0);
              var n;
              if (void 0 === t)
                for (t = 0, n = 0; n < e.length; ++n) t += e[n].length;
              var r = qn.allocUnsafe(t),
                u = 0;
              for (n = 0; n < e.length; ++n) {
                var a = e[n];
                if (!Hn(a))
                  throw new TypeError(
                    '"list" argument must be an Array of Buffers'
                  );
                a.copy(r, u), (u += a.length);
              }
              return r;
            }),
            (qn.byteLength = Xn),
            (qn.prototype._isBuffer = !0),
            (qn.prototype.swap16 = function () {
              var e = this.length;
              if (e % 2 != 0)
                throw new RangeError(
                  'Buffer size must be a multiple of 16-bits'
                );
              for (var t = 0; t < e; t += 2) Yn(this, t, t + 1);
              return this;
            }),
            (qn.prototype.swap32 = function () {
              var e = this.length;
              if (e % 4 != 0)
                throw new RangeError(
                  'Buffer size must be a multiple of 32-bits'
                );
              for (var t = 0; t < e; t += 4)
                Yn(this, t, t + 3), Yn(this, t + 1, t + 2);
              return this;
            }),
            (qn.prototype.swap64 = function () {
              var e = this.length;
              if (e % 8 != 0)
                throw new RangeError(
                  'Buffer size must be a multiple of 64-bits'
                );
              for (var t = 0; t < e; t += 8)
                Yn(this, t, t + 7),
                  Yn(this, t + 1, t + 6),
                  Yn(this, t + 2, t + 5),
                  Yn(this, t + 3, t + 4);
              return this;
            }),
            (qn.prototype.toString = function () {
              var e = 0 | this.length;
              return 0 === e
                ? ''
                : 0 === arguments.length
                ? ir(this, 0, e)
                : function (e, t, n) {
                    var r = !1;
                    if (((void 0 === t || t < 0) && (t = 0), t > this.length))
                      return '';
                    if (
                      ((void 0 === n || n > this.length) && (n = this.length),
                      n <= 0)
                    )
                      return '';
                    if ((n >>>= 0) <= (t >>>= 0)) return '';
                    for (e || (e = 'utf8'); ; )
                      switch (e) {
                        case 'hex':
                          return cr(this, t, n);
                        case 'utf8':
                        case 'utf-8':
                          return ir(this, t, n);
                        case 'ascii':
                          return sr(this, t, n);
                        case 'latin1':
                        case 'binary':
                          return lr(this, t, n);
                        case 'base64':
                          return ar(this, t, n);
                        case 'ucs2':
                        case 'ucs-2':
                        case 'utf16le':
                        case 'utf-16le':
                          return pr(this, t, n);
                        default:
                          if (r) throw new TypeError('Unknown encoding: ' + e);
                          (e = (e + '').toLowerCase()), (r = !0);
                      }
                  }.apply(this, arguments);
            }),
            (qn.prototype.equals = function (e) {
              if (!Hn(e)) throw new TypeError('Argument must be a Buffer');
              return this === e || 0 === qn.compare(this, e);
            }),
            (qn.prototype.inspect = function () {
              var e = '';
              return (
                this.length > 0 &&
                  ((e = this.toString('hex', 0, 50).match(/.{2}/g).join(' ')),
                  this.length > 50 && (e += ' ... ')),
                '<Buffer ' + e + '>'
              );
            }),
            (qn.prototype.compare = function (e, t, n, r, u) {
              if (!Hn(e)) throw new TypeError('Argument must be a Buffer');
              if (
                (void 0 === t && (t = 0),
                void 0 === n && (n = e ? e.length : 0),
                void 0 === r && (r = 0),
                void 0 === u && (u = this.length),
                t < 0 || n > e.length || r < 0 || u > this.length)
              )
                throw new RangeError('out of range index');
              if (r >= u && t >= n) return 0;
              if (r >= u) return -1;
              if (t >= n) return 1;
              if (this === e) return 0;
              for (
                var a = (u >>>= 0) - (r >>>= 0),
                  i = (n >>>= 0) - (t >>>= 0),
                  o = Math.min(a, i),
                  s = this.slice(r, u),
                  l = e.slice(t, n),
                  c = 0;
                c < o;
                ++c
              )
                if (s[c] !== l[c]) {
                  (a = s[c]), (i = l[c]);
                  break;
                }
              return a < i ? -1 : i < a ? 1 : 0;
            }),
            (qn.prototype.includes = function (e, t, n) {
              return -1 !== this.indexOf(e, t, n);
            }),
            (qn.prototype.indexOf = function (e, t, n) {
              return Kn(this, e, t, n, !0);
            }),
            (qn.prototype.lastIndexOf = function (e, t, n) {
              return Kn(this, e, t, n, !1);
            }),
            (qn.prototype.write = function (e, t, n, r) {
              if (void 0 === t) (r = 'utf8'), (n = this.length), (t = 0);
              else if (void 0 === n && 'string' == typeof t)
                (r = t), (n = this.length), (t = 0);
              else {
                if (!isFinite(t))
                  throw new Error(
                    'Buffer.write(string, encoding, offset[, length]) is no longer supported'
                  );
                (t |= 0),
                  isFinite(n)
                    ? ((n |= 0), void 0 === r && (r = 'utf8'))
                    : ((r = n), (n = void 0));
              }
              var u = this.length - t;
              if (
                ((void 0 === n || n > u) && (n = u),
                (e.length > 0 && (n < 0 || t < 0)) || t > this.length)
              )
                throw new RangeError('Attempt to write outside buffer bounds');
              r || (r = 'utf8');
              for (var a = !1; ; )
                switch (r) {
                  case 'hex':
                    return Zn(this, e, t, n);
                  case 'utf8':
                  case 'utf-8':
                    return er(this, e, t, n);
                  case 'ascii':
                    return tr(this, e, t, n);
                  case 'latin1':
                  case 'binary':
                    return nr(this, e, t, n);
                  case 'base64':
                    return rr(this, e, t, n);
                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return ur(this, e, t, n);
                  default:
                    if (a) throw new TypeError('Unknown encoding: ' + r);
                    (r = ('' + r).toLowerCase()), (a = !0);
                }
            }),
            (qn.prototype.toJSON = function () {
              return {
                type: 'Buffer',
                data: Array.prototype.slice.call(this._arr || this, 0),
              };
            });
          var or = 4096;
          function sr(e, t, n) {
            var r = '';
            n = Math.min(e.length, n);
            for (var u = t; u < n; ++u) r += String.fromCharCode(127 & e[u]);
            return r;
          }
          function lr(e, t, n) {
            var r = '';
            n = Math.min(e.length, n);
            for (var u = t; u < n; ++u) r += String.fromCharCode(e[u]);
            return r;
          }
          function cr(e, t, n) {
            var r = e.length;
            (!t || t < 0) && (t = 0), (!n || n < 0 || n > r) && (n = r);
            for (var u = '', a = t; a < n; ++a) u += Er(e[a]);
            return u;
          }
          function pr(e, t, n) {
            for (var r = e.slice(t, n), u = '', a = 0; a < r.length; a += 2)
              u += String.fromCharCode(r[a] + 256 * r[a + 1]);
            return u;
          }
          function fr(e, t, n) {
            if (e % 1 != 0 || e < 0) throw new RangeError('offset is not uint');
            if (e + t > n)
              throw new RangeError('Trying to access beyond buffer length');
          }
          function dr(e, t, n, r, u, a) {
            if (!Hn(e))
              throw new TypeError(
                '"buffer" argument must be a Buffer instance'
              );
            if (t > u || t < a)
              throw new RangeError('"value" argument is out of bounds');
            if (n + r > e.length) throw new RangeError('Index out of range');
          }
          function hr(e, t, n, r) {
            t < 0 && (t = 65535 + t + 1);
            for (var u = 0, a = Math.min(e.length - n, 2); u < a; ++u)
              e[n + u] =
                (t & (255 << (8 * (r ? u : 1 - u)))) >>> (8 * (r ? u : 1 - u));
          }
          function gr(e, t, n, r) {
            t < 0 && (t = 4294967295 + t + 1);
            for (var u = 0, a = Math.min(e.length - n, 4); u < a; ++u)
              e[n + u] = (t >>> (8 * (r ? u : 3 - u))) & 255;
          }
          function mr(e, t, n, r, u, a) {
            if (n + r > e.length) throw new RangeError('Index out of range');
            if (n < 0) throw new RangeError('Index out of range');
          }
          function yr(e, t, n, r, u) {
            return u || mr(e, 0, n, 4), Ln(e, t, n, r, 23, 4), n + 4;
          }
          function Dr(e, t, n, r, u) {
            return u || mr(e, 0, n, 8), Ln(e, t, n, r, 52, 8), n + 8;
          }
          (qn.prototype.slice = function (e, t) {
            var n,
              r = this.length;
            if (
              ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
              (t = void 0 === t ? r : ~~t) < 0
                ? (t += r) < 0 && (t = 0)
                : t > r && (t = r),
              t < e && (t = e),
              qn.TYPED_ARRAY_SUPPORT)
            )
              (n = this.subarray(e, t)).__proto__ = qn.prototype;
            else {
              var u = t - e;
              n = new qn(u, void 0);
              for (var a = 0; a < u; ++a) n[a] = this[a + e];
            }
            return n;
          }),
            (qn.prototype.readUIntLE = function (e, t, n) {
              (e |= 0), (t |= 0), n || fr(e, t, this.length);
              for (var r = this[e], u = 1, a = 0; ++a < t && (u *= 256); )
                r += this[e + a] * u;
              return r;
            }),
            (qn.prototype.readUIntBE = function (e, t, n) {
              (e |= 0), (t |= 0), n || fr(e, t, this.length);
              for (var r = this[e + --t], u = 1; t > 0 && (u *= 256); )
                r += this[e + --t] * u;
              return r;
            }),
            (qn.prototype.readUInt8 = function (e, t) {
              return t || fr(e, 1, this.length), this[e];
            }),
            (qn.prototype.readUInt16LE = function (e, t) {
              return t || fr(e, 2, this.length), this[e] | (this[e + 1] << 8);
            }),
            (qn.prototype.readUInt16BE = function (e, t) {
              return t || fr(e, 2, this.length), (this[e] << 8) | this[e + 1];
            }),
            (qn.prototype.readUInt32LE = function (e, t) {
              return (
                t || fr(e, 4, this.length),
                (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                  16777216 * this[e + 3]
              );
            }),
            (qn.prototype.readUInt32BE = function (e, t) {
              return (
                t || fr(e, 4, this.length),
                16777216 * this[e] +
                  ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
              );
            }),
            (qn.prototype.readIntLE = function (e, t, n) {
              (e |= 0), (t |= 0), n || fr(e, t, this.length);
              for (var r = this[e], u = 1, a = 0; ++a < t && (u *= 256); )
                r += this[e + a] * u;
              return r >= (u *= 128) && (r -= Math.pow(2, 8 * t)), r;
            }),
            (qn.prototype.readIntBE = function (e, t, n) {
              (e |= 0), (t |= 0), n || fr(e, t, this.length);
              for (var r = t, u = 1, a = this[e + --r]; r > 0 && (u *= 256); )
                a += this[e + --r] * u;
              return a >= (u *= 128) && (a -= Math.pow(2, 8 * t)), a;
            }),
            (qn.prototype.readInt8 = function (e, t) {
              return (
                t || fr(e, 1, this.length),
                128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
              );
            }),
            (qn.prototype.readInt16LE = function (e, t) {
              t || fr(e, 2, this.length);
              var n = this[e] | (this[e + 1] << 8);
              return 32768 & n ? 4294901760 | n : n;
            }),
            (qn.prototype.readInt16BE = function (e, t) {
              t || fr(e, 2, this.length);
              var n = this[e + 1] | (this[e] << 8);
              return 32768 & n ? 4294901760 | n : n;
            }),
            (qn.prototype.readInt32LE = function (e, t) {
              return (
                t || fr(e, 4, this.length),
                this[e] |
                  (this[e + 1] << 8) |
                  (this[e + 2] << 16) |
                  (this[e + 3] << 24)
              );
            }),
            (qn.prototype.readInt32BE = function (e, t) {
              return (
                t || fr(e, 4, this.length),
                (this[e] << 24) |
                  (this[e + 1] << 16) |
                  (this[e + 2] << 8) |
                  this[e + 3]
              );
            }),
            (qn.prototype.readFloatLE = function (e, t) {
              return t || fr(e, 4, this.length), jn(this, e, !0, 23, 4);
            }),
            (qn.prototype.readFloatBE = function (e, t) {
              return t || fr(e, 4, this.length), jn(this, e, !1, 23, 4);
            }),
            (qn.prototype.readDoubleLE = function (e, t) {
              return t || fr(e, 8, this.length), jn(this, e, !0, 52, 8);
            }),
            (qn.prototype.readDoubleBE = function (e, t) {
              return t || fr(e, 8, this.length), jn(this, e, !1, 52, 8);
            }),
            (qn.prototype.writeUIntLE = function (e, t, n, r) {
              (e = +e),
                (t |= 0),
                (n |= 0),
                r || dr(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
              var u = 1,
                a = 0;
              for (this[t] = 255 & e; ++a < n && (u *= 256); )
                this[t + a] = (e / u) & 255;
              return t + n;
            }),
            (qn.prototype.writeUIntBE = function (e, t, n, r) {
              (e = +e),
                (t |= 0),
                (n |= 0),
                r || dr(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
              var u = n - 1,
                a = 1;
              for (this[t + u] = 255 & e; --u >= 0 && (a *= 256); )
                this[t + u] = (e / a) & 255;
              return t + n;
            }),
            (qn.prototype.writeUInt8 = function (e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || dr(this, e, t, 1, 255, 0),
                qn.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
                (this[t] = 255 & e),
                t + 1
              );
            }),
            (qn.prototype.writeUInt16LE = function (e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || dr(this, e, t, 2, 65535, 0),
                qn.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                  : hr(this, e, t, !0),
                t + 2
              );
            }),
            (qn.prototype.writeUInt16BE = function (e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || dr(this, e, t, 2, 65535, 0),
                qn.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                  : hr(this, e, t, !1),
                t + 2
              );
            }),
            (qn.prototype.writeUInt32LE = function (e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || dr(this, e, t, 4, 4294967295, 0),
                qn.TYPED_ARRAY_SUPPORT
                  ? ((this[t + 3] = e >>> 24),
                    (this[t + 2] = e >>> 16),
                    (this[t + 1] = e >>> 8),
                    (this[t] = 255 & e))
                  : gr(this, e, t, !0),
                t + 4
              );
            }),
            (qn.prototype.writeUInt32BE = function (e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || dr(this, e, t, 4, 4294967295, 0),
                qn.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = e >>> 24),
                    (this[t + 1] = e >>> 16),
                    (this[t + 2] = e >>> 8),
                    (this[t + 3] = 255 & e))
                  : gr(this, e, t, !1),
                t + 4
              );
            }),
            (qn.prototype.writeIntLE = function (e, t, n, r) {
              if (((e = +e), (t |= 0), !r)) {
                var u = Math.pow(2, 8 * n - 1);
                dr(this, e, t, n, u - 1, -u);
              }
              var a = 0,
                i = 1,
                o = 0;
              for (this[t] = 255 & e; ++a < n && (i *= 256); )
                e < 0 && 0 === o && 0 !== this[t + a - 1] && (o = 1),
                  (this[t + a] = (((e / i) >> 0) - o) & 255);
              return t + n;
            }),
            (qn.prototype.writeIntBE = function (e, t, n, r) {
              if (((e = +e), (t |= 0), !r)) {
                var u = Math.pow(2, 8 * n - 1);
                dr(this, e, t, n, u - 1, -u);
              }
              var a = n - 1,
                i = 1,
                o = 0;
              for (this[t + a] = 255 & e; --a >= 0 && (i *= 256); )
                e < 0 && 0 === o && 0 !== this[t + a + 1] && (o = 1),
                  (this[t + a] = (((e / i) >> 0) - o) & 255);
              return t + n;
            }),
            (qn.prototype.writeInt8 = function (e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || dr(this, e, t, 1, 127, -128),
                qn.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
                e < 0 && (e = 255 + e + 1),
                (this[t] = 255 & e),
                t + 1
              );
            }),
            (qn.prototype.writeInt16LE = function (e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || dr(this, e, t, 2, 32767, -32768),
                qn.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                  : hr(this, e, t, !0),
                t + 2
              );
            }),
            (qn.prototype.writeInt16BE = function (e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || dr(this, e, t, 2, 32767, -32768),
                qn.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                  : hr(this, e, t, !1),
                t + 2
              );
            }),
            (qn.prototype.writeInt32LE = function (e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || dr(this, e, t, 4, 2147483647, -2147483648),
                qn.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = 255 & e),
                    (this[t + 1] = e >>> 8),
                    (this[t + 2] = e >>> 16),
                    (this[t + 3] = e >>> 24))
                  : gr(this, e, t, !0),
                t + 4
              );
            }),
            (qn.prototype.writeInt32BE = function (e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || dr(this, e, t, 4, 2147483647, -2147483648),
                e < 0 && (e = 4294967295 + e + 1),
                qn.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = e >>> 24),
                    (this[t + 1] = e >>> 16),
                    (this[t + 2] = e >>> 8),
                    (this[t + 3] = 255 & e))
                  : gr(this, e, t, !1),
                t + 4
              );
            }),
            (qn.prototype.writeFloatLE = function (e, t, n) {
              return yr(this, e, t, !0, n);
            }),
            (qn.prototype.writeFloatBE = function (e, t, n) {
              return yr(this, e, t, !1, n);
            }),
            (qn.prototype.writeDoubleLE = function (e, t, n) {
              return Dr(this, e, t, !0, n);
            }),
            (qn.prototype.writeDoubleBE = function (e, t, n) {
              return Dr(this, e, t, !1, n);
            }),
            (qn.prototype.copy = function (e, t, n, r) {
              if (
                (n || (n = 0),
                r || 0 === r || (r = this.length),
                t >= e.length && (t = e.length),
                t || (t = 0),
                r > 0 && r < n && (r = n),
                r === n)
              )
                return 0;
              if (0 === e.length || 0 === this.length) return 0;
              if (t < 0) throw new RangeError('targetStart out of bounds');
              if (n < 0 || n >= this.length)
                throw new RangeError('sourceStart out of bounds');
              if (r < 0) throw new RangeError('sourceEnd out of bounds');
              r > this.length && (r = this.length),
                e.length - t < r - n && (r = e.length - t + n);
              var u,
                a = r - n;
              if (this === e && n < t && t < r)
                for (u = a - 1; u >= 0; --u) e[u + t] = this[u + n];
              else if (a < 1e3 || !qn.TYPED_ARRAY_SUPPORT)
                for (u = 0; u < a; ++u) e[u + t] = this[u + n];
              else Uint8Array.prototype.set.call(e, this.subarray(n, n + a), t);
              return a;
            }),
            (qn.prototype.fill = function (e, t, n, r) {
              if ('string' == typeof e) {
                if (
                  ('string' == typeof t
                    ? ((r = t), (t = 0), (n = this.length))
                    : 'string' == typeof n && ((r = n), (n = this.length)),
                  1 === e.length)
                ) {
                  var u = e.charCodeAt(0);
                  u < 256 && (e = u);
                }
                if (void 0 !== r && 'string' != typeof r)
                  throw new TypeError('encoding must be a string');
                if ('string' == typeof r && !qn.isEncoding(r))
                  throw new TypeError('Unknown encoding: ' + r);
              } else 'number' == typeof e && (e &= 255);
              if (t < 0 || this.length < t || this.length < n)
                throw new RangeError('Out of range index');
              if (n <= t) return this;
              var a;
              if (
                ((t >>>= 0),
                (n = void 0 === n ? this.length : n >>> 0),
                e || (e = 0),
                'number' == typeof e)
              )
                for (a = t; a < n; ++a) this[a] = e;
              else {
                var i = Hn(e) ? e : Cr(new qn(e, r).toString()),
                  o = i.length;
                for (a = 0; a < n - t; ++a) this[a + t] = i[a % o];
              }
              return this;
            });
          var vr = /[^+\/0-9A-Za-z-_]/g;
          function Er(e) {
            return e < 16 ? '0' + e.toString(16) : e.toString(16);
          }
          function Cr(e, t) {
            var n;
            t = t || 1 / 0;
            for (var r = e.length, u = null, a = [], i = 0; i < r; ++i) {
              if ((n = e.charCodeAt(i)) > 55295 && n < 57344) {
                if (!u) {
                  if (n > 56319) {
                    (t -= 3) > -1 && a.push(239, 191, 189);
                    continue;
                  }
                  if (i + 1 === r) {
                    (t -= 3) > -1 && a.push(239, 191, 189);
                    continue;
                  }
                  u = n;
                  continue;
                }
                if (n < 56320) {
                  (t -= 3) > -1 && a.push(239, 191, 189), (u = n);
                  continue;
                }
                n = 65536 + (((u - 55296) << 10) | (n - 56320));
              } else u && (t -= 3) > -1 && a.push(239, 191, 189);
              if (((u = null), n < 128)) {
                if ((t -= 1) < 0) break;
                a.push(n);
              } else if (n < 2048) {
                if ((t -= 2) < 0) break;
                a.push((n >> 6) | 192, (63 & n) | 128);
              } else if (n < 65536) {
                if ((t -= 3) < 0) break;
                a.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
              } else {
                if (!(n < 1114112)) throw new Error('Invalid code point');
                if ((t -= 4) < 0) break;
                a.push(
                  (n >> 18) | 240,
                  ((n >> 12) & 63) | 128,
                  ((n >> 6) & 63) | 128,
                  (63 & n) | 128
                );
              }
            }
            return a;
          }
          function br(e) {
            return (function (e) {
              var t, n, r, u, a, i;
              On || Pn();
              var o = e.length;
              if (o % 4 > 0)
                throw new Error(
                  'Invalid string. Length must be a multiple of 4'
                );
              (a = '=' === e[o - 2] ? 2 : '=' === e[o - 1] ? 1 : 0),
                (i = new Nn((3 * o) / 4 - a)),
                (r = a > 0 ? o - 4 : o);
              var s = 0;
              for (t = 0, n = 0; t < r; t += 4, n += 3)
                (u =
                  (kn[e.charCodeAt(t)] << 18) |
                  (kn[e.charCodeAt(t + 1)] << 12) |
                  (kn[e.charCodeAt(t + 2)] << 6) |
                  kn[e.charCodeAt(t + 3)]),
                  (i[s++] = (u >> 16) & 255),
                  (i[s++] = (u >> 8) & 255),
                  (i[s++] = 255 & u);
              return (
                2 === a
                  ? ((u =
                      (kn[e.charCodeAt(t)] << 2) |
                      (kn[e.charCodeAt(t + 1)] >> 4)),
                    (i[s++] = 255 & u))
                  : 1 === a &&
                    ((u =
                      (kn[e.charCodeAt(t)] << 10) |
                      (kn[e.charCodeAt(t + 1)] << 4) |
                      (kn[e.charCodeAt(t + 2)] >> 2)),
                    (i[s++] = (u >> 8) & 255),
                    (i[s++] = 255 & u)),
                i
              );
            })(
              (function (e) {
                if (
                  (e = (function (e) {
                    return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, '');
                  })(e).replace(vr, '')).length < 2
                )
                  return '';
                for (; e.length % 4 != 0; ) e += '=';
                return e;
              })(e)
            );
          }
          function Ar(e, t, n, r) {
            for (var u = 0; u < r && !(u + n >= t.length || u >= e.length); ++u)
              t[u + n] = e[u];
            return u;
          }
          function Fr(e) {
            return (
              !!e.constructor &&
              'function' == typeof e.constructor.isBuffer &&
              e.constructor.isBuffer(e)
            );
          }
          var xr = Ye(An),
            Sr = (function () {
              function e(t, n) {
                w(this, e),
                  (n = n || {}).readChunk || (n.readChunk = 1024),
                  n.newLineCharacter
                    ? (n.newLineCharacter = n.newLineCharacter.charCodeAt(0))
                    : (n.newLineCharacter = 10),
                  (this.fd = 'number' == typeof t ? t : xr.openSync(t, 'r')),
                  (this.options = n),
                  (this.newLineCharacter = n.newLineCharacter),
                  this.reset();
              }
              return (
                T(e, [
                  {
                    key: '_searchInBuffer',
                    value: function (e, t) {
                      for (var n = -1, r = 0; r <= e.length; r++)
                        if (e[r] === t) {
                          n = r;
                          break;
                        }
                      return n;
                    },
                  },
                  {
                    key: 'reset',
                    value: function () {
                      (this.eofReached = !1),
                        (this.linesCache = []),
                        (this.fdPosition = 0);
                    },
                  },
                  {
                    key: 'close',
                    value: function () {
                      xr.closeSync(this.fd), (this.fd = null);
                    },
                  },
                  {
                    key: '_extractLines',
                    value: function (e) {
                      for (var t, n = [], r = 0, u = 0; ; ) {
                        var a = e[r++];
                        if (a === this.newLineCharacter)
                          (t = e.slice(u, r)), n.push(t), (u = r);
                        else if (void 0 === a) break;
                      }
                      var i = e.slice(u, r);
                      return i.length && n.push(i), n;
                    },
                  },
                  {
                    key: '_readChunk',
                    value: function (e) {
                      var t,
                        n = 0,
                        r = [];
                      do {
                        var u = new qn(this.options.readChunk);
                        (n += t = xr.readSync(
                          this.fd,
                          u,
                          0,
                          this.options.readChunk,
                          this.fdPosition
                        )),
                          (this.fdPosition = this.fdPosition + t),
                          r.push(u);
                      } while (
                        t &&
                        -1 ===
                          this._searchInBuffer(
                            r[r.length - 1],
                            this.options.newLineCharacter
                          )
                      );
                      var a = qn.concat(r);
                      return (
                        t < this.options.readChunk &&
                          ((this.eofReached = !0), (a = a.slice(0, n))),
                        n &&
                          ((this.linesCache = this._extractLines(a)),
                          e &&
                            (this.linesCache[0] = qn.concat([
                              e,
                              this.linesCache[0],
                            ]))),
                        n
                      );
                    },
                  },
                  {
                    key: 'next',
                    value: function () {
                      if (!this.fd) return !1;
                      var e = !1;
                      return this.eofReached && 0 === this.linesCache.length
                        ? e
                        : (this.linesCache.length || this._readChunk(),
                          this.linesCache.length &&
                            (e = this.linesCache.shift())[e.length - 1] !==
                              this.newLineCharacter &&
                            this._readChunk(e) &&
                            (e = this.linesCache.shift()),
                          this.eofReached &&
                            0 === this.linesCache.length &&
                            this.close(),
                          e &&
                            e[e.length - 1] === this.newLineCharacter &&
                            (e = e.slice(0, e.length - 1)),
                          e);
                    },
                  },
                ]),
                e
              );
            })(),
            wr = {
              ConfigError: (function (e) {
                a(n, l(Error));
                var t = i(n);
                function n() {
                  return w(this, n), t.apply(this, arguments);
                }
                return n;
              })(),
              DebugError: (function (e) {
                a(n, l(Error));
                var t = i(n);
                function n() {
                  return w(this, n), t.apply(this, arguments);
                }
                return n;
              })(),
              UndefinedParserError: (function (e) {
                a(n, l(Error));
                var t = i(n);
                function n() {
                  return w(this, n), t.apply(this, arguments);
                }
                return n;
              })(),
            },
            Br = function (e, t) {
              return (Br =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (e, t) {
                    e.__proto__ = t;
                  }) ||
                function (e, t) {
                  for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                })(e, t);
            },
            Tr = function () {
              return (Tr =
                Object.assign ||
                function (e) {
                  for (var t, n = 1, r = arguments.length; n < r; n++)
                    for (var u in (t = arguments[n]))
                      Object.prototype.hasOwnProperty.call(t, u) &&
                        (e[u] = t[u]);
                  return e;
                }).apply(this, arguments);
            };
          function kr(e) {
            var t = 'function' == typeof Symbol && Symbol.iterator,
              n = t && e[t],
              r = 0;
            if (n) return n.call(e);
            if (e && 'number' == typeof e.length)
              return {
                next: function () {
                  return (
                    e && r >= e.length && (e = void 0),
                    { value: e && e[r++], done: !e }
                  );
                },
              };
            throw new TypeError(
              t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.'
            );
          }
          function Nr(e, t) {
            var n = 'function' == typeof Symbol && e[Symbol.iterator];
            if (!n) return e;
            var r,
              u,
              a = n.call(e),
              i = [];
            try {
              for (; (void 0 === t || t-- > 0) && !(r = a.next()).done; )
                i.push(r.value);
            } catch (e) {
              u = { error: e };
            } finally {
              try {
                r && !r.done && (n = a.return) && n.call(a);
              } finally {
                if (u) throw u.error;
              }
            }
            return i;
          }
          function Or(e) {
            return this instanceof Or ? ((this.v = e), this) : new Or(e);
          }
          var Pr = Object.freeze({
              __proto__: null,
              __extends: function (e, t) {
                function n() {
                  this.constructor = e;
                }
                Br(e, t),
                  (e.prototype =
                    null === t
                      ? Object.create(t)
                      : ((n.prototype = t.prototype), new n()));
              },
              get __assign() {
                return Tr;
              },
              __rest: function (e, t) {
                var n = {};
                for (var r in e)
                  Object.prototype.hasOwnProperty.call(e, r) &&
                    t.indexOf(r) < 0 &&
                    (n[r] = e[r]);
                if (
                  null != e &&
                  'function' == typeof Object.getOwnPropertySymbols
                ) {
                  var u = 0;
                  for (r = Object.getOwnPropertySymbols(e); u < r.length; u++)
                    t.indexOf(r[u]) < 0 &&
                      Object.prototype.propertyIsEnumerable.call(e, r[u]) &&
                      (n[r[u]] = e[r[u]]);
                }
                return n;
              },
              __decorate: function (e, t, n, r) {
                var u,
                  a = arguments.length,
                  i =
                    a < 3
                      ? t
                      : null === r
                      ? (r = Object.getOwnPropertyDescriptor(t, n))
                      : r;
                if (
                  'object' ==
                    ('undefined' == typeof Reflect
                      ? 'undefined'
                      : k(Reflect)) &&
                  'function' == typeof Reflect.decorate
                )
                  i = Reflect.decorate(e, t, n, r);
                else
                  for (var o = e.length - 1; o >= 0; o--)
                    (u = e[o]) &&
                      (i = (a < 3 ? u(i) : a > 3 ? u(t, n, i) : u(t, n)) || i);
                return a > 3 && i && Object.defineProperty(t, n, i), i;
              },
              __param: function (e, t) {
                return function (n, r) {
                  t(n, r, e);
                };
              },
              __metadata: function (e, t) {
                if (
                  'object' ==
                    ('undefined' == typeof Reflect
                      ? 'undefined'
                      : k(Reflect)) &&
                  'function' == typeof Reflect.metadata
                )
                  return Reflect.metadata(e, t);
              },
              __awaiter: function (e, t, n, r) {
                return new (n || (n = Promise))(function (u, a) {
                  function i(e) {
                    try {
                      s(r.next(e));
                    } catch (e) {
                      a(e);
                    }
                  }
                  function o(e) {
                    try {
                      s(r.throw(e));
                    } catch (e) {
                      a(e);
                    }
                  }
                  function s(e) {
                    var t;
                    e.done
                      ? u(e.value)
                      : ((t = e.value),
                        t instanceof n
                          ? t
                          : new n(function (e) {
                              e(t);
                            })).then(i, o);
                  }
                  s((r = r.apply(e, t || [])).next());
                });
              },
              __generator: function (e, t) {
                var n,
                  r,
                  u,
                  a,
                  i = {
                    label: 0,
                    sent: function () {
                      if (1 & u[0]) throw u[1];
                      return u[1];
                    },
                    trys: [],
                    ops: [],
                  };
                return (
                  (a = { next: o(0), throw: o(1), return: o(2) }),
                  'function' == typeof Symbol &&
                    (a[Symbol.iterator] = function () {
                      return this;
                    }),
                  a
                );
                function o(a) {
                  return function (o) {
                    return (function (a) {
                      if (n)
                        throw new TypeError('Generator is already executing.');
                      for (; i; )
                        try {
                          if (
                            ((n = 1),
                            r &&
                              (u =
                                2 & a[0]
                                  ? r.return
                                  : a[0]
                                  ? r.throw || ((u = r.return) && u.call(r), 0)
                                  : r.next) &&
                              !(u = u.call(r, a[1])).done)
                          )
                            return u;
                          switch (
                            ((r = 0), u && (a = [2 & a[0], u.value]), a[0])
                          ) {
                            case 0:
                            case 1:
                              u = a;
                              break;
                            case 4:
                              return i.label++, { value: a[1], done: !1 };
                            case 5:
                              i.label++, (r = a[1]), (a = [0]);
                              continue;
                            case 7:
                              (a = i.ops.pop()), i.trys.pop();
                              continue;
                            default:
                              if (
                                !(
                                  (u =
                                    (u = i.trys).length > 0 &&
                                    u[u.length - 1]) ||
                                  (6 !== a[0] && 2 !== a[0])
                                )
                              ) {
                                i = 0;
                                continue;
                              }
                              if (
                                3 === a[0] &&
                                (!u || (a[1] > u[0] && a[1] < u[3]))
                              ) {
                                i.label = a[1];
                                break;
                              }
                              if (6 === a[0] && i.label < u[1]) {
                                (i.label = u[1]), (u = a);
                                break;
                              }
                              if (u && i.label < u[2]) {
                                (i.label = u[2]), i.ops.push(a);
                                break;
                              }
                              u[2] && i.ops.pop(), i.trys.pop();
                              continue;
                          }
                          a = t.call(e, i);
                        } catch (e) {
                          (a = [6, e]), (r = 0);
                        } finally {
                          n = u = 0;
                        }
                      if (5 & a[0]) throw a[1];
                      return { value: a[0] ? a[1] : void 0, done: !0 };
                    })([a, o]);
                  };
                }
              },
              __createBinding: function (e, t, n, r) {
                void 0 === r && (r = n), (e[r] = t[n]);
              },
              __exportStar: function (e, t) {
                for (var n in e)
                  'default' === n || t.hasOwnProperty(n) || (t[n] = e[n]);
              },
              __values: kr,
              __read: Nr,
              __spread: function () {
                for (var e = [], t = 0; t < arguments.length; t++)
                  e = e.concat(Nr(arguments[t]));
                return e;
              },
              __spreadArrays: function () {
                for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                  e += arguments[t].length;
                var r = Array(e),
                  u = 0;
                for (t = 0; t < n; t++)
                  for (
                    var a = arguments[t], i = 0, o = a.length;
                    i < o;
                    i++, u++
                  )
                    r[u] = a[i];
                return r;
              },
              __await: Or,
              __asyncGenerator: function (e, t, n) {
                if (!Symbol.asyncIterator)
                  throw new TypeError('Symbol.asyncIterator is not defined.');
                var r,
                  u = n.apply(e, t || []),
                  a = [];
                return (
                  (r = {}),
                  i('next'),
                  i('throw'),
                  i('return'),
                  (r[Symbol.asyncIterator] = function () {
                    return this;
                  }),
                  r
                );
                function i(e) {
                  u[e] &&
                    (r[e] = function (t) {
                      return new Promise(function (n, r) {
                        a.push([e, t, n, r]) > 1 || o(e, t);
                      });
                    });
                }
                function o(e, t) {
                  try {
                    (n = u[e](t)).value instanceof Or
                      ? Promise.resolve(n.value.v).then(s, l)
                      : c(a[0][2], n);
                  } catch (e) {
                    c(a[0][3], e);
                  }
                  var n;
                }
                function s(e) {
                  o('next', e);
                }
                function l(e) {
                  o('throw', e);
                }
                function c(e, t) {
                  e(t), a.shift(), a.length && o(a[0][0], a[0][1]);
                }
              },
              __asyncDelegator: function (e) {
                var t, n;
                return (
                  (t = {}),
                  r('next'),
                  r('throw', function (e) {
                    throw e;
                  }),
                  r('return'),
                  (t[Symbol.iterator] = function () {
                    return this;
                  }),
                  t
                );
                function r(r, u) {
                  t[r] = e[r]
                    ? function (t) {
                        return (n = !n)
                          ? { value: Or(e[r](t)), done: 'return' === r }
                          : u
                          ? u(t)
                          : t;
                      }
                    : u;
                }
              },
              __asyncValues: function (e) {
                if (!Symbol.asyncIterator)
                  throw new TypeError('Symbol.asyncIterator is not defined.');
                var t,
                  n = e[Symbol.asyncIterator];
                return n
                  ? n.call(e)
                  : ((e = kr(e)),
                    (t = {}),
                    r('next'),
                    r('throw'),
                    r('return'),
                    (t[Symbol.asyncIterator] = function () {
                      return this;
                    }),
                    t);
                function r(n) {
                  t[n] =
                    e[n] &&
                    function (t) {
                      return new Promise(function (r, u) {
                        !(function (e, t, n, r) {
                          Promise.resolve(r).then(function (t) {
                            e({ value: t, done: n });
                          }, t);
                        })(r, u, (t = e[n](t)).done, t.value);
                      });
                    };
                }
              },
              __makeTemplateObject: function (e, t) {
                return (
                  Object.defineProperty
                    ? Object.defineProperty(e, 'raw', { value: t })
                    : (e.raw = t),
                  e
                );
              },
              __importStar: function (e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                  for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return (t.default = e), t;
              },
              __importDefault: function (e) {
                return e && e.__esModule ? e : { default: e };
              },
              __classPrivateFieldGet: function (e, t) {
                if (!t.has(e))
                  throw new TypeError(
                    'attempted to get private field on non-instance'
                  );
                return t.get(e);
              },
              __classPrivateFieldSet: function (e, t, n) {
                if (!t.has(e))
                  throw new TypeError(
                    'attempted to set private field on non-instance'
                  );
                return t.set(e, n), n;
              },
            }),
            Mr = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.apiDescriptor = {
                  key: function (e) {
                    return /^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e)
                      ? e
                      : JSON.stringify(e);
                  },
                  value: function (e) {
                    if (null === e || 'object' != k(e))
                      return JSON.stringify(e);
                    if (Array.isArray(e))
                      return '['.concat(
                        e
                          .map(function (e) {
                            return t.apiDescriptor.value(e);
                          })
                          .join(', '),
                        ']'
                      );
                    var n = Object.keys(e);
                    return 0 === n.length
                      ? '{}'
                      : '{ '.concat(
                          n
                            .map(function (n) {
                              return ''
                                .concat(t.apiDescriptor.key(n), ': ')
                                .concat(t.apiDescriptor.value(e[n]));
                            })
                            .join(', '),
                          ' }'
                        );
                  },
                  pair: function (e) {
                    var n = e.key,
                      r = e.value;
                    return t.apiDescriptor.value(E({}, n, r));
                  },
                });
            }),
            Ir = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                Pr.__exportStar(Mr, t);
            }),
            jr = /[|\\{}()[\]^$+*?.]/g,
            Lr = function (e) {
              if ('string' != typeof e)
                throw new TypeError('Expected a string');
              return e.replace(jr, '\\$&');
            },
            _r = {
              aliceblue: [240, 248, 255],
              antiquewhite: [250, 235, 215],
              aqua: [0, 255, 255],
              aquamarine: [127, 255, 212],
              azure: [240, 255, 255],
              beige: [245, 245, 220],
              bisque: [255, 228, 196],
              black: [0, 0, 0],
              blanchedalmond: [255, 235, 205],
              blue: [0, 0, 255],
              blueviolet: [138, 43, 226],
              brown: [165, 42, 42],
              burlywood: [222, 184, 135],
              cadetblue: [95, 158, 160],
              chartreuse: [127, 255, 0],
              chocolate: [210, 105, 30],
              coral: [255, 127, 80],
              cornflowerblue: [100, 149, 237],
              cornsilk: [255, 248, 220],
              crimson: [220, 20, 60],
              cyan: [0, 255, 255],
              darkblue: [0, 0, 139],
              darkcyan: [0, 139, 139],
              darkgoldenrod: [184, 134, 11],
              darkgray: [169, 169, 169],
              darkgreen: [0, 100, 0],
              darkgrey: [169, 169, 169],
              darkkhaki: [189, 183, 107],
              darkmagenta: [139, 0, 139],
              darkolivegreen: [85, 107, 47],
              darkorange: [255, 140, 0],
              darkorchid: [153, 50, 204],
              darkred: [139, 0, 0],
              darksalmon: [233, 150, 122],
              darkseagreen: [143, 188, 143],
              darkslateblue: [72, 61, 139],
              darkslategray: [47, 79, 79],
              darkslategrey: [47, 79, 79],
              darkturquoise: [0, 206, 209],
              darkviolet: [148, 0, 211],
              deeppink: [255, 20, 147],
              deepskyblue: [0, 191, 255],
              dimgray: [105, 105, 105],
              dimgrey: [105, 105, 105],
              dodgerblue: [30, 144, 255],
              firebrick: [178, 34, 34],
              floralwhite: [255, 250, 240],
              forestgreen: [34, 139, 34],
              fuchsia: [255, 0, 255],
              gainsboro: [220, 220, 220],
              ghostwhite: [248, 248, 255],
              gold: [255, 215, 0],
              goldenrod: [218, 165, 32],
              gray: [128, 128, 128],
              green: [0, 128, 0],
              greenyellow: [173, 255, 47],
              grey: [128, 128, 128],
              honeydew: [240, 255, 240],
              hotpink: [255, 105, 180],
              indianred: [205, 92, 92],
              indigo: [75, 0, 130],
              ivory: [255, 255, 240],
              khaki: [240, 230, 140],
              lavender: [230, 230, 250],
              lavenderblush: [255, 240, 245],
              lawngreen: [124, 252, 0],
              lemonchiffon: [255, 250, 205],
              lightblue: [173, 216, 230],
              lightcoral: [240, 128, 128],
              lightcyan: [224, 255, 255],
              lightgoldenrodyellow: [250, 250, 210],
              lightgray: [211, 211, 211],
              lightgreen: [144, 238, 144],
              lightgrey: [211, 211, 211],
              lightpink: [255, 182, 193],
              lightsalmon: [255, 160, 122],
              lightseagreen: [32, 178, 170],
              lightskyblue: [135, 206, 250],
              lightslategray: [119, 136, 153],
              lightslategrey: [119, 136, 153],
              lightsteelblue: [176, 196, 222],
              lightyellow: [255, 255, 224],
              lime: [0, 255, 0],
              limegreen: [50, 205, 50],
              linen: [250, 240, 230],
              magenta: [255, 0, 255],
              maroon: [128, 0, 0],
              mediumaquamarine: [102, 205, 170],
              mediumblue: [0, 0, 205],
              mediumorchid: [186, 85, 211],
              mediumpurple: [147, 112, 219],
              mediumseagreen: [60, 179, 113],
              mediumslateblue: [123, 104, 238],
              mediumspringgreen: [0, 250, 154],
              mediumturquoise: [72, 209, 204],
              mediumvioletred: [199, 21, 133],
              midnightblue: [25, 25, 112],
              mintcream: [245, 255, 250],
              mistyrose: [255, 228, 225],
              moccasin: [255, 228, 181],
              navajowhite: [255, 222, 173],
              navy: [0, 0, 128],
              oldlace: [253, 245, 230],
              olive: [128, 128, 0],
              olivedrab: [107, 142, 35],
              orange: [255, 165, 0],
              orangered: [255, 69, 0],
              orchid: [218, 112, 214],
              palegoldenrod: [238, 232, 170],
              palegreen: [152, 251, 152],
              paleturquoise: [175, 238, 238],
              palevioletred: [219, 112, 147],
              papayawhip: [255, 239, 213],
              peachpuff: [255, 218, 185],
              peru: [205, 133, 63],
              pink: [255, 192, 203],
              plum: [221, 160, 221],
              powderblue: [176, 224, 230],
              purple: [128, 0, 128],
              rebeccapurple: [102, 51, 153],
              red: [255, 0, 0],
              rosybrown: [188, 143, 143],
              royalblue: [65, 105, 225],
              saddlebrown: [139, 69, 19],
              salmon: [250, 128, 114],
              sandybrown: [244, 164, 96],
              seagreen: [46, 139, 87],
              seashell: [255, 245, 238],
              sienna: [160, 82, 45],
              silver: [192, 192, 192],
              skyblue: [135, 206, 235],
              slateblue: [106, 90, 205],
              slategray: [112, 128, 144],
              slategrey: [112, 128, 144],
              snow: [255, 250, 250],
              springgreen: [0, 255, 127],
              steelblue: [70, 130, 180],
              tan: [210, 180, 140],
              teal: [0, 128, 128],
              thistle: [216, 191, 216],
              tomato: [255, 99, 71],
              turquoise: [64, 224, 208],
              violet: [238, 130, 238],
              wheat: [245, 222, 179],
              white: [255, 255, 255],
              whitesmoke: [245, 245, 245],
              yellow: [255, 255, 0],
              yellowgreen: [154, 205, 50],
            },
            Rr = Xe(function (e) {
              var t = {};
              for (var n in _r) _r.hasOwnProperty(n) && (t[_r[n]] = n);
              var r = (e.exports = {
                rgb: { channels: 3, labels: 'rgb' },
                hsl: { channels: 3, labels: 'hsl' },
                hsv: { channels: 3, labels: 'hsv' },
                hwb: { channels: 3, labels: 'hwb' },
                cmyk: { channels: 4, labels: 'cmyk' },
                xyz: { channels: 3, labels: 'xyz' },
                lab: { channels: 3, labels: 'lab' },
                lch: { channels: 3, labels: 'lch' },
                hex: { channels: 1, labels: ['hex'] },
                keyword: { channels: 1, labels: ['keyword'] },
                ansi16: { channels: 1, labels: ['ansi16'] },
                ansi256: { channels: 1, labels: ['ansi256'] },
                hcg: { channels: 3, labels: ['h', 'c', 'g'] },
                apple: { channels: 3, labels: ['r16', 'g16', 'b16'] },
                gray: { channels: 1, labels: ['gray'] },
              });
              for (var u in r)
                if (r.hasOwnProperty(u)) {
                  if (!('channels' in r[u]))
                    throw new Error('missing channels property: ' + u);
                  if (!('labels' in r[u]))
                    throw new Error('missing channel labels property: ' + u);
                  if (r[u].labels.length !== r[u].channels)
                    throw new Error('channel and label counts mismatch: ' + u);
                  var a = r[u].channels,
                    i = r[u].labels;
                  delete r[u].channels,
                    delete r[u].labels,
                    Object.defineProperty(r[u], 'channels', { value: a }),
                    Object.defineProperty(r[u], 'labels', { value: i });
                }
              (r.rgb.hsl = function (e) {
                var t,
                  n,
                  r = e[0] / 255,
                  u = e[1] / 255,
                  a = e[2] / 255,
                  i = Math.min(r, u, a),
                  o = Math.max(r, u, a),
                  s = o - i;
                return (
                  o === i
                    ? (t = 0)
                    : r === o
                    ? (t = (u - a) / s)
                    : u === o
                    ? (t = 2 + (a - r) / s)
                    : a === o && (t = 4 + (r - u) / s),
                  (t = Math.min(60 * t, 360)) < 0 && (t += 360),
                  (n = (i + o) / 2),
                  [
                    t,
                    100 *
                      (o === i ? 0 : n <= 0.5 ? s / (o + i) : s / (2 - o - i)),
                    100 * n,
                  ]
                );
              }),
                (r.rgb.hsv = function (e) {
                  var t,
                    n,
                    r,
                    u,
                    a,
                    i = e[0] / 255,
                    o = e[1] / 255,
                    s = e[2] / 255,
                    l = Math.max(i, o, s),
                    c = l - Math.min(i, o, s),
                    p = function (e) {
                      return (l - e) / 6 / c + 0.5;
                    };
                  return (
                    0 === c
                      ? (u = a = 0)
                      : ((a = c / l),
                        (t = p(i)),
                        (n = p(o)),
                        (r = p(s)),
                        i === l
                          ? (u = r - n)
                          : o === l
                          ? (u = 1 / 3 + t - r)
                          : s === l && (u = 2 / 3 + n - t),
                        u < 0 ? (u += 1) : u > 1 && (u -= 1)),
                    [360 * u, 100 * a, 100 * l]
                  );
                }),
                (r.rgb.hwb = function (e) {
                  var t = e[0],
                    n = e[1],
                    u = e[2];
                  return [
                    r.rgb.hsl(e)[0],
                    (1 / 255) * Math.min(t, Math.min(n, u)) * 100,
                    100 * (u = 1 - (1 / 255) * Math.max(t, Math.max(n, u))),
                  ];
                }),
                (r.rgb.cmyk = function (e) {
                  var t,
                    n = e[0] / 255,
                    r = e[1] / 255,
                    u = e[2] / 255;
                  return [
                    100 *
                      ((1 - n - (t = Math.min(1 - n, 1 - r, 1 - u))) /
                        (1 - t) || 0),
                    100 * ((1 - r - t) / (1 - t) || 0),
                    100 * ((1 - u - t) / (1 - t) || 0),
                    100 * t,
                  ];
                }),
                (r.rgb.keyword = function (e) {
                  var n = t[e];
                  if (n) return n;
                  var r,
                    u,
                    a,
                    i = 1 / 0;
                  for (var o in _r)
                    if (_r.hasOwnProperty(o)) {
                      var s =
                        ((u = e),
                        (a = _r[o]),
                        Math.pow(u[0] - a[0], 2) +
                          Math.pow(u[1] - a[1], 2) +
                          Math.pow(u[2] - a[2], 2));
                      s < i && ((i = s), (r = o));
                    }
                  return r;
                }),
                (r.keyword.rgb = function (e) {
                  return _r[e];
                }),
                (r.rgb.xyz = function (e) {
                  var t = e[0] / 255,
                    n = e[1] / 255,
                    r = e[2] / 255;
                  return [
                    100 *
                      (0.4124 *
                        (t =
                          t > 0.04045
                            ? Math.pow((t + 0.055) / 1.055, 2.4)
                            : t / 12.92) +
                        0.3576 *
                          (n =
                            n > 0.04045
                              ? Math.pow((n + 0.055) / 1.055, 2.4)
                              : n / 12.92) +
                        0.1805 *
                          (r =
                            r > 0.04045
                              ? Math.pow((r + 0.055) / 1.055, 2.4)
                              : r / 12.92)),
                    100 * (0.2126 * t + 0.7152 * n + 0.0722 * r),
                    100 * (0.0193 * t + 0.1192 * n + 0.9505 * r),
                  ];
                }),
                (r.rgb.lab = function (e) {
                  var t = r.rgb.xyz(e),
                    n = t[0],
                    u = t[1],
                    a = t[2];
                  return (
                    (u /= 100),
                    (a /= 108.883),
                    (n =
                      (n /= 95.047) > 0.008856
                        ? Math.pow(n, 1 / 3)
                        : 7.787 * n + 16 / 116),
                    [
                      116 *
                        (u =
                          u > 0.008856
                            ? Math.pow(u, 1 / 3)
                            : 7.787 * u + 16 / 116) -
                        16,
                      500 * (n - u),
                      200 *
                        (u -
                          (a =
                            a > 0.008856
                              ? Math.pow(a, 1 / 3)
                              : 7.787 * a + 16 / 116)),
                    ]
                  );
                }),
                (r.hsl.rgb = function (e) {
                  var t,
                    n,
                    r,
                    u,
                    a,
                    i = e[0] / 360,
                    o = e[1] / 100,
                    s = e[2] / 100;
                  if (0 === o) return [(a = 255 * s), a, a];
                  (t = 2 * s - (n = s < 0.5 ? s * (1 + o) : s + o - s * o)),
                    (u = [0, 0, 0]);
                  for (var l = 0; l < 3; l++)
                    (r = i + (1 / 3) * -(l - 1)) < 0 && r++,
                      r > 1 && r--,
                      (a =
                        6 * r < 1
                          ? t + 6 * (n - t) * r
                          : 2 * r < 1
                          ? n
                          : 3 * r < 2
                          ? t + (n - t) * (2 / 3 - r) * 6
                          : t),
                      (u[l] = 255 * a);
                  return u;
                }),
                (r.hsl.hsv = function (e) {
                  var t = e[0],
                    n = e[1] / 100,
                    r = e[2] / 100,
                    u = n,
                    a = Math.max(r, 0.01);
                  return (
                    (n *= (r *= 2) <= 1 ? r : 2 - r),
                    (u *= a <= 1 ? a : 2 - a),
                    [
                      t,
                      100 * (0 === r ? (2 * u) / (a + u) : (2 * n) / (r + n)),
                      ((r + n) / 2) * 100,
                    ]
                  );
                }),
                (r.hsv.rgb = function (e) {
                  var t = e[0] / 60,
                    n = e[1] / 100,
                    r = e[2] / 100,
                    u = Math.floor(t) % 6,
                    a = t - Math.floor(t),
                    i = 255 * r * (1 - n),
                    o = 255 * r * (1 - n * a),
                    s = 255 * r * (1 - n * (1 - a));
                  switch (((r *= 255), u)) {
                    case 0:
                      return [r, s, i];
                    case 1:
                      return [o, r, i];
                    case 2:
                      return [i, r, s];
                    case 3:
                      return [i, o, r];
                    case 4:
                      return [s, i, r];
                    case 5:
                      return [r, i, o];
                  }
                }),
                (r.hsv.hsl = function (e) {
                  var t,
                    n,
                    r,
                    u = e[0],
                    a = e[1] / 100,
                    i = e[2] / 100,
                    o = Math.max(i, 0.01);
                  return (
                    (r = (2 - a) * i),
                    (n = a * o),
                    [
                      u,
                      100 *
                        (n = (n /= (t = (2 - a) * o) <= 1 ? t : 2 - t) || 0),
                      100 * (r /= 2),
                    ]
                  );
                }),
                (r.hwb.rgb = function (e) {
                  var t,
                    n,
                    r,
                    u,
                    a,
                    i,
                    o,
                    s = e[0] / 360,
                    l = e[1] / 100,
                    c = e[2] / 100,
                    p = l + c;
                  switch (
                    (p > 1 && ((l /= p), (c /= p)),
                    (r = 6 * s - (t = Math.floor(6 * s))),
                    0 != (1 & t) && (r = 1 - r),
                    (u = l + r * ((n = 1 - c) - l)),
                    t)
                  ) {
                    default:
                    case 6:
                    case 0:
                      (a = n), (i = u), (o = l);
                      break;
                    case 1:
                      (a = u), (i = n), (o = l);
                      break;
                    case 2:
                      (a = l), (i = n), (o = u);
                      break;
                    case 3:
                      (a = l), (i = u), (o = n);
                      break;
                    case 4:
                      (a = u), (i = l), (o = n);
                      break;
                    case 5:
                      (a = n), (i = l), (o = u);
                  }
                  return [255 * a, 255 * i, 255 * o];
                }),
                (r.cmyk.rgb = function (e) {
                  var t = e[0] / 100,
                    n = e[1] / 100,
                    r = e[2] / 100,
                    u = e[3] / 100;
                  return [
                    255 * (1 - Math.min(1, t * (1 - u) + u)),
                    255 * (1 - Math.min(1, n * (1 - u) + u)),
                    255 * (1 - Math.min(1, r * (1 - u) + u)),
                  ];
                }),
                (r.xyz.rgb = function (e) {
                  var t,
                    n,
                    r,
                    u = e[0] / 100,
                    a = e[1] / 100,
                    i = e[2] / 100;
                  return (
                    (n = -0.9689 * u + 1.8758 * a + 0.0415 * i),
                    (r = 0.0557 * u + -0.204 * a + 1.057 * i),
                    (t =
                      (t = 3.2406 * u + -1.5372 * a + -0.4986 * i) > 0.0031308
                        ? 1.055 * Math.pow(t, 1 / 2.4) - 0.055
                        : 12.92 * t),
                    (n =
                      n > 0.0031308
                        ? 1.055 * Math.pow(n, 1 / 2.4) - 0.055
                        : 12.92 * n),
                    (r =
                      r > 0.0031308
                        ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055
                        : 12.92 * r),
                    [
                      255 * (t = Math.min(Math.max(0, t), 1)),
                      255 * (n = Math.min(Math.max(0, n), 1)),
                      255 * (r = Math.min(Math.max(0, r), 1)),
                    ]
                  );
                }),
                (r.xyz.lab = function (e) {
                  var t = e[0],
                    n = e[1],
                    r = e[2];
                  return (
                    (n /= 100),
                    (r /= 108.883),
                    (t =
                      (t /= 95.047) > 0.008856
                        ? Math.pow(t, 1 / 3)
                        : 7.787 * t + 16 / 116),
                    [
                      116 *
                        (n =
                          n > 0.008856
                            ? Math.pow(n, 1 / 3)
                            : 7.787 * n + 16 / 116) -
                        16,
                      500 * (t - n),
                      200 *
                        (n -
                          (r =
                            r > 0.008856
                              ? Math.pow(r, 1 / 3)
                              : 7.787 * r + 16 / 116)),
                    ]
                  );
                }),
                (r.lab.xyz = function (e) {
                  var t,
                    n,
                    r,
                    u = e[0];
                  (t = e[1] / 500 + (n = (u + 16) / 116)), (r = n - e[2] / 200);
                  var a = Math.pow(n, 3),
                    i = Math.pow(t, 3),
                    o = Math.pow(r, 3);
                  return (
                    (n = a > 0.008856 ? a : (n - 16 / 116) / 7.787),
                    (t = i > 0.008856 ? i : (t - 16 / 116) / 7.787),
                    (r = o > 0.008856 ? o : (r - 16 / 116) / 7.787),
                    [(t *= 95.047), (n *= 100), (r *= 108.883)]
                  );
                }),
                (r.lab.lch = function (e) {
                  var t,
                    n = e[0],
                    r = e[1],
                    u = e[2];
                  return (
                    (t = (360 * Math.atan2(u, r)) / 2 / Math.PI) < 0 &&
                      (t += 360),
                    [n, Math.sqrt(r * r + u * u), t]
                  );
                }),
                (r.lch.lab = function (e) {
                  var t,
                    n = e[0],
                    r = e[1];
                  return (
                    (t = (e[2] / 360) * 2 * Math.PI),
                    [n, r * Math.cos(t), r * Math.sin(t)]
                  );
                }),
                (r.rgb.ansi16 = function (e) {
                  var t = e[0],
                    n = e[1],
                    u = e[2],
                    a = 1 in arguments ? arguments[1] : r.rgb.hsv(e)[2];
                  if (0 === (a = Math.round(a / 50))) return 30;
                  var i =
                    30 +
                    ((Math.round(u / 255) << 2) |
                      (Math.round(n / 255) << 1) |
                      Math.round(t / 255));
                  return 2 === a && (i += 60), i;
                }),
                (r.hsv.ansi16 = function (e) {
                  return r.rgb.ansi16(r.hsv.rgb(e), e[2]);
                }),
                (r.rgb.ansi256 = function (e) {
                  var t = e[0],
                    n = e[1],
                    r = e[2];
                  return t === n && n === r
                    ? t < 8
                      ? 16
                      : t > 248
                      ? 231
                      : Math.round(((t - 8) / 247) * 24) + 232
                    : 16 +
                        36 * Math.round((t / 255) * 5) +
                        6 * Math.round((n / 255) * 5) +
                        Math.round((r / 255) * 5);
                }),
                (r.ansi16.rgb = function (e) {
                  var t = e % 10;
                  if (0 === t || 7 === t)
                    return e > 50 && (t += 3.5), [(t = (t / 10.5) * 255), t, t];
                  var n = 0.5 * (1 + ~~(e > 50));
                  return [
                    (1 & t) * n * 255,
                    ((t >> 1) & 1) * n * 255,
                    ((t >> 2) & 1) * n * 255,
                  ];
                }),
                (r.ansi256.rgb = function (e) {
                  if (e >= 232) {
                    var t = 10 * (e - 232) + 8;
                    return [t, t, t];
                  }
                  var n;
                  return (
                    (e -= 16),
                    [
                      (Math.floor(e / 36) / 5) * 255,
                      (Math.floor((n = e % 36) / 6) / 5) * 255,
                      ((n % 6) / 5) * 255,
                    ]
                  );
                }),
                (r.rgb.hex = function (e) {
                  var t = (
                    ((255 & Math.round(e[0])) << 16) +
                    ((255 & Math.round(e[1])) << 8) +
                    (255 & Math.round(e[2]))
                  )
                    .toString(16)
                    .toUpperCase();
                  return '000000'.substring(t.length) + t;
                }),
                (r.hex.rgb = function (e) {
                  var t = e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
                  if (!t) return [0, 0, 0];
                  var n = t[0];
                  3 === t[0].length &&
                    (n = n
                      .split('')
                      .map(function (e) {
                        return e + e;
                      })
                      .join(''));
                  var r = parseInt(n, 16);
                  return [(r >> 16) & 255, (r >> 8) & 255, 255 & r];
                }),
                (r.rgb.hcg = function (e) {
                  var t,
                    n = e[0] / 255,
                    r = e[1] / 255,
                    u = e[2] / 255,
                    a = Math.max(Math.max(n, r), u),
                    i = Math.min(Math.min(n, r), u),
                    o = a - i;
                  return (
                    (t =
                      o <= 0
                        ? 0
                        : a === n
                        ? ((r - u) / o) % 6
                        : a === r
                        ? 2 + (u - n) / o
                        : 4 + (n - r) / o + 4),
                    (t /= 6),
                    [360 * (t %= 1), 100 * o, 100 * (o < 1 ? i / (1 - o) : 0)]
                  );
                }),
                (r.hsl.hcg = function (e) {
                  var t,
                    n = e[1] / 100,
                    r = e[2] / 100,
                    u = 0;
                  return (
                    (t = r < 0.5 ? 2 * n * r : 2 * n * (1 - r)) < 1 &&
                      (u = (r - 0.5 * t) / (1 - t)),
                    [e[0], 100 * t, 100 * u]
                  );
                }),
                (r.hsv.hcg = function (e) {
                  var t = e[1] / 100,
                    n = e[2] / 100,
                    r = t * n,
                    u = 0;
                  return (
                    r < 1 && (u = (n - r) / (1 - r)), [e[0], 100 * r, 100 * u]
                  );
                }),
                (r.hcg.rgb = function (e) {
                  var t = e[0] / 360,
                    n = e[1] / 100,
                    r = e[2] / 100;
                  if (0 === n) return [255 * r, 255 * r, 255 * r];
                  var u,
                    a = [0, 0, 0],
                    i = (t % 1) * 6,
                    o = i % 1,
                    s = 1 - o;
                  switch (Math.floor(i)) {
                    case 0:
                      (a[0] = 1), (a[1] = o), (a[2] = 0);
                      break;
                    case 1:
                      (a[0] = s), (a[1] = 1), (a[2] = 0);
                      break;
                    case 2:
                      (a[0] = 0), (a[1] = 1), (a[2] = o);
                      break;
                    case 3:
                      (a[0] = 0), (a[1] = s), (a[2] = 1);
                      break;
                    case 4:
                      (a[0] = o), (a[1] = 0), (a[2] = 1);
                      break;
                    default:
                      (a[0] = 1), (a[1] = 0), (a[2] = s);
                  }
                  return (
                    (u = (1 - n) * r),
                    [
                      255 * (n * a[0] + u),
                      255 * (n * a[1] + u),
                      255 * (n * a[2] + u),
                    ]
                  );
                }),
                (r.hcg.hsv = function (e) {
                  var t = e[1] / 100,
                    n = t + (e[2] / 100) * (1 - t),
                    r = 0;
                  return n > 0 && (r = t / n), [e[0], 100 * r, 100 * n];
                }),
                (r.hcg.hsl = function (e) {
                  var t = e[1] / 100,
                    n = (e[2] / 100) * (1 - t) + 0.5 * t,
                    r = 0;
                  return (
                    n > 0 && n < 0.5
                      ? (r = t / (2 * n))
                      : n >= 0.5 && n < 1 && (r = t / (2 * (1 - n))),
                    [e[0], 100 * r, 100 * n]
                  );
                }),
                (r.hcg.hwb = function (e) {
                  var t = e[1] / 100,
                    n = t + (e[2] / 100) * (1 - t);
                  return [e[0], 100 * (n - t), 100 * (1 - n)];
                }),
                (r.hwb.hcg = function (e) {
                  var t = e[1] / 100,
                    n = 1 - e[2] / 100,
                    r = n - t,
                    u = 0;
                  return (
                    r < 1 && (u = (n - r) / (1 - r)), [e[0], 100 * r, 100 * u]
                  );
                }),
                (r.apple.rgb = function (e) {
                  return [
                    (e[0] / 65535) * 255,
                    (e[1] / 65535) * 255,
                    (e[2] / 65535) * 255,
                  ];
                }),
                (r.rgb.apple = function (e) {
                  return [
                    (e[0] / 255) * 65535,
                    (e[1] / 255) * 65535,
                    (e[2] / 255) * 65535,
                  ];
                }),
                (r.gray.rgb = function (e) {
                  return [
                    (e[0] / 100) * 255,
                    (e[0] / 100) * 255,
                    (e[0] / 100) * 255,
                  ];
                }),
                (r.gray.hsl = r.gray.hsv = function (e) {
                  return [0, 0, e[0]];
                }),
                (r.gray.hwb = function (e) {
                  return [0, 100, e[0]];
                }),
                (r.gray.cmyk = function (e) {
                  return [0, 0, 0, e[0]];
                }),
                (r.gray.lab = function (e) {
                  return [e[0], 0, 0];
                }),
                (r.gray.hex = function (e) {
                  var t = 255 & Math.round((e[0] / 100) * 255),
                    n = ((t << 16) + (t << 8) + t).toString(16).toUpperCase();
                  return '000000'.substring(n.length) + n;
                }),
                (r.rgb.gray = function (e) {
                  return [((e[0] + e[1] + e[2]) / 3 / 255) * 100];
                });
            });
          function $r(e, t) {
            return function (n) {
              return t(e(n));
            };
          }
          function Vr(e, t) {
            for (
              var n = [t[e].parent, e], r = Rr[t[e].parent][e], u = t[e].parent;
              t[u].parent;

            )
              n.unshift(t[u].parent),
                (r = $r(Rr[t[u].parent][u], r)),
                (u = t[u].parent);
            return (r.conversion = n), r;
          }
          var qr = {};
          Object.keys(Rr).forEach(function (e) {
            (qr[e] = {}),
              Object.defineProperty(qr[e], 'channels', {
                value: Rr[e].channels,
              }),
              Object.defineProperty(qr[e], 'labels', { value: Rr[e].labels });
            var t = (function (e) {
              for (
                var t = (function (e) {
                    var t = (function () {
                        for (
                          var e = {}, t = Object.keys(Rr), n = t.length, r = 0;
                          r < n;
                          r++
                        )
                          e[t[r]] = { distance: -1, parent: null };
                        return e;
                      })(),
                      n = [e];
                    for (t[e].distance = 0; n.length; )
                      for (
                        var r = n.pop(),
                          u = Object.keys(Rr[r]),
                          a = u.length,
                          i = 0;
                        i < a;
                        i++
                      ) {
                        var o = u[i],
                          s = t[o];
                        -1 === s.distance &&
                          ((s.distance = t[r].distance + 1),
                          (s.parent = r),
                          n.unshift(o));
                      }
                    return t;
                  })(e),
                  n = {},
                  r = Object.keys(t),
                  u = r.length,
                  a = 0;
                a < u;
                a++
              ) {
                var i = r[a];
                null !== t[i].parent && (n[i] = Vr(i, t));
              }
              return n;
            })(e);
            Object.keys(t).forEach(function (n) {
              var r = t[n];
              (qr[e][n] = (function (e) {
                var t = function (t) {
                  if (null == t) return t;
                  arguments.length > 1 &&
                    (t = Array.prototype.slice.call(arguments));
                  var n = e(t);
                  if ('object' == k(n))
                    for (var r = n.length, u = 0; u < r; u++)
                      n[u] = Math.round(n[u]);
                  return n;
                };
                return 'conversion' in e && (t.conversion = e.conversion), t;
              })(r)),
                (qr[e][n].raw = (function (e) {
                  var t = function (t) {
                    return null == t
                      ? t
                      : (arguments.length > 1 &&
                          (t = Array.prototype.slice.call(arguments)),
                        e(t));
                  };
                  return 'conversion' in e && (t.conversion = e.conversion), t;
                })(r));
            });
          });
          var Wr,
            Ur = qr,
            Jr = Xe(function (e) {
              var t = function (e, t) {
                  return function () {
                    var n = e.apply(Ur, arguments);
                    return '['.concat(n + t, 'm');
                  };
                },
                n = function (e, t) {
                  return function () {
                    var n = e.apply(Ur, arguments);
                    return '['.concat(38 + t, ';5;').concat(n, 'm');
                  };
                },
                r = function (e, t) {
                  return function () {
                    var n = e.apply(Ur, arguments);
                    return '['
                      .concat(38 + t, ';2;')
                      .concat(n[0], ';')
                      .concat(n[1], ';')
                      .concat(n[2], 'm');
                  };
                };
              Object.defineProperty(e, 'exports', {
                enumerable: !0,
                get: function () {
                  var e = new Map(),
                    u = {
                      modifier: {
                        reset: [0, 0],
                        bold: [1, 22],
                        dim: [2, 22],
                        italic: [3, 23],
                        underline: [4, 24],
                        inverse: [7, 27],
                        hidden: [8, 28],
                        strikethrough: [9, 29],
                      },
                      color: {
                        black: [30, 39],
                        red: [31, 39],
                        green: [32, 39],
                        yellow: [33, 39],
                        blue: [34, 39],
                        magenta: [35, 39],
                        cyan: [36, 39],
                        white: [37, 39],
                        gray: [90, 39],
                        redBright: [91, 39],
                        greenBright: [92, 39],
                        yellowBright: [93, 39],
                        blueBright: [94, 39],
                        magentaBright: [95, 39],
                        cyanBright: [96, 39],
                        whiteBright: [97, 39],
                      },
                      bgColor: {
                        bgBlack: [40, 49],
                        bgRed: [41, 49],
                        bgGreen: [42, 49],
                        bgYellow: [43, 49],
                        bgBlue: [44, 49],
                        bgMagenta: [45, 49],
                        bgCyan: [46, 49],
                        bgWhite: [47, 49],
                        bgBlackBright: [100, 49],
                        bgRedBright: [101, 49],
                        bgGreenBright: [102, 49],
                        bgYellowBright: [103, 49],
                        bgBlueBright: [104, 49],
                        bgMagentaBright: [105, 49],
                        bgCyanBright: [106, 49],
                        bgWhiteBright: [107, 49],
                      },
                    };
                  u.color.grey = u.color.gray;
                  for (var a = 0, i = Object.keys(u); a < i.length; a++) {
                    for (
                      var o = i[a], s = u[o], l = 0, c = Object.keys(s);
                      l < c.length;
                      l++
                    ) {
                      var p = c[l],
                        f = s[p];
                      (u[p] = {
                        open: '['.concat(f[0], 'm'),
                        close: '['.concat(f[1], 'm'),
                      }),
                        (s[p] = u[p]),
                        e.set(f[0], f[1]);
                    }
                    Object.defineProperty(u, o, { value: s, enumerable: !1 }),
                      Object.defineProperty(u, 'codes', {
                        value: e,
                        enumerable: !1,
                      });
                  }
                  var d = function (e) {
                      return e;
                    },
                    h = function (e, t, n) {
                      return [e, t, n];
                    };
                  (u.color.close = '[39m'),
                    (u.bgColor.close = '[49m'),
                    (u.color.ansi = { ansi: t(d, 0) }),
                    (u.color.ansi256 = { ansi256: n(d, 0) }),
                    (u.color.ansi16m = { rgb: r(h, 0) }),
                    (u.bgColor.ansi = { ansi: t(d, 10) }),
                    (u.bgColor.ansi256 = { ansi256: n(d, 10) }),
                    (u.bgColor.ansi16m = { rgb: r(h, 10) });
                  for (var g = 0, m = Object.keys(Ur); g < m.length; g++) {
                    var y = m[g];
                    if ('object' == k(Ur[y])) {
                      var D = Ur[y];
                      'ansi16' === y && (y = 'ansi'),
                        'ansi16' in D &&
                          ((u.color.ansi[y] = t(D.ansi16, 0)),
                          (u.bgColor.ansi[y] = t(D.ansi16, 10))),
                        'ansi256' in D &&
                          ((u.color.ansi256[y] = n(D.ansi256, 0)),
                          (u.bgColor.ansi256[y] = n(D.ansi256, 10))),
                        'rgb' in D &&
                          ((u.color.ansi16m[y] = r(D.rgb, 0)),
                          (u.bgColor.ansi16m[y] = r(D.rgb, 10)));
                    }
                  }
                  return u;
                },
              });
            }),
            zr = function (e, t) {
              t = t || Je.argv;
              var n = e.startsWith('-') ? '' : 1 === e.length ? '-' : '--',
                r = t.indexOf(n + e),
                u = t.indexOf('--');
              return -1 !== r && (-1 === u || r < u);
            },
            Gr = Ye(
              Object.freeze({
                __proto__: null,
                default: {
                  EOL: '\n',
                  platform: function () {
                    return 'browser';
                  },
                  cpus: function () {
                    return [{ model: 'Prettier' }];
                  },
                },
              })
            ),
            Hr = Je.env;
          function Xr(e) {
            return (function (e) {
              return (
                0 !== e && {
                  level: e,
                  hasBasic: !0,
                  has256: e >= 2,
                  has16m: e >= 3,
                }
              );
            })(
              (function (e) {
                if (!1 === Wr) return 0;
                if (
                  zr('color=16m') ||
                  zr('color=full') ||
                  zr('color=truecolor')
                )
                  return 3;
                if (zr('color=256')) return 2;
                if (e && !e.isTTY && !0 !== Wr) return 0;
                var t = Wr ? 1 : 0;
                if ('win32' === Je.platform) {
                  var n = Gr.release().split('.');
                  return Number(Je.versions.node.split('.')[0]) >= 8 &&
                    Number(n[0]) >= 10 &&
                    Number(n[2]) >= 10586
                    ? Number(n[2]) >= 14931
                      ? 3
                      : 2
                    : 1;
                }
                if ('CI' in Hr)
                  return ['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(
                    function (e) {
                      return e in Hr;
                    }
                  ) || 'codeship' === Hr.CI_NAME
                    ? 1
                    : t;
                if ('TEAMCITY_VERSION' in Hr)
                  return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(
                    Hr.TEAMCITY_VERSION
                  )
                    ? 1
                    : 0;
                if ('truecolor' === Hr.COLORTERM) return 3;
                if ('TERM_PROGRAM' in Hr) {
                  var r = parseInt(
                    (Hr.TERM_PROGRAM_VERSION || '').split('.')[0],
                    10
                  );
                  switch (Hr.TERM_PROGRAM) {
                    case 'iTerm.app':
                      return r >= 3 ? 3 : 2;
                    case 'Apple_Terminal':
                      return 2;
                  }
                }
                return /-256(color)?$/i.test(Hr.TERM)
                  ? 2
                  : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(
                      Hr.TERM
                    ) || 'COLORTERM' in Hr
                  ? 1
                  : (Hr.TERM, t);
              })(e)
            );
          }
          zr('no-color') || zr('no-colors') || zr('color=false')
            ? (Wr = !1)
            : (zr('color') ||
                zr('colors') ||
                zr('color=true') ||
                zr('color=always')) &&
              (Wr = !0),
            'FORCE_COLOR' in Hr &&
              (Wr =
                0 === Hr.FORCE_COLOR.length ||
                0 !== parseInt(Hr.FORCE_COLOR, 10));
          var Yr = {
              supportsColor: Xr,
              stdout: Xr(Je.stdout),
              stderr: Xr(Je.stderr),
            },
            Kr = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,
            Qr = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,
            Zr = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,
            eu = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,
            tu = new Map([
              ['n', '\n'],
              ['r', '\r'],
              ['t', '\t'],
              ['b', '\b'],
              ['f', '\f'],
              ['v', '\v'],
              ['0', '\0'],
              ['\\', '\\'],
              ['e', ''],
              ['a', ''],
            ]);
          function nu(e) {
            return ('u' === e[0] && 5 === e.length) ||
              ('x' === e[0] && 3 === e.length)
              ? String.fromCharCode(parseInt(e.slice(1), 16))
              : tu.get(e) || e;
          }
          function ru(e, t) {
            var n,
              r,
              u = [],
              a = g(t.trim().split(/\s*,\s*/g));
            try {
              for (a.s(); !(r = a.n()).done; ) {
                var i = r.value;
                if (isNaN(i)) {
                  if (!(n = i.match(Zr)))
                    throw new Error(
                      'Invalid Chalk template style argument: '
                        .concat(i, " (in style '")
                        .concat(e, "')")
                    );
                  u.push(
                    n[2].replace(eu, function (e, t, n) {
                      return t ? nu(t) : n;
                    })
                  );
                } else u.push(Number(i));
              }
            } catch (o) {
              a.e(o);
            } finally {
              a.f();
            }
            return u;
          }
          function uu(e) {
            Qr.lastIndex = 0;
            for (var t, n = []; null !== (t = Qr.exec(e)); ) {
              var r = t[1];
              if (t[2]) {
                var u = ru(r, t[2]);
                n.push([r].concat(u));
              } else n.push([r]);
            }
            return n;
          }
          function au(e, t) {
            var n,
              r = {},
              u = g(t);
            try {
              for (u.s(); !(n = u.n()).done; ) {
                var a,
                  i = n.value,
                  o = g(i.styles);
                try {
                  for (o.s(); !(a = o.n()).done; ) {
                    var s = a.value;
                    r[s[0]] = i.inverse ? null : s.slice(1);
                  }
                } catch (d) {
                  o.e(d);
                } finally {
                  o.f();
                }
              }
            } catch (d) {
              u.e(d);
            } finally {
              u.f();
            }
            for (var l = e, c = 0, p = Object.keys(r); c < p.length; c++) {
              var f = p[c];
              if (Array.isArray(r[f])) {
                if (!(f in l))
                  throw new Error('Unknown Chalk style: '.concat(f));
                l = r[f].length > 0 ? l[f].apply(l, r[f]) : l[f];
              }
            }
            return l;
          }
          var iu = function (e, t) {
              var n = [],
                r = [],
                u = [];
              if (
                (t.replace(Kr, function (t, a, i, o, s, l) {
                  if (a) u.push(nu(a));
                  else if (o) {
                    var c = u.join('');
                    (u = []),
                      r.push(0 === n.length ? c : au(e, n)(c)),
                      n.push({ inverse: i, styles: uu(o) });
                  } else if (s) {
                    if (0 === n.length)
                      throw new Error(
                        'Found extraneous } in Chalk template literal'
                      );
                    r.push(au(e, n)(u.join(''))), (u = []), n.pop();
                  } else u.push(l);
                }),
                r.push(u.join('')),
                n.length > 0)
              ) {
                var a = 'Chalk template literal is missing '
                  .concat(n.length, ' closing bracket')
                  .concat(1 === n.length ? '' : 's', ' (`}`)');
                throw new Error(a);
              }
              return r.join('');
            },
            ou = Xe(function (e) {
              var t = Yr.stdout,
                n =
                  'win32' === Je.platform &&
                  !(Je.env.TERM || '').toLowerCase().startsWith('xterm'),
                r = ['ansi', 'ansi', 'ansi256', 'ansi16m'],
                u = new Set(['gray']),
                a = Object.create(null);
              function i(e, n) {
                n = n || {};
                var r = t ? t.level : 0;
                (e.level = void 0 === n.level ? r : n.level),
                  (e.enabled = 'enabled' in n ? n.enabled : e.level > 0);
              }
              function o(e) {
                if (!this || !(this instanceof o) || this.template) {
                  var t = {};
                  return (
                    i(t, e),
                    (t.template = function () {
                      var e = [].slice.call(arguments);
                      return function (e, t) {
                        if (!Array.isArray(t))
                          return [].slice.call(arguments, 1).join(' ');
                        for (
                          var n = [].slice.call(arguments, 2),
                            r = [t.raw[0]],
                            u = 1;
                          u < t.length;
                          u++
                        )
                          r.push(String(n[u - 1]).replace(/[{}\\]/g, '\\$&')),
                            r.push(String(t.raw[u]));
                        return iu(e, r.join(''));
                      }.apply(null, [t.template].concat(e));
                    }),
                    Object.setPrototypeOf(t, o.prototype),
                    Object.setPrototypeOf(t.template, t),
                    (t.template.constructor = o),
                    t.template
                  );
                }
                i(this, e);
              }
              n && (Jr.blue.open = '[94m');
              for (
                var s = function () {
                    var e = c[l];
                    (Jr[e].closeRe = new RegExp(Lr(Jr[e].close), 'g')),
                      (a[e] = {
                        get: function () {
                          var t = Jr[e];
                          return v.call(
                            this,
                            this._styles ? this._styles.concat(t) : [t],
                            this._empty,
                            e
                          );
                        },
                      });
                  },
                  l = 0,
                  c = Object.keys(Jr);
                l < c.length;
                l++
              )
                s();
              (a.visible = {
                get: function () {
                  return v.call(this, this._styles || [], !0, 'visible');
                },
              }),
                (Jr.color.closeRe = new RegExp(Lr(Jr.color.close), 'g'));
              for (
                var p = function () {
                    var e = d[f];
                    u.has(e) ||
                      (a[e] = {
                        get: function () {
                          var t = this.level;
                          return function () {
                            var n = {
                              open: Jr.color[r[t]][e].apply(null, arguments),
                              close: Jr.color.close,
                              closeRe: Jr.color.closeRe,
                            };
                            return v.call(
                              this,
                              this._styles ? this._styles.concat(n) : [n],
                              this._empty,
                              e
                            );
                          };
                        },
                      });
                  },
                  f = 0,
                  d = Object.keys(Jr.color.ansi);
                f < d.length;
                f++
              )
                p();
              Jr.bgColor.closeRe = new RegExp(Lr(Jr.bgColor.close), 'g');
              for (
                var h = function () {
                    var e = y[m];
                    if (u.has(e)) return 'continue';
                    a['bg' + e[0].toUpperCase() + e.slice(1)] = {
                      get: function () {
                        var t = this.level;
                        return function () {
                          var n = {
                            open: Jr.bgColor[r[t]][e].apply(null, arguments),
                            close: Jr.bgColor.close,
                            closeRe: Jr.bgColor.closeRe,
                          };
                          return v.call(
                            this,
                            this._styles ? this._styles.concat(n) : [n],
                            this._empty,
                            e
                          );
                        };
                      },
                    };
                  },
                  m = 0,
                  y = Object.keys(Jr.bgColor.ansi);
                m < y.length;
                m++
              )
                h();
              var D = Object.defineProperties(function () {}, a);
              function v(e, t, n) {
                var r = function e() {
                  return E.apply(e, arguments);
                };
                (r._styles = e), (r._empty = t);
                var u = this;
                return (
                  Object.defineProperty(r, 'level', {
                    enumerable: !0,
                    get: function () {
                      return u.level;
                    },
                    set: function (e) {
                      u.level = e;
                    },
                  }),
                  Object.defineProperty(r, 'enabled', {
                    enumerable: !0,
                    get: function () {
                      return u.enabled;
                    },
                    set: function (e) {
                      u.enabled = e;
                    },
                  }),
                  (r.hasGrey = this.hasGrey || 'gray' === n || 'grey' === n),
                  (r.__proto__ = D),
                  r
                );
              }
              function E() {
                var e = arguments,
                  t = e.length,
                  r = String(arguments[0]);
                if (0 === t) return '';
                if (t > 1) for (var u = 1; u < t; u++) r += ' ' + e[u];
                if (!this.enabled || this.level <= 0 || !r)
                  return this._empty ? '' : r;
                var a = Jr.dim.open;
                n && this.hasGrey && (Jr.dim.open = '');
                var i,
                  o = g(this._styles.slice().reverse());
                try {
                  for (o.s(); !(i = o.n()).done; ) {
                    var s = i.value;
                    r = (r =
                      s.open + r.replace(s.closeRe, s.open) + s.close).replace(
                      /\r?\n/g,
                      ''.concat(s.close, '$&').concat(s.open)
                    );
                  }
                } catch (l) {
                  o.e(l);
                } finally {
                  o.f();
                }
                return (Jr.dim.open = a), r;
              }
              Object.defineProperties(o.prototype, a),
                (e.exports = o()),
                (e.exports.supportsColor = t),
                (e.exports.default = e.exports);
            }),
            su = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.commonDeprecatedHandler = function (e, t, n) {
                  var r = n.descriptor,
                    u = [
                      ''.concat(
                        ou.default.yellow(
                          'string' == typeof e ? r.key(e) : r.pair(e)
                        ),
                        ' is deprecated'
                      ),
                    ];
                  return (
                    t &&
                      u.push(
                        'we now treat it as '.concat(
                          ou.default.blue(
                            'string' == typeof t ? r.key(t) : r.pair(t)
                          )
                        )
                      ),
                    u.join('; ') + '.'
                  );
                });
            }),
            lu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                Pr.__exportStar(su, t);
            }),
            cu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.commonInvalidHandler = function (e, t, n) {
                  return [
                    'Invalid '.concat(
                      ou.default.red(n.descriptor.key(e)),
                      ' value.'
                    ),
                    'Expected '.concat(
                      ou.default.blue(n.schemas[e].expected(n)),
                      ','
                    ),
                    'but received '.concat(
                      ou.default.red(n.descriptor.value(t)),
                      '.'
                    ),
                  ].join(' ');
                });
            }),
            pu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                Pr.__exportStar(cu, t);
            }),
            fu = [],
            du = [],
            hu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.levenUnknownHandler = function (e, t, n) {
                  var r = n.descriptor,
                    u = n.logger,
                    a = n.schemas,
                    i = [
                      'Ignored unknown option '.concat(
                        ou.default.yellow(r.pair({ key: e, value: t })),
                        '.'
                      ),
                    ],
                    o = Object.keys(a)
                      .sort()
                      .find(function (t) {
                        return (
                          (function (e, t) {
                            if (e === t) return 0;
                            var n = e;
                            e.length > t.length && ((e = t), (t = n));
                            var r = e.length,
                              u = t.length;
                            if (0 === r) return u;
                            if (0 === u) return r;
                            for (
                              ;
                              r > 0 && e.charCodeAt(~-r) === t.charCodeAt(~-u);

                            )
                              r--, u--;
                            if (0 === r) return u;
                            for (
                              var a, i, o, s, l = 0;
                              l < r && e.charCodeAt(l) === t.charCodeAt(l);

                            )
                              l++;
                            if (((u -= l), 0 == (r -= l))) return u;
                            for (var c = 0, p = 0; c < r; )
                              (du[l + c] = e.charCodeAt(l + c)), (fu[c] = ++c);
                            for (; p < u; )
                              for (
                                a = t.charCodeAt(l + p), o = p++, i = p, c = 0;
                                c < r;
                                c++
                              )
                                (s = a === du[l + c] ? o : o + 1),
                                  (o = fu[c]),
                                  (i = fu[c] =
                                    o > i
                                      ? s > i
                                        ? i + 1
                                        : s
                                      : s > o
                                      ? o + 1
                                      : s);
                            return i;
                          })(e, t) < 3
                        );
                      });
                  o &&
                    i.push(
                      'Did you mean '.concat(ou.default.blue(r.key(o)), '?')
                    ),
                    u.warn(i.join(' '));
                });
            }),
            gu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                Pr.__exportStar(hu, t);
            }),
            mu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                Pr.__exportStar(lu, t),
                Pr.__exportStar(pu, t),
                Pr.__exportStar(gu, t);
            }),
            yu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = [
                'default',
                'expected',
                'validate',
                'deprecated',
                'forward',
                'redirect',
                'overlap',
                'preprocess',
                'postprocess',
              ];
              function r(e, t) {
                var r,
                  i = new e(t),
                  o = Object.create(i),
                  s = g(n);
                try {
                  for (s.s(); !(r = s.n()).done; ) {
                    var l = r.value;
                    l in t && (o[l] = a(t[l], i, u.prototype[l].length));
                  }
                } catch (c) {
                  s.e(c);
                } finally {
                  s.f();
                }
                return o;
              }
              t.createSchema = r;
              var u = (function () {
                function e(t) {
                  w(this, e), (this.name = t.name);
                }
                return (
                  T(
                    e,
                    [
                      { key: 'default', value: function (e) {} },
                      {
                        key: 'expected',
                        value: function (e) {
                          return 'nothing';
                        },
                      },
                      {
                        key: 'validate',
                        value: function (e, t) {
                          return !1;
                        },
                      },
                      {
                        key: 'deprecated',
                        value: function (e, t) {
                          return !1;
                        },
                      },
                      { key: 'forward', value: function (e, t) {} },
                      { key: 'redirect', value: function (e, t) {} },
                      {
                        key: 'overlap',
                        value: function (e, t, n) {
                          return e;
                        },
                      },
                      {
                        key: 'preprocess',
                        value: function (e, t) {
                          return e;
                        },
                      },
                      {
                        key: 'postprocess',
                        value: function (e, t) {
                          return e;
                        },
                      },
                    ],
                    [
                      {
                        key: 'create',
                        value: function (e) {
                          return r(this, e);
                        },
                      },
                    ]
                  ),
                  e
                );
              })();
              function a(e, t, n) {
                return 'function' == typeof e
                  ? function () {
                      for (
                        var r = arguments.length, u = new Array(r), a = 0;
                        a < r;
                        a++
                      )
                        u[a] = arguments[a];
                      return e.apply(
                        void 0,
                        m(u.slice(0, n - 1)).concat([t], m(u.slice(n - 1)))
                      );
                    }
                  : function () {
                      return e;
                    };
              }
              t.Schema = u;
            }),
            Du = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = (function (e) {
                a(n, yu.Schema);
                var t = i(n);
                function n(e) {
                  var r;
                  return (
                    w(this, n),
                    ((r = t.call(this, e))._sourceName = e.sourceName),
                    r
                  );
                }
                return (
                  T(n, [
                    {
                      key: 'expected',
                      value: function (e) {
                        return e.schemas[this._sourceName].expected(e);
                      },
                    },
                    {
                      key: 'validate',
                      value: function (e, t) {
                        return t.schemas[this._sourceName].validate(e, t);
                      },
                    },
                    {
                      key: 'redirect',
                      value: function (e, t) {
                        return this._sourceName;
                      },
                    },
                  ]),
                  n
                );
              })();
              t.AliasSchema = n;
            }),
            vu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = (function (e) {
                a(n, yu.Schema);
                var t = i(n);
                function n() {
                  return w(this, n), t.apply(this, arguments);
                }
                return (
                  T(n, [
                    {
                      key: 'expected',
                      value: function () {
                        return 'anything';
                      },
                    },
                    {
                      key: 'validate',
                      value: function () {
                        return !0;
                      },
                    },
                  ]),
                  n
                );
              })();
              t.AnySchema = n;
            }),
            Eu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = (function (e) {
                a(n, yu.Schema);
                var t = i(n);
                function n(e) {
                  var r;
                  w(this, n);
                  var u = e.valueSchema,
                    a = e.name,
                    i = void 0 === a ? u.name : a,
                    o = Pr.__rest(e, ['valueSchema', 'name']);
                  return (
                    ((r = t.call(
                      this,
                      Object.assign({}, o, { name: i })
                    ))._valueSchema = u),
                    r
                  );
                }
                return (
                  T(n, [
                    {
                      key: 'expected',
                      value: function (e) {
                        return 'an array of '.concat(
                          this._valueSchema.expected(e)
                        );
                      },
                    },
                    {
                      key: 'validate',
                      value: function (e, t) {
                        if (!Array.isArray(e)) return !1;
                        var n,
                          r = [],
                          u = g(e);
                        try {
                          for (u.s(); !(n = u.n()).done; ) {
                            var a = n.value,
                              i = t.normalizeValidateResult(
                                this._valueSchema.validate(a, t),
                                a
                              );
                            !0 !== i && r.push(i.value);
                          }
                        } catch (o) {
                          u.e(o);
                        } finally {
                          u.f();
                        }
                        return 0 === r.length || { value: r };
                      },
                    },
                    {
                      key: 'deprecated',
                      value: function (e, t) {
                        var n,
                          r = [],
                          u = g(e);
                        try {
                          for (u.s(); !(n = u.n()).done; ) {
                            var a = n.value,
                              i = t.normalizeDeprecatedResult(
                                this._valueSchema.deprecated(a, t),
                                a
                              );
                            !1 !== i &&
                              r.push.apply(
                                r,
                                m(
                                  i.map(function (e) {
                                    return { value: [e.value] };
                                  })
                                )
                              );
                          }
                        } catch (o) {
                          u.e(o);
                        } finally {
                          u.f();
                        }
                        return r;
                      },
                    },
                    {
                      key: 'forward',
                      value: function (e, t) {
                        var n,
                          u = [],
                          a = g(e);
                        try {
                          for (a.s(); !(n = a.n()).done; ) {
                            var i = n.value,
                              o = t.normalizeForwardResult(
                                this._valueSchema.forward(i, t),
                                i
                              );
                            u.push.apply(u, m(o.map(r)));
                          }
                        } catch (s) {
                          a.e(s);
                        } finally {
                          a.f();
                        }
                        return u;
                      },
                    },
                    {
                      key: 'redirect',
                      value: function (e, t) {
                        var n,
                          u = [],
                          a = [],
                          i = g(e);
                        try {
                          for (i.s(); !(n = i.n()).done; ) {
                            var o = n.value,
                              s = t.normalizeRedirectResult(
                                this._valueSchema.redirect(o, t),
                                o
                              );
                            'remain' in s && u.push(s.remain),
                              a.push.apply(a, m(s.redirect.map(r)));
                          }
                        } catch (l) {
                          i.e(l);
                        } finally {
                          i.f();
                        }
                        return 0 === u.length
                          ? { redirect: a }
                          : { redirect: a, remain: u };
                      },
                    },
                    {
                      key: 'overlap',
                      value: function (e, t) {
                        return e.concat(t);
                      },
                    },
                  ]),
                  n
                );
              })();
              function r(e) {
                return { from: [e.from], to: e.to };
              }
              t.ArraySchema = n;
            }),
            Cu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = (function (e) {
                a(n, yu.Schema);
                var t = i(n);
                function n() {
                  return w(this, n), t.apply(this, arguments);
                }
                return (
                  T(n, [
                    {
                      key: 'expected',
                      value: function () {
                        return 'true or false';
                      },
                    },
                    {
                      key: 'validate',
                      value: function (e) {
                        return 'boolean' == typeof e;
                      },
                    },
                  ]),
                  n
                );
              })();
              t.BooleanSchema = n;
            }),
            bu = Xe(function (e, t) {
              function n(e, t) {
                return 'string' == typeof e || 'key' in e
                  ? { from: t, to: e }
                  : 'from' in e
                  ? { from: e.from, to: e.to }
                  : { from: t, to: e.to };
              }
              function r(e, t) {
                return void 0 === e
                  ? []
                  : Array.isArray(e)
                  ? e.map(function (e) {
                      return n(e, t);
                    })
                  : [n(e, t)];
              }
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.recordFromArray = function (e, t) {
                  var n,
                    r = Object.create(null),
                    u = g(e);
                  try {
                    for (u.s(); !(n = u.n()).done; ) {
                      var a = n.value,
                        i = a[t];
                      if (r[i])
                        throw new Error(
                          'Duplicate '.concat(t, ' ').concat(JSON.stringify(i))
                        );
                      r[i] = a;
                    }
                  } catch (o) {
                    u.e(o);
                  } finally {
                    u.f();
                  }
                  return r;
                }),
                (t.mapFromArray = function (e, t) {
                  var n,
                    r = new Map(),
                    u = g(e);
                  try {
                    for (u.s(); !(n = u.n()).done; ) {
                      var a = n.value,
                        i = a[t];
                      if (r.has(i))
                        throw new Error(
                          'Duplicate '.concat(t, ' ').concat(JSON.stringify(i))
                        );
                      r.set(i, a);
                    }
                  } catch (o) {
                    u.e(o);
                  } finally {
                    u.f();
                  }
                  return r;
                }),
                (t.createAutoChecklist = function () {
                  var e = Object.create(null);
                  return function (t) {
                    var n = JSON.stringify(t);
                    return !!e[n] || ((e[n] = !0), !1);
                  };
                }),
                (t.partition = function (e, t) {
                  var n,
                    r = [],
                    u = [],
                    a = g(e);
                  try {
                    for (a.s(); !(n = a.n()).done; ) {
                      var i = n.value;
                      t(i) ? r.push(i) : u.push(i);
                    }
                  } catch (o) {
                    a.e(o);
                  } finally {
                    a.f();
                  }
                  return [r, u];
                }),
                (t.isInt = function (e) {
                  return e === Math.floor(e);
                }),
                (t.comparePrimitive = function (e, t) {
                  if (e === t) return 0;
                  var n = k(e),
                    r = k(t),
                    u = ['undefined', 'object', 'boolean', 'number', 'string'];
                  return n !== r
                    ? u.indexOf(n) - u.indexOf(r)
                    : 'string' !== n
                    ? Number(e) - Number(t)
                    : e.localeCompare(t);
                }),
                (t.normalizeDefaultResult = function (e) {
                  return void 0 === e ? {} : e;
                }),
                (t.normalizeValidateResult = function (e, t) {
                  return !0 === e || (!1 === e ? { value: t } : e);
                }),
                (t.normalizeDeprecatedResult = function (e, t) {
                  var n =
                    arguments.length > 2 &&
                    void 0 !== arguments[2] &&
                    arguments[2];
                  return (
                    !1 !== e &&
                    (!0 === e
                      ? !!n || [{ value: t }]
                      : 'value' in e
                      ? [e]
                      : 0 !== e.length && e)
                  );
                }),
                (t.normalizeTransferResult = n),
                (t.normalizeForwardResult = r),
                (t.normalizeRedirectResult = function (e, t) {
                  var n = r(
                    'object' == k(e) && 'redirect' in e ? e.redirect : e,
                    t
                  );
                  return 0 === n.length
                    ? { remain: t, redirect: n }
                    : 'object' == k(e) && 'remain' in e
                    ? { remain: e.remain, redirect: n }
                    : { redirect: n };
                });
            }),
            Au = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = (function (e) {
                a(n, yu.Schema);
                var t = i(n);
                function n(e) {
                  var r;
                  return (
                    w(this, n),
                    ((r = t.call(this, e))._choices = bu.mapFromArray(
                      e.choices.map(function (e) {
                        return e && 'object' == k(e) ? e : { value: e };
                      }),
                      'value'
                    )),
                    r
                  );
                }
                return (
                  T(n, [
                    {
                      key: 'expected',
                      value: function (e) {
                        var t = this,
                          n = e.descriptor,
                          r = Array.from(this._choices.keys())
                            .map(function (e) {
                              return t._choices.get(e);
                            })
                            .filter(function (e) {
                              return !e.deprecated;
                            })
                            .map(function (e) {
                              return e.value;
                            })
                            .sort(bu.comparePrimitive)
                            .map(n.value),
                          u = r.slice(0, -2),
                          a = r.slice(-2);
                        return u.concat(a.join(' or ')).join(', ');
                      },
                    },
                    {
                      key: 'validate',
                      value: function (e) {
                        return this._choices.has(e);
                      },
                    },
                    {
                      key: 'deprecated',
                      value: function (e) {
                        var t = this._choices.get(e);
                        return !(!t || !t.deprecated) && { value: e };
                      },
                    },
                    {
                      key: 'forward',
                      value: function (e) {
                        var t = this._choices.get(e);
                        return t ? t.forward : void 0;
                      },
                    },
                    {
                      key: 'redirect',
                      value: function (e) {
                        var t = this._choices.get(e);
                        return t ? t.redirect : void 0;
                      },
                    },
                  ]),
                  n
                );
              })();
              t.ChoiceSchema = n;
            }),
            Fu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = (function (e) {
                a(n, yu.Schema);
                var t = i(n);
                function n() {
                  return w(this, n), t.apply(this, arguments);
                }
                return (
                  T(n, [
                    {
                      key: 'expected',
                      value: function () {
                        return 'a number';
                      },
                    },
                    {
                      key: 'validate',
                      value: function (e, t) {
                        return 'number' == typeof e;
                      },
                    },
                  ]),
                  n
                );
              })();
              t.NumberSchema = n;
            }),
            xu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = (function (e) {
                a(n, Fu.NumberSchema);
                var t = i(n);
                function n() {
                  return w(this, n), t.apply(this, arguments);
                }
                return (
                  T(n, [
                    {
                      key: 'expected',
                      value: function () {
                        return 'an integer';
                      },
                    },
                    {
                      key: 'validate',
                      value: function (e, t) {
                        return (
                          !0 ===
                            t.normalizeValidateResult(
                              r(h(n.prototype), 'validate', this).call(
                                this,
                                e,
                                t
                              ),
                              e
                            ) && bu.isInt(e)
                        );
                      },
                    },
                  ]),
                  n
                );
              })();
              t.IntegerSchema = n;
            }),
            Su = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = (function (e) {
                a(n, yu.Schema);
                var t = i(n);
                function n() {
                  return w(this, n), t.apply(this, arguments);
                }
                return (
                  T(n, [
                    {
                      key: 'expected',
                      value: function () {
                        return 'a string';
                      },
                    },
                    {
                      key: 'validate',
                      value: function (e) {
                        return 'string' == typeof e;
                      },
                    },
                  ]),
                  n
                );
              })();
              t.StringSchema = n;
            }),
            wu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                Pr.__exportStar(Du, t),
                Pr.__exportStar(vu, t),
                Pr.__exportStar(Eu, t),
                Pr.__exportStar(Cu, t),
                Pr.__exportStar(Au, t),
                Pr.__exportStar(xu, t),
                Pr.__exportStar(Fu, t),
                Pr.__exportStar(Su, t);
            }),
            Bu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.defaultDescriptor = Mr.apiDescriptor),
                (t.defaultUnknownHandler = hu.levenUnknownHandler),
                (t.defaultInvalidHandler = pu.commonInvalidHandler),
                (t.defaultDeprecatedHandler = su.commonDeprecatedHandler);
            }),
            Tu = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.normalize = function (e, t, r) {
                  return new n(t, r).normalize(e);
                });
              var n = (function () {
                function e(t, n) {
                  w(this, e);
                  var r = n || {},
                    u = r.logger,
                    a = void 0 === u ? console : u,
                    i = r.descriptor,
                    o = void 0 === i ? Bu.defaultDescriptor : i,
                    s = r.unknown,
                    l = void 0 === s ? Bu.defaultUnknownHandler : s,
                    c = r.invalid,
                    p = void 0 === c ? Bu.defaultInvalidHandler : c,
                    f = r.deprecated,
                    d = void 0 === f ? Bu.defaultDeprecatedHandler : f;
                  (this._utils = {
                    descriptor: o,
                    logger: a || { warn: function () {} },
                    schemas: bu.recordFromArray(t, 'name'),
                    normalizeDefaultResult: bu.normalizeDefaultResult,
                    normalizeDeprecatedResult: bu.normalizeDeprecatedResult,
                    normalizeForwardResult: bu.normalizeForwardResult,
                    normalizeRedirectResult: bu.normalizeRedirectResult,
                    normalizeValidateResult: bu.normalizeValidateResult,
                  }),
                    (this._unknownHandler = l),
                    (this._invalidHandler = p),
                    (this._deprecatedHandler = d),
                    this.cleanHistory();
                }
                return (
                  T(e, [
                    {
                      key: 'cleanHistory',
                      value: function () {
                        this._hasDeprecationWarned = bu.createAutoChecklist();
                      },
                    },
                    {
                      key: 'normalize',
                      value: function (e) {
                        var t = this,
                          n = {},
                          r = [e],
                          u = function () {
                            for (; 0 !== r.length; ) {
                              var e = r.shift(),
                                u = t._applyNormalization(e, n);
                              r.push.apply(r, m(u));
                            }
                          };
                        u();
                        for (
                          var a = 0, i = Object.keys(this._utils.schemas);
                          a < i.length;
                          a++
                        ) {
                          var o = i[a],
                            s = this._utils.schemas[o];
                          if (!(o in n)) {
                            var l = bu.normalizeDefaultResult(
                              s.default(this._utils)
                            );
                            'value' in l && r.push(E({}, o, l.value));
                          }
                        }
                        u();
                        for (
                          var c = 0, p = Object.keys(this._utils.schemas);
                          c < p.length;
                          c++
                        ) {
                          var f = p[c],
                            d = this._utils.schemas[f];
                          f in n && (n[f] = d.postprocess(n[f], this._utils));
                        }
                        return n;
                      },
                    },
                    {
                      key: '_applyNormalization',
                      value: function (e, t) {
                        var n,
                          r = this,
                          u = [],
                          a = C(
                            bu.partition(Object.keys(e), function (e) {
                              return e in r._utils.schemas;
                            }),
                            2
                          ),
                          i = a[0],
                          o = a[1],
                          s = g(i);
                        try {
                          var l = function () {
                            var a = n.value,
                              i = r._utils.schemas[a],
                              o = i.preprocess(e[a], r._utils),
                              s = bu.normalizeValidateResult(
                                i.validate(o, r._utils),
                                o
                              );
                            if (!0 !== s) {
                              var l = s.value,
                                c = r._invalidHandler(a, l, r._utils);
                              throw 'string' == typeof c ? new Error(c) : c;
                            }
                            var p = function (e) {
                                var t = e.from,
                                  n = e.to;
                                u.push(
                                  'string' == typeof n
                                    ? E({}, n, t)
                                    : E({}, n.key, n.value)
                                );
                              },
                              f = function (e) {
                                var t = e.value,
                                  n = e.redirectTo,
                                  u = bu.normalizeDeprecatedResult(
                                    i.deprecated(t, r._utils),
                                    o,
                                    !0
                                  );
                                if (!1 !== u)
                                  if (!0 === u)
                                    r._hasDeprecationWarned(a) ||
                                      r._utils.logger.warn(
                                        r._deprecatedHandler(a, n, r._utils)
                                      );
                                  else {
                                    var s,
                                      l = g(u);
                                    try {
                                      for (l.s(); !(s = l.n()).done; ) {
                                        var c = s.value.value,
                                          p = { key: a, value: c };
                                        if (!r._hasDeprecationWarned(p)) {
                                          var f =
                                            'string' == typeof n
                                              ? { key: n, value: c }
                                              : n;
                                          r._utils.logger.warn(
                                            r._deprecatedHandler(p, f, r._utils)
                                          );
                                        }
                                      }
                                    } catch (d) {
                                      l.e(d);
                                    } finally {
                                      l.f();
                                    }
                                  }
                              };
                            bu.normalizeForwardResult(
                              i.forward(o, r._utils),
                              o
                            ).forEach(p);
                            var d = bu.normalizeRedirectResult(
                              i.redirect(o, r._utils),
                              o
                            );
                            if ((d.redirect.forEach(p), 'remain' in d)) {
                              var h = d.remain;
                              (t[a] =
                                a in t ? i.overlap(t[a], h, r._utils) : h),
                                f({ value: h });
                            }
                            var m,
                              y = g(d.redirect);
                            try {
                              for (y.s(); !(m = y.n()).done; ) {
                                var D = m.value;
                                f({ value: D.from, redirectTo: D.to });
                              }
                            } catch (v) {
                              y.e(v);
                            } finally {
                              y.f();
                            }
                          };
                          for (s.s(); !(n = s.n()).done; ) l();
                        } catch (b) {
                          s.e(b);
                        } finally {
                          s.f();
                        }
                        var c,
                          p = g(o);
                        try {
                          for (p.s(); !(c = p.n()).done; ) {
                            var f = c.value,
                              d = e[f],
                              h = this._unknownHandler(f, d, this._utils);
                            if (h)
                              for (
                                var m = 0, y = Object.keys(h);
                                m < y.length;
                                m++
                              ) {
                                var D = y[m],
                                  v = E({}, D, h[D]);
                                D in this._utils.schemas
                                  ? u.push(v)
                                  : Object.assign(t, v);
                              }
                          }
                        } catch (b) {
                          p.e(b);
                        } finally {
                          p.f();
                        }
                        return u;
                      },
                    },
                  ]),
                  e
                );
              })();
              t.Normalizer = n;
            }),
            ku = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                Pr.__exportStar(Ir, t),
                Pr.__exportStar(mu, t),
                Pr.__exportStar(wu, t),
                Pr.__exportStar(Tu, t),
                Pr.__exportStar(yu, t);
            }),
            Nu = [],
            Ou = [],
            Pu = function (e, t) {
              if (e === t) return 0;
              var n = e;
              e.length > t.length && ((e = t), (t = n));
              for (
                var r = e.length, u = t.length;
                r > 0 && e.charCodeAt(~-r) === t.charCodeAt(~-u);

              )
                r--, u--;
              for (
                var a, i, o, s, l = 0;
                l < r && e.charCodeAt(l) === t.charCodeAt(l);

              )
                l++;
              if (((u -= l), 0 === (r -= l))) return u;
              for (var c = 0, p = 0; c < r; )
                (Ou[c] = e.charCodeAt(l + c)), (Nu[c] = ++c);
              for (; p < u; )
                for (a = t.charCodeAt(l + p), o = p++, i = p, c = 0; c < r; c++)
                  (s = a === Ou[c] ? o : o + 1),
                    (o = Nu[c]),
                    (i = Nu[c] =
                      o > i ? (s > i ? i + 1 : s) : s > o ? o + 1 : s);
              return i;
            },
            Mu = Pu,
            Iu = Pu;
          Mu.default = Iu;
          for (
            var ju = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                grey: [128, 128, 128],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                rebeccapurple: [102, 51, 153],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50],
              },
              Lu = {},
              _u = 0,
              Ru = Object.keys(ju);
            _u < Ru.length;
            _u++
          ) {
            var $u = Ru[_u];
            Lu[ju[$u]] = $u;
          }
          for (
            var Vu = {
                rgb: { channels: 3, labels: 'rgb' },
                hsl: { channels: 3, labels: 'hsl' },
                hsv: { channels: 3, labels: 'hsv' },
                hwb: { channels: 3, labels: 'hwb' },
                cmyk: { channels: 4, labels: 'cmyk' },
                xyz: { channels: 3, labels: 'xyz' },
                lab: { channels: 3, labels: 'lab' },
                lch: { channels: 3, labels: 'lch' },
                hex: { channels: 1, labels: ['hex'] },
                keyword: { channels: 1, labels: ['keyword'] },
                ansi16: { channels: 1, labels: ['ansi16'] },
                ansi256: { channels: 1, labels: ['ansi256'] },
                hcg: { channels: 3, labels: ['h', 'c', 'g'] },
                apple: { channels: 3, labels: ['r16', 'g16', 'b16'] },
                gray: { channels: 1, labels: ['gray'] },
              },
              qu = Vu,
              Wu = 0,
              Uu = Object.keys(Vu);
            Wu < Uu.length;
            Wu++
          ) {
            var Ju = Uu[Wu];
            if (!('channels' in Vu[Ju]))
              throw new Error('missing channels property: ' + Ju);
            if (!('labels' in Vu[Ju]))
              throw new Error('missing channel labels property: ' + Ju);
            if (Vu[Ju].labels.length !== Vu[Ju].channels)
              throw new Error('channel and label counts mismatch: ' + Ju);
            var zu = Vu[Ju],
              Gu = zu.channels,
              Hu = zu.labels;
            delete Vu[Ju].channels,
              delete Vu[Ju].labels,
              Object.defineProperty(Vu[Ju], 'channels', { value: Gu }),
              Object.defineProperty(Vu[Ju], 'labels', { value: Hu });
          }
          function Xu(e, t) {
            return function (n) {
              return t(e(n));
            };
          }
          function Yu(e, t) {
            for (
              var n = [t[e].parent, e], r = qu[t[e].parent][e], u = t[e].parent;
              t[u].parent;

            )
              n.unshift(t[u].parent),
                (r = Xu(qu[t[u].parent][u], r)),
                (u = t[u].parent);
            return (r.conversion = n), r;
          }
          (Vu.rgb.hsl = function (e) {
            var t,
              n = e[0] / 255,
              r = e[1] / 255,
              u = e[2] / 255,
              a = Math.min(n, r, u),
              i = Math.max(n, r, u),
              o = i - a;
            i === a
              ? (t = 0)
              : n === i
              ? (t = (r - u) / o)
              : r === i
              ? (t = 2 + (u - n) / o)
              : u === i && (t = 4 + (n - r) / o),
              (t = Math.min(60 * t, 360)) < 0 && (t += 360);
            var s = (a + i) / 2;
            return [
              t,
              100 * (i === a ? 0 : s <= 0.5 ? o / (i + a) : o / (2 - i - a)),
              100 * s,
            ];
          }),
            (Vu.rgb.hsv = function (e) {
              var t,
                n,
                r,
                u,
                a,
                i = e[0] / 255,
                o = e[1] / 255,
                s = e[2] / 255,
                l = Math.max(i, o, s),
                c = l - Math.min(i, o, s),
                p = function (e) {
                  return (l - e) / 6 / c + 0.5;
                };
              return (
                0 === c
                  ? ((u = 0), (a = 0))
                  : ((a = c / l),
                    (t = p(i)),
                    (n = p(o)),
                    (r = p(s)),
                    i === l
                      ? (u = r - n)
                      : o === l
                      ? (u = 1 / 3 + t - r)
                      : s === l && (u = 2 / 3 + n - t),
                    u < 0 ? (u += 1) : u > 1 && (u -= 1)),
                [360 * u, 100 * a, 100 * l]
              );
            }),
            (Vu.rgb.hwb = function (e) {
              var t = e[0],
                n = e[1],
                r = e[2];
              return [
                Vu.rgb.hsl(e)[0],
                100 * ((1 / 255) * Math.min(t, Math.min(n, r))),
                100 * (r = 1 - (1 / 255) * Math.max(t, Math.max(n, r))),
              ];
            }),
            (Vu.rgb.cmyk = function (e) {
              var t = e[0] / 255,
                n = e[1] / 255,
                r = e[2] / 255,
                u = Math.min(1 - t, 1 - n, 1 - r);
              return [
                100 * ((1 - t - u) / (1 - u) || 0),
                100 * ((1 - n - u) / (1 - u) || 0),
                100 * ((1 - r - u) / (1 - u) || 0),
                100 * u,
              ];
            }),
            (Vu.rgb.keyword = function (e) {
              var t = Lu[e];
              if (t) return t;
              for (
                var n, r, u, a = 1 / 0, i = 0, o = Object.keys(ju);
                i < o.length;
                i++
              ) {
                var s = o[i],
                  l =
                    ((u = ju[s]),
                    Math.pow((r = e)[0] - u[0], 2) +
                      Math.pow(r[1] - u[1], 2) +
                      Math.pow(r[2] - u[2], 2));
                l < a && ((a = l), (n = s));
              }
              return n;
            }),
            (Vu.keyword.rgb = function (e) {
              return ju[e];
            }),
            (Vu.rgb.xyz = function (e) {
              var t = e[0] / 255,
                n = e[1] / 255,
                r = e[2] / 255;
              return [
                100 *
                  (0.4124 *
                    (t =
                      t > 0.04045
                        ? Math.pow((t + 0.055) / 1.055, 2.4)
                        : t / 12.92) +
                    0.3576 *
                      (n =
                        n > 0.04045
                          ? Math.pow((n + 0.055) / 1.055, 2.4)
                          : n / 12.92) +
                    0.1805 *
                      (r =
                        r > 0.04045
                          ? Math.pow((r + 0.055) / 1.055, 2.4)
                          : r / 12.92)),
                100 * (0.2126 * t + 0.7152 * n + 0.0722 * r),
                100 * (0.0193 * t + 0.1192 * n + 0.9505 * r),
              ];
            }),
            (Vu.rgb.lab = function (e) {
              var t = Vu.rgb.xyz(e),
                n = t[0],
                r = t[1],
                u = t[2];
              return (
                (r /= 100),
                (u /= 108.883),
                (n =
                  (n /= 95.047) > 0.008856
                    ? Math.pow(n, 1 / 3)
                    : 7.787 * n + 16 / 116),
                [
                  116 *
                    (r =
                      r > 0.008856
                        ? Math.pow(r, 1 / 3)
                        : 7.787 * r + 16 / 116) -
                    16,
                  500 * (n - r),
                  200 *
                    (r -
                      (u =
                        u > 0.008856
                          ? Math.pow(u, 1 / 3)
                          : 7.787 * u + 16 / 116)),
                ]
              );
            }),
            (Vu.hsl.rgb = function (e) {
              var t,
                n,
                r,
                u = e[0] / 360,
                a = e[1] / 100,
                i = e[2] / 100;
              if (0 === a) return [(r = 255 * i), r, r];
              for (
                var o = 2 * i - (t = i < 0.5 ? i * (1 + a) : i + a - i * a),
                  s = [0, 0, 0],
                  l = 0;
                l < 3;
                l++
              )
                (n = u + (1 / 3) * -(l - 1)) < 0 && n++,
                  n > 1 && n--,
                  (r =
                    6 * n < 1
                      ? o + 6 * (t - o) * n
                      : 2 * n < 1
                      ? t
                      : 3 * n < 2
                      ? o + (t - o) * (2 / 3 - n) * 6
                      : o),
                  (s[l] = 255 * r);
              return s;
            }),
            (Vu.hsl.hsv = function (e) {
              var t = e[0],
                n = e[1] / 100,
                r = e[2] / 100,
                u = n,
                a = Math.max(r, 0.01);
              return (
                (n *= (r *= 2) <= 1 ? r : 2 - r),
                (u *= a <= 1 ? a : 2 - a),
                [
                  t,
                  100 * (0 === r ? (2 * u) / (a + u) : (2 * n) / (r + n)),
                  ((r + n) / 2) * 100,
                ]
              );
            }),
            (Vu.hsv.rgb = function (e) {
              var t = e[0] / 60,
                n = e[1] / 100,
                r = e[2] / 100,
                u = Math.floor(t) % 6,
                a = t - Math.floor(t),
                i = 255 * r * (1 - n),
                o = 255 * r * (1 - n * a),
                s = 255 * r * (1 - n * (1 - a));
              switch (((r *= 255), u)) {
                case 0:
                  return [r, s, i];
                case 1:
                  return [o, r, i];
                case 2:
                  return [i, r, s];
                case 3:
                  return [i, o, r];
                case 4:
                  return [s, i, r];
                case 5:
                  return [r, i, o];
              }
            }),
            (Vu.hsv.hsl = function (e) {
              var t,
                n,
                r = e[0],
                u = e[1] / 100,
                a = e[2] / 100,
                i = Math.max(a, 0.01);
              n = (2 - u) * a;
              var o = (2 - u) * i;
              return (
                (t = u * i),
                [r, 100 * (t = (t /= o <= 1 ? o : 2 - o) || 0), 100 * (n /= 2)]
              );
            }),
            (Vu.hwb.rgb = function (e) {
              var t,
                n = e[0] / 360,
                r = e[1] / 100,
                u = e[2] / 100,
                a = r + u;
              a > 1 && ((r /= a), (u /= a));
              var i = Math.floor(6 * n),
                o = 1 - u;
              (t = 6 * n - i), 0 != (1 & i) && (t = 1 - t);
              var s,
                l,
                c,
                p = r + t * (o - r);
              switch (i) {
                default:
                case 6:
                case 0:
                  (s = o), (l = p), (c = r);
                  break;
                case 1:
                  (s = p), (l = o), (c = r);
                  break;
                case 2:
                  (s = r), (l = o), (c = p);
                  break;
                case 3:
                  (s = r), (l = p), (c = o);
                  break;
                case 4:
                  (s = p), (l = r), (c = o);
                  break;
                case 5:
                  (s = o), (l = r), (c = p);
              }
              return [255 * s, 255 * l, 255 * c];
            }),
            (Vu.cmyk.rgb = function (e) {
              var t = e[0] / 100,
                n = e[1] / 100,
                r = e[2] / 100,
                u = e[3] / 100;
              return [
                255 * (1 - Math.min(1, t * (1 - u) + u)),
                255 * (1 - Math.min(1, n * (1 - u) + u)),
                255 * (1 - Math.min(1, r * (1 - u) + u)),
              ];
            }),
            (Vu.xyz.rgb = function (e) {
              var t,
                n,
                r,
                u = e[0] / 100,
                a = e[1] / 100,
                i = e[2] / 100;
              return (
                (n = -0.9689 * u + 1.8758 * a + 0.0415 * i),
                (r = 0.0557 * u + -0.204 * a + 1.057 * i),
                (t =
                  (t = 3.2406 * u + -1.5372 * a + -0.4986 * i) > 0.0031308
                    ? 1.055 * Math.pow(t, 1 / 2.4) - 0.055
                    : 12.92 * t),
                (n =
                  n > 0.0031308
                    ? 1.055 * Math.pow(n, 1 / 2.4) - 0.055
                    : 12.92 * n),
                (r =
                  r > 0.0031308
                    ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055
                    : 12.92 * r),
                [
                  255 * (t = Math.min(Math.max(0, t), 1)),
                  255 * (n = Math.min(Math.max(0, n), 1)),
                  255 * (r = Math.min(Math.max(0, r), 1)),
                ]
              );
            }),
            (Vu.xyz.lab = function (e) {
              var t = e[0],
                n = e[1],
                r = e[2];
              return (
                (n /= 100),
                (r /= 108.883),
                (t =
                  (t /= 95.047) > 0.008856
                    ? Math.pow(t, 1 / 3)
                    : 7.787 * t + 16 / 116),
                [
                  116 *
                    (n =
                      n > 0.008856
                        ? Math.pow(n, 1 / 3)
                        : 7.787 * n + 16 / 116) -
                    16,
                  500 * (t - n),
                  200 *
                    (n -
                      (r =
                        r > 0.008856
                          ? Math.pow(r, 1 / 3)
                          : 7.787 * r + 16 / 116)),
                ]
              );
            }),
            (Vu.lab.xyz = function (e) {
              var t, n, r;
              (n = (e[0] + 16) / 116),
                (t = e[1] / 500 + n),
                (r = n - e[2] / 200);
              var u = Math.pow(n, 3),
                a = Math.pow(t, 3),
                i = Math.pow(r, 3);
              return (
                (n = u > 0.008856 ? u : (n - 16 / 116) / 7.787),
                (t = a > 0.008856 ? a : (t - 16 / 116) / 7.787),
                (r = i > 0.008856 ? i : (r - 16 / 116) / 7.787),
                [(t *= 95.047), (n *= 100), (r *= 108.883)]
              );
            }),
            (Vu.lab.lch = function (e) {
              var t,
                n = e[0],
                r = e[1],
                u = e[2];
              return (
                (t = (360 * Math.atan2(u, r)) / 2 / Math.PI) < 0 && (t += 360),
                [n, Math.sqrt(r * r + u * u), t]
              );
            }),
            (Vu.lch.lab = function (e) {
              var t = e[0],
                n = e[1],
                r = (e[2] / 360) * 2 * Math.PI;
              return [t, n * Math.cos(r), n * Math.sin(r)];
            }),
            (Vu.rgb.ansi16 = function (e) {
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : null,
                n = C(e, 3),
                r = n[0],
                u = n[1],
                a = n[2],
                i = null === t ? Vu.rgb.hsv(e)[2] : t;
              if (0 === (i = Math.round(i / 50))) return 30;
              var o =
                30 +
                ((Math.round(a / 255) << 2) |
                  (Math.round(u / 255) << 1) |
                  Math.round(r / 255));
              return 2 === i && (o += 60), o;
            }),
            (Vu.hsv.ansi16 = function (e) {
              return Vu.rgb.ansi16(Vu.hsv.rgb(e), e[2]);
            }),
            (Vu.rgb.ansi256 = function (e) {
              var t = e[0],
                n = e[1],
                r = e[2];
              return t === n && n === r
                ? t < 8
                  ? 16
                  : t > 248
                  ? 231
                  : Math.round(((t - 8) / 247) * 24) + 232
                : 16 +
                    36 * Math.round((t / 255) * 5) +
                    6 * Math.round((n / 255) * 5) +
                    Math.round((r / 255) * 5);
            }),
            (Vu.ansi16.rgb = function (e) {
              var t = e % 10;
              if (0 === t || 7 === t)
                return e > 50 && (t += 3.5), [(t = (t / 10.5) * 255), t, t];
              var n = 0.5 * (1 + ~~(e > 50));
              return [
                (1 & t) * n * 255,
                ((t >> 1) & 1) * n * 255,
                ((t >> 2) & 1) * n * 255,
              ];
            }),
            (Vu.ansi256.rgb = function (e) {
              if (e >= 232) {
                var t = 10 * (e - 232) + 8;
                return [t, t, t];
              }
              var n;
              return (
                (e -= 16),
                [
                  (Math.floor(e / 36) / 5) * 255,
                  (Math.floor((n = e % 36) / 6) / 5) * 255,
                  ((n % 6) / 5) * 255,
                ]
              );
            }),
            (Vu.rgb.hex = function (e) {
              var t = (
                ((255 & Math.round(e[0])) << 16) +
                ((255 & Math.round(e[1])) << 8) +
                (255 & Math.round(e[2]))
              )
                .toString(16)
                .toUpperCase();
              return '000000'.substring(t.length) + t;
            }),
            (Vu.hex.rgb = function (e) {
              var t = e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
              if (!t) return [0, 0, 0];
              var n = t[0];
              3 === t[0].length &&
                (n = n
                  .split('')
                  .map(function (e) {
                    return e + e;
                  })
                  .join(''));
              var r = parseInt(n, 16);
              return [(r >> 16) & 255, (r >> 8) & 255, 255 & r];
            }),
            (Vu.rgb.hcg = function (e) {
              var t,
                n = e[0] / 255,
                r = e[1] / 255,
                u = e[2] / 255,
                a = Math.max(Math.max(n, r), u),
                i = Math.min(Math.min(n, r), u),
                o = a - i;
              return (
                (t =
                  o <= 0
                    ? 0
                    : a === n
                    ? ((r - u) / o) % 6
                    : a === r
                    ? 2 + (u - n) / o
                    : 4 + (n - r) / o),
                (t /= 6),
                [360 * (t %= 1), 100 * o, 100 * (o < 1 ? i / (1 - o) : 0)]
              );
            }),
            (Vu.hsl.hcg = function (e) {
              var t = e[1] / 100,
                n = e[2] / 100,
                r = n < 0.5 ? 2 * t * n : 2 * t * (1 - n),
                u = 0;
              return (
                r < 1 && (u = (n - 0.5 * r) / (1 - r)), [e[0], 100 * r, 100 * u]
              );
            }),
            (Vu.hsv.hcg = function (e) {
              var t = e[1] / 100,
                n = e[2] / 100,
                r = t * n,
                u = 0;
              return r < 1 && (u = (n - r) / (1 - r)), [e[0], 100 * r, 100 * u];
            }),
            (Vu.hcg.rgb = function (e) {
              var t = e[0] / 360,
                n = e[1] / 100,
                r = e[2] / 100;
              if (0 === n) return [255 * r, 255 * r, 255 * r];
              var u,
                a = [0, 0, 0],
                i = (t % 1) * 6,
                o = i % 1,
                s = 1 - o;
              switch (Math.floor(i)) {
                case 0:
                  (a[0] = 1), (a[1] = o), (a[2] = 0);
                  break;
                case 1:
                  (a[0] = s), (a[1] = 1), (a[2] = 0);
                  break;
                case 2:
                  (a[0] = 0), (a[1] = 1), (a[2] = o);
                  break;
                case 3:
                  (a[0] = 0), (a[1] = s), (a[2] = 1);
                  break;
                case 4:
                  (a[0] = o), (a[1] = 0), (a[2] = 1);
                  break;
                default:
                  (a[0] = 1), (a[1] = 0), (a[2] = s);
              }
              return (
                (u = (1 - n) * r),
                [
                  255 * (n * a[0] + u),
                  255 * (n * a[1] + u),
                  255 * (n * a[2] + u),
                ]
              );
            }),
            (Vu.hcg.hsv = function (e) {
              var t = e[1] / 100,
                n = t + (e[2] / 100) * (1 - t),
                r = 0;
              return n > 0 && (r = t / n), [e[0], 100 * r, 100 * n];
            }),
            (Vu.hcg.hsl = function (e) {
              var t = e[1] / 100,
                n = (e[2] / 100) * (1 - t) + 0.5 * t,
                r = 0;
              return (
                n > 0 && n < 0.5
                  ? (r = t / (2 * n))
                  : n >= 0.5 && n < 1 && (r = t / (2 * (1 - n))),
                [e[0], 100 * r, 100 * n]
              );
            }),
            (Vu.hcg.hwb = function (e) {
              var t = e[1] / 100,
                n = t + (e[2] / 100) * (1 - t);
              return [e[0], 100 * (n - t), 100 * (1 - n)];
            }),
            (Vu.hwb.hcg = function (e) {
              var t = e[1] / 100,
                n = 1 - e[2] / 100,
                r = n - t,
                u = 0;
              return r < 1 && (u = (n - r) / (1 - r)), [e[0], 100 * r, 100 * u];
            }),
            (Vu.apple.rgb = function (e) {
              return [
                (e[0] / 65535) * 255,
                (e[1] / 65535) * 255,
                (e[2] / 65535) * 255,
              ];
            }),
            (Vu.rgb.apple = function (e) {
              return [
                (e[0] / 255) * 65535,
                (e[1] / 255) * 65535,
                (e[2] / 255) * 65535,
              ];
            }),
            (Vu.gray.rgb = function (e) {
              return [
                (e[0] / 100) * 255,
                (e[0] / 100) * 255,
                (e[0] / 100) * 255,
              ];
            }),
            (Vu.gray.hsl = function (e) {
              return [0, 0, e[0]];
            }),
            (Vu.gray.hsv = Vu.gray.hsl),
            (Vu.gray.hwb = function (e) {
              return [0, 100, e[0]];
            }),
            (Vu.gray.cmyk = function (e) {
              return [0, 0, 0, e[0]];
            }),
            (Vu.gray.lab = function (e) {
              return [e[0], 0, 0];
            }),
            (Vu.gray.hex = function (e) {
              var t = 255 & Math.round((e[0] / 100) * 255),
                n = ((t << 16) + (t << 8) + t).toString(16).toUpperCase();
              return '000000'.substring(n.length) + n;
            }),
            (Vu.rgb.gray = function (e) {
              return [((e[0] + e[1] + e[2]) / 3 / 255) * 100];
            });
          var Ku = {};
          Object.keys(qu).forEach(function (e) {
            (Ku[e] = {}),
              Object.defineProperty(Ku[e], 'channels', {
                value: qu[e].channels,
              }),
              Object.defineProperty(Ku[e], 'labels', { value: qu[e].labels });
            var t = (function (e) {
              for (
                var t = (function (e) {
                    var t = (function () {
                        for (
                          var e = {}, t = Object.keys(qu), n = t.length, r = 0;
                          r < n;
                          r++
                        )
                          e[t[r]] = { distance: -1, parent: null };
                        return e;
                      })(),
                      n = [e];
                    for (t[e].distance = 0; n.length; )
                      for (
                        var r = n.pop(),
                          u = Object.keys(qu[r]),
                          a = u.length,
                          i = 0;
                        i < a;
                        i++
                      ) {
                        var o = u[i],
                          s = t[o];
                        -1 === s.distance &&
                          ((s.distance = t[r].distance + 1),
                          (s.parent = r),
                          n.unshift(o));
                      }
                    return t;
                  })(e),
                  n = {},
                  r = Object.keys(t),
                  u = r.length,
                  a = 0;
                a < u;
                a++
              ) {
                var i = r[a];
                null !== t[i].parent && (n[i] = Yu(i, t));
              }
              return n;
            })(e);
            Object.keys(t).forEach(function (n) {
              var r = t[n];
              (Ku[e][n] = (function (e) {
                var t = function () {
                  for (
                    var t = arguments.length, n = new Array(t), r = 0;
                    r < t;
                    r++
                  )
                    n[r] = arguments[r];
                  var u = n[0];
                  if (null == u) return u;
                  u.length > 1 && (n = u);
                  var a = e(n);
                  if ('object' == k(a))
                    for (var i = a.length, o = 0; o < i; o++)
                      a[o] = Math.round(a[o]);
                  return a;
                };
                return 'conversion' in e && (t.conversion = e.conversion), t;
              })(r)),
                (Ku[e][n].raw = (function (e) {
                  var t = function () {
                    for (
                      var t = arguments.length, n = new Array(t), r = 0;
                      r < t;
                      r++
                    )
                      n[r] = arguments[r];
                    var u = n[0];
                    return null == u ? u : (u.length > 1 && (n = u), e(n));
                  };
                  return 'conversion' in e && (t.conversion = e.conversion), t;
                })(r));
            });
          });
          var Qu,
            Zu = Ku,
            ea = Xe(function (e) {
              var t,
                n = function (e, t) {
                  return function () {
                    var n = e.apply(void 0, arguments);
                    return '['.concat(n + t, 'm');
                  };
                },
                r = function (e, t) {
                  return function () {
                    var n = e.apply(void 0, arguments);
                    return '['.concat(38 + t, ';5;').concat(n, 'm');
                  };
                },
                u = function (e, t) {
                  return function () {
                    var n = e.apply(void 0, arguments);
                    return '['
                      .concat(38 + t, ';2;')
                      .concat(n[0], ';')
                      .concat(n[1], ';')
                      .concat(n[2], 'm');
                  };
                },
                a = function (e) {
                  return e;
                },
                i = function (e, t, n) {
                  return [e, t, n];
                },
                o = function (e, t, n) {
                  Object.defineProperty(e, t, {
                    get: function () {
                      var r = n();
                      return (
                        Object.defineProperty(e, t, {
                          value: r,
                          enumerable: !0,
                          configurable: !0,
                        }),
                        r
                      );
                    },
                    enumerable: !0,
                    configurable: !0,
                  });
                },
                s = function (e, n, r, u) {
                  void 0 === t && (t = Zu);
                  for (
                    var a = u ? 10 : 0, i = {}, o = 0, s = Object.entries(t);
                    o < s.length;
                    o++
                  ) {
                    var l = C(s[o], 2),
                      c = l[0],
                      p = l[1],
                      f = 'ansi16' === c ? 'ansi' : c;
                    c === n
                      ? (i[f] = e(r, a))
                      : 'object' == k(p) && (i[f] = e(p[n], a));
                  }
                  return i;
                };
              Object.defineProperty(e, 'exports', {
                enumerable: !0,
                get: function () {
                  var e = new Map(),
                    t = {
                      modifier: {
                        reset: [0, 0],
                        bold: [1, 22],
                        dim: [2, 22],
                        italic: [3, 23],
                        underline: [4, 24],
                        inverse: [7, 27],
                        hidden: [8, 28],
                        strikethrough: [9, 29],
                      },
                      color: {
                        black: [30, 39],
                        red: [31, 39],
                        green: [32, 39],
                        yellow: [33, 39],
                        blue: [34, 39],
                        magenta: [35, 39],
                        cyan: [36, 39],
                        white: [37, 39],
                        blackBright: [90, 39],
                        redBright: [91, 39],
                        greenBright: [92, 39],
                        yellowBright: [93, 39],
                        blueBright: [94, 39],
                        magentaBright: [95, 39],
                        cyanBright: [96, 39],
                        whiteBright: [97, 39],
                      },
                      bgColor: {
                        bgBlack: [40, 49],
                        bgRed: [41, 49],
                        bgGreen: [42, 49],
                        bgYellow: [43, 49],
                        bgBlue: [44, 49],
                        bgMagenta: [45, 49],
                        bgCyan: [46, 49],
                        bgWhite: [47, 49],
                        bgBlackBright: [100, 49],
                        bgRedBright: [101, 49],
                        bgGreenBright: [102, 49],
                        bgYellowBright: [103, 49],
                        bgBlueBright: [104, 49],
                        bgMagentaBright: [105, 49],
                        bgCyanBright: [106, 49],
                        bgWhiteBright: [107, 49],
                      },
                    };
                  (t.color.gray = t.color.blackBright),
                    (t.bgColor.bgGray = t.bgColor.bgBlackBright),
                    (t.color.grey = t.color.blackBright),
                    (t.bgColor.bgGrey = t.bgColor.bgBlackBright);
                  for (var l = 0, c = Object.entries(t); l < c.length; l++) {
                    for (
                      var p = C(c[l], 2),
                        f = p[0],
                        d = p[1],
                        h = 0,
                        g = Object.entries(d);
                      h < g.length;
                      h++
                    ) {
                      var m = C(g[h], 2),
                        y = m[0],
                        D = m[1];
                      (t[y] = {
                        open: '['.concat(D[0], 'm'),
                        close: '['.concat(D[1], 'm'),
                      }),
                        (d[y] = t[y]),
                        e.set(D[0], D[1]);
                    }
                    Object.defineProperty(t, f, { value: d, enumerable: !1 });
                  }
                  return (
                    Object.defineProperty(t, 'codes', {
                      value: e,
                      enumerable: !1,
                    }),
                    (t.color.close = '[39m'),
                    (t.bgColor.close = '[49m'),
                    o(t.color, 'ansi', function () {
                      return s(n, 'ansi16', a, !1);
                    }),
                    o(t.color, 'ansi256', function () {
                      return s(r, 'ansi256', a, !1);
                    }),
                    o(t.color, 'ansi16m', function () {
                      return s(u, 'rgb', i, !1);
                    }),
                    o(t.bgColor, 'ansi', function () {
                      return s(n, 'ansi16', a, !0);
                    }),
                    o(t.bgColor, 'ansi256', function () {
                      return s(r, 'ansi256', a, !0);
                    }),
                    o(t.bgColor, 'ansi16m', function () {
                      return s(u, 'rgb', i, !0);
                    }),
                    t
                  );
                },
              });
            }),
            ta = function (e) {
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : Je.argv,
                n = e.startsWith('-') ? '' : 1 === e.length ? '-' : '--',
                r = t.indexOf(n + e),
                u = t.indexOf('--');
              return -1 !== r && (-1 === u || r < u);
            },
            na = Ye(
              Object.freeze({
                __proto__: null,
                default: {
                  isatty: function () {
                    return !1;
                  },
                },
              })
            ),
            ra = Je.env;
          function ua(e) {
            return (
              0 !== e && {
                level: e,
                hasBasic: !0,
                has256: e >= 2,
                has16m: e >= 3,
              }
            );
          }
          function aa(e, t) {
            if (0 === Qu) return 0;
            if (ta('color=16m') || ta('color=full') || ta('color=truecolor'))
              return 3;
            if (ta('color=256')) return 2;
            if (e && !t && void 0 === Qu) return 0;
            var n = Qu || 0;
            if ('dumb' === ra.TERM) return n;
            if ('win32' === Je.platform) {
              var r = Gr.release().split('.');
              return Number(r[0]) >= 10 && Number(r[2]) >= 10586
                ? Number(r[2]) >= 14931
                  ? 3
                  : 2
                : 1;
            }
            if ('CI' in ra)
              return ['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(
                function (e) {
                  return e in ra;
                }
              ) || 'codeship' === ra.CI_NAME
                ? 1
                : n;
            if ('TEAMCITY_VERSION' in ra)
              return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(ra.TEAMCITY_VERSION)
                ? 1
                : 0;
            if ('GITHUB_ACTIONS' in ra) return 1;
            if ('truecolor' === ra.COLORTERM) return 3;
            if ('TERM_PROGRAM' in ra) {
              var u = parseInt(
                (ra.TERM_PROGRAM_VERSION || '').split('.')[0],
                10
              );
              switch (ra.TERM_PROGRAM) {
                case 'iTerm.app':
                  return u >= 3 ? 3 : 2;
                case 'Apple_Terminal':
                  return 2;
              }
            }
            return /-256(color)?$/i.test(ra.TERM)
              ? 2
              : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(
                  ra.TERM
                ) || 'COLORTERM' in ra
              ? 1
              : n;
          }
          ta('no-color') ||
          ta('no-colors') ||
          ta('color=false') ||
          ta('color=never')
            ? (Qu = 0)
            : (ta('color') ||
                ta('colors') ||
                ta('color=true') ||
                ta('color=always')) &&
              (Qu = 1),
            'FORCE_COLOR' in ra &&
              (Qu =
                'true' === ra.FORCE_COLOR
                  ? 1
                  : 'false' === ra.FORCE_COLOR
                  ? 0
                  : 0 === ra.FORCE_COLOR.length
                  ? 1
                  : Math.min(parseInt(ra.FORCE_COLOR, 10), 3));
          var ia = {
              supportsColor: function (e) {
                return ua(aa(e, e && e.isTTY));
              },
              stdout: ua(aa(!0, na.isatty(1))),
              stderr: ua(aa(!0, na.isatty(2))),
            },
            oa = function (e, t, n) {
              var r = e.indexOf(t);
              if (-1 === r) return e;
              var u = t.length,
                a = 0,
                i = '';
              do {
                (i += e.substr(a, r - a) + t + n),
                  (a = r + u),
                  (r = e.indexOf(t, a));
              } while (-1 !== r);
              return (i += e.substr(a));
            },
            sa = function (e, t, n, r) {
              var u = 0,
                a = '';
              do {
                var i = '\r' === e[r - 1];
                (a +=
                  e.substr(u, (i ? r - 1 : r) - u) +
                  t +
                  (i ? '\r\n' : '\n') +
                  n),
                  (u = r + 1),
                  (r = e.indexOf('\n', u));
              } while (-1 !== r);
              return (a += e.substr(u));
            },
            la = /(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,
            ca = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,
            pa = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,
            fa = /\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi,
            da = new Map([
              ['n', '\n'],
              ['r', '\r'],
              ['t', '\t'],
              ['b', '\b'],
              ['f', '\f'],
              ['v', '\v'],
              ['0', '\0'],
              ['\\', '\\'],
              ['e', ''],
              ['a', ''],
            ]);
          function ha(e) {
            var t = 'u' === e[0],
              n = '{' === e[1];
            return (t && !n && 5 === e.length) ||
              ('x' === e[0] && 3 === e.length)
              ? String.fromCharCode(parseInt(e.slice(1), 16))
              : t && n
              ? String.fromCodePoint(parseInt(e.slice(2, -1), 16))
              : da.get(e) || e;
          }
          function ga(e, t) {
            var n,
              r,
              u = [],
              a = g(t.trim().split(/\s*,\s*/g));
            try {
              for (a.s(); !(r = a.n()).done; ) {
                var i = r.value,
                  o = Number(i);
                if (Number.isNaN(o)) {
                  if (!(n = i.match(pa)))
                    throw new Error(
                      'Invalid Chalk template style argument: '
                        .concat(i, " (in style '")
                        .concat(e, "')")
                    );
                  u.push(
                    n[2].replace(fa, function (e, t, n) {
                      return t ? ha(t) : n;
                    })
                  );
                } else u.push(o);
              }
            } catch (s) {
              a.e(s);
            } finally {
              a.f();
            }
            return u;
          }
          function ma(e) {
            ca.lastIndex = 0;
            for (var t, n = []; null !== (t = ca.exec(e)); ) {
              var r = t[1];
              if (t[2]) {
                var u = ga(r, t[2]);
                n.push([r].concat(u));
              } else n.push([r]);
            }
            return n;
          }
          function ya(e, t) {
            var n,
              r = {},
              u = g(t);
            try {
              for (u.s(); !(n = u.n()).done; ) {
                var a,
                  i = n.value,
                  o = g(i.styles);
                try {
                  for (o.s(); !(a = o.n()).done; ) {
                    var s = a.value;
                    r[s[0]] = i.inverse ? null : s.slice(1);
                  }
                } catch (D) {
                  o.e(D);
                } finally {
                  o.f();
                }
              }
            } catch (D) {
              u.e(D);
            } finally {
              u.f();
            }
            for (var l = e, c = 0, p = Object.entries(r); c < p.length; c++) {
              var f = C(p[c], 2),
                d = f[0],
                h = f[1];
              if (Array.isArray(h)) {
                var y;
                if (!(d in l))
                  throw new Error('Unknown Chalk style: '.concat(d));
                l = h.length > 0 ? (y = l)[d].apply(y, m(h)) : l[d];
              }
            }
            return l;
          }
          var Da = function (e, t) {
              var n = [],
                r = [],
                u = [];
              if (
                (t.replace(la, function (t, a, i, o, s, l) {
                  if (a) u.push(ha(a));
                  else if (o) {
                    var c = u.join('');
                    (u = []),
                      r.push(0 === n.length ? c : ya(e, n)(c)),
                      n.push({ inverse: i, styles: ma(o) });
                  } else if (s) {
                    if (0 === n.length)
                      throw new Error(
                        'Found extraneous } in Chalk template literal'
                      );
                    r.push(ya(e, n)(u.join(''))), (u = []), n.pop();
                  } else u.push(l);
                }),
                r.push(u.join('')),
                n.length > 0)
              ) {
                var a = 'Chalk template literal is missing '
                  .concat(n.length, ' closing bracket')
                  .concat(1 === n.length ? '' : 's', ' (`}`)');
                throw new Error(a);
              }
              return r.join('');
            },
            va = ia.stdout,
            Ea = ia.stderr,
            Ca = oa,
            ba = sa,
            Aa = Array.isArray,
            Fa = ['ansi', 'ansi', 'ansi256', 'ansi16m'],
            xa = Object.create(null),
            Sa = function e(t) {
              return w(this, e), wa(t);
            },
            wa = function (e) {
              var t = {};
              return (
                (function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  if (
                    t.level &&
                    !(Number.isInteger(t.level) && t.level >= 0 && t.level <= 3)
                  )
                    throw new Error(
                      'The `level` option should be an integer from 0 to 3'
                    );
                  var n = va ? va.level : 0;
                  e.level = void 0 === t.level ? n : t.level;
                })(t, e),
                (t.template = function () {
                  for (
                    var e = arguments.length, n = new Array(e), r = 0;
                    r < e;
                    r++
                  )
                    n[r] = arguments[r];
                  return Ua.apply(void 0, [t.template].concat(n));
                }),
                Object.setPrototypeOf(t, Ba.prototype),
                Object.setPrototypeOf(t.template, t),
                (t.template.constructor = function () {
                  throw new Error(
                    '`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.'
                  );
                }),
                (t.template.Instance = Sa),
                t.template
              );
            };
          function Ba(e) {
            return wa(e);
          }
          for (
            var Ta = function () {
                var e = C(Na[ka], 2),
                  t = e[0],
                  n = e[1];
                xa[t] = {
                  get: function () {
                    var e = qa(
                      this,
                      Va(n.open, n.close, this._styler),
                      this._isEmpty
                    );
                    return Object.defineProperty(this, t, { value: e }), e;
                  },
                };
              },
              ka = 0,
              Na = Object.entries(ea);
            ka < Na.length;
            ka++
          )
            Ta();
          xa.visible = {
            get: function () {
              var e = qa(this, this._styler, !0);
              return Object.defineProperty(this, 'visible', { value: e }), e;
            },
          };
          for (
            var Oa = [
                'rgb',
                'hex',
                'keyword',
                'hsl',
                'hsv',
                'hwb',
                'ansi',
                'ansi256',
              ],
              Pa = function () {
                var e = Ia[Ma];
                xa[e] = {
                  get: function () {
                    var t = this.level;
                    return function () {
                      var n,
                        r = Va(
                          (n = ea.color[Fa[t]])[e].apply(n, arguments),
                          ea.color.close,
                          this._styler
                        );
                      return qa(this, r, this._isEmpty);
                    };
                  },
                };
              },
              Ma = 0,
              Ia = Oa;
            Ma < Ia.length;
            Ma++
          )
            Pa();
          for (
            var ja = function () {
                var e = _a[La];
                xa['bg' + e[0].toUpperCase() + e.slice(1)] = {
                  get: function () {
                    var t = this.level;
                    return function () {
                      var n,
                        r = Va(
                          (n = ea.bgColor[Fa[t]])[e].apply(n, arguments),
                          ea.bgColor.close,
                          this._styler
                        );
                      return qa(this, r, this._isEmpty);
                    };
                  },
                };
              },
              La = 0,
              _a = Oa;
            La < _a.length;
            La++
          )
            ja();
          var Ra,
            $a = Object.defineProperties(
              function () {},
              Object.assign({}, xa, {
                level: {
                  enumerable: !0,
                  get: function () {
                    return this._generator.level;
                  },
                  set: function (e) {
                    this._generator.level = e;
                  },
                },
              })
            ),
            Va = function (e, t, n) {
              var r, u;
              return (
                void 0 === n
                  ? ((r = e), (u = t))
                  : ((r = n.openAll + e), (u = t + n.closeAll)),
                { open: e, close: t, openAll: r, closeAll: u, parent: n }
              );
            },
            qa = function (e, t, n) {
              var r = function e() {
                for (
                  var t = arguments.length, n = new Array(t), r = 0;
                  r < t;
                  r++
                )
                  n[r] = arguments[r];
                return Aa(n[0]) && Aa(n[0].raw)
                  ? Wa(e, Ua.apply(void 0, [e].concat(n)))
                  : Wa(e, 1 === n.length ? '' + n[0] : n.join(' '));
              };
              return (
                Object.setPrototypeOf(r, $a),
                (r._generator = e),
                (r._styler = t),
                (r._isEmpty = n),
                r
              );
            },
            Wa = function (e, t) {
              if (e.level <= 0 || !t) return e._isEmpty ? '' : t;
              var n = e._styler;
              if (void 0 === n) return t;
              var r = n,
                u = r.openAll,
                a = r.closeAll;
              if (-1 !== t.indexOf(''))
                for (; void 0 !== n; )
                  (t = Ca(t, n.close, n.open)), (n = n.parent);
              var i = t.indexOf('\n');
              return -1 !== i && (t = ba(t, a, u, i)), u + t + a;
            },
            Ua = function (e) {
              for (
                var t = arguments.length,
                  n = new Array(t > 1 ? t - 1 : 0),
                  r = 1;
                r < t;
                r++
              )
                n[r - 1] = arguments[r];
              var u = n[0];
              if (!Aa(u) || !Aa(u.raw)) return n.join(' ');
              for (var a = n.slice(1), i = [u.raw[0]], o = 1; o < u.length; o++)
                i.push(
                  String(a[o - 1]).replace(/[{}\\]/g, '\\$&'),
                  String(u.raw[o])
                );
              return void 0 === Ra && (Ra = Da), Ra(e, i.join(''));
            };
          Object.defineProperties(Ba.prototype, xa);
          var Ja = Ba();
          (Ja.supportsColor = va),
            (Ja.stderr = Ba({ level: Ea ? Ea.level : 0 })),
            (Ja.stderr.supportsColor = Ea);
          var za,
            Ga = Ja,
            Ha = function (e, t) {
              for (var n = -1, r = t.length, u = e.length; ++n < r; )
                e[u + n] = t[n];
              return e;
            },
            Xa = 'object' == k(He) && He && He.Object === Object && He,
            Ya =
              'object' ==
                ('undefined' == typeof self ? 'undefined' : k(self)) &&
              self &&
              self.Object === Object &&
              self,
            Ka = (Xa || Ya || Function('return this')()).Symbol,
            Qa = Object.prototype,
            Za = Qa.hasOwnProperty,
            ei = Qa.toString,
            ti = Ka ? Ka.toStringTag : void 0,
            ni = Object.prototype.toString,
            ri = Ka ? Ka.toStringTag : void 0,
            ui = function (e) {
              return null == e
                ? void 0 === e
                  ? '[object Undefined]'
                  : '[object Null]'
                : ri && ri in Object(e)
                ? (function (e) {
                    var t = Za.call(e, ti),
                      n = e[ti];
                    try {
                      e[ti] = void 0;
                      var r = !0;
                    } catch (e) {}
                    var u = ei.call(e);
                    return r && (t ? (e[ti] = n) : delete e[ti]), u;
                  })(e)
                : (function (e) {
                    return ni.call(e);
                  })(e);
            },
            ai = function (e) {
              return null != e && 'object' == k(e);
            },
            ii = function (e) {
              return ai(e) && '[object Arguments]' == ui(e);
            },
            oi = Object.prototype,
            si = oi.hasOwnProperty,
            li = oi.propertyIsEnumerable,
            ci = ii(
              (function () {
                return arguments;
              })()
            )
              ? ii
              : function (e) {
                  return ai(e) && si.call(e, 'callee') && !li.call(e, 'callee');
                },
            pi = Array.isArray,
            fi = Ka ? Ka.isConcatSpreadable : void 0,
            di = function (e) {
              return pi(e) || ci(e) || !!(fi && e && e[fi]);
            },
            hi = function (e) {
              return null != e && e.length
                ? (function e(t, n, r, u, a) {
                    var i = -1,
                      o = t.length;
                    for (r || (r = di), a || (a = []); ++i < o; ) {
                      var s = t[i];
                      n > 0 && r(s)
                        ? n > 1
                          ? e(s, n - 1, r, u, a)
                          : Ha(a, s)
                        : u || (a[a.length] = s);
                    }
                    return a;
                  })(e, 1)
                : [];
            },
            gi = {
              key: function (e) {
                return 1 === e.length ? '-'.concat(e) : '--'.concat(e);
              },
              value: function (e) {
                return ku.apiDescriptor.value(e);
              },
              pair: function (e) {
                var t = e.key,
                  n = e.value;
                return !1 === n
                  ? '--no-'.concat(t)
                  : !0 === n
                  ? gi.key(t)
                  : '' === n
                  ? ''.concat(gi.key(t), ' without an argument')
                  : ''.concat(gi.key(t), '=').concat(n);
              },
            },
            mi = (function (e) {
              a(n, ku.ChoiceSchema);
              var t = i(n);
              function n(e) {
                var r,
                  u = e.name,
                  a = e.flags;
                return (
                  w(this, n),
                  ((r = t.call(this, {
                    name: u,
                    choices: a,
                  }))._flags = a.slice().sort()),
                  r
                );
              }
              return (
                T(n, [
                  {
                    key: 'preprocess',
                    value: function (e, t) {
                      if (
                        'string' == typeof e &&
                        0 !== e.length &&
                        !this._flags.includes(e)
                      ) {
                        var n = this._flags.find(function (t) {
                          return Mu(t, e) < 3;
                        });
                        if (n)
                          return (
                            t.logger.warn(
                              [
                                'Unknown flag '.concat(
                                  Ga.yellow(t.descriptor.value(e)),
                                  ','
                                ),
                                'did you mean '.concat(
                                  Ga.blue(t.descriptor.value(n)),
                                  '?'
                                ),
                              ].join(' ')
                            ),
                            n
                          );
                      }
                      return e;
                    },
                  },
                  {
                    key: 'expected',
                    value: function () {
                      return 'a flag';
                    },
                  },
                ]),
                n
              );
            })();
          function yi(t, n) {
            var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {},
              u = r.logger,
              a = r.isCLI,
              i = void 0 !== a && a,
              o = r.passThrough,
              s = void 0 !== o && o,
              l = s
                ? Array.isArray(s)
                  ? function (e, t) {
                      return s.includes(e) ? E({}, e, t) : void 0;
                    }
                  : function (e, t) {
                      return E({}, e, t);
                    }
                : function (t, n, r) {
                    var u = e(r.schemas, ['_']);
                    return ku.levenUnknownHandler(
                      t,
                      n,
                      Object.assign({}, r, { schemas: u })
                    );
                  },
              c = i ? gi : ku.apiDescriptor,
              p = (function (e, t) {
                var n = { isCLI: i }.isCLI,
                  r = [];
                n && r.push(ku.AnySchema.create({ name: '_' }));
                var u,
                  a = g(e);
                try {
                  for (a.s(); !(u = a.n()).done; ) {
                    var o = u.value;
                    r.push(Di(o, { isCLI: n, optionInfos: e })),
                      o.alias &&
                        n &&
                        r.push(
                          ku.AliasSchema.create({
                            name: o.alias,
                            sourceName: o.name,
                          })
                        );
                  }
                } catch (s) {
                  a.e(s);
                } finally {
                  a.f();
                }
                return r;
              })(n),
              f = new ku.Normalizer(p, {
                logger: u,
                unknown: l,
                descriptor: c,
              }),
              d = !1 !== u;
            d && za && (f._hasDeprecationWarned = za);
            var h = f.normalize(t);
            return d && (za = f._hasDeprecationWarned), h;
          }
          function Di(e, t) {
            var n,
              r = t.isCLI,
              u = t.optionInfos,
              a = { name: e.name },
              i = {};
            switch (e.type) {
              case 'int':
                (n = ku.IntegerSchema),
                  r &&
                    (a.preprocess = function (e) {
                      return Number(e);
                    });
                break;
              case 'string':
                n = ku.StringSchema;
                break;
              case 'choice':
                (n = ku.ChoiceSchema),
                  (a.choices = e.choices.map(function (t) {
                    return 'object' == k(t) && t.redirect
                      ? Object.assign({}, t, {
                          redirect: { to: { key: e.name, value: t.redirect } },
                        })
                      : t;
                  }));
                break;
              case 'boolean':
                n = ku.BooleanSchema;
                break;
              case 'flag':
                (n = mi),
                  (a.flags = hi(
                    u.map(function (e) {
                      return [
                        e.alias,
                        e.description && e.name,
                        e.oppositeDescription && 'no-'.concat(e.name),
                      ].filter(Boolean);
                    })
                  ));
                break;
              case 'path':
                n = ku.StringSchema;
                break;
              default:
                throw new Error('Unexpected type '.concat(e.type));
            }
            if (
              (e.exception
                ? (a.validate = function (t, n, r) {
                    return e.exception(t) || n.validate(t, r);
                  })
                : (a.validate = function (e, t, n) {
                    return void 0 === e || t.validate(e, n);
                  }),
              e.redirect &&
                (i.redirect = function (t) {
                  return t
                    ? {
                        to: { key: e.redirect.option, value: e.redirect.value },
                      }
                    : void 0;
                }),
              e.deprecated && (i.deprecated = !0),
              r && !e.array)
            ) {
              var o =
                a.preprocess ||
                function (e) {
                  return e;
                };
              a.preprocess = function (e, t, n) {
                return t.preprocess(
                  o(Array.isArray(e) ? e[e.length - 1] : e),
                  n
                );
              };
            }
            return e.array
              ? ku.ArraySchema.create(
                  Object.assign(
                    {},
                    r
                      ? {
                          preprocess: function (e) {
                            return [].concat(e);
                          },
                        }
                      : {},
                    i,
                    { valueSchema: n.create(a) }
                  )
                )
              : n.create(Object.assign({}, a, i));
          }
          var vi = function (e, t, n) {
            return yi(e, t, n);
          };
          function Ei(e, t) {
            if (!(t || {}).ignoreDecorators) {
              var n =
                (e.declaration && e.declaration.decorators) || e.decorators;
              if (n && n.length > 0) return Ei(n[0]);
            }
            return e.range ? e.range[0] : e.start;
          }
          function Ci(e) {
            var t = e.range ? e.range[1] : e.end;
            return e.typeAnnotation ? Math.max(t, Ci(e.typeAnnotation)) : t;
          }
          function bi(e, t) {
            return Ei(e) === Ei(t);
          }
          var Ai = Ei,
            Fi = Ci,
            xi = bi,
            Si = function (e, t) {
              return (
                bi(e, t) &&
                (function (e, t) {
                  return Ci(e) === Ci(t);
                })(e, t)
              );
            },
            wi = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.default = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g),
                (t.matchToToken = function (e) {
                  var t = { type: 'invalid', value: e[0], closed: void 0 };
                  return (
                    e[1]
                      ? ((t.type = 'string'), (t.closed = !(!e[3] && !e[4])))
                      : e[5]
                      ? (t.type = 'comment')
                      : e[6]
                      ? ((t.type = 'comment'), (t.closed = !!e[7]))
                      : e[8]
                      ? (t.type = 'regex')
                      : e[9]
                      ? (t.type = 'number')
                      : e[10]
                      ? (t.type = 'name')
                      : e[11]
                      ? (t.type = 'punctuator')
                      : e[12] && (t.type = 'whitespace'),
                    t
                  );
                });
            }),
            Bi = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.isIdentifierStart = l),
                (t.isIdentifierChar = c),
                (t.isIdentifierName = function (e) {
                  for (
                    var t = !0, n = 0, r = Array.from(e);
                    n < r.length;
                    n++
                  ) {
                    var u = r[n].codePointAt(0);
                    if (t) {
                      if (!l(u)) return !1;
                      t = !1;
                    } else if (!c(u)) return !1;
                  }
                  return !t;
                });
              var n =
                  'ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ',
                r =
                  '‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿',
                u = new RegExp('[' + n + ']'),
                a = new RegExp('[' + n + r + ']');
              n = r = null;
              var i = [
                  0,
                  11,
                  2,
                  25,
                  2,
                  18,
                  2,
                  1,
                  2,
                  14,
                  3,
                  13,
                  35,
                  122,
                  70,
                  52,
                  268,
                  28,
                  4,
                  48,
                  48,
                  31,
                  14,
                  29,
                  6,
                  37,
                  11,
                  29,
                  3,
                  35,
                  5,
                  7,
                  2,
                  4,
                  43,
                  157,
                  19,
                  35,
                  5,
                  35,
                  5,
                  39,
                  9,
                  51,
                  157,
                  310,
                  10,
                  21,
                  11,
                  7,
                  153,
                  5,
                  3,
                  0,
                  2,
                  43,
                  2,
                  1,
                  4,
                  0,
                  3,
                  22,
                  11,
                  22,
                  10,
                  30,
                  66,
                  18,
                  2,
                  1,
                  11,
                  21,
                  11,
                  25,
                  71,
                  55,
                  7,
                  1,
                  65,
                  0,
                  16,
                  3,
                  2,
                  2,
                  2,
                  28,
                  43,
                  28,
                  4,
                  28,
                  36,
                  7,
                  2,
                  27,
                  28,
                  53,
                  11,
                  21,
                  11,
                  18,
                  14,
                  17,
                  111,
                  72,
                  56,
                  50,
                  14,
                  50,
                  14,
                  35,
                  349,
                  41,
                  7,
                  1,
                  79,
                  28,
                  11,
                  0,
                  9,
                  21,
                  107,
                  20,
                  28,
                  22,
                  13,
                  52,
                  76,
                  44,
                  33,
                  24,
                  27,
                  35,
                  30,
                  0,
                  3,
                  0,
                  9,
                  34,
                  4,
                  0,
                  13,
                  47,
                  15,
                  3,
                  22,
                  0,
                  2,
                  0,
                  36,
                  17,
                  2,
                  24,
                  85,
                  6,
                  2,
                  0,
                  2,
                  3,
                  2,
                  14,
                  2,
                  9,
                  8,
                  46,
                  39,
                  7,
                  3,
                  1,
                  3,
                  21,
                  2,
                  6,
                  2,
                  1,
                  2,
                  4,
                  4,
                  0,
                  19,
                  0,
                  13,
                  4,
                  159,
                  52,
                  19,
                  3,
                  21,
                  2,
                  31,
                  47,
                  21,
                  1,
                  2,
                  0,
                  185,
                  46,
                  42,
                  3,
                  37,
                  47,
                  21,
                  0,
                  60,
                  42,
                  14,
                  0,
                  72,
                  26,
                  230,
                  43,
                  117,
                  63,
                  32,
                  7,
                  3,
                  0,
                  3,
                  7,
                  2,
                  1,
                  2,
                  23,
                  16,
                  0,
                  2,
                  0,
                  95,
                  7,
                  3,
                  38,
                  17,
                  0,
                  2,
                  0,
                  29,
                  0,
                  11,
                  39,
                  8,
                  0,
                  22,
                  0,
                  12,
                  45,
                  20,
                  0,
                  35,
                  56,
                  264,
                  8,
                  2,
                  36,
                  18,
                  0,
                  50,
                  29,
                  113,
                  6,
                  2,
                  1,
                  2,
                  37,
                  22,
                  0,
                  26,
                  5,
                  2,
                  1,
                  2,
                  31,
                  15,
                  0,
                  328,
                  18,
                  190,
                  0,
                  80,
                  921,
                  103,
                  110,
                  18,
                  195,
                  2749,
                  1070,
                  4050,
                  582,
                  8634,
                  568,
                  8,
                  30,
                  114,
                  29,
                  19,
                  47,
                  17,
                  3,
                  32,
                  20,
                  6,
                  18,
                  689,
                  63,
                  129,
                  74,
                  6,
                  0,
                  67,
                  12,
                  65,
                  1,
                  2,
                  0,
                  29,
                  6135,
                  9,
                  1237,
                  43,
                  8,
                  8952,
                  286,
                  50,
                  2,
                  18,
                  3,
                  9,
                  395,
                  2309,
                  106,
                  6,
                  12,
                  4,
                  8,
                  8,
                  9,
                  5991,
                  84,
                  2,
                  70,
                  2,
                  1,
                  3,
                  0,
                  3,
                  1,
                  3,
                  3,
                  2,
                  11,
                  2,
                  0,
                  2,
                  6,
                  2,
                  64,
                  2,
                  3,
                  3,
                  7,
                  2,
                  6,
                  2,
                  27,
                  2,
                  3,
                  2,
                  4,
                  2,
                  0,
                  4,
                  6,
                  2,
                  339,
                  3,
                  24,
                  2,
                  24,
                  2,
                  30,
                  2,
                  24,
                  2,
                  30,
                  2,
                  24,
                  2,
                  30,
                  2,
                  24,
                  2,
                  30,
                  2,
                  24,
                  2,
                  7,
                  2357,
                  44,
                  11,
                  6,
                  17,
                  0,
                  370,
                  43,
                  1301,
                  196,
                  60,
                  67,
                  8,
                  0,
                  1205,
                  3,
                  2,
                  26,
                  2,
                  1,
                  2,
                  0,
                  3,
                  0,
                  2,
                  9,
                  2,
                  3,
                  2,
                  0,
                  2,
                  0,
                  7,
                  0,
                  5,
                  0,
                  2,
                  0,
                  2,
                  0,
                  2,
                  2,
                  2,
                  1,
                  2,
                  0,
                  3,
                  0,
                  2,
                  0,
                  2,
                  0,
                  2,
                  0,
                  2,
                  0,
                  2,
                  1,
                  2,
                  0,
                  3,
                  3,
                  2,
                  6,
                  2,
                  3,
                  2,
                  3,
                  2,
                  0,
                  2,
                  9,
                  2,
                  16,
                  6,
                  2,
                  2,
                  4,
                  2,
                  16,
                  4421,
                  42717,
                  35,
                  4148,
                  12,
                  221,
                  3,
                  5761,
                  15,
                  7472,
                  3104,
                  541,
                  1507,
                  4938,
                ],
                o = [
                  509,
                  0,
                  227,
                  0,
                  150,
                  4,
                  294,
                  9,
                  1368,
                  2,
                  2,
                  1,
                  6,
                  3,
                  41,
                  2,
                  5,
                  0,
                  166,
                  1,
                  574,
                  3,
                  9,
                  9,
                  370,
                  1,
                  154,
                  10,
                  176,
                  2,
                  54,
                  14,
                  32,
                  9,
                  16,
                  3,
                  46,
                  10,
                  54,
                  9,
                  7,
                  2,
                  37,
                  13,
                  2,
                  9,
                  6,
                  1,
                  45,
                  0,
                  13,
                  2,
                  49,
                  13,
                  9,
                  3,
                  2,
                  11,
                  83,
                  11,
                  7,
                  0,
                  161,
                  11,
                  6,
                  9,
                  7,
                  3,
                  56,
                  1,
                  2,
                  6,
                  3,
                  1,
                  3,
                  2,
                  10,
                  0,
                  11,
                  1,
                  3,
                  6,
                  4,
                  4,
                  193,
                  17,
                  10,
                  9,
                  5,
                  0,
                  82,
                  19,
                  13,
                  9,
                  214,
                  6,
                  3,
                  8,
                  28,
                  1,
                  83,
                  16,
                  16,
                  9,
                  82,
                  12,
                  9,
                  9,
                  84,
                  14,
                  5,
                  9,
                  243,
                  14,
                  166,
                  9,
                  71,
                  5,
                  2,
                  1,
                  3,
                  3,
                  2,
                  0,
                  2,
                  1,
                  13,
                  9,
                  120,
                  6,
                  3,
                  6,
                  4,
                  0,
                  29,
                  9,
                  41,
                  6,
                  2,
                  3,
                  9,
                  0,
                  10,
                  10,
                  47,
                  15,
                  406,
                  7,
                  2,
                  7,
                  17,
                  9,
                  57,
                  21,
                  2,
                  13,
                  123,
                  5,
                  4,
                  0,
                  2,
                  1,
                  2,
                  6,
                  2,
                  0,
                  9,
                  9,
                  49,
                  4,
                  2,
                  1,
                  2,
                  4,
                  9,
                  9,
                  330,
                  3,
                  19306,
                  9,
                  135,
                  4,
                  60,
                  6,
                  26,
                  9,
                  1014,
                  0,
                  2,
                  54,
                  8,
                  3,
                  82,
                  0,
                  12,
                  1,
                  19628,
                  1,
                  5319,
                  4,
                  4,
                  5,
                  9,
                  7,
                  3,
                  6,
                  31,
                  3,
                  149,
                  2,
                  1418,
                  49,
                  513,
                  54,
                  5,
                  49,
                  9,
                  0,
                  15,
                  0,
                  23,
                  4,
                  2,
                  14,
                  1361,
                  6,
                  2,
                  16,
                  3,
                  6,
                  2,
                  1,
                  2,
                  4,
                  262,
                  6,
                  10,
                  9,
                  419,
                  13,
                  1495,
                  6,
                  110,
                  6,
                  6,
                  9,
                  4759,
                  9,
                  787719,
                  239,
                ];
              function s(e, t) {
                for (var n = 65536, r = 0, u = t.length; r < u; r += 2) {
                  if ((n += t[r]) > e) return !1;
                  if ((n += t[r + 1]) >= e) return !0;
                }
                return !1;
              }
              function l(e) {
                return e < 65
                  ? 36 === e
                  : e <= 90 ||
                      (e < 97
                        ? 95 === e
                        : e <= 122 ||
                          (e <= 65535
                            ? e >= 170 && u.test(String.fromCharCode(e))
                            : s(e, i)));
              }
              function c(e) {
                return e < 48
                  ? 36 === e
                  : e < 58 ||
                      (!(e < 65) &&
                        (e <= 90 ||
                          (e < 97
                            ? 95 === e
                            : e <= 122 ||
                              (e <= 65535
                                ? e >= 170 && a.test(String.fromCharCode(e))
                                : s(e, i) || s(e, o)))));
              }
            }),
            Ti = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.isReservedWord = a),
                (t.isStrictReservedWord = i),
                (t.isStrictBindOnlyReservedWord = o),
                (t.isStrictBindReservedWord = function (e, t) {
                  return i(e, t) || o(e);
                }),
                (t.isKeyword = function (e) {
                  return n.has(e);
                });
              var n = new Set([
                  'break',
                  'case',
                  'catch',
                  'continue',
                  'debugger',
                  'default',
                  'do',
                  'else',
                  'finally',
                  'for',
                  'function',
                  'if',
                  'return',
                  'switch',
                  'throw',
                  'try',
                  'var',
                  'const',
                  'while',
                  'with',
                  'new',
                  'this',
                  'super',
                  'class',
                  'extends',
                  'export',
                  'import',
                  'null',
                  'true',
                  'false',
                  'in',
                  'instanceof',
                  'typeof',
                  'void',
                  'delete',
                ]),
                r = new Set([
                  'implements',
                  'interface',
                  'let',
                  'package',
                  'private',
                  'protected',
                  'public',
                  'static',
                  'yield',
                ]),
                u = new Set(['eval', 'arguments']);
              function a(e, t) {
                return (t && 'await' === e) || 'enum' === e;
              }
              function i(e, t) {
                return a(e, t) || r.has(e);
              }
              function o(e) {
                return u.has(e);
              }
            }),
            ki = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                Object.defineProperty(t, 'isIdentifierName', {
                  enumerable: !0,
                  get: function () {
                    return Bi.isIdentifierName;
                  },
                }),
                Object.defineProperty(t, 'isIdentifierChar', {
                  enumerable: !0,
                  get: function () {
                    return Bi.isIdentifierChar;
                  },
                }),
                Object.defineProperty(t, 'isIdentifierStart', {
                  enumerable: !0,
                  get: function () {
                    return Bi.isIdentifierStart;
                  },
                }),
                Object.defineProperty(t, 'isReservedWord', {
                  enumerable: !0,
                  get: function () {
                    return Ti.isReservedWord;
                  },
                }),
                Object.defineProperty(t, 'isStrictBindOnlyReservedWord', {
                  enumerable: !0,
                  get: function () {
                    return Ti.isStrictBindOnlyReservedWord;
                  },
                }),
                Object.defineProperty(t, 'isStrictBindReservedWord', {
                  enumerable: !0,
                  get: function () {
                    return Ti.isStrictBindReservedWord;
                  },
                }),
                Object.defineProperty(t, 'isStrictReservedWord', {
                  enumerable: !0,
                  get: function () {
                    return Ti.isStrictReservedWord;
                  },
                }),
                Object.defineProperty(t, 'isKeyword', {
                  enumerable: !0,
                  get: function () {
                    return Ti.isKeyword;
                  },
                });
            }),
            Ni = /[|\\{}()[\]^$+*?.]/g,
            Oi = function (e) {
              if ('string' != typeof e)
                throw new TypeError('Expected a string');
              return e.replace(Ni, '\\$&');
            },
            Pi = {
              aliceblue: [240, 248, 255],
              antiquewhite: [250, 235, 215],
              aqua: [0, 255, 255],
              aquamarine: [127, 255, 212],
              azure: [240, 255, 255],
              beige: [245, 245, 220],
              bisque: [255, 228, 196],
              black: [0, 0, 0],
              blanchedalmond: [255, 235, 205],
              blue: [0, 0, 255],
              blueviolet: [138, 43, 226],
              brown: [165, 42, 42],
              burlywood: [222, 184, 135],
              cadetblue: [95, 158, 160],
              chartreuse: [127, 255, 0],
              chocolate: [210, 105, 30],
              coral: [255, 127, 80],
              cornflowerblue: [100, 149, 237],
              cornsilk: [255, 248, 220],
              crimson: [220, 20, 60],
              cyan: [0, 255, 255],
              darkblue: [0, 0, 139],
              darkcyan: [0, 139, 139],
              darkgoldenrod: [184, 134, 11],
              darkgray: [169, 169, 169],
              darkgreen: [0, 100, 0],
              darkgrey: [169, 169, 169],
              darkkhaki: [189, 183, 107],
              darkmagenta: [139, 0, 139],
              darkolivegreen: [85, 107, 47],
              darkorange: [255, 140, 0],
              darkorchid: [153, 50, 204],
              darkred: [139, 0, 0],
              darksalmon: [233, 150, 122],
              darkseagreen: [143, 188, 143],
              darkslateblue: [72, 61, 139],
              darkslategray: [47, 79, 79],
              darkslategrey: [47, 79, 79],
              darkturquoise: [0, 206, 209],
              darkviolet: [148, 0, 211],
              deeppink: [255, 20, 147],
              deepskyblue: [0, 191, 255],
              dimgray: [105, 105, 105],
              dimgrey: [105, 105, 105],
              dodgerblue: [30, 144, 255],
              firebrick: [178, 34, 34],
              floralwhite: [255, 250, 240],
              forestgreen: [34, 139, 34],
              fuchsia: [255, 0, 255],
              gainsboro: [220, 220, 220],
              ghostwhite: [248, 248, 255],
              gold: [255, 215, 0],
              goldenrod: [218, 165, 32],
              gray: [128, 128, 128],
              green: [0, 128, 0],
              greenyellow: [173, 255, 47],
              grey: [128, 128, 128],
              honeydew: [240, 255, 240],
              hotpink: [255, 105, 180],
              indianred: [205, 92, 92],
              indigo: [75, 0, 130],
              ivory: [255, 255, 240],
              khaki: [240, 230, 140],
              lavender: [230, 230, 250],
              lavenderblush: [255, 240, 245],
              lawngreen: [124, 252, 0],
              lemonchiffon: [255, 250, 205],
              lightblue: [173, 216, 230],
              lightcoral: [240, 128, 128],
              lightcyan: [224, 255, 255],
              lightgoldenrodyellow: [250, 250, 210],
              lightgray: [211, 211, 211],
              lightgreen: [144, 238, 144],
              lightgrey: [211, 211, 211],
              lightpink: [255, 182, 193],
              lightsalmon: [255, 160, 122],
              lightseagreen: [32, 178, 170],
              lightskyblue: [135, 206, 250],
              lightslategray: [119, 136, 153],
              lightslategrey: [119, 136, 153],
              lightsteelblue: [176, 196, 222],
              lightyellow: [255, 255, 224],
              lime: [0, 255, 0],
              limegreen: [50, 205, 50],
              linen: [250, 240, 230],
              magenta: [255, 0, 255],
              maroon: [128, 0, 0],
              mediumaquamarine: [102, 205, 170],
              mediumblue: [0, 0, 205],
              mediumorchid: [186, 85, 211],
              mediumpurple: [147, 112, 219],
              mediumseagreen: [60, 179, 113],
              mediumslateblue: [123, 104, 238],
              mediumspringgreen: [0, 250, 154],
              mediumturquoise: [72, 209, 204],
              mediumvioletred: [199, 21, 133],
              midnightblue: [25, 25, 112],
              mintcream: [245, 255, 250],
              mistyrose: [255, 228, 225],
              moccasin: [255, 228, 181],
              navajowhite: [255, 222, 173],
              navy: [0, 0, 128],
              oldlace: [253, 245, 230],
              olive: [128, 128, 0],
              olivedrab: [107, 142, 35],
              orange: [255, 165, 0],
              orangered: [255, 69, 0],
              orchid: [218, 112, 214],
              palegoldenrod: [238, 232, 170],
              palegreen: [152, 251, 152],
              paleturquoise: [175, 238, 238],
              palevioletred: [219, 112, 147],
              papayawhip: [255, 239, 213],
              peachpuff: [255, 218, 185],
              peru: [205, 133, 63],
              pink: [255, 192, 203],
              plum: [221, 160, 221],
              powderblue: [176, 224, 230],
              purple: [128, 0, 128],
              rebeccapurple: [102, 51, 153],
              red: [255, 0, 0],
              rosybrown: [188, 143, 143],
              royalblue: [65, 105, 225],
              saddlebrown: [139, 69, 19],
              salmon: [250, 128, 114],
              sandybrown: [244, 164, 96],
              seagreen: [46, 139, 87],
              seashell: [255, 245, 238],
              sienna: [160, 82, 45],
              silver: [192, 192, 192],
              skyblue: [135, 206, 235],
              slateblue: [106, 90, 205],
              slategray: [112, 128, 144],
              slategrey: [112, 128, 144],
              snow: [255, 250, 250],
              springgreen: [0, 255, 127],
              steelblue: [70, 130, 180],
              tan: [210, 180, 140],
              teal: [0, 128, 128],
              thistle: [216, 191, 216],
              tomato: [255, 99, 71],
              turquoise: [64, 224, 208],
              violet: [238, 130, 238],
              wheat: [245, 222, 179],
              white: [255, 255, 255],
              whitesmoke: [245, 245, 245],
              yellow: [255, 255, 0],
              yellowgreen: [154, 205, 50],
            },
            Mi = Xe(function (e) {
              var t = {};
              for (var n in Pi) Pi.hasOwnProperty(n) && (t[Pi[n]] = n);
              var r = (e.exports = {
                rgb: { channels: 3, labels: 'rgb' },
                hsl: { channels: 3, labels: 'hsl' },
                hsv: { channels: 3, labels: 'hsv' },
                hwb: { channels: 3, labels: 'hwb' },
                cmyk: { channels: 4, labels: 'cmyk' },
                xyz: { channels: 3, labels: 'xyz' },
                lab: { channels: 3, labels: 'lab' },
                lch: { channels: 3, labels: 'lch' },
                hex: { channels: 1, labels: ['hex'] },
                keyword: { channels: 1, labels: ['keyword'] },
                ansi16: { channels: 1, labels: ['ansi16'] },
                ansi256: { channels: 1, labels: ['ansi256'] },
                hcg: { channels: 3, labels: ['h', 'c', 'g'] },
                apple: { channels: 3, labels: ['r16', 'g16', 'b16'] },
                gray: { channels: 1, labels: ['gray'] },
              });
              for (var u in r)
                if (r.hasOwnProperty(u)) {
                  if (!('channels' in r[u]))
                    throw new Error('missing channels property: ' + u);
                  if (!('labels' in r[u]))
                    throw new Error('missing channel labels property: ' + u);
                  if (r[u].labels.length !== r[u].channels)
                    throw new Error('channel and label counts mismatch: ' + u);
                  var a = r[u].channels,
                    i = r[u].labels;
                  delete r[u].channels,
                    delete r[u].labels,
                    Object.defineProperty(r[u], 'channels', { value: a }),
                    Object.defineProperty(r[u], 'labels', { value: i });
                }
              (r.rgb.hsl = function (e) {
                var t,
                  n,
                  r = e[0] / 255,
                  u = e[1] / 255,
                  a = e[2] / 255,
                  i = Math.min(r, u, a),
                  o = Math.max(r, u, a),
                  s = o - i;
                return (
                  o === i
                    ? (t = 0)
                    : r === o
                    ? (t = (u - a) / s)
                    : u === o
                    ? (t = 2 + (a - r) / s)
                    : a === o && (t = 4 + (r - u) / s),
                  (t = Math.min(60 * t, 360)) < 0 && (t += 360),
                  (n = (i + o) / 2),
                  [
                    t,
                    100 *
                      (o === i ? 0 : n <= 0.5 ? s / (o + i) : s / (2 - o - i)),
                    100 * n,
                  ]
                );
              }),
                (r.rgb.hsv = function (e) {
                  var t,
                    n,
                    r,
                    u,
                    a,
                    i = e[0] / 255,
                    o = e[1] / 255,
                    s = e[2] / 255,
                    l = Math.max(i, o, s),
                    c = l - Math.min(i, o, s),
                    p = function (e) {
                      return (l - e) / 6 / c + 0.5;
                    };
                  return (
                    0 === c
                      ? (u = a = 0)
                      : ((a = c / l),
                        (t = p(i)),
                        (n = p(o)),
                        (r = p(s)),
                        i === l
                          ? (u = r - n)
                          : o === l
                          ? (u = 1 / 3 + t - r)
                          : s === l && (u = 2 / 3 + n - t),
                        u < 0 ? (u += 1) : u > 1 && (u -= 1)),
                    [360 * u, 100 * a, 100 * l]
                  );
                }),
                (r.rgb.hwb = function (e) {
                  var t = e[0],
                    n = e[1],
                    u = e[2];
                  return [
                    r.rgb.hsl(e)[0],
                    (1 / 255) * Math.min(t, Math.min(n, u)) * 100,
                    100 * (u = 1 - (1 / 255) * Math.max(t, Math.max(n, u))),
                  ];
                }),
                (r.rgb.cmyk = function (e) {
                  var t,
                    n = e[0] / 255,
                    r = e[1] / 255,
                    u = e[2] / 255;
                  return [
                    100 *
                      ((1 - n - (t = Math.min(1 - n, 1 - r, 1 - u))) /
                        (1 - t) || 0),
                    100 * ((1 - r - t) / (1 - t) || 0),
                    100 * ((1 - u - t) / (1 - t) || 0),
                    100 * t,
                  ];
                }),
                (r.rgb.keyword = function (e) {
                  var n = t[e];
                  if (n) return n;
                  var r,
                    u,
                    a,
                    i = 1 / 0;
                  for (var o in Pi)
                    if (Pi.hasOwnProperty(o)) {
                      var s =
                        ((u = e),
                        (a = Pi[o]),
                        Math.pow(u[0] - a[0], 2) +
                          Math.pow(u[1] - a[1], 2) +
                          Math.pow(u[2] - a[2], 2));
                      s < i && ((i = s), (r = o));
                    }
                  return r;
                }),
                (r.keyword.rgb = function (e) {
                  return Pi[e];
                }),
                (r.rgb.xyz = function (e) {
                  var t = e[0] / 255,
                    n = e[1] / 255,
                    r = e[2] / 255;
                  return [
                    100 *
                      (0.4124 *
                        (t =
                          t > 0.04045
                            ? Math.pow((t + 0.055) / 1.055, 2.4)
                            : t / 12.92) +
                        0.3576 *
                          (n =
                            n > 0.04045
                              ? Math.pow((n + 0.055) / 1.055, 2.4)
                              : n / 12.92) +
                        0.1805 *
                          (r =
                            r > 0.04045
                              ? Math.pow((r + 0.055) / 1.055, 2.4)
                              : r / 12.92)),
                    100 * (0.2126 * t + 0.7152 * n + 0.0722 * r),
                    100 * (0.0193 * t + 0.1192 * n + 0.9505 * r),
                  ];
                }),
                (r.rgb.lab = function (e) {
                  var t = r.rgb.xyz(e),
                    n = t[0],
                    u = t[1],
                    a = t[2];
                  return (
                    (u /= 100),
                    (a /= 108.883),
                    (n =
                      (n /= 95.047) > 0.008856
                        ? Math.pow(n, 1 / 3)
                        : 7.787 * n + 16 / 116),
                    [
                      116 *
                        (u =
                          u > 0.008856
                            ? Math.pow(u, 1 / 3)
                            : 7.787 * u + 16 / 116) -
                        16,
                      500 * (n - u),
                      200 *
                        (u -
                          (a =
                            a > 0.008856
                              ? Math.pow(a, 1 / 3)
                              : 7.787 * a + 16 / 116)),
                    ]
                  );
                }),
                (r.hsl.rgb = function (e) {
                  var t,
                    n,
                    r,
                    u,
                    a,
                    i = e[0] / 360,
                    o = e[1] / 100,
                    s = e[2] / 100;
                  if (0 === o) return [(a = 255 * s), a, a];
                  (t = 2 * s - (n = s < 0.5 ? s * (1 + o) : s + o - s * o)),
                    (u = [0, 0, 0]);
                  for (var l = 0; l < 3; l++)
                    (r = i + (1 / 3) * -(l - 1)) < 0 && r++,
                      r > 1 && r--,
                      (a =
                        6 * r < 1
                          ? t + 6 * (n - t) * r
                          : 2 * r < 1
                          ? n
                          : 3 * r < 2
                          ? t + (n - t) * (2 / 3 - r) * 6
                          : t),
                      (u[l] = 255 * a);
                  return u;
                }),
                (r.hsl.hsv = function (e) {
                  var t = e[0],
                    n = e[1] / 100,
                    r = e[2] / 100,
                    u = n,
                    a = Math.max(r, 0.01);
                  return (
                    (n *= (r *= 2) <= 1 ? r : 2 - r),
                    (u *= a <= 1 ? a : 2 - a),
                    [
                      t,
                      100 * (0 === r ? (2 * u) / (a + u) : (2 * n) / (r + n)),
                      ((r + n) / 2) * 100,
                    ]
                  );
                }),
                (r.hsv.rgb = function (e) {
                  var t = e[0] / 60,
                    n = e[1] / 100,
                    r = e[2] / 100,
                    u = Math.floor(t) % 6,
                    a = t - Math.floor(t),
                    i = 255 * r * (1 - n),
                    o = 255 * r * (1 - n * a),
                    s = 255 * r * (1 - n * (1 - a));
                  switch (((r *= 255), u)) {
                    case 0:
                      return [r, s, i];
                    case 1:
                      return [o, r, i];
                    case 2:
                      return [i, r, s];
                    case 3:
                      return [i, o, r];
                    case 4:
                      return [s, i, r];
                    case 5:
                      return [r, i, o];
                  }
                }),
                (r.hsv.hsl = function (e) {
                  var t,
                    n,
                    r,
                    u = e[0],
                    a = e[1] / 100,
                    i = e[2] / 100,
                    o = Math.max(i, 0.01);
                  return (
                    (r = (2 - a) * i),
                    (n = a * o),
                    [
                      u,
                      100 *
                        (n = (n /= (t = (2 - a) * o) <= 1 ? t : 2 - t) || 0),
                      100 * (r /= 2),
                    ]
                  );
                }),
                (r.hwb.rgb = function (e) {
                  var t,
                    n,
                    r,
                    u,
                    a,
                    i,
                    o,
                    s = e[0] / 360,
                    l = e[1] / 100,
                    c = e[2] / 100,
                    p = l + c;
                  switch (
                    (p > 1 && ((l /= p), (c /= p)),
                    (r = 6 * s - (t = Math.floor(6 * s))),
                    0 != (1 & t) && (r = 1 - r),
                    (u = l + r * ((n = 1 - c) - l)),
                    t)
                  ) {
                    default:
                    case 6:
                    case 0:
                      (a = n), (i = u), (o = l);
                      break;
                    case 1:
                      (a = u), (i = n), (o = l);
                      break;
                    case 2:
                      (a = l), (i = n), (o = u);
                      break;
                    case 3:
                      (a = l), (i = u), (o = n);
                      break;
                    case 4:
                      (a = u), (i = l), (o = n);
                      break;
                    case 5:
                      (a = n), (i = l), (o = u);
                  }
                  return [255 * a, 255 * i, 255 * o];
                }),
                (r.cmyk.rgb = function (e) {
                  var t = e[0] / 100,
                    n = e[1] / 100,
                    r = e[2] / 100,
                    u = e[3] / 100;
                  return [
                    255 * (1 - Math.min(1, t * (1 - u) + u)),
                    255 * (1 - Math.min(1, n * (1 - u) + u)),
                    255 * (1 - Math.min(1, r * (1 - u) + u)),
                  ];
                }),
                (r.xyz.rgb = function (e) {
                  var t,
                    n,
                    r,
                    u = e[0] / 100,
                    a = e[1] / 100,
                    i = e[2] / 100;
                  return (
                    (n = -0.9689 * u + 1.8758 * a + 0.0415 * i),
                    (r = 0.0557 * u + -0.204 * a + 1.057 * i),
                    (t =
                      (t = 3.2406 * u + -1.5372 * a + -0.4986 * i) > 0.0031308
                        ? 1.055 * Math.pow(t, 1 / 2.4) - 0.055
                        : 12.92 * t),
                    (n =
                      n > 0.0031308
                        ? 1.055 * Math.pow(n, 1 / 2.4) - 0.055
                        : 12.92 * n),
                    (r =
                      r > 0.0031308
                        ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055
                        : 12.92 * r),
                    [
                      255 * (t = Math.min(Math.max(0, t), 1)),
                      255 * (n = Math.min(Math.max(0, n), 1)),
                      255 * (r = Math.min(Math.max(0, r), 1)),
                    ]
                  );
                }),
                (r.xyz.lab = function (e) {
                  var t = e[0],
                    n = e[1],
                    r = e[2];
                  return (
                    (n /= 100),
                    (r /= 108.883),
                    (t =
                      (t /= 95.047) > 0.008856
                        ? Math.pow(t, 1 / 3)
                        : 7.787 * t + 16 / 116),
                    [
                      116 *
                        (n =
                          n > 0.008856
                            ? Math.pow(n, 1 / 3)
                            : 7.787 * n + 16 / 116) -
                        16,
                      500 * (t - n),
                      200 *
                        (n -
                          (r =
                            r > 0.008856
                              ? Math.pow(r, 1 / 3)
                              : 7.787 * r + 16 / 116)),
                    ]
                  );
                }),
                (r.lab.xyz = function (e) {
                  var t,
                    n,
                    r,
                    u = e[0];
                  (t = e[1] / 500 + (n = (u + 16) / 116)), (r = n - e[2] / 200);
                  var a = Math.pow(n, 3),
                    i = Math.pow(t, 3),
                    o = Math.pow(r, 3);
                  return (
                    (n = a > 0.008856 ? a : (n - 16 / 116) / 7.787),
                    (t = i > 0.008856 ? i : (t - 16 / 116) / 7.787),
                    (r = o > 0.008856 ? o : (r - 16 / 116) / 7.787),
                    [(t *= 95.047), (n *= 100), (r *= 108.883)]
                  );
                }),
                (r.lab.lch = function (e) {
                  var t,
                    n = e[0],
                    r = e[1],
                    u = e[2];
                  return (
                    (t = (360 * Math.atan2(u, r)) / 2 / Math.PI) < 0 &&
                      (t += 360),
                    [n, Math.sqrt(r * r + u * u), t]
                  );
                }),
                (r.lch.lab = function (e) {
                  var t,
                    n = e[0],
                    r = e[1];
                  return (
                    (t = (e[2] / 360) * 2 * Math.PI),
                    [n, r * Math.cos(t), r * Math.sin(t)]
                  );
                }),
                (r.rgb.ansi16 = function (e) {
                  var t = e[0],
                    n = e[1],
                    u = e[2],
                    a = 1 in arguments ? arguments[1] : r.rgb.hsv(e)[2];
                  if (0 === (a = Math.round(a / 50))) return 30;
                  var i =
                    30 +
                    ((Math.round(u / 255) << 2) |
                      (Math.round(n / 255) << 1) |
                      Math.round(t / 255));
                  return 2 === a && (i += 60), i;
                }),
                (r.hsv.ansi16 = function (e) {
                  return r.rgb.ansi16(r.hsv.rgb(e), e[2]);
                }),
                (r.rgb.ansi256 = function (e) {
                  var t = e[0],
                    n = e[1],
                    r = e[2];
                  return t === n && n === r
                    ? t < 8
                      ? 16
                      : t > 248
                      ? 231
                      : Math.round(((t - 8) / 247) * 24) + 232
                    : 16 +
                        36 * Math.round((t / 255) * 5) +
                        6 * Math.round((n / 255) * 5) +
                        Math.round((r / 255) * 5);
                }),
                (r.ansi16.rgb = function (e) {
                  var t = e % 10;
                  if (0 === t || 7 === t)
                    return e > 50 && (t += 3.5), [(t = (t / 10.5) * 255), t, t];
                  var n = 0.5 * (1 + ~~(e > 50));
                  return [
                    (1 & t) * n * 255,
                    ((t >> 1) & 1) * n * 255,
                    ((t >> 2) & 1) * n * 255,
                  ];
                }),
                (r.ansi256.rgb = function (e) {
                  if (e >= 232) {
                    var t = 10 * (e - 232) + 8;
                    return [t, t, t];
                  }
                  var n;
                  return (
                    (e -= 16),
                    [
                      (Math.floor(e / 36) / 5) * 255,
                      (Math.floor((n = e % 36) / 6) / 5) * 255,
                      ((n % 6) / 5) * 255,
                    ]
                  );
                }),
                (r.rgb.hex = function (e) {
                  var t = (
                    ((255 & Math.round(e[0])) << 16) +
                    ((255 & Math.round(e[1])) << 8) +
                    (255 & Math.round(e[2]))
                  )
                    .toString(16)
                    .toUpperCase();
                  return '000000'.substring(t.length) + t;
                }),
                (r.hex.rgb = function (e) {
                  var t = e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
                  if (!t) return [0, 0, 0];
                  var n = t[0];
                  3 === t[0].length &&
                    (n = n
                      .split('')
                      .map(function (e) {
                        return e + e;
                      })
                      .join(''));
                  var r = parseInt(n, 16);
                  return [(r >> 16) & 255, (r >> 8) & 255, 255 & r];
                }),
                (r.rgb.hcg = function (e) {
                  var t,
                    n = e[0] / 255,
                    r = e[1] / 255,
                    u = e[2] / 255,
                    a = Math.max(Math.max(n, r), u),
                    i = Math.min(Math.min(n, r), u),
                    o = a - i;
                  return (
                    (t =
                      o <= 0
                        ? 0
                        : a === n
                        ? ((r - u) / o) % 6
                        : a === r
                        ? 2 + (u - n) / o
                        : 4 + (n - r) / o + 4),
                    (t /= 6),
                    [360 * (t %= 1), 100 * o, 100 * (o < 1 ? i / (1 - o) : 0)]
                  );
                }),
                (r.hsl.hcg = function (e) {
                  var t,
                    n = e[1] / 100,
                    r = e[2] / 100,
                    u = 0;
                  return (
                    (t = r < 0.5 ? 2 * n * r : 2 * n * (1 - r)) < 1 &&
                      (u = (r - 0.5 * t) / (1 - t)),
                    [e[0], 100 * t, 100 * u]
                  );
                }),
                (r.hsv.hcg = function (e) {
                  var t = e[1] / 100,
                    n = e[2] / 100,
                    r = t * n,
                    u = 0;
                  return (
                    r < 1 && (u = (n - r) / (1 - r)), [e[0], 100 * r, 100 * u]
                  );
                }),
                (r.hcg.rgb = function (e) {
                  var t = e[0] / 360,
                    n = e[1] / 100,
                    r = e[2] / 100;
                  if (0 === n) return [255 * r, 255 * r, 255 * r];
                  var u,
                    a = [0, 0, 0],
                    i = (t % 1) * 6,
                    o = i % 1,
                    s = 1 - o;
                  switch (Math.floor(i)) {
                    case 0:
                      (a[0] = 1), (a[1] = o), (a[2] = 0);
                      break;
                    case 1:
                      (a[0] = s), (a[1] = 1), (a[2] = 0);
                      break;
                    case 2:
                      (a[0] = 0), (a[1] = 1), (a[2] = o);
                      break;
                    case 3:
                      (a[0] = 0), (a[1] = s), (a[2] = 1);
                      break;
                    case 4:
                      (a[0] = o), (a[1] = 0), (a[2] = 1);
                      break;
                    default:
                      (a[0] = 1), (a[1] = 0), (a[2] = s);
                  }
                  return (
                    (u = (1 - n) * r),
                    [
                      255 * (n * a[0] + u),
                      255 * (n * a[1] + u),
                      255 * (n * a[2] + u),
                    ]
                  );
                }),
                (r.hcg.hsv = function (e) {
                  var t = e[1] / 100,
                    n = t + (e[2] / 100) * (1 - t),
                    r = 0;
                  return n > 0 && (r = t / n), [e[0], 100 * r, 100 * n];
                }),
                (r.hcg.hsl = function (e) {
                  var t = e[1] / 100,
                    n = (e[2] / 100) * (1 - t) + 0.5 * t,
                    r = 0;
                  return (
                    n > 0 && n < 0.5
                      ? (r = t / (2 * n))
                      : n >= 0.5 && n < 1 && (r = t / (2 * (1 - n))),
                    [e[0], 100 * r, 100 * n]
                  );
                }),
                (r.hcg.hwb = function (e) {
                  var t = e[1] / 100,
                    n = t + (e[2] / 100) * (1 - t);
                  return [e[0], 100 * (n - t), 100 * (1 - n)];
                }),
                (r.hwb.hcg = function (e) {
                  var t = e[1] / 100,
                    n = 1 - e[2] / 100,
                    r = n - t,
                    u = 0;
                  return (
                    r < 1 && (u = (n - r) / (1 - r)), [e[0], 100 * r, 100 * u]
                  );
                }),
                (r.apple.rgb = function (e) {
                  return [
                    (e[0] / 65535) * 255,
                    (e[1] / 65535) * 255,
                    (e[2] / 65535) * 255,
                  ];
                }),
                (r.rgb.apple = function (e) {
                  return [
                    (e[0] / 255) * 65535,
                    (e[1] / 255) * 65535,
                    (e[2] / 255) * 65535,
                  ];
                }),
                (r.gray.rgb = function (e) {
                  return [
                    (e[0] / 100) * 255,
                    (e[0] / 100) * 255,
                    (e[0] / 100) * 255,
                  ];
                }),
                (r.gray.hsl = r.gray.hsv = function (e) {
                  return [0, 0, e[0]];
                }),
                (r.gray.hwb = function (e) {
                  return [0, 100, e[0]];
                }),
                (r.gray.cmyk = function (e) {
                  return [0, 0, 0, e[0]];
                }),
                (r.gray.lab = function (e) {
                  return [e[0], 0, 0];
                }),
                (r.gray.hex = function (e) {
                  var t = 255 & Math.round((e[0] / 100) * 255),
                    n = ((t << 16) + (t << 8) + t).toString(16).toUpperCase();
                  return '000000'.substring(n.length) + n;
                }),
                (r.rgb.gray = function (e) {
                  return [((e[0] + e[1] + e[2]) / 3 / 255) * 100];
                });
            });
          function Ii(e, t) {
            return function (n) {
              return t(e(n));
            };
          }
          function ji(e, t) {
            for (
              var n = [t[e].parent, e], r = Mi[t[e].parent][e], u = t[e].parent;
              t[u].parent;

            )
              n.unshift(t[u].parent),
                (r = Ii(Mi[t[u].parent][u], r)),
                (u = t[u].parent);
            return (r.conversion = n), r;
          }
          var Li = {};
          Object.keys(Mi).forEach(function (e) {
            (Li[e] = {}),
              Object.defineProperty(Li[e], 'channels', {
                value: Mi[e].channels,
              }),
              Object.defineProperty(Li[e], 'labels', { value: Mi[e].labels });
            var t = (function (e) {
              for (
                var t = (function (e) {
                    var t = (function () {
                        for (
                          var e = {}, t = Object.keys(Mi), n = t.length, r = 0;
                          r < n;
                          r++
                        )
                          e[t[r]] = { distance: -1, parent: null };
                        return e;
                      })(),
                      n = [e];
                    for (t[e].distance = 0; n.length; )
                      for (
                        var r = n.pop(),
                          u = Object.keys(Mi[r]),
                          a = u.length,
                          i = 0;
                        i < a;
                        i++
                      ) {
                        var o = u[i],
                          s = t[o];
                        -1 === s.distance &&
                          ((s.distance = t[r].distance + 1),
                          (s.parent = r),
                          n.unshift(o));
                      }
                    return t;
                  })(e),
                  n = {},
                  r = Object.keys(t),
                  u = r.length,
                  a = 0;
                a < u;
                a++
              ) {
                var i = r[a];
                null !== t[i].parent && (n[i] = ji(i, t));
              }
              return n;
            })(e);
            Object.keys(t).forEach(function (n) {
              var r = t[n];
              (Li[e][n] = (function (e) {
                var t = function (t) {
                  if (null == t) return t;
                  arguments.length > 1 &&
                    (t = Array.prototype.slice.call(arguments));
                  var n = e(t);
                  if ('object' == k(n))
                    for (var r = n.length, u = 0; u < r; u++)
                      n[u] = Math.round(n[u]);
                  return n;
                };
                return 'conversion' in e && (t.conversion = e.conversion), t;
              })(r)),
                (Li[e][n].raw = (function (e) {
                  var t = function (t) {
                    return null == t
                      ? t
                      : (arguments.length > 1 &&
                          (t = Array.prototype.slice.call(arguments)),
                        e(t));
                  };
                  return 'conversion' in e && (t.conversion = e.conversion), t;
                })(r));
            });
          });
          var _i,
            Ri = Li,
            $i = Xe(function (e) {
              var t = function (e, t) {
                  return function () {
                    var n = e.apply(Ri, arguments);
                    return '['.concat(n + t, 'm');
                  };
                },
                n = function (e, t) {
                  return function () {
                    var n = e.apply(Ri, arguments);
                    return '['.concat(38 + t, ';5;').concat(n, 'm');
                  };
                },
                r = function (e, t) {
                  return function () {
                    var n = e.apply(Ri, arguments);
                    return '['
                      .concat(38 + t, ';2;')
                      .concat(n[0], ';')
                      .concat(n[1], ';')
                      .concat(n[2], 'm');
                  };
                };
              Object.defineProperty(e, 'exports', {
                enumerable: !0,
                get: function () {
                  var e = new Map(),
                    u = {
                      modifier: {
                        reset: [0, 0],
                        bold: [1, 22],
                        dim: [2, 22],
                        italic: [3, 23],
                        underline: [4, 24],
                        inverse: [7, 27],
                        hidden: [8, 28],
                        strikethrough: [9, 29],
                      },
                      color: {
                        black: [30, 39],
                        red: [31, 39],
                        green: [32, 39],
                        yellow: [33, 39],
                        blue: [34, 39],
                        magenta: [35, 39],
                        cyan: [36, 39],
                        white: [37, 39],
                        gray: [90, 39],
                        redBright: [91, 39],
                        greenBright: [92, 39],
                        yellowBright: [93, 39],
                        blueBright: [94, 39],
                        magentaBright: [95, 39],
                        cyanBright: [96, 39],
                        whiteBright: [97, 39],
                      },
                      bgColor: {
                        bgBlack: [40, 49],
                        bgRed: [41, 49],
                        bgGreen: [42, 49],
                        bgYellow: [43, 49],
                        bgBlue: [44, 49],
                        bgMagenta: [45, 49],
                        bgCyan: [46, 49],
                        bgWhite: [47, 49],
                        bgBlackBright: [100, 49],
                        bgRedBright: [101, 49],
                        bgGreenBright: [102, 49],
                        bgYellowBright: [103, 49],
                        bgBlueBright: [104, 49],
                        bgMagentaBright: [105, 49],
                        bgCyanBright: [106, 49],
                        bgWhiteBright: [107, 49],
                      },
                    };
                  u.color.grey = u.color.gray;
                  for (var a = 0, i = Object.keys(u); a < i.length; a++) {
                    for (
                      var o = i[a], s = u[o], l = 0, c = Object.keys(s);
                      l < c.length;
                      l++
                    ) {
                      var p = c[l],
                        f = s[p];
                      (u[p] = {
                        open: '['.concat(f[0], 'm'),
                        close: '['.concat(f[1], 'm'),
                      }),
                        (s[p] = u[p]),
                        e.set(f[0], f[1]);
                    }
                    Object.defineProperty(u, o, { value: s, enumerable: !1 }),
                      Object.defineProperty(u, 'codes', {
                        value: e,
                        enumerable: !1,
                      });
                  }
                  var d = function (e) {
                      return e;
                    },
                    h = function (e, t, n) {
                      return [e, t, n];
                    };
                  (u.color.close = '[39m'),
                    (u.bgColor.close = '[49m'),
                    (u.color.ansi = { ansi: t(d, 0) }),
                    (u.color.ansi256 = { ansi256: n(d, 0) }),
                    (u.color.ansi16m = { rgb: r(h, 0) }),
                    (u.bgColor.ansi = { ansi: t(d, 10) }),
                    (u.bgColor.ansi256 = { ansi256: n(d, 10) }),
                    (u.bgColor.ansi16m = { rgb: r(h, 10) });
                  for (var g = 0, m = Object.keys(Ri); g < m.length; g++) {
                    var y = m[g];
                    if ('object' == k(Ri[y])) {
                      var D = Ri[y];
                      'ansi16' === y && (y = 'ansi'),
                        'ansi16' in D &&
                          ((u.color.ansi[y] = t(D.ansi16, 0)),
                          (u.bgColor.ansi[y] = t(D.ansi16, 10))),
                        'ansi256' in D &&
                          ((u.color.ansi256[y] = n(D.ansi256, 0)),
                          (u.bgColor.ansi256[y] = n(D.ansi256, 10))),
                        'rgb' in D &&
                          ((u.color.ansi16m[y] = r(D.rgb, 0)),
                          (u.bgColor.ansi16m[y] = r(D.rgb, 10)));
                    }
                  }
                  return u;
                },
              });
            }),
            Vi = Je.env;
          function qi(e) {
            return (function (e) {
              return (
                0 !== e && {
                  level: e,
                  hasBasic: !0,
                  has256: e >= 2,
                  has16m: e >= 3,
                }
              );
            })(
              (function (e) {
                if (!1 === _i) return 0;
                if (
                  zr('color=16m') ||
                  zr('color=full') ||
                  zr('color=truecolor')
                )
                  return 3;
                if (zr('color=256')) return 2;
                if (e && !e.isTTY && !0 !== _i) return 0;
                var t = _i ? 1 : 0;
                if ('win32' === Je.platform) {
                  var n = Gr.release().split('.');
                  return Number(Je.versions.node.split('.')[0]) >= 8 &&
                    Number(n[0]) >= 10 &&
                    Number(n[2]) >= 10586
                    ? Number(n[2]) >= 14931
                      ? 3
                      : 2
                    : 1;
                }
                if ('CI' in Vi)
                  return ['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(
                    function (e) {
                      return e in Vi;
                    }
                  ) || 'codeship' === Vi.CI_NAME
                    ? 1
                    : t;
                if ('TEAMCITY_VERSION' in Vi)
                  return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(
                    Vi.TEAMCITY_VERSION
                  )
                    ? 1
                    : 0;
                if ('truecolor' === Vi.COLORTERM) return 3;
                if ('TERM_PROGRAM' in Vi) {
                  var r = parseInt(
                    (Vi.TERM_PROGRAM_VERSION || '').split('.')[0],
                    10
                  );
                  switch (Vi.TERM_PROGRAM) {
                    case 'iTerm.app':
                      return r >= 3 ? 3 : 2;
                    case 'Apple_Terminal':
                      return 2;
                  }
                }
                return /-256(color)?$/i.test(Vi.TERM)
                  ? 2
                  : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(
                      Vi.TERM
                    ) || 'COLORTERM' in Vi
                  ? 1
                  : (Vi.TERM, t);
              })(e)
            );
          }
          zr('no-color') || zr('no-colors') || zr('color=false')
            ? (_i = !1)
            : (zr('color') ||
                zr('colors') ||
                zr('color=true') ||
                zr('color=always')) &&
              (_i = !0),
            'FORCE_COLOR' in Vi &&
              (_i =
                0 === Vi.FORCE_COLOR.length ||
                0 !== parseInt(Vi.FORCE_COLOR, 10));
          var Wi = {
              supportsColor: qi,
              stdout: qi(Je.stdout),
              stderr: qi(Je.stderr),
            },
            Ui = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,
            Ji = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,
            zi = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,
            Gi = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,
            Hi = new Map([
              ['n', '\n'],
              ['r', '\r'],
              ['t', '\t'],
              ['b', '\b'],
              ['f', '\f'],
              ['v', '\v'],
              ['0', '\0'],
              ['\\', '\\'],
              ['e', ''],
              ['a', ''],
            ]);
          function Xi(e) {
            return ('u' === e[0] && 5 === e.length) ||
              ('x' === e[0] && 3 === e.length)
              ? String.fromCharCode(parseInt(e.slice(1), 16))
              : Hi.get(e) || e;
          }
          function Yi(e, t) {
            var n,
              r,
              u = [],
              a = g(t.trim().split(/\s*,\s*/g));
            try {
              for (a.s(); !(r = a.n()).done; ) {
                var i = r.value;
                if (isNaN(i)) {
                  if (!(n = i.match(zi)))
                    throw new Error(
                      'Invalid Chalk template style argument: '
                        .concat(i, " (in style '")
                        .concat(e, "')")
                    );
                  u.push(
                    n[2].replace(Gi, function (e, t, n) {
                      return t ? Xi(t) : n;
                    })
                  );
                } else u.push(Number(i));
              }
            } catch (o) {
              a.e(o);
            } finally {
              a.f();
            }
            return u;
          }
          function Ki(e) {
            Ji.lastIndex = 0;
            for (var t, n = []; null !== (t = Ji.exec(e)); ) {
              var r = t[1];
              if (t[2]) {
                var u = Yi(r, t[2]);
                n.push([r].concat(u));
              } else n.push([r]);
            }
            return n;
          }
          function Qi(e, t) {
            var n,
              r = {},
              u = g(t);
            try {
              for (u.s(); !(n = u.n()).done; ) {
                var a,
                  i = n.value,
                  o = g(i.styles);
                try {
                  for (o.s(); !(a = o.n()).done; ) {
                    var s = a.value;
                    r[s[0]] = i.inverse ? null : s.slice(1);
                  }
                } catch (d) {
                  o.e(d);
                } finally {
                  o.f();
                }
              }
            } catch (d) {
              u.e(d);
            } finally {
              u.f();
            }
            for (var l = e, c = 0, p = Object.keys(r); c < p.length; c++) {
              var f = p[c];
              if (Array.isArray(r[f])) {
                if (!(f in l))
                  throw new Error('Unknown Chalk style: '.concat(f));
                l = r[f].length > 0 ? l[f].apply(l, r[f]) : l[f];
              }
            }
            return l;
          }
          var Zi = function (e, t) {
              var n = [],
                r = [],
                u = [];
              if (
                (t.replace(Ui, function (t, a, i, o, s, l) {
                  if (a) u.push(Xi(a));
                  else if (o) {
                    var c = u.join('');
                    (u = []),
                      r.push(0 === n.length ? c : Qi(e, n)(c)),
                      n.push({ inverse: i, styles: Ki(o) });
                  } else if (s) {
                    if (0 === n.length)
                      throw new Error(
                        'Found extraneous } in Chalk template literal'
                      );
                    r.push(Qi(e, n)(u.join(''))), (u = []), n.pop();
                  } else u.push(l);
                }),
                r.push(u.join('')),
                n.length > 0)
              ) {
                var a = 'Chalk template literal is missing '
                  .concat(n.length, ' closing bracket')
                  .concat(1 === n.length ? '' : 's', ' (`}`)');
                throw new Error(a);
              }
              return r.join('');
            },
            eo = Xe(function (e) {
              var t = Wi.stdout,
                n =
                  'win32' === Je.platform &&
                  !(Je.env.TERM || '').toLowerCase().startsWith('xterm'),
                r = ['ansi', 'ansi', 'ansi256', 'ansi16m'],
                u = new Set(['gray']),
                a = Object.create(null);
              function i(e, n) {
                n = n || {};
                var r = t ? t.level : 0;
                (e.level = void 0 === n.level ? r : n.level),
                  (e.enabled = 'enabled' in n ? n.enabled : e.level > 0);
              }
              function o(e) {
                if (!this || !(this instanceof o) || this.template) {
                  var t = {};
                  return (
                    i(t, e),
                    (t.template = function () {
                      var e = [].slice.call(arguments);
                      return function (e, t) {
                        if (!Array.isArray(t))
                          return [].slice.call(arguments, 1).join(' ');
                        for (
                          var n = [].slice.call(arguments, 2),
                            r = [t.raw[0]],
                            u = 1;
                          u < t.length;
                          u++
                        )
                          r.push(String(n[u - 1]).replace(/[{}\\]/g, '\\$&')),
                            r.push(String(t.raw[u]));
                        return Zi(e, r.join(''));
                      }.apply(null, [t.template].concat(e));
                    }),
                    Object.setPrototypeOf(t, o.prototype),
                    Object.setPrototypeOf(t.template, t),
                    (t.template.constructor = o),
                    t.template
                  );
                }
                i(this, e);
              }
              n && ($i.blue.open = '[94m');
              for (
                var s = function () {
                    var e = c[l];
                    ($i[e].closeRe = new RegExp(Oi($i[e].close), 'g')),
                      (a[e] = {
                        get: function () {
                          var t = $i[e];
                          return v.call(
                            this,
                            this._styles ? this._styles.concat(t) : [t],
                            this._empty,
                            e
                          );
                        },
                      });
                  },
                  l = 0,
                  c = Object.keys($i);
                l < c.length;
                l++
              )
                s();
              (a.visible = {
                get: function () {
                  return v.call(this, this._styles || [], !0, 'visible');
                },
              }),
                ($i.color.closeRe = new RegExp(Oi($i.color.close), 'g'));
              for (
                var p = function () {
                    var e = d[f];
                    u.has(e) ||
                      (a[e] = {
                        get: function () {
                          var t = this.level;
                          return function () {
                            var n = {
                              open: $i.color[r[t]][e].apply(null, arguments),
                              close: $i.color.close,
                              closeRe: $i.color.closeRe,
                            };
                            return v.call(
                              this,
                              this._styles ? this._styles.concat(n) : [n],
                              this._empty,
                              e
                            );
                          };
                        },
                      });
                  },
                  f = 0,
                  d = Object.keys($i.color.ansi);
                f < d.length;
                f++
              )
                p();
              $i.bgColor.closeRe = new RegExp(Oi($i.bgColor.close), 'g');
              for (
                var h = function () {
                    var e = y[m];
                    if (u.has(e)) return 'continue';
                    a['bg' + e[0].toUpperCase() + e.slice(1)] = {
                      get: function () {
                        var t = this.level;
                        return function () {
                          var n = {
                            open: $i.bgColor[r[t]][e].apply(null, arguments),
                            close: $i.bgColor.close,
                            closeRe: $i.bgColor.closeRe,
                          };
                          return v.call(
                            this,
                            this._styles ? this._styles.concat(n) : [n],
                            this._empty,
                            e
                          );
                        };
                      },
                    };
                  },
                  m = 0,
                  y = Object.keys($i.bgColor.ansi);
                m < y.length;
                m++
              )
                h();
              var D = Object.defineProperties(function () {}, a);
              function v(e, t, n) {
                var r = function e() {
                  return E.apply(e, arguments);
                };
                (r._styles = e), (r._empty = t);
                var u = this;
                return (
                  Object.defineProperty(r, 'level', {
                    enumerable: !0,
                    get: function () {
                      return u.level;
                    },
                    set: function (e) {
                      u.level = e;
                    },
                  }),
                  Object.defineProperty(r, 'enabled', {
                    enumerable: !0,
                    get: function () {
                      return u.enabled;
                    },
                    set: function (e) {
                      u.enabled = e;
                    },
                  }),
                  (r.hasGrey = this.hasGrey || 'gray' === n || 'grey' === n),
                  (r.__proto__ = D),
                  r
                );
              }
              function E() {
                var e = arguments,
                  t = e.length,
                  r = String(arguments[0]);
                if (0 === t) return '';
                if (t > 1) for (var u = 1; u < t; u++) r += ' ' + e[u];
                if (!this.enabled || this.level <= 0 || !r)
                  return this._empty ? '' : r;
                var a = $i.dim.open;
                n && this.hasGrey && ($i.dim.open = '');
                var i,
                  o = g(this._styles.slice().reverse());
                try {
                  for (o.s(); !(i = o.n()).done; ) {
                    var s = i.value;
                    r = (r =
                      s.open + r.replace(s.closeRe, s.open) + s.close).replace(
                      /\r?\n/g,
                      ''.concat(s.close, '$&').concat(s.open)
                    );
                  }
                } catch (l) {
                  o.e(l);
                } finally {
                  o.f();
                }
                return ($i.dim.open = a), r;
              }
              Object.defineProperties(o.prototype, a),
                (e.exports = o()),
                (e.exports.supportsColor = t),
                (e.exports.default = e.exports);
            }),
            to = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.shouldHighlight = s),
                (t.getChalk = l),
                (t.default = function (e) {
                  var t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {};
                  return s(t)
                    ? (function (e, t) {
                        return t.replace(r.default, function () {
                          for (
                            var t = arguments.length, n = new Array(t), u = 0;
                            u < t;
                            u++
                          )
                            n[u] = arguments[u];
                          var s = (function (e) {
                              var t = C(e.slice(-2), 2),
                                n = t[0],
                                u = t[1],
                                a = (0, r.matchToToken)(e);
                              if ('name' === a.type) {
                                if (
                                  (0, ki.isKeyword)(a.value) ||
                                  (0, ki.isReservedWord)(a.value)
                                )
                                  return 'keyword';
                                if (
                                  i.test(a.value) &&
                                  ('<' === u[n - 1] ||
                                    '</' == u.substr(n - 2, 2))
                                )
                                  return 'jsx_tag';
                                if (a.value[0] !== a.value[0].toLowerCase())
                                  return 'capitalized';
                              }
                              return 'punctuator' === a.type && o.test(a.value)
                                ? 'bracket'
                                : 'invalid' !== a.type ||
                                  ('@' !== a.value && '#' !== a.value)
                                ? a.type
                                : 'punctuator';
                            })(n),
                            l = e[s];
                          return l
                            ? n[0]
                                .split(a)
                                .map(function (e) {
                                  return l(e);
                                })
                                .join('\n')
                            : n[0];
                        });
                      })(
                        (function (e) {
                          return {
                            keyword: e.cyan,
                            capitalized: e.yellow,
                            jsx_tag: e.yellow,
                            punctuator: e.yellow,
                            number: e.magenta,
                            string: e.green,
                            regex: e.magenta,
                            comment: e.grey,
                            invalid: e.white.bgRed.bold,
                          };
                        })(l(t)),
                        e
                      )
                    : e;
                });
              var n,
                r = (function (e) {
                  if (e && e.__esModule) return e;
                  if (
                    null === e ||
                    ('object' != k(e) && 'function' != typeof e)
                  )
                    return { default: e };
                  var t = (function () {
                    if ('function' != typeof WeakMap) return null;
                    var e = new WeakMap();
                    return (
                      function () {
                        return e;
                      },
                      e
                    );
                  })();
                  if (t && t.has(e)) return t.get(e);
                  var n = {},
                    r =
                      Object.defineProperty && Object.getOwnPropertyDescriptor;
                  for (var u in e)
                    if (Object.prototype.hasOwnProperty.call(e, u)) {
                      var a = r ? Object.getOwnPropertyDescriptor(e, u) : null;
                      a && (a.get || a.set)
                        ? Object.defineProperty(n, u, a)
                        : (n[u] = e[u]);
                    }
                  return (n.default = e), t && t.set(e, n), n;
                })(wi),
                u = (n = eo) && n.__esModule ? n : { default: n };
              var a = /\r\n|[\n\r\u2028\u2029]/,
                i = /^[a-z][\w-]*$/i,
                o = /^[()[\]{}]$/;
              function s(e) {
                return u.default.supportsColor || e.forceColor;
              }
              function l(e) {
                var t = u.default;
                return (
                  e.forceColor &&
                    (t = new u.default.constructor({ enabled: !0, level: 1 })),
                  t
                );
              }
            }),
            no = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.codeFrameColumns = a),
                (t.default = function (e, t, n) {
                  var u =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : {};
                  if (!r) {
                    r = !0;
                    var i =
                      'Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.';
                    Je.emitWarning
                      ? Je.emitWarning(i, 'DeprecationWarning')
                      : ((new Error(i).name = 'DeprecationWarning'),
                        console.warn(new Error(i)));
                  }
                  return a(
                    e,
                    { start: { column: (n = Math.max(n, 0)), line: t } },
                    u
                  );
                });
              var n = (function (e) {
                if (e && e.__esModule) return e;
                if (null === e || ('object' != k(e) && 'function' != typeof e))
                  return { default: e };
                var t = (function () {
                  if ('function' != typeof WeakMap) return null;
                  var e = new WeakMap();
                  return (
                    function () {
                      return e;
                    },
                    e
                  );
                })();
                if (t && t.has(e)) return t.get(e);
                var n = {},
                  r = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var u in e)
                  if (Object.prototype.hasOwnProperty.call(e, u)) {
                    var a = r ? Object.getOwnPropertyDescriptor(e, u) : null;
                    a && (a.get || a.set)
                      ? Object.defineProperty(n, u, a)
                      : (n[u] = e[u]);
                  }
                return (n.default = e), t && t.set(e, n), n;
              })(to);
              var r = !1,
                u = /\r\n|[\n\r\u2028\u2029]/;
              function a(e, t) {
                var r =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : {},
                  a =
                    (r.highlightCode || r.forceColor) &&
                    (0, n.shouldHighlight)(r),
                  i = (0, n.getChalk)(r),
                  o = (function (e) {
                    return {
                      gutter: e.grey,
                      marker: e.red.bold,
                      message: e.red.bold,
                    };
                  })(i),
                  s = function (e, t) {
                    return a ? e(t) : t;
                  },
                  l = (function (e, t, n) {
                    var r = Object.assign({ column: 0, line: -1 }, e.start),
                      u = Object.assign({}, r, e.end),
                      a = n || {},
                      i = a.linesAbove,
                      o = void 0 === i ? 2 : i,
                      s = a.linesBelow,
                      l = void 0 === s ? 3 : s,
                      c = r.line,
                      p = r.column,
                      f = u.line,
                      d = u.column,
                      h = Math.max(c - (o + 1), 0),
                      g = Math.min(t.length, f + l);
                    -1 === c && (h = 0), -1 === f && (g = t.length);
                    var m = f - c,
                      y = {};
                    if (m)
                      for (var D = 0; D <= m; D++) {
                        var v = D + c;
                        if (p)
                          if (0 === D) {
                            var E = t[v - 1].length;
                            y[v] = [p, E - p + 1];
                          } else if (D === m) y[v] = [0, d];
                          else {
                            var C = t[v - D].length;
                            y[v] = [0, C];
                          }
                        else y[v] = !0;
                      }
                    else y[c] = p === d ? !p || [p, 0] : [p, d - p];
                    return { start: h, end: g, markerLines: y };
                  })(t, e.split(u), r),
                  c = l.start,
                  p = l.end,
                  f = l.markerLines,
                  d = t.start && 'number' == typeof t.start.column,
                  h = String(p).length,
                  g = (a ? (0, n.default)(e, r) : e)
                    .split(u)
                    .slice(c, p)
                    .map(function (e, t) {
                      var n = c + 1 + t,
                        u = ' '.concat(n).slice(-h),
                        a = ' '.concat(u, ' | '),
                        i = f[n],
                        l = !f[n + 1];
                      if (i) {
                        var p = '';
                        if (Array.isArray(i)) {
                          var d = e
                              .slice(0, Math.max(i[0] - 1, 0))
                              .replace(/[^\t]/g, ' '),
                            g = i[1] || 1;
                          (p = [
                            '\n ',
                            s(o.gutter, a.replace(/\d/g, ' ')),
                            d,
                            s(o.marker, '^').repeat(g),
                          ].join('')),
                            l &&
                              r.message &&
                              (p += ' ' + s(o.message, r.message));
                        }
                        return [s(o.marker, '>'), s(o.gutter, a), e, p].join(
                          ''
                        );
                      }
                      return ' '.concat(s(o.gutter, a)).concat(e);
                    })
                    .join('\n');
                return (
                  r.message &&
                    !d &&
                    (g = ''
                      .concat(' '.repeat(h + 1))
                      .concat(r.message, '\n')
                      .concat(g)),
                  a ? i.reset(g) : g
                );
              }
            }),
            ro = Ye(Bn),
            uo = wr.ConfigError,
            ao = Ai,
            io = Fi,
            oo = Object.getOwnPropertyNames,
            so = Object.getOwnPropertyDescriptor;
          function lo(e) {
            var t,
              n = {},
              r = g(e.plugins);
            try {
              for (r.s(); !(t = r.n()).done; ) {
                var u = t.value;
                if (u.parsers) {
                  var a,
                    i = g(oo(u.parsers));
                  try {
                    for (i.s(); !(a = i.n()).done; ) {
                      var o = a.value;
                      Object.defineProperty(n, o, so(u.parsers, o));
                    }
                  } catch (s) {
                    i.e(s);
                  } finally {
                    i.f();
                  }
                }
              }
            } catch (s) {
              r.e(s);
            } finally {
              r.f();
            }
            return n;
          }
          function co(e, t) {
            if (((t = t || lo(e)), 'function' == typeof e.parser))
              return {
                parse: e.parser,
                astFormat: 'estree',
                locStart: ao,
                locEnd: io,
              };
            if ('string' == typeof e.parser) {
              if (Object.prototype.hasOwnProperty.call(t, e.parser))
                return t[e.parser];
              throw new uo(
                'Couldn\'t resolve parser "'.concat(
                  e.parser,
                  '". Parsers must be explicitly added to the standalone bundle.'
                )
              );
            }
          }
          var po = {
              parse: function (e, t) {
                var n = lo(t),
                  r = Object.keys(n).reduce(function (e, t) {
                    return Object.defineProperty(e, t, {
                      enumerable: !0,
                      get: function () {
                        return n[t].parse;
                      },
                    });
                  }, {}),
                  u = co(t, n);
                try {
                  return (
                    u.preprocess && (e = u.preprocess(e, t)),
                    { text: e, ast: u.parse(e, r, t) }
                  );
                } catch (t) {
                  var a = t.loc;
                  if (a) {
                    var i = no.codeFrameColumns;
                    throw (
                      ((t.codeFrame = i(e, a, { highlightCode: !0 })),
                      (t.message += '\n' + t.codeFrame),
                      t)
                    );
                  }
                  throw t.stack;
                }
              },
              resolveParser: co,
            },
            fo = wr.UndefinedParserError,
            ho = Ft,
            go = po.resolveParser,
            mo = {
              astFormat: 'estree',
              printer: {},
              originalText: void 0,
              locStart: null,
              locEnd: null,
            };
          function yo(e, t) {
            var n = ro.basename(e).toLowerCase(),
              r = ho({ plugins: t }).languages.filter(function (e) {
                return null !== e.since;
              }),
              u = r.find(function (e) {
                return (
                  (e.extensions &&
                    e.extensions.some(function (e) {
                      return n.endsWith(e);
                    })) ||
                  (e.filenames &&
                    e.filenames.some(function (e) {
                      return e.toLowerCase() === n;
                    }))
                );
              });
            if (!u && !n.includes('.')) {
              var a = (function (e) {
                if ('string' != typeof e) return '';
                var t;
                try {
                  t = xr.openSync(e, 'r');
                } catch (e) {
                  return '';
                }
                try {
                  var n = new Sr(t).next().toString('utf8'),
                    r = n.match(/^#!\/(?:usr\/)?bin\/env\s+(\S+)/);
                  if (r) return r[1];
                  var u = n.match(/^#!\/(?:usr\/(?:local\/)?)?bin\/(\S+)/);
                  return u ? u[1] : '';
                } catch (e) {
                  return '';
                } finally {
                  try {
                    xr.closeSync(t);
                  } catch (e) {}
                }
              })(e);
              u = r.find(function (e) {
                return e.interpreters && e.interpreters.includes(a);
              });
            }
            return u && u.parsers[0];
          }
          var Do = function (e, t) {
            t = t || {};
            var n = Object.assign({}, e),
              r = ho({
                plugins: e.plugins,
                showUnreleased: !0,
                showDeprecated: !0,
              }).options,
              u = Object.assign(
                {},
                mo,
                (function (e) {
                  for (
                    var t = -1, n = null == e ? 0 : e.length, r = {};
                    ++t < n;

                  ) {
                    var u = e[t];
                    r[u[0]] = u[1];
                  }
                  return r;
                })(
                  r
                    .filter(function (e) {
                      return void 0 !== e.default;
                    })
                    .map(function (e) {
                      return [e.name, e.default];
                    })
                )
              );
            if (!n.parser)
              if (n.filepath) {
                if (((n.parser = yo(n.filepath, n.plugins)), !n.parser))
                  throw new fo(
                    'No parser could be inferred for file: '.concat(n.filepath)
                  );
              } else
                (t.logger || console).warn(
                  "No parser and no filepath given, using 'babel' the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred."
                ),
                  (n.parser = 'babel');
            var a = go(
              vi(
                n,
                [
                  r.find(function (e) {
                    return 'parser' === e.name;
                  }),
                ],
                { passThrough: !0, logger: !1 }
              )
            );
            (n.astFormat = a.astFormat),
              (n.locEnd = a.locEnd),
              (n.locStart = a.locStart);
            var i = (function (e) {
              var t = e.astFormat;
              if (!t)
                throw new Error('getPlugin() requires astFormat to be set');
              var n = e.plugins.find(function (e) {
                return e.printers && e.printers[t];
              });
              if (!n)
                throw new Error(
                  'Couldn\'t find plugin for AST format "'.concat(t, '"')
                );
              return n;
            })(n);
            n.printer = i.printers[n.astFormat];
            var o = r
                .filter(function (e) {
                  return (
                    e.pluginDefaults && void 0 !== e.pluginDefaults[i.name]
                  );
                })
                .reduce(function (e, t) {
                  return Object.assign(
                    e,
                    E({}, t.name, t.pluginDefaults[i.name])
                  );
                }, {}),
              s = Object.assign({}, u, o);
            return (
              Object.keys(s).forEach(function (e) {
                null == n[e] && (n[e] = s[e]);
              }),
              'json' === n.parser && (n.trailingComma = 'none'),
              vi(n, r, Object.assign({ passThrough: Object.keys(mo) }, t))
            );
          };
          function vo() {}
          (vo.ok = function () {}), (vo.strictEqual = function () {});
          var Eo = Ye(Object.freeze({ __proto__: null, default: vo })),
            Co = vn.builders,
            bo = Co.concat,
            Ao = Co.line,
            Fo = Co.hardline,
            xo = Co.breakParent,
            So = Co.indent,
            wo = Co.lineSuffix,
            Bo = Co.join,
            To = Co.cursor,
            ko = Ut.hasNewline,
            No = Ut.skipNewline,
            Oo = Ut.skipSpaces,
            Po = Ut.isPreviousLineEmpty,
            Mo = Ut.addLeadingComment,
            Io = Ut.addDanglingComment,
            jo = Ut.addTrailingComment,
            Lo = Symbol('child-nodes');
          function _o(e, t, n) {
            if (e) {
              var r = t.printer,
                u = t.locStart,
                a = t.locEnd;
              if (n) {
                if (r.canAttachComment && r.canAttachComment(e)) {
                  var i;
                  for (
                    i = n.length - 1;
                    i >= 0 && !(u(n[i]) <= u(e) && a(n[i]) <= a(e));
                    --i
                  );
                  return void n.splice(i + 1, 0, e);
                }
              } else if (e[Lo]) return e[Lo];
              var o =
                (r.getCommentChildNodes && r.getCommentChildNodes(e, t)) ||
                ('object' == k(e) &&
                  Object.keys(e)
                    .filter(function (e) {
                      return (
                        'enclosingNode' !== e &&
                        'precedingNode' !== e &&
                        'followingNode' !== e &&
                        'tokens' !== e &&
                        'comments' !== e
                      );
                    })
                    .map(function (t) {
                      return e[t];
                    }));
              return o
                ? (n ||
                    Object.defineProperty(e, Lo, {
                      value: (n = []),
                      enumerable: !1,
                    }),
                  o.forEach(function (e) {
                    _o(e, t, n);
                  }),
                  n)
                : void 0;
            }
          }
          function Ro(e, t, n) {
            var r = e.length;
            if (0 !== r) {
              var u,
                a = e[0],
                i = a.precedingNode,
                o = a.followingNode,
                s = a.enclosingNode,
                l =
                  (n.printer.getGapRegex && n.printer.getGapRegex(s)) ||
                  /^[\s(]*$/,
                c = n.locStart(o);
              for (u = r; u > 0; --u) {
                var p = e[u - 1];
                Eo.strictEqual(p.precedingNode, i),
                  Eo.strictEqual(p.followingNode, o);
                var f = t.slice(n.locEnd(p), c);
                if (!l.test(f)) break;
                c = n.locStart(p);
              }
              e.forEach(function (e, t) {
                t < u ? jo(i, e) : Mo(o, e);
              });
              for (var d = 0, h = [i, o]; d < h.length; d++) {
                var g = h[d];
                g.comments &&
                  g.comments.length > 1 &&
                  g.comments.sort(function (e, t) {
                    return n.locStart(e) - n.locStart(t);
                  });
              }
              e.length = 0;
            }
          }
          function $o(e, t) {
            return (e.getValue().printed = !0), t.printer.printComment(e, t);
          }
          function Vo(e, t, n) {
            for (var r = n.locStart(t) - 1, u = 1; u < e.length; ++u)
              if (r < n.locStart(e[u])) return u - 1;
            return 0;
          }
          function qo(e, t, n) {
            return e.getNode() === t.cursorNode && e.getValue()
              ? bo([To, n, To])
              : n;
          }
          var Wo = {
            attach: function (e, t, n, r) {
              if (Array.isArray(e)) {
                var u = [],
                  a = r.locStart,
                  i = r.locEnd;
                e.forEach(function (o, s) {
                  if (
                    'json' === r.parser ||
                    'json5' === r.parser ||
                    '__js_expression' === r.parser ||
                    '__vue_expression' === r.parser
                  ) {
                    if (a(o) - a(t) <= 0) return void Mo(t, o);
                    if (i(o) - i(t) >= 0) return void jo(t, o);
                  }
                  !(function e(t, n, r) {
                    for (
                      var u,
                        a,
                        i = r.locStart,
                        o = r.locEnd,
                        s = i(n),
                        l = o(n),
                        c = _o(t, r),
                        p = 0,
                        f = c.length;
                      p < f;

                    ) {
                      var d = (p + f) >> 1,
                        h = c[d],
                        g = i(h),
                        m = o(h);
                      if (g <= s && l <= m)
                        return (n.enclosingNode = h), void e(h, n, r);
                      if (g <= s) (u = h), (p = d + 1);
                      else {
                        if (!(l <= g))
                          throw new Error(
                            'Comment location overlaps with node location'
                          );
                        (a = h), (f = d);
                      }
                    }
                    if (
                      n.enclosingNode &&
                      'TemplateLiteral' === n.enclosingNode.type
                    ) {
                      var y = n.enclosingNode.quasis,
                        D = Vo(y, n, r);
                      u && Vo(y, u, r) !== D && (u = null),
                        a && Vo(y, a, r) !== D && (a = null);
                    }
                    u && (n.precedingNode = u), a && (n.followingNode = a);
                  })(t, o, r);
                  var l = o.precedingNode,
                    c = o.enclosingNode,
                    p = o.followingNode,
                    f =
                      r.printer.handleComments &&
                      r.printer.handleComments.ownLine
                        ? r.printer.handleComments.ownLine
                        : function () {
                            return !1;
                          },
                    d =
                      r.printer.handleComments &&
                      r.printer.handleComments.endOfLine
                        ? r.printer.handleComments.endOfLine
                        : function () {
                            return !1;
                          },
                    h =
                      r.printer.handleComments &&
                      r.printer.handleComments.remaining
                        ? r.printer.handleComments.remaining
                        : function () {
                            return !1;
                          },
                    g = e.length - 1 === s;
                  if (ko(n, a(o), { backwards: !0 }))
                    f(o, n, r, t, g) ||
                      (p ? Mo(p, o) : l ? jo(l, o) : Io(c || t, o));
                  else if (ko(n, i(o)))
                    d(o, n, r, t, g) ||
                      (l ? jo(l, o) : p ? Mo(p, o) : Io(c || t, o));
                  else if (h(o, n, r, t, g));
                  else if (l && p) {
                    var m = u.length;
                    m > 0 &&
                      u[m - 1].followingNode !== o.followingNode &&
                      Ro(u, n, r),
                      u.push(o);
                  } else l ? jo(l, o) : p ? Mo(p, o) : Io(c || t, o);
                }),
                  Ro(u, n, r),
                  e.forEach(function (e) {
                    delete e.precedingNode,
                      delete e.enclosingNode,
                      delete e.followingNode;
                  });
              }
            },
            printComments: function (e, t, n, r) {
              var u = e.getValue(),
                a = t(e),
                i = u && u.comments;
              if (!i || 0 === i.length) return qo(e, n, a);
              var o = [],
                s = [r ? ';' : '', a];
              return (
                e.each(function (e) {
                  var t = e.getValue(),
                    r = t.leading,
                    u = t.trailing;
                  if (r) {
                    var a = (function (e, t) {
                      var n = e.getValue(),
                        r = $o(e, t);
                      if (!r) return '';
                      if (
                        t.printer.isBlockComment &&
                        t.printer.isBlockComment(n)
                      ) {
                        var u = ko(t.originalText, t.locEnd(n))
                          ? ko(t.originalText, t.locStart(n), { backwards: !0 })
                            ? Fo
                            : Ao
                          : ' ';
                        return bo([r, u]);
                      }
                      return bo([r, Fo]);
                    })(e, n);
                    if (!a) return;
                    o.push(a);
                    var i = n.originalText,
                      l = No(i, Oo(i, n.locEnd(t)));
                    !1 !== l && ko(i, l) && o.push(Fo);
                  } else
                    u &&
                      s.push(
                        (function (e, t) {
                          var n = e.getValue(),
                            r = $o(e, t);
                          if (!r) return '';
                          var u = t.printer,
                            a = t.originalText,
                            i = t.locStart,
                            o = u.isBlockComment && u.isBlockComment(n);
                          if (ko(a, i(n), { backwards: !0 })) {
                            var s = Po(a, n, i);
                            return wo(bo([Fo, s ? Fo : '', r]));
                          }
                          var l = bo([' ', r]);
                          return o || (l = bo([wo(l), xo])), l;
                        })(e, n)
                      );
                }, 'comments'),
                qo(e, n, bo(o.concat(s)))
              );
            },
            printDanglingComments: function (e, t, n, r) {
              var u = [],
                a = e.getValue();
              return a && a.comments
                ? (e.each(function (e) {
                    var n = e.getValue();
                    !n ||
                      n.leading ||
                      n.trailing ||
                      (r && !r(n)) ||
                      u.push($o(e, t));
                  }, 'comments'),
                  0 === u.length ? '' : n ? Bo(Fo, u) : So(bo([Fo, Bo(Fo, u)])))
                : '';
            },
            getSortedChildNodes: _o,
            ensureAllCommentsPrinted: function (e) {
              e &&
                e.forEach(function (e) {
                  if (!e.printed)
                    throw new Error(
                      'Comment "' +
                        e.value.trim() +
                        '" was not printed. Please report this error!'
                    );
                  delete e.printed;
                });
            },
          };
          function Uo(e, t) {
            var n = Jo(e.stack, t);
            return -1 === n ? null : e.stack[n];
          }
          function Jo(e, t) {
            for (var n = e.length - 1; n >= 0; n -= 2) {
              var r = e[n];
              if (r && !Array.isArray(r) && --t < 0) return n;
            }
            return -1;
          }
          var zo = (function () {
              function e(t) {
                w(this, e), (this.stack = [t]);
              }
              return (
                T(e, [
                  {
                    key: 'getName',
                    value: function () {
                      var e = this.stack,
                        t = e.length;
                      return t > 1 ? e[t - 2] : null;
                    },
                  },
                  {
                    key: 'getValue',
                    value: function () {
                      return Ee(this.stack);
                    },
                  },
                  {
                    key: 'getNode',
                    value: function () {
                      return Uo(
                        this,
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 0
                      );
                    },
                  },
                  {
                    key: 'getParentNode',
                    value: function () {
                      return Uo(
                        this,
                        (arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 0) + 1
                      );
                    },
                  },
                  {
                    key: 'call',
                    value: function (e) {
                      for (
                        var t = this.stack,
                          n = t.length,
                          r = Ee(t),
                          u = arguments.length,
                          a = new Array(u > 1 ? u - 1 : 0),
                          i = 1;
                        i < u;
                        i++
                      )
                        a[i - 1] = arguments[i];
                      for (var o = 0, s = a; o < s.length; o++) {
                        var l = s[o];
                        (r = r[l]), t.push(l, r);
                      }
                      var c = e(this);
                      return (t.length = n), c;
                    },
                  },
                  {
                    key: 'callParent',
                    value: function (e) {
                      var t,
                        n =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : 0,
                        r = Jo(this.stack, n + 1),
                        u = this.stack.splice(r + 1),
                        a = e(this);
                      return (t = this.stack).push.apply(t, m(u)), a;
                    },
                  },
                  {
                    key: 'each',
                    value: function (e) {
                      for (
                        var t = this.stack,
                          n = t.length,
                          r = Ee(t),
                          u = arguments.length,
                          a = new Array(u > 1 ? u - 1 : 0),
                          i = 1;
                        i < u;
                        i++
                      )
                        a[i - 1] = arguments[i];
                      for (var o = 0, s = a; o < s.length; o++) {
                        var l = s[o];
                        (r = r[l]), t.push(l, r);
                      }
                      for (var c = 0; c < r.length; ++c)
                        t.push(c, r[c]), e(this, c), (t.length -= 2);
                      t.length = n;
                    },
                  },
                  {
                    key: 'map',
                    value: function (e) {
                      for (
                        var t = [],
                          n = arguments.length,
                          r = new Array(n > 1 ? n - 1 : 0),
                          u = 1;
                        u < n;
                        u++
                      )
                        r[u - 1] = arguments[u];
                      return (
                        this.each.apply(
                          this,
                          [
                            function (n, r) {
                              t[r] = e(n, r);
                            },
                          ].concat(r)
                        ),
                        t
                      );
                    },
                  },
                  {
                    key: 'match',
                    value: function () {
                      for (
                        var e = this.stack.length - 1,
                          t = null,
                          n = this.stack[e--],
                          r = arguments.length,
                          u = new Array(r),
                          a = 0;
                        a < r;
                        a++
                      )
                        u[a] = arguments[a];
                      for (var i = 0, o = u; i < o.length; i++) {
                        var s = o[i];
                        if (void 0 === n) return !1;
                        var l = null;
                        if (
                          ('number' == typeof t &&
                            ((l = t),
                            (t = this.stack[e--]),
                            (n = this.stack[e--])),
                          s && !s(n, t, l))
                        )
                          return !1;
                        (t = this.stack[e--]), (n = this.stack[e--]);
                      }
                      return !0;
                    },
                  },
                ]),
                e
              );
            })(),
            Go = vn.utils.stripTrailingHardline,
            Ho = Do,
            Xo = {
              printSubtree: function (e, t, n, r) {
                if (n.printer.embed && 'auto' === n.embeddedLanguageFormatting)
                  return n.printer.embed(
                    e,
                    t,
                    function (e, t, u) {
                      return (function (e, t, n, r) {
                        var u = (arguments.length > 4 && void 0 !== arguments[4]
                            ? arguments[4]
                            : {}
                          ).stripTrailingHardline,
                          a = void 0 !== u && u,
                          i = Ho(
                            Object.assign({}, n, t, {
                              parentParser: n.parser,
                              embeddedInHtml: !(
                                !n.embeddedInHtml &&
                                'html' !== n.parser &&
                                'vue' !== n.parser &&
                                'angular' !== n.parser &&
                                'lwc' !== n.parser
                              ),
                              originalText: e,
                            }),
                            { passThrough: !0 }
                          ),
                          o = po.parse(e, i),
                          s = o.ast;
                        e = o.text;
                        var l = s.comments;
                        delete s.comments,
                          Wo.attach(l, s, e, i),
                          (i[Symbol.for('comments')] = l || []),
                          (i[Symbol.for('tokens')] = s.tokens || []);
                        var c = r(s, i);
                        return (
                          Wo.ensureAllCommentsPrinted(l),
                          a
                            ? 'string' == typeof c
                              ? c.replace(/(?:\r?\n)*$/, '')
                              : Go(c, !0)
                            : c
                        );
                      })(e, t, n, r, u);
                    },
                    n
                  );
              },
            },
            Yo = vn,
            Ko = Yo.builders,
            Qo = Ko.concat,
            Zo = Ko.hardline,
            es = Ko.addAlignmentToDoc,
            ts = Yo.utils;
          function ns(e, t) {
            var n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0,
              r = t.printer;
            r.preprocess && (e = r.preprocess(e, t));
            var u = new Map(),
              a = (function e(n, a) {
                var i,
                  o = n.getValue(),
                  s = o && 'object' == k(o) && void 0 === a;
                return s && u.has(o)
                  ? u.get(o)
                  : ((i =
                      r.willPrintOwnComments && r.willPrintOwnComments(n, t)
                        ? rs(n, t, e, a)
                        : Wo.printComments(
                            n,
                            function (n) {
                              return rs(n, t, e, a);
                            },
                            t,
                            a && a.needsSemi
                          )),
                    s && u.set(o, i),
                    i);
              })(new zo(e));
            return (
              n > 0 && (a = es(Qo([Zo, a]), n, t.tabWidth)),
              ts.propagateBreaks(a),
              a
            );
          }
          function rs(e, t, n, r) {
            Eo.ok(e instanceof zo);
            var u = e.getValue(),
              a = t.printer;
            if (a.hasPrettierIgnore && a.hasPrettierIgnore(e))
              return (function (e, t) {
                var n,
                  r = t.originalText,
                  u = t[Symbol.for('comments')],
                  a = t.locStart,
                  i = t.locEnd,
                  o = a(e),
                  s = i(e),
                  l = g(u);
                try {
                  for (l.s(); !(n = l.n()).done; ) {
                    var c = n.value;
                    a(c) >= o && i(c) <= s && (c.printed = !0);
                  }
                } catch (p) {
                  l.e(p);
                } finally {
                  l.f();
                }
                return r.slice(o, s);
              })(u, t);
            if (u)
              try {
                var i = Xo.printSubtree(e, n, t, ns);
                if (i) return i;
              } catch (e) {
                if (He.PRETTIER_DEBUG) throw e;
              }
            return a.print(e, t, n, r);
          }
          var us = ns;
          function as(e, t, n, r) {
            var u =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : [];
            if (!(t < n.locStart(e) || t > n.locEnd(e))) {
              var a,
                i = g(Wo.getSortedChildNodes(e, n));
              try {
                for (i.s(); !(a = i.n()).done; ) {
                  var o = as(a.value, t, n, r, [e].concat(m(u)));
                  if (o) return o;
                }
              } catch (s) {
                i.e(s);
              } finally {
                i.f();
              }
              return !r || r(e) ? { node: e, parentNodes: u } : void 0;
            }
          }
          var is = new Set([
              'ObjectExpression',
              'ArrayExpression',
              'StringLiteral',
              'NumericLiteral',
              'BooleanLiteral',
              'NullLiteral',
            ]),
            os = new Set([
              'OperationDefinition',
              'FragmentDefinition',
              'VariableDefinition',
              'TypeExtensionDefinition',
              'ObjectTypeDefinition',
              'FieldDefinition',
              'DirectiveDefinition',
              'EnumTypeDefinition',
              'EnumValueDefinition',
              'InputValueDefinition',
              'InputObjectTypeDefinition',
              'SchemaDefinition',
              'OperationTypeDefinition',
              'InterfaceTypeDefinition',
              'UnionTypeDefinition',
              'ScalarTypeDefinition',
            ]);
          function ss(e, t) {
            if (null == t) return !1;
            switch (e.parser) {
              case 'flow':
              case 'babel':
              case 'babel-flow':
              case 'babel-ts':
              case 'typescript':
              case 'espree':
              case 'meriyah':
                return (function (e) {
                  return (
                    'Directive' === e ||
                    'TypeAlias' === e ||
                    'TSExportAssignment' === e ||
                    e.startsWith('Declare') ||
                    e.startsWith('TSDeclare') ||
                    e.endsWith('Statement') ||
                    e.endsWith('Declaration')
                  );
                })(t.type);
              case 'json':
                return is.has(t.type);
              case 'graphql':
                return os.has(t.kind);
              case 'vue':
                return 'root' !== t.tag;
            }
            return !1;
          }
          var ls = {
              calculateRange: function (e, t, n) {
                var r,
                  u = e.slice(t.rangeStart, t.rangeEnd),
                  a = Math.max(t.rangeStart + u.search(/\S/), t.rangeStart);
                for (
                  r = t.rangeEnd;
                  r > t.rangeStart && !/\S/.test(e[r - 1]);
                  --r
                );
                var i = as(n, a, t, function (e) {
                    return ss(t, e);
                  }),
                  o = as(n, r, t, function (e) {
                    return ss(t, e);
                  });
                if (!i || !o) return { rangeStart: 0, rangeEnd: 0 };
                var s = (function (e, t, n) {
                    var r = e.node,
                      u = t.node;
                    if (r === u) return { startNode: r, endNode: u };
                    var a,
                      i = g(t.parentNodes);
                    try {
                      for (i.s(); !(a = i.n()).done; ) {
                        var o = a.value;
                        if (
                          !(
                            'Program' !== o.type &&
                            'File' !== o.type &&
                            n.locStart(o) >= n.locStart(e.node)
                          )
                        )
                          break;
                        u = o;
                      }
                    } catch (p) {
                      i.e(p);
                    } finally {
                      i.f();
                    }
                    var s,
                      l = g(e.parentNodes);
                    try {
                      for (l.s(); !(s = l.n()).done; ) {
                        var c = s.value;
                        if (
                          !(
                            'Program' !== c.type &&
                            'File' !== c.type &&
                            n.locEnd(c) <= n.locEnd(t.node)
                          )
                        )
                          break;
                        r = c;
                      }
                    } catch (p) {
                      l.e(p);
                    } finally {
                      l.f();
                    }
                    return { startNode: r, endNode: u };
                  })(i, o, t),
                  l = s.startNode,
                  c = s.endNode;
                return {
                  rangeStart: Math.min(t.locStart(l), t.locStart(c)),
                  rangeEnd: Math.max(t.locEnd(l), t.locEnd(c)),
                };
              },
              findNodeAtOffset: as,
            },
            cs = vn.printer.printDocToString,
            ps = vn.debug.printDocToDebug,
            fs = Ut.getAlignmentSize,
            ds = Jt,
            hs = zt,
            gs = Gt,
            ms = Ht,
            ys = Do,
            Ds = Symbol('cursor');
          function vs(e, t, n) {
            var r = t.comments;
            return (
              r && (delete t.comments, Wo.attach(r, t, e, n)),
              (n[Symbol.for('comments')] = r || []),
              (n[Symbol.for('tokens')] = t.tokens || []),
              (n.originalText = e),
              r
            );
          }
          function Es(e, t, n) {
            if (!e || !e.trim().length)
              return { formatted: '', cursorOffset: -1 };
            n = n || 0;
            var r = po.parse(e, t),
              u = r.ast,
              a = r.text;
            if (t.cursorOffset >= 0) {
              var i = ls.findNodeAtOffset(u, t.cursorOffset, t);
              i && i.node && (t.cursorNode = i.node);
            }
            var o = vs(a, u, t),
              s = us(u, t, n),
              l = cs(s, t);
            if ((Wo.ensureAllCommentsPrinted(o), n > 0)) {
              var c = l.formatted.trim();
              void 0 !== l.cursorNodeStart &&
                (l.cursorNodeStart -= l.formatted.indexOf(c)),
                (l.formatted = c + hs(t.endOfLine));
            }
            if (t.cursorOffset >= 0) {
              var p, f, d, h, m;
              if (
                (t.cursorNode && l.cursorNodeText
                  ? ((p = t.locStart(t.cursorNode)),
                    (f = a.slice(p, t.locEnd(t.cursorNode))),
                    (d = t.cursorOffset - p),
                    (h = l.cursorNodeStart),
                    (m = l.cursorNodeText))
                  : ((p = 0),
                    (f = a),
                    (d = t.cursorOffset),
                    (h = 0),
                    (m = l.formatted)),
                f === m)
              )
                return { formatted: l.formatted, cursorOffset: h + d };
              var y = f.split('');
              y.splice(d, 0, Ds);
              var D,
                v = m.split(''),
                E = h,
                C = g(ue.diffArrays(y, v));
              try {
                for (C.s(); !(D = C.n()).done; ) {
                  var b = D.value;
                  if (b.removed) {
                    if (b.value.includes(Ds)) break;
                  } else E += b.count;
                }
              } catch (A) {
                C.e(A);
              } finally {
                C.f();
              }
              return { formatted: l.formatted, cursorOffset: E };
            }
            return { formatted: l.formatted, cursorOffset: -1 };
          }
          function Cs(e, t, n) {
            return 'number' != typeof t || isNaN(t) || t < 0 || t > e.length
              ? n
              : t;
          }
          function bs(e, t) {
            var n = t.cursorOffset,
              r = t.rangeStart,
              u = t.rangeEnd;
            return (
              (n = Cs(e, n, -1)),
              (r = Cs(e, r, 0)),
              (u = Cs(e, u, e.length)),
              Object.assign({}, t, {
                cursorOffset: n,
                rangeStart: r,
                rangeEnd: u,
              })
            );
          }
          function As(e, t) {
            var n = bs(e, t),
              r = n.cursorOffset,
              u = n.rangeStart,
              a = n.rangeEnd,
              i = n.endOfLine,
              o = '\ufeff' === e.charAt(0);
            if (
              (o && ((e = e.slice(1)), r--, u--, a--),
              'auto' === i && (i = ds(e)),
              e.includes('\r'))
            ) {
              var s = function (t) {
                return gs(e.slice(0, Math.max(t, 0)), '\r\n');
              };
              (r -= s(r)), (u -= s(u)), (a -= s(a)), (e = ms(e));
            }
            return {
              hasBOM: o,
              text: e,
              options: bs(
                e,
                Object.assign({}, t, {
                  cursorOffset: r,
                  rangeStart: u,
                  rangeEnd: a,
                  endOfLine: i,
                })
              ),
            };
          }
          function Fs(e, t) {
            var n,
              r = As(e, ys(t)),
              u = r.hasBOM,
              a = r.text,
              i = r.options,
              o = po.resolveParser(i),
              s = !o.hasPragma || o.hasPragma(a);
            return i.requirePragma && !s
              ? { formatted: e, cursorOffset: t.cursorOffset }
              : (i.rangeStart > 0 || i.rangeEnd < a.length
                  ? (n = (function (e, t) {
                      var n = po.parse(e, t),
                        r = n.ast,
                        u = n.text,
                        a = ls.calculateRange(u, t, r),
                        i = a.rangeStart,
                        o = a.rangeEnd,
                        s = u.slice(i, o),
                        l = Math.min(i, u.lastIndexOf('\n', i) + 1),
                        c = u.slice(l, i).match(/^\s*/)[0],
                        p = fs(c, t.tabWidth),
                        f = Es(
                          s,
                          Object.assign({}, t, {
                            rangeStart: 0,
                            rangeEnd: 1 / 0,
                            cursorOffset:
                              t.cursorOffset > i && t.cursorOffset < o
                                ? t.cursorOffset - i
                                : -1,
                            endOfLine: 'lf',
                          }),
                          p
                        ),
                        d = f.formatted.trimEnd(),
                        h = t.cursorOffset;
                      h >= o
                        ? (h = t.cursorOffset + (d.length - s.length))
                        : f.cursorOffset >= 0 && (h = f.cursorOffset + i);
                      var g = u.slice(0, i) + d + u.slice(o);
                      if ('lf' !== t.endOfLine) {
                        var m = hs(t.endOfLine);
                        h >= 0 &&
                          '\r\n' === m &&
                          (h += gs(g.slice(0, h), '\n')),
                          (g = g.replace(/\n/g, m));
                      }
                      return { formatted: g, cursorOffset: h };
                    })(a, i))
                  : (!s &&
                      i.insertPragma &&
                      i.printer.insertPragma &&
                      (a = i.printer.insertPragma(a)),
                    (n = Es(a, i))),
                u &&
                  ((n.formatted = '\ufeff' + n.formatted),
                  n.cursorOffset >= 0 && n.cursorOffset++),
                n);
          }
          var xs = Fs,
            Ss = function (e, t, n) {
              var r = As(e, ys(t)),
                u = r.text,
                a = r.options,
                i = po.parse(u, a);
              return (
                n &&
                  (i.ast = (function e(t, n, r) {
                    if (Array.isArray(t))
                      return t
                        .map(function (t) {
                          return e(t, n, r);
                        })
                        .filter(Boolean);
                    if (!t || 'object' != k(t)) return t;
                    var u,
                      a = n.printer.massageAstNode;
                    u =
                      a && a.ignoredProperties
                        ? a.ignoredProperties
                        : new Set();
                    for (
                      var i = {}, o = 0, s = Object.keys(t);
                      o < s.length;
                      o++
                    ) {
                      var l = s[o];
                      u.has(l) ||
                        'function' == typeof t[l] ||
                        (i[l] = e(t[l], n, t));
                    }
                    if (a) {
                      var c = a(t, i, r);
                      if (null === c) return;
                      if (c) return c;
                    }
                    return i;
                  })(i.ast, a)),
                i
              );
            },
            ws = function (e, t) {
              t = ys(t);
              var n = us(e, t);
              return cs(n, t);
            },
            Bs = function (e, t) {
              return Fs(ps(e), Object.assign({}, t, { parser: 'babel' }))
                .formatted;
            },
            Ts = function (e, t) {
              t = ys(t);
              var n = po.parse(e, t),
                r = n.ast;
              return vs(n.text, r, t), us(r, t);
            },
            ks = function (e, t) {
              return cs(e, ys(t));
            },
            Ns = {
              getMaxContinuousCount: Ut.getMaxContinuousCount,
              getStringWidth: Ut.getStringWidth,
              getAlignmentSize: Ut.getAlignmentSize,
              getIndentSize: Ut.getIndentSize,
              skip: Ut.skip,
              skipWhitespace: Ut.skipWhitespace,
              skipSpaces: Ut.skipSpaces,
              skipNewline: Ut.skipNewline,
              skipToLineEnd: Ut.skipToLineEnd,
              skipEverythingButNewLine: Ut.skipEverythingButNewLine,
              skipInlineComment: Ut.skipInlineComment,
              skipTrailingComment: Ut.skipTrailingComment,
              hasNewline: Ut.hasNewline,
              hasNewlineInRange: Ut.hasNewlineInRange,
              hasSpaces: Ut.hasSpaces,
              isNextLineEmpty: Ut.isNextLineEmpty,
              isNextLineEmptyAfterIndex: Ut.isNextLineEmptyAfterIndex,
              isPreviousLineEmpty: Ut.isPreviousLineEmpty,
              getNextNonSpaceNonCommentCharacterIndex:
                Ut.getNextNonSpaceNonCommentCharacterIndex,
              makeString: Ut.makeString,
              addLeadingComment: Ut.addLeadingComment,
              addDanglingComment: Ut.addDanglingComment,
              addTrailingComment: Ut.addTrailingComment,
            },
            Os = function (t, n) {
              var r = t.languageId,
                u = e(t, ['languageId']);
              return Object.assign({ linguistLanguageId: r }, u, n(t));
            },
            Ps = Xe(function (e) {
              !(function () {
                function t(e) {
                  if (null == e) return !1;
                  switch (e.type) {
                    case 'BlockStatement':
                    case 'BreakStatement':
                    case 'ContinueStatement':
                    case 'DebuggerStatement':
                    case 'DoWhileStatement':
                    case 'EmptyStatement':
                    case 'ExpressionStatement':
                    case 'ForInStatement':
                    case 'ForStatement':
                    case 'IfStatement':
                    case 'LabeledStatement':
                    case 'ReturnStatement':
                    case 'SwitchStatement':
                    case 'ThrowStatement':
                    case 'TryStatement':
                    case 'VariableDeclaration':
                    case 'WhileStatement':
                    case 'WithStatement':
                      return !0;
                  }
                  return !1;
                }
                function n(e) {
                  switch (e.type) {
                    case 'IfStatement':
                      return null != e.alternate ? e.alternate : e.consequent;
                    case 'LabeledStatement':
                    case 'ForStatement':
                    case 'ForInStatement':
                    case 'WhileStatement':
                    case 'WithStatement':
                      return e.body;
                  }
                  return null;
                }
                e.exports = {
                  isExpression: function (e) {
                    if (null == e) return !1;
                    switch (e.type) {
                      case 'ArrayExpression':
                      case 'AssignmentExpression':
                      case 'BinaryExpression':
                      case 'CallExpression':
                      case 'ConditionalExpression':
                      case 'FunctionExpression':
                      case 'Identifier':
                      case 'Literal':
                      case 'LogicalExpression':
                      case 'MemberExpression':
                      case 'NewExpression':
                      case 'ObjectExpression':
                      case 'SequenceExpression':
                      case 'ThisExpression':
                      case 'UnaryExpression':
                      case 'UpdateExpression':
                        return !0;
                    }
                    return !1;
                  },
                  isStatement: t,
                  isIterationStatement: function (e) {
                    if (null == e) return !1;
                    switch (e.type) {
                      case 'DoWhileStatement':
                      case 'ForInStatement':
                      case 'ForStatement':
                      case 'WhileStatement':
                        return !0;
                    }
                    return !1;
                  },
                  isSourceElement: function (e) {
                    return (
                      t(e) || (null != e && 'FunctionDeclaration' === e.type)
                    );
                  },
                  isProblematicIfStatement: function (e) {
                    var t;
                    if ('IfStatement' !== e.type) return !1;
                    if (null == e.alternate) return !1;
                    t = e.consequent;
                    do {
                      if ('IfStatement' === t.type && null == t.alternate)
                        return !0;
                      t = n(t);
                    } while (t);
                    return !1;
                  },
                  trailingStatement: n,
                };
              })();
            }),
            Ms = Xe(function (e) {
              !(function () {
                var t, n, r, u, a, i;
                function o(e) {
                  return e <= 65535
                    ? String.fromCharCode(e)
                    : String.fromCharCode(
                        Math.floor((e - 65536) / 1024) + 55296
                      ) + String.fromCharCode(((e - 65536) % 1024) + 56320);
                }
                for (
                  n = {
                    NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
                    NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
                  },
                    t = {
                      NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
                      NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/,
                    },
                    r = [
                      5760,
                      8192,
                      8193,
                      8194,
                      8195,
                      8196,
                      8197,
                      8198,
                      8199,
                      8200,
                      8201,
                      8202,
                      8239,
                      8287,
                      12288,
                      65279,
                    ],
                    u = new Array(128),
                    i = 0;
                  i < 128;
                  ++i
                )
                  u[i] =
                    (i >= 97 && i <= 122) ||
                    (i >= 65 && i <= 90) ||
                    36 === i ||
                    95 === i;
                for (a = new Array(128), i = 0; i < 128; ++i)
                  a[i] =
                    (i >= 97 && i <= 122) ||
                    (i >= 65 && i <= 90) ||
                    (i >= 48 && i <= 57) ||
                    36 === i ||
                    95 === i;
                e.exports = {
                  isDecimalDigit: function (e) {
                    return 48 <= e && e <= 57;
                  },
                  isHexDigit: function (e) {
                    return (
                      (48 <= e && e <= 57) ||
                      (97 <= e && e <= 102) ||
                      (65 <= e && e <= 70)
                    );
                  },
                  isOctalDigit: function (e) {
                    return e >= 48 && e <= 55;
                  },
                  isWhiteSpace: function (e) {
                    return (
                      32 === e ||
                      9 === e ||
                      11 === e ||
                      12 === e ||
                      160 === e ||
                      (e >= 5760 && r.indexOf(e) >= 0)
                    );
                  },
                  isLineTerminator: function (e) {
                    return 10 === e || 13 === e || 8232 === e || 8233 === e;
                  },
                  isIdentifierStartES5: function (e) {
                    return e < 128
                      ? u[e]
                      : n.NonAsciiIdentifierStart.test(o(e));
                  },
                  isIdentifierPartES5: function (e) {
                    return e < 128 ? a[e] : n.NonAsciiIdentifierPart.test(o(e));
                  },
                  isIdentifierStartES6: function (e) {
                    return e < 128
                      ? u[e]
                      : t.NonAsciiIdentifierStart.test(o(e));
                  },
                  isIdentifierPartES6: function (e) {
                    return e < 128 ? a[e] : t.NonAsciiIdentifierPart.test(o(e));
                  },
                };
              })();
            }),
            Is = Xe(function (e) {
              !(function () {
                var t = Ms;
                function n(e, t) {
                  return !(!t && 'yield' === e) && r(e, t);
                }
                function r(e, t) {
                  if (
                    t &&
                    (function (e) {
                      switch (e) {
                        case 'implements':
                        case 'interface':
                        case 'package':
                        case 'private':
                        case 'protected':
                        case 'public':
                        case 'static':
                        case 'let':
                          return !0;
                        default:
                          return !1;
                      }
                    })(e)
                  )
                    return !0;
                  switch (e.length) {
                    case 2:
                      return 'if' === e || 'in' === e || 'do' === e;
                    case 3:
                      return (
                        'var' === e || 'for' === e || 'new' === e || 'try' === e
                      );
                    case 4:
                      return (
                        'this' === e ||
                        'else' === e ||
                        'case' === e ||
                        'void' === e ||
                        'with' === e ||
                        'enum' === e
                      );
                    case 5:
                      return (
                        'while' === e ||
                        'break' === e ||
                        'catch' === e ||
                        'throw' === e ||
                        'const' === e ||
                        'yield' === e ||
                        'class' === e ||
                        'super' === e
                      );
                    case 6:
                      return (
                        'return' === e ||
                        'typeof' === e ||
                        'delete' === e ||
                        'switch' === e ||
                        'export' === e ||
                        'import' === e
                      );
                    case 7:
                      return (
                        'default' === e || 'finally' === e || 'extends' === e
                      );
                    case 8:
                      return (
                        'function' === e || 'continue' === e || 'debugger' === e
                      );
                    case 10:
                      return 'instanceof' === e;
                    default:
                      return !1;
                  }
                }
                function u(e, t) {
                  return (
                    'null' === e || 'true' === e || 'false' === e || n(e, t)
                  );
                }
                function a(e, t) {
                  return (
                    'null' === e || 'true' === e || 'false' === e || r(e, t)
                  );
                }
                function i(e) {
                  var n, r, u;
                  if (0 === e.length) return !1;
                  if (((u = e.charCodeAt(0)), !t.isIdentifierStartES5(u)))
                    return !1;
                  for (n = 1, r = e.length; n < r; ++n)
                    if (((u = e.charCodeAt(n)), !t.isIdentifierPartES5(u)))
                      return !1;
                  return !0;
                }
                function o(e) {
                  var n, r, u, a, i;
                  if (0 === e.length) return !1;
                  for (
                    i = t.isIdentifierStartES6, n = 0, r = e.length;
                    n < r;
                    ++n
                  ) {
                    if (55296 <= (u = e.charCodeAt(n)) && u <= 56319) {
                      if (++n >= r) return !1;
                      if (!(56320 <= (a = e.charCodeAt(n)) && a <= 57343))
                        return !1;
                      u = 1024 * (u - 55296) + (a - 56320) + 65536;
                    }
                    if (!i(u)) return !1;
                    i = t.isIdentifierPartES6;
                  }
                  return !0;
                }
                e.exports = {
                  isKeywordES5: n,
                  isKeywordES6: r,
                  isReservedWordES5: u,
                  isReservedWordES6: a,
                  isRestrictedWord: function (e) {
                    return 'eval' === e || 'arguments' === e;
                  },
                  isIdentifierNameES5: i,
                  isIdentifierNameES6: o,
                  isIdentifierES5: function (e, t) {
                    return i(e) && !u(e, t);
                  },
                  isIdentifierES6: function (e, t) {
                    return o(e) && !a(e, t);
                  },
                };
              })();
            }),
            js = Xe(function (e, t) {
              (t.ast = Ps), (t.code = Ms), (t.keyword = Is);
            }).keyword.isIdentifierNameES5,
            Ls = Ut.getLast,
            _s = Ut.hasNewline,
            Rs = Ut.hasNewlineInRange,
            $s = Ut.skipWhitespace,
            Vs = Ai,
            qs = Fi,
            Ws = xi,
            Us = '(?:(?=.)\\s)',
            Js = new RegExp('^'.concat(Us, '*:')),
            zs = new RegExp('^'.concat(Us, '*::'));
          function Gs(e, t) {
            if (!e || 'object' != k(e)) return !1;
            if (Array.isArray(e))
              return e.some(function (e) {
                return Gs(e, t);
              });
            var n = t(e);
            return 'boolean' == typeof n
              ? n
              : Object.keys(e).some(function (n) {
                  return Gs(e[n], t);
                });
          }
          function Hs(e) {
            return (
              'AssignmentExpression' === e.type ||
              'BinaryExpression' === e.type ||
              'LogicalExpression' === e.type ||
              'NGPipeExpression' === e.type ||
              'ConditionalExpression' === e.type ||
              'CallExpression' === e.type ||
              'OptionalCallExpression' === e.type ||
              'MemberExpression' === e.type ||
              'OptionalMemberExpression' === e.type ||
              'SequenceExpression' === e.type ||
              'TaggedTemplateExpression' === e.type ||
              'BindExpression' === e.type ||
              ('UpdateExpression' === e.type && !e.prefix) ||
              'TSAsExpression' === e.type ||
              'TSNonNullExpression' === e.type
            );
          }
          function Xs(e) {
            return (
              'Block' === e.type ||
              'CommentBlock' === e.type ||
              'MultiLine' === e.type
            );
          }
          var Ys = new Set([
            'ExportDefaultDeclaration',
            'ExportDefaultSpecifier',
            'DeclareExportDeclaration',
            'ExportNamedDeclaration',
            'ExportAllDeclaration',
          ]);
          function Ks(e) {
            return e && Ys.has(e.type);
          }
          function Qs(e) {
            return (
              'BooleanLiteral' === e.type ||
              'DirectiveLiteral' === e.type ||
              'Literal' === e.type ||
              'NullLiteral' === e.type ||
              'NumericLiteral' === e.type ||
              'BigIntLiteral' === e.type ||
              'DecimalLiteral' === e.type ||
              'RegExpLiteral' === e.type ||
              'StringLiteral' === e.type ||
              'TemplateLiteral' === e.type ||
              'TSTypeLiteral' === e.type ||
              'JSXText' === e.type
            );
          }
          function Zs(e) {
            return (
              'NumericLiteral' === e.type ||
              ('Literal' === e.type && 'number' == typeof e.value)
            );
          }
          function el(e) {
            return (
              'StringLiteral' === e.type ||
              ('Literal' === e.type && 'string' == typeof e.value)
            );
          }
          function tl(e) {
            return (
              'FunctionExpression' === e.type ||
              'ArrowFunctionExpression' === e.type
            );
          }
          function nl(e) {
            return !(
              ('CallExpression' !== e.type &&
                'OptionalCallExpression' !== e.type) ||
              'Identifier' !== e.callee.type ||
              ('async' !== e.callee.name &&
                'inject' !== e.callee.name &&
                'fakeAsync' !== e.callee.name)
            );
          }
          function rl(e) {
            return 'JSXElement' === e.type || 'JSXFragment' === e.type;
          }
          function ul(e) {
            return 'get' === e.kind || 'set' === e.kind;
          }
          function al(e) {
            return ul(e) || Ws(e, e.value);
          }
          var il = new Set([
              'BinaryExpression',
              'LogicalExpression',
              'NGPipeExpression',
            ]),
            ol = new Set([
              'AnyTypeAnnotation',
              'TSAnyKeyword',
              'NullLiteralTypeAnnotation',
              'TSNullKeyword',
              'ThisTypeAnnotation',
              'TSThisType',
              'NumberTypeAnnotation',
              'TSNumberKeyword',
              'VoidTypeAnnotation',
              'TSVoidKeyword',
              'BooleanTypeAnnotation',
              'TSBooleanKeyword',
              'BigIntTypeAnnotation',
              'TSBigIntKeyword',
              'SymbolTypeAnnotation',
              'TSSymbolKeyword',
              'StringTypeAnnotation',
              'TSStringKeyword',
              'BooleanLiteralTypeAnnotation',
              'StringLiteralTypeAnnotation',
              'BigIntLiteralTypeAnnotation',
              'NumberLiteralTypeAnnotation',
              'TSLiteralType',
              'TSTemplateLiteralType',
              'EmptyTypeAnnotation',
              'MixedTypeAnnotation',
              'TSNeverKeyword',
              'TSObjectKeyword',
              'TSUndefinedKeyword',
              'TSUnknownKeyword',
            ]),
            sl = /^(skip|[fx]?(it|describe|test))$/;
          function ll(e) {
            return (
              'CallExpression' === e.type || 'OptionalCallExpression' === e.type
            );
          }
          var cl = new RegExp('([ \n\r\t]+)'),
            pl = new RegExp('[^ \n\r\t]');
          function fl(e) {
            return Qs(e) && (pl.test(ml(e)) || !/\n/.test(ml(e)));
          }
          function dl(e, t) {
            return rl(t)
              ? Sl(t)
              : t.comments &&
                  t.comments.some(function (t) {
                    return t.leading && _s(e, qs(t));
                  });
          }
          function hl(e) {
            return /^(\d+|\d+\.\d+)$/.test(e);
          }
          function gl(e) {
            return e.quasis.some(function (e) {
              return e.value.raw.includes('\n');
            });
          }
          function ml(e) {
            return e.extra ? e.extra.raw : e.raw;
          }
          var yl = { '==': !0, '!=': !0, '===': !0, '!==': !0 },
            Dl = { '*': !0, '/': !0, '%': !0 },
            vl = { '>>': !0, '>>>': !0, '<<': !0 },
            El = {};
          function Cl(e) {
            return El[e];
          }
          [
            ['|>'],
            ['??'],
            ['||'],
            ['&&'],
            ['|'],
            ['^'],
            ['&'],
            ['==', '===', '!=', '!=='],
            ['<', '>', '<=', '>=', 'in', 'instanceof'],
            ['>>', '<<', '>>>'],
            ['+', '-'],
            ['*', '/', '%'],
            ['**'],
          ].forEach(function (e, t) {
            e.forEach(function (e) {
              El[e] = t;
            });
          });
          var bl = new WeakMap();
          function Al(e) {
            if (bl.has(e)) return bl.get(e);
            var t = [];
            return (
              e.this && t.push(e.this),
              Array.isArray(e.parameters)
                ? t.push.apply(t, m(e.parameters))
                : Array.isArray(e.params) && t.push.apply(t, m(e.params)),
              e.rest && t.push(e.rest),
              bl.set(e, t),
              t
            );
          }
          var Fl = new WeakMap();
          function xl(e) {
            return 'prettier-ignore' === e.value.trim();
          }
          function Sl(e) {
            return (
              e &&
              ((e.comments &&
                e.comments.length > 0 &&
                e.comments.some(function (e) {
                  return xl(e) && !e.unignore;
                })) ||
                e.prettierIgnore)
            );
          }
          function wl(e) {
            return Sl(e.getValue());
          }
          var Bl = {
              classChildNeedsASIProtection: function (e) {
                if (e) {
                  if (e.static || e.accessibility) return !1;
                  if (!e.computed) {
                    var t = e.key && e.key.name;
                    if ('in' === t || 'instanceof' === t) return !0;
                  }
                  switch (e.type) {
                    case 'ClassProperty':
                    case 'FieldDefinition':
                    case 'TSAbstractClassProperty':
                      return e.computed;
                    case 'MethodDefinition':
                    case 'TSAbstractMethodDefinition':
                    case 'ClassMethod':
                    case 'ClassPrivateMethod':
                      var n = e.value ? e.value.async : e.async,
                        r = e.value ? e.value.generator : e.generator;
                      return !(
                        n ||
                        'get' === e.kind ||
                        'set' === e.kind ||
                        (!e.computed && !r)
                      );
                    case 'TSIndexSignature':
                      return !0;
                    default:
                      return !1;
                  }
                }
              },
              classPropMayCauseASIProblems: function (e) {
                var t = e.getNode();
                if ('ClassProperty' !== t.type && 'FieldDefinition' !== t.type)
                  return !1;
                var n = t.key && t.key.name;
                return (
                  !(
                    ('static' !== n && 'get' !== n && 'set' !== n) ||
                    t.value ||
                    t.typeAnnotation
                  ) || void 0
                );
              },
              getFunctionParameters: Al,
              iterateFunctionParametersPath: function (e, t) {
                var n = e.getValue(),
                  r = 0,
                  u = function (e) {
                    return t(e, r++);
                  };
                n.this && e.call(u, 'this'),
                  Array.isArray(n.parameters)
                    ? e.each(u, 'parameters')
                    : Array.isArray(n.params) && e.each(u, 'params'),
                  n.rest && e.call(u, 'rest');
              },
              getCallArguments: function (e) {
                if (Fl.has(e)) return Fl.get(e);
                var t =
                  'ImportExpression' === e.type ? [e.source] : e.arguments;
                return Fl.set(e, t), t;
              },
              iterateCallArgumentsPath: function (e, t) {
                'ImportExpression' === e.getValue().type
                  ? e.call(function (e) {
                      return t(e, 0);
                    }, 'source')
                  : e.each(t, 'arguments');
              },
              hasRestParameter: function (e) {
                if (e.rest) return !0;
                var t = Al(e);
                return t.length > 0 && 'RestElement' === Ls(t).type;
              },
              getLeftSidePathName: function (e, t) {
                if (t.expressions) return ['expressions', 0];
                if (t.left) return ['left'];
                if (t.test) return ['test'];
                if (t.object) return ['object'];
                if (t.callee) return ['callee'];
                if (t.tag) return ['tag'];
                if (t.argument) return ['argument'];
                if (t.expression) return ['expression'];
                throw new Error('Unexpected node has no left side.');
              },
              getParentExportDeclaration: function (e) {
                var t = e.getParentNode();
                return 'declaration' === e.getName() && Ks(t) ? t : null;
              },
              getTypeScriptMappedTypeModifier: function (e, t) {
                return '+' === e ? '+' + t : '-' === e ? '-' + t : t;
              },
              hasDanglingComments: function (e) {
                return (
                  e.comments &&
                  e.comments.some(function (e) {
                    return !e.leading && !e.trailing;
                  })
                );
              },
              hasFlowAnnotationComment: function (e) {
                return e && Xs(e[0]) && zs.test(e[0].value);
              },
              hasFlowShorthandAnnotationComment: function (e) {
                return (
                  e.extra &&
                  e.extra.parenthesized &&
                  e.trailingComments &&
                  Xs(e.trailingComments[0]) &&
                  Js.test(e.trailingComments[0].value)
                );
              },
              hasLeadingComment: function (e) {
                return (
                  e.comments &&
                  e.comments.some(function (e) {
                    return e.leading;
                  })
                );
              },
              hasLeadingOwnLineComment: dl,
              hasNakedLeftSide: Hs,
              hasNewlineBetweenOrAfterDecorators: function (e, t) {
                return (
                  Rs(
                    t.originalText,
                    Vs(e.decorators[0]),
                    qs(Ls(e.decorators))
                  ) || _s(t.originalText, qs(Ls(e.decorators)))
                );
              },
              hasNgSideEffect: function (e) {
                return Gs(e.getValue(), function (e) {
                  switch (e.type) {
                    case void 0:
                      return !1;
                    case 'CallExpression':
                    case 'OptionalCallExpression':
                    case 'AssignmentExpression':
                      return !0;
                  }
                });
              },
              hasNode: Gs,
              hasPrettierIgnore: function (e) {
                return (
                  wl(e) ||
                  (function (e) {
                    var t = e.getValue(),
                      n = e.getParentNode();
                    if (!(n && t && rl(t) && rl(n))) return !1;
                    for (var r = null, u = n.children.indexOf(t); u > 0; u--) {
                      var a = n.children[u - 1];
                      if ('JSXText' !== a.type || fl(a)) {
                        r = a;
                        break;
                      }
                    }
                    return (
                      r &&
                      'JSXExpressionContainer' === r.type &&
                      'JSXEmptyExpression' === r.expression.type &&
                      r.expression.comments &&
                      r.expression.comments.some(function (e) {
                        return xl(e);
                      })
                    );
                  })(e)
                );
              },
              hasTrailingComment: function (e) {
                return (
                  e.comments &&
                  e.comments.some(function (e) {
                    return e.trailing;
                  })
                );
              },
              hasTrailingLineComment: function (e) {
                return (
                  e.comments &&
                  e.comments.some(function (e) {
                    return e.trailing && !Xs(e);
                  })
                );
              },
              hasIgnoreComment: wl,
              hasNodeIgnoreComment: Sl,
              identity: function (e) {
                return e;
              },
              isBinaryish: function (e) {
                return il.has(e.type);
              },
              isBlockComment: Xs,
              isLineComment: function (e) {
                return (
                  'Line' === e.type ||
                  'CommentLine' === e.type ||
                  'SingleLine' === e.type ||
                  'HashbangComment' === e.type ||
                  'HTMLOpen' === e.type ||
                  'HTMLClose' === e.type
                );
              },
              isPrettierIgnoreComment: xl,
              isCallOrOptionalCallExpression: ll,
              isEmptyJSXElement: function (e) {
                if (0 === e.children.length) return !0;
                if (e.children.length > 1) return !1;
                var t = e.children[0];
                return Qs(t) && !fl(t);
              },
              isExportDeclaration: Ks,
              isFlowAnnotationComment: function (e, t) {
                var n = Vs(t),
                  r = $s(e, qs(t));
                return (
                  !1 !== r &&
                  '/*' === e.slice(n, n + 2) &&
                  '*/' === e.slice(r, r + 2)
                );
              },
              isFunctionCompositionArgs: function (e) {
                if (e.length <= 1) return !1;
                var t,
                  n = 0,
                  r = g(e);
                try {
                  for (r.s(); !(t = r.n()).done; ) {
                    var u = t.value;
                    if (tl(u)) {
                      if ((n += 1) > 1) return !0;
                    } else if (ll(u)) {
                      var a,
                        i = g(u.arguments);
                      try {
                        for (i.s(); !(a = i.n()).done; ) {
                          if (tl(a.value)) return !0;
                        }
                      } catch (o) {
                        i.e(o);
                      } finally {
                        i.f();
                      }
                    }
                  }
                } catch (o) {
                  r.e(o);
                } finally {
                  r.f();
                }
                return !1;
              },
              isFunctionNotation: al,
              isFunctionOrArrowExpression: tl,
              isGetterOrSetter: ul,
              isJestEachTemplateLiteral: function (e, t) {
                var n = /^[fx]?(describe|it|test)$/;
                return (
                  'TaggedTemplateExpression' === t.type &&
                  t.quasi === e &&
                  'MemberExpression' === t.tag.type &&
                  'Identifier' === t.tag.property.type &&
                  'each' === t.tag.property.name &&
                  (('Identifier' === t.tag.object.type &&
                    n.test(t.tag.object.name)) ||
                    ('MemberExpression' === t.tag.object.type &&
                      'Identifier' === t.tag.object.property.type &&
                      ('only' === t.tag.object.property.name ||
                        'skip' === t.tag.object.property.name) &&
                      'Identifier' === t.tag.object.object.type &&
                      n.test(t.tag.object.object.name)))
                );
              },
              isJSXNode: rl,
              isJSXWhitespaceExpression: function (e) {
                return (
                  'JSXExpressionContainer' === e.type &&
                  Qs(e.expression) &&
                  ' ' === e.expression.value &&
                  !e.expression.comments
                );
              },
              isLastStatement: function (e) {
                var t = e.getParentNode();
                if (!t) return !0;
                var n = e.getValue(),
                  r = (t.body || t.consequent).filter(function (e) {
                    return 'EmptyStatement' !== e.type;
                  });
                return r[r.length - 1] === n;
              },
              isLiteral: Qs,
              isLongCurriedCallExpression: function (e) {
                var t = e.getValue(),
                  n = e.getParentNode();
                return (
                  ll(t) &&
                  ll(n) &&
                  n.callee === t &&
                  t.arguments.length > n.arguments.length &&
                  n.arguments.length > 0
                );
              },
              isSimpleCallArgument: function e(t, n) {
                if (n >= 2) return !1;
                var r = function (t) {
                    return e(t, n + 1);
                  },
                  u =
                    ('Literal' === t.type && 'regex' in t && t.regex.pattern) ||
                    ('RegExpLiteral' === t.type && t.pattern);
                return (
                  !(u && u.length > 5) &&
                  ('Literal' === t.type ||
                    'BigIntLiteral' === t.type ||
                    'DecimalLiteral' === t.type ||
                    'BooleanLiteral' === t.type ||
                    'NullLiteral' === t.type ||
                    'NumericLiteral' === t.type ||
                    'RegExpLiteral' === t.type ||
                    'StringLiteral' === t.type ||
                    'Identifier' === t.type ||
                    'ThisExpression' === t.type ||
                    'Super' === t.type ||
                    'PrivateName' === t.type ||
                    'ArgumentPlaceholder' === t.type ||
                    'Import' === t.type ||
                    ('TemplateLiteral' === t.type
                      ? t.expressions.every(r)
                      : 'ObjectExpression' === t.type
                      ? t.properties.every(function (e) {
                          return (
                            !e.computed &&
                            (e.shorthand || (e.value && r(e.value)))
                          );
                        })
                      : 'ArrayExpression' === t.type
                      ? t.elements.every(function (e) {
                          return null === e || r(e);
                        })
                      : 'ImportExpression' === t.type
                      ? r(t.source)
                      : 'CallExpression' === t.type ||
                        'OptionalCallExpression' === t.type ||
                        'NewExpression' === t.type
                      ? e(t.callee, n) && t.arguments.every(r)
                      : 'MemberExpression' === t.type ||
                        'OptionalMemberExpression' === t.type
                      ? e(t.object, n) && e(t.property, n)
                      : 'UnaryExpression' !== t.type ||
                        ('!' !== t.operator && '-' !== t.operator)
                      ? 'TSNonNullExpression' === t.type && e(t.expression, n)
                      : e(t.argument, n)))
                );
              },
              isMeaningfulJSXText: fl,
              isMemberExpressionChain: function e(t) {
                return (
                  ('MemberExpression' === t.type ||
                    'OptionalMemberExpression' === t.type) &&
                  ('Identifier' === t.object.type || e(t.object))
                );
              },
              isMemberish: function (e) {
                return (
                  'MemberExpression' === e.type ||
                  'OptionalMemberExpression' === e.type ||
                  ('BindExpression' === e.type && Boolean(e.object))
                );
              },
              isNgForOf: function (e, t, n) {
                return (
                  'NGMicrosyntaxKeyedExpression' === e.type &&
                  'of' === e.key.name &&
                  1 === t &&
                  'NGMicrosyntaxLet' === n.body[0].type &&
                  null === n.body[0].value
                );
              },
              isNumericLiteral: Zs,
              isObjectType: function (e) {
                return (
                  'ObjectTypeAnnotation' === e.type ||
                  'TSTypeLiteral' === e.type
                );
              },
              isObjectTypePropertyAFunction: function (e) {
                return !(
                  ('ObjectTypeProperty' !== e.type &&
                    'ObjectTypeInternalSlot' !== e.type) ||
                  'FunctionTypeAnnotation' !== e.value.type ||
                  e.static ||
                  al(e)
                );
              },
              isSimpleType: function (e) {
                return !(
                  !e ||
                  ((('GenericTypeAnnotation' !== e.type &&
                    'TSTypeReference' !== e.type) ||
                    e.typeParameters) &&
                    !ol.has(e.type))
                );
              },
              isSimpleNumber: hl,
              isSimpleTemplateLiteral: function (e) {
                var t = 'expressions';
                'TSTemplateLiteralType' === e.type && (t = 'types');
                var n = e[t];
                return (
                  0 !== n.length &&
                  n.every(function (e) {
                    if (e.comments) return !1;
                    if ('Identifier' === e.type || 'ThisExpression' === e.type)
                      return !0;
                    if (
                      'MemberExpression' === e.type ||
                      'OptionalMemberExpression' === e.type
                    ) {
                      for (
                        var t = e;
                        'MemberExpression' === t.type ||
                        'OptionalMemberExpression' === t.type;

                      ) {
                        if (
                          'Identifier' !== t.property.type &&
                          'Literal' !== t.property.type &&
                          'StringLiteral' !== t.property.type &&
                          'NumericLiteral' !== t.property.type
                        )
                          return !1;
                        if ((t = t.object).comments) return !1;
                      }
                      return (
                        'Identifier' === t.type || 'ThisExpression' === t.type
                      );
                    }
                    return !1;
                  })
                );
              },
              isStringLiteral: el,
              isStringPropSafeToUnquote: function (e, t) {
                return (
                  'json' !== t.parser &&
                  el(e.key) &&
                  ml(e.key).slice(1, -1) === e.key.value &&
                  ((js(e.key.value) &&
                    !(
                      ('typescript' === t.parser || 'babel-ts' === t.parser) &&
                      'ClassProperty' === e.type
                    )) ||
                    (hl(e.key.value) &&
                      String(Number(e.key.value)) === e.key.value &&
                      ('babel' === t.parser ||
                        'espree' === t.parser ||
                        'meriyah' === t.parser)))
                );
              },
              isTemplateOnItsOwnLine: function (e, t) {
                return (
                  (('TemplateLiteral' === e.type && gl(e)) ||
                    ('TaggedTemplateExpression' === e.type && gl(e.quasi))) &&
                  !_s(t, Vs(e), { backwards: !0 })
                );
              },
              isTestCall: function e(t, n) {
                if ('CallExpression' !== t.type) return !1;
                if (1 === t.arguments.length) {
                  if (nl(t) && n && e(n)) return tl(t.arguments[0]);
                  if (
                    'Identifier' === (r = t).callee.type &&
                    /^(before|after)(Each|All)$/.test(r.callee.name) &&
                    1 === r.arguments.length
                  )
                    return nl(t.arguments[0]);
                } else if (
                  (2 === t.arguments.length || 3 === t.arguments.length) &&
                  (('Identifier' === t.callee.type && sl.test(t.callee.name)) ||
                    (function (e) {
                      return (
                        ('MemberExpression' === e.callee.type ||
                          'OptionalMemberExpression' === e.callee.type) &&
                        'Identifier' === e.callee.object.type &&
                        'Identifier' === e.callee.property.type &&
                        sl.test(e.callee.object.name) &&
                        ('only' === e.callee.property.name ||
                          'skip' === e.callee.property.name)
                      );
                    })(t)) &&
                  ('TemplateLiteral' === t.arguments[0].type ||
                    el(t.arguments[0]))
                )
                  return (
                    !(t.arguments[2] && !Zs(t.arguments[2])) &&
                    ((2 === t.arguments.length
                      ? tl(t.arguments[1])
                      : (function (e) {
                          return (
                            'FunctionExpression' === e.type ||
                            ('ArrowFunctionExpression' === e.type &&
                              'BlockStatement' === e.body.type)
                          );
                        })(t.arguments[1]) && Al(t.arguments[1]).length <= 1) ||
                      nl(t.arguments[1]))
                  );
                var r;
                return !1;
              },
              isTheOnlyJSXElementInMarkdown: function (e, t) {
                if ('markdown' !== e.parentParser && 'mdx' !== e.parentParser)
                  return !1;
                var n = t.getNode();
                if (!n.expression || !rl(n.expression)) return !1;
                var r = t.getParentNode();
                return 'Program' === r.type && 1 === r.body.length;
              },
              isTSXFile: function (e) {
                return e.filepath && /\.tsx$/i.test(e.filepath);
              },
              isTypeAnnotationAFunction: function (e) {
                return !(
                  ('TypeAnnotation' !== e.type &&
                    'TSTypeAnnotation' !== e.type) ||
                  'FunctionTypeAnnotation' !== e.typeAnnotation.type ||
                  e.static ||
                  Ws(e, e.typeAnnotation)
                );
              },
              matchJsxWhitespaceRegex: cl,
              needsHardlineAfterDanglingComment: function (e) {
                if (!e.comments) return !1;
                var t = Ls(
                  e.comments.filter(function (e) {
                    return !e.leading && !e.trailing;
                  })
                );
                return t && !Xs(t);
              },
              rawText: ml,
              returnArgumentHasLeadingComment: function (e, t) {
                if (dl(e.originalText, t)) return !0;
                if (Hs(t))
                  for (
                    var n, r = t;
                    (n = (u = r).expressions
                      ? u.expressions[0]
                      : u.left ||
                        u.test ||
                        u.callee ||
                        u.object ||
                        u.tag ||
                        u.argument ||
                        u.expression);

                  )
                    if (((r = n), dl(e.originalText, r))) return !0;
                var u;
                return !1;
              },
              shouldPrintComma: function (e) {
                var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 'es5';
                return (
                  ('es5' === e.trailingComma && 'es5' === t) ||
                  ('all' === e.trailingComma && ('all' === t || 'es5' === t))
                );
              },
              isBitwiseOperator: function (e) {
                return !!vl[e] || '|' === e || '^' === e || '&' === e;
              },
              shouldFlatten: function (e, t) {
                return !(
                  Cl(t) !== Cl(e) ||
                  '**' === e ||
                  (yl[e] && yl[t]) ||
                  ('%' === t && Dl[e]) ||
                  ('%' === e && Dl[t]) ||
                  (t !== e && Dl[t] && Dl[e]) ||
                  (vl[e] && vl[t])
                );
              },
              startsWithNoLookaheadToken: function e(t, n) {
                switch (
                  (t = (function (e) {
                    for (; e.left; ) e = e.left;
                    return e;
                  })(t)).type
                ) {
                  case 'FunctionExpression':
                  case 'ClassExpression':
                  case 'DoExpression':
                    return n;
                  case 'ObjectExpression':
                    return !0;
                  case 'MemberExpression':
                  case 'OptionalMemberExpression':
                    return e(t.object, n);
                  case 'TaggedTemplateExpression':
                    return 'FunctionExpression' !== t.tag.type && e(t.tag, n);
                  case 'CallExpression':
                  case 'OptionalCallExpression':
                    return (
                      'FunctionExpression' !== t.callee.type && e(t.callee, n)
                    );
                  case 'ConditionalExpression':
                    return e(t.test, n);
                  case 'UpdateExpression':
                    return !t.prefix && e(t.argument, n);
                  case 'BindExpression':
                    return t.object && e(t.object, n);
                  case 'SequenceExpression':
                    return e(t.expressions[0], n);
                  case 'TSAsExpression':
                    return e(t.expression, n);
                  default:
                    return !1;
                }
              },
              getPrecedence: Cl,
            },
            Tl = Ut.getLast,
            kl = Ut.hasNewline,
            Nl = Ut.getNextNonSpaceNonCommentCharacterIndexWithStartIndex,
            Ol = Ut.getNextNonSpaceNonCommentCharacter,
            Pl = Ut.hasNewlineInRange,
            Ml = Ut.addLeadingComment,
            Il = Ut.addTrailingComment,
            jl = Ut.addDanglingComment,
            Ll = Ut.getNextNonSpaceNonCommentCharacterIndex,
            _l = Bl.isBlockComment,
            Rl = Bl.getFunctionParameters,
            $l = Bl.isPrettierIgnoreComment,
            Vl = Bl.isJSXNode,
            ql = Bl.hasFlowShorthandAnnotationComment,
            Wl = Bl.hasFlowAnnotationComment,
            Ul = Bl.hasIgnoreComment,
            Jl = Ai,
            zl = Fi;
          function Gl(e, t) {
            var n = (e.body || e.properties).find(function (e) {
              return 'EmptyStatement' !== e.type;
            });
            n ? Ml(n, t) : jl(e, t);
          }
          function Hl(e, t) {
            'BlockStatement' === e.type ? Gl(e, t) : Ml(e, t);
          }
          function Xl(e, t) {
            var n = e.precedingNode,
              r = e.enclosingNode,
              u = e.followingNode;
            return (
              !(!r || 'IfStatement' !== r.type || !u) &&
              (')' === Ol(t, e, zl)
                ? (Il(n, e), !0)
                : n === r.consequent && u === r.alternate
                ? ('BlockStatement' === n.type ? Il(n, e) : jl(r, e), !0)
                : 'BlockStatement' === u.type
                ? (Gl(u, e), !0)
                : 'IfStatement' === u.type
                ? (Hl(u.consequent, e), !0)
                : r.consequent === u && (Ml(u, e), !0))
            );
          }
          function Yl(e, t) {
            var n = e.precedingNode,
              r = e.enclosingNode,
              u = e.followingNode;
            return (
              !(!r || 'WhileStatement' !== r.type || !u) &&
              (')' === Ol(t, e, zl)
                ? (Il(n, e), !0)
                : 'BlockStatement' === u.type
                ? (Gl(u, e), !0)
                : r.body === u && (Ml(u, e), !0))
            );
          }
          function Kl(e) {
            var t = e.precedingNode,
              n = e.enclosingNode,
              r = e.followingNode;
            return !(
              !n ||
              ('TryStatement' !== n.type && 'CatchClause' !== n.type) ||
              !r ||
              ('CatchClause' === n.type && t
                ? (Il(t, e), 0)
                : 'BlockStatement' === r.type
                ? (Gl(r, e), 0)
                : 'TryStatement' === r.type
                ? (Hl(r.finalizer, e), 0)
                : 'CatchClause' !== r.type || (Hl(r.body, e), 0))
            );
          }
          function Ql(e) {
            var t = e.precedingNode,
              n = e.enclosingNode,
              r = e.followingNode;
            if (
              n &&
              ('ClassDeclaration' === n.type ||
                'ClassExpression' === n.type ||
                'DeclareClass' === n.type ||
                'DeclareInterface' === n.type ||
                'InterfaceDeclaration' === n.type ||
                'TSInterfaceDeclaration' === n.type)
            ) {
              if (
                n.decorators &&
                n.decorators.length > 0 &&
                (!r || 'Decorator' !== r.type)
              )
                return Il(n.decorators[n.decorators.length - 1], e), !0;
              if (n.body && r === n.body) return Gl(n.body, e), !0;
              if (r)
                for (
                  var u = 0, a = ['implements', 'extends', 'mixins'];
                  u < a.length;
                  u++
                ) {
                  var i = a[u];
                  if (n[i] && r === n[i][0])
                    return (
                      !t ||
                      (t !== n.id &&
                        t !== n.typeParameters &&
                        t !== n.superClass)
                        ? jl(n, e, i)
                        : Il(t, e),
                      !0
                    );
                }
            }
            return !1;
          }
          function Zl(e, t) {
            var n = e.precedingNode,
              r = e.enclosingNode;
            return (
              ((r &&
                n &&
                ('Property' === r.type ||
                  'TSDeclareMethod' === r.type ||
                  'TSAbstractMethodDefinition' === r.type) &&
                'Identifier' === n.type &&
                r.key === n &&
                ':' !== Ol(t, n, zl)) ||
                !(
                  !n ||
                  !r ||
                  'Decorator' !== n.type ||
                  ('ClassMethod' !== r.type &&
                    'ClassProperty' !== r.type &&
                    'FieldDefinition' !== r.type &&
                    'TSAbstractClassProperty' !== r.type &&
                    'TSAbstractMethodDefinition' !== r.type &&
                    'TSDeclareMethod' !== r.type &&
                    'MethodDefinition' !== r.type)
                )) &&
              (Il(n, e), !0)
            );
          }
          function ec(e, t) {
            var n = e.precedingNode,
              r = e.enclosingNode,
              u = e.followingNode;
            if (
              n &&
              'FunctionTypeParam' === n.type &&
              r &&
              'FunctionTypeAnnotation' === r.type &&
              u &&
              'FunctionTypeParam' !== u.type
            )
              return Il(n, e), !0;
            if (
              n &&
              ('Identifier' === n.type || 'AssignmentPattern' === n.type) &&
              r &&
              ac(r) &&
              ')' === Ol(t, e, zl)
            )
              return Il(n, e), !0;
            if (
              r &&
              'FunctionDeclaration' === r.type &&
              u &&
              'BlockStatement' === u.type
            ) {
              var a = (function () {
                var e = Rl(r);
                if (0 !== e.length) return Nl(t, zl(Tl(e)));
                var n = Nl(t, zl(r.id));
                return !1 !== n && Nl(t, n + 1);
              })();
              if (Jl(e) > a) return Gl(u, e), !0;
            }
            return !1;
          }
          function tc(e) {
            var t = e.enclosingNode;
            return !(!t || 'ImportSpecifier' !== t.type || (Ml(t, e), 0));
          }
          function nc(e) {
            var t = e.enclosingNode;
            return !(!t || 'LabeledStatement' !== t.type || (Ml(t, e), 0));
          }
          function rc(e, t, n) {
            var r = e.enclosingNode;
            return t && t.body && 0 === t.body.length
              ? (n ? jl(t, e) : Ml(t, e), !0)
              : !(
                  !r ||
                  'Program' !== r.type ||
                  0 !== r.body.length ||
                  !r.directives ||
                  0 !== r.directives.length ||
                  (n ? jl(r, e) : Ml(r, e), 0)
                );
          }
          function uc(e) {
            var t = e.enclosingNode,
              n = e.followingNode;
            if (
              $l(e) &&
              t &&
              'TSMappedType' === t.type &&
              n &&
              'TSTypeParameter' === n.type &&
              n.constraint
            )
              return (t.prettierIgnore = !0), (e.unignore = !0), !0;
          }
          function ac(e) {
            return (
              'ArrowFunctionExpression' === e.type ||
              'FunctionExpression' === e.type ||
              'FunctionDeclaration' === e.type ||
              'ObjectMethod' === e.type ||
              'ClassMethod' === e.type ||
              'TSDeclareFunction' === e.type ||
              'TSCallSignatureDeclaration' === e.type ||
              'TSConstructSignatureDeclaration' === e.type ||
              'TSMethodSignature' === e.type ||
              'TSConstructorType' === e.type ||
              'TSFunctionType' === e.type ||
              'TSDeclareMethod' === e.type
            );
          }
          function ic(e) {
            return _l(e) && '*' === e.value[0] && /@type\b/.test(e.value);
          }
          var oc = {
              handleOwnLineComment: function (e, t, n, r, u) {
                return (
                  uc(e) ||
                  ec(e, t) ||
                  (function (e) {
                    var t = e.enclosingNode,
                      n = e.followingNode;
                    return (
                      !(
                        !t ||
                        ('MemberExpression' !== t.type &&
                          'OptionalMemberExpression' !== t.type) ||
                        !n ||
                        'Identifier' !== n.type
                      ) && (Ml(t, e), !0)
                    );
                  })(e) ||
                  Xl(e, t) ||
                  Yl(e, t) ||
                  Kl(e) ||
                  Ql(e) ||
                  tc(e) ||
                  (function (e) {
                    var t = e.enclosingNode;
                    return (
                      !(
                        !t ||
                        ('ForInStatement' !== t.type &&
                          'ForOfStatement' !== t.type)
                      ) && (Ml(t, e), !0)
                    );
                  })(e) ||
                  (function (e) {
                    var t = e.precedingNode,
                      n = e.enclosingNode,
                      r = e.followingNode;
                    return !n ||
                      ('UnionTypeAnnotation' !== n.type &&
                        'TSUnionType' !== n.type)
                      ? (r &&
                          ('UnionTypeAnnotation' === r.type ||
                            'TSUnionType' === r.type) &&
                          $l(e) &&
                          ((r.types[0].prettierIgnore = !0), (e.unignore = !0)),
                        !1)
                      : ($l(e) && ((r.prettierIgnore = !0), (e.unignore = !0)),
                        !!t && (Il(t, e), !0));
                  })(e) ||
                  rc(e, r, u) ||
                  (function (e, t) {
                    var n = e.precedingNode,
                      r = e.enclosingNode;
                    return (
                      !!(
                        n &&
                        'ImportSpecifier' === n.type &&
                        r &&
                        'ImportDeclaration' === r.type &&
                        kl(t, zl(e))
                      ) && (Il(n, e), !0)
                    );
                  })(e, t) ||
                  (function (e) {
                    var t = e.enclosingNode;
                    return (
                      !(!t || 'AssignmentPattern' !== t.type) && (Ml(t, e), !0)
                    );
                  })(e) ||
                  Zl(e, t) ||
                  nc(e)
                );
              },
              handleEndOfLineComment: function (e, t, n, r, u) {
                return (
                  (function (e) {
                    var t = e.followingNode;
                    return !(!t || !ic(e)) && (Ml(t, e), !0);
                  })(e) ||
                  ec(e, t) ||
                  (function (e, t) {
                    var n = e.precedingNode,
                      r = e.enclosingNode,
                      u = e.followingNode,
                      a = n && !Pl(t, zl(n), Jl(e));
                    return (
                      !(
                        (n && a) ||
                        !r ||
                        ('ConditionalExpression' !== r.type &&
                          'TSConditionalType' !== r.type) ||
                        !u
                      ) && (Ml(u, e), !0)
                    );
                  })(e, t) ||
                  tc(e) ||
                  Xl(e, t) ||
                  Yl(e, t) ||
                  Kl(e) ||
                  Ql(e) ||
                  nc(e) ||
                  (function (e) {
                    var t = e.precedingNode,
                      n = e.enclosingNode;
                    return (
                      !!(
                        n &&
                        ('CallExpression' === n.type ||
                          'OptionalCallExpression' === n.type) &&
                        t &&
                        n.callee === t &&
                        n.arguments.length > 0
                      ) && (Ml(n.arguments[0], e), !0)
                    );
                  })(e) ||
                  (function (e) {
                    var t = e.enclosingNode;
                    return (
                      !(
                        !t ||
                        ('Property' !== t.type && 'ObjectProperty' !== t.type)
                      ) && (Ml(t, e), !0)
                    );
                  })(e) ||
                  rc(e, r, u) ||
                  (function (e) {
                    var t = e.enclosingNode;
                    return !(!t || 'TypeAlias' !== t.type) && (Ml(t, e), !0);
                  })(e) ||
                  (function (e) {
                    var t = e.enclosingNode,
                      n = e.followingNode;
                    return (
                      !(
                        !t ||
                        ('VariableDeclarator' !== t.type &&
                          'AssignmentExpression' !== t.type) ||
                        !n ||
                        ('ObjectExpression' !== n.type &&
                          'ArrayExpression' !== n.type &&
                          'TemplateLiteral' !== n.type &&
                          'TaggedTemplateExpression' !== n.type &&
                          !_l(e))
                      ) && (Ml(n, e), !0)
                    );
                  })(e)
                );
              },
              handleRemainingComment: function (e, t, n, r, u) {
                return !!(
                  uc(e) ||
                  Xl(e, t) ||
                  Yl(e, t) ||
                  (function (e) {
                    var t = e.precedingNode,
                      n = e.enclosingNode;
                    return (
                      !(
                        !n ||
                        ('ObjectProperty' !== n.type &&
                          'Property' !== n.type) ||
                        !n.shorthand ||
                        n.key !== t ||
                        'AssignmentPattern' !== n.value.type
                      ) && (Il(n.value.left, e), !0)
                    );
                  })(e) ||
                  (function (e, t) {
                    if (')' !== Ol(t, e, zl)) return !1;
                    var n = e.enclosingNode;
                    return n &&
                      ((ac(n) && 0 === Rl(n).length) ||
                        (('CallExpression' === n.type ||
                          'OptionalCallExpression' === n.type ||
                          'NewExpression' === n.type) &&
                          0 === n.arguments.length))
                      ? (jl(n, e), !0)
                      : !(
                          !n ||
                          'MethodDefinition' !== n.type ||
                          0 !== Rl(n.value).length
                        ) && (jl(n.value, e), !0);
                  })(e, t) ||
                  Zl(e, t) ||
                  rc(e, r, u) ||
                  (function (e, t) {
                    var n = e.enclosingNode;
                    if (!n || 'ArrowFunctionExpression' !== n.type) return !1;
                    var r = Ll(t, e, zl);
                    return (
                      !1 !== r && '=>' === t.slice(r, r + 2) && (jl(n, e), !0)
                    );
                  })(e, t) ||
                  (function (e, t) {
                    if ('(' !== Ol(t, e, zl)) return !1;
                    var n = e.precedingNode,
                      r = e.enclosingNode;
                    return (
                      !(
                        !n ||
                        !r ||
                        ('FunctionDeclaration' !== r.type &&
                          'FunctionExpression' !== r.type &&
                          'ClassMethod' !== r.type &&
                          'MethodDefinition' !== r.type &&
                          'ObjectMethod' !== r.type)
                      ) && (Il(n, e), !0)
                    );
                  })(e, t) ||
                  (function (e) {
                    var t = e.precedingNode,
                      n = e.enclosingNode,
                      r = e.followingNode;
                    return (
                      !(!n || 'TSMappedType' !== n.type) &&
                      (r && 'TSTypeParameter' === r.type && r.name
                        ? (Ml(r.name, e), !0)
                        : !(
                            !t ||
                            'TSTypeParameter' !== t.type ||
                            !t.constraint
                          ) && (Il(t.constraint, e), !0))
                    );
                  })(e) ||
                  (function (e) {
                    var t = e.enclosingNode;
                    return (
                      !(
                        !t ||
                        ('ContinueStatement' !== t.type &&
                          'BreakStatement' !== t.type) ||
                        t.label
                      ) && (Il(t, e), !0)
                    );
                  })(e) ||
                  (function (e, t) {
                    var n = e.enclosingNode;
                    return (
                      !(
                        e.followingNode ||
                        !n ||
                        ('TSMethodSignature' !== n.type &&
                          'TSDeclareFunction' !== n.type &&
                          'TSAbstractMethodDefinition' !== n.type) ||
                        ';' !== Ol(t, e, zl)
                      ) && (Il(n, e), !0)
                    );
                  })(e, t)
                );
              },
              hasLeadingComment: function (e) {
                var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : function () {
                        return !0;
                      };
                return e.leadingComments
                  ? e.leadingComments.some(t)
                  : !!e.comments &&
                      e.comments.some(function (e) {
                        return e.leading && t(e);
                      });
              },
              isTypeCastComment: ic,
              getGapRegex: function (e) {
                if (
                  e &&
                  'BinaryExpression' !== e.type &&
                  'LogicalExpression' !== e.type
                )
                  return /^[\s&(|]*$/;
              },
              getCommentChildNodes: function (e, t) {
                if (
                  ('typescript' === t.parser ||
                    'flow' === t.parser ||
                    'espree' === t.parser ||
                    'meriyah' === t.parser) &&
                  'MethodDefinition' === e.type &&
                  e.value &&
                  'FunctionExpression' === e.value.type &&
                  0 === Rl(e.value).length &&
                  !e.value.returnType &&
                  (!e.value.typeParameters ||
                    0 === e.value.typeParameters.length) &&
                  e.value.body
                )
                  return [].concat(m(e.decorators || []), [
                    e.key,
                    e.value.body,
                  ]);
              },
              willPrintOwnComments: function (e) {
                var t = e.getValue(),
                  n = e.getParentNode();
                return (
                  ((t &&
                    (Vl(t) ||
                      ql(t) ||
                      (n &&
                        ('CallExpression' === n.type ||
                          'OptionalCallExpression' === n.type) &&
                        (Wl(t.leadingComments) || Wl(t.trailingComments))))) ||
                    (n &&
                      ('JSXSpreadAttribute' === n.type ||
                        'JSXSpreadChild' === n.type ||
                        'UnionTypeAnnotation' === n.type ||
                        'TSUnionType' === n.type ||
                        (('ClassDeclaration' === n.type ||
                          'ClassExpression' === n.type) &&
                          n.superClass === t)))) &&
                  (!Ul(e) ||
                    'UnionTypeAnnotation' === n.type ||
                    'TSUnionType' === n.type)
                );
              },
            },
            sc = Ut.getStringWidth,
            lc = Ut.getIndentSize,
            cc = vn.builders,
            pc = cc.concat,
            fc = cc.join,
            dc = cc.hardline,
            hc = cc.softline,
            gc = cc.group,
            mc = cc.indent,
            yc = cc.align,
            Dc = cc.lineSuffixBoundary,
            vc = cc.addAlignmentToDoc,
            Ec = vn.printer.printDocToString,
            Cc = vn.utils.mapDoc,
            bc = Bl.isBinaryish,
            Ac = Bl.isJestEachTemplateLiteral,
            Fc = Bl.isSimpleTemplateLiteral;
          function xc(e) {
            return e.replace(/([\\`]|\${)/g, '\\$1');
          }
          var Sc = function (e, t, n) {
              var r = e.getValue();
              if ('TemplateLiteral' === r.type && Ac(r, e.getParentNode())) {
                var u = (function (e, t, n) {
                  var r = e.getNode(),
                    u = r.quasis[0].value.raw.trim().split(/\s*\|\s*/);
                  if (
                    u.length > 1 ||
                    u.some(function (e) {
                      return 0 !== e.length;
                    })
                  ) {
                    var a = (function () {
                      t.__inJestEach = !0;
                      var a = e.map(n, 'expressions');
                      t.__inJestEach = !1;
                      for (
                        var i = [],
                          o = a.map(function (e) {
                            return (
                              '${' +
                              Ec(
                                e,
                                Object.assign({}, t, {
                                  printWidth: 1 / 0,
                                  endOfLine: 'lf',
                                })
                              ).formatted +
                              '}'
                            );
                          }),
                          s = [{ hasLineBreak: !1, cells: [] }],
                          l = 1;
                        l < r.quasis.length;
                        l++
                      ) {
                        var c = s[s.length - 1],
                          p = o[l - 1];
                        c.cells.push(p),
                          p.includes('\n') && (c.hasLineBreak = !0),
                          r.quasis[l].value.raw.includes('\n') &&
                            s.push({ hasLineBreak: !1, cells: [] });
                      }
                      var f,
                        d = Math.max.apply(
                          Math,
                          [u.length].concat(
                            m(
                              s.map(function (e) {
                                return e.cells.length;
                              })
                            )
                          )
                        ),
                        h = Array.from({ length: d }).fill(0),
                        y = [{ cells: u }].concat(
                          m(
                            s.filter(function (e) {
                              return 0 !== e.cells.length;
                            })
                          )
                        ),
                        D = g(
                          y.filter(function (e) {
                            return !e.hasLineBreak;
                          })
                        );
                      try {
                        for (D.s(); !(f = D.n()).done; ) {
                          f.value.cells.forEach(function (e, t) {
                            h[t] = Math.max(h[t], sc(e));
                          });
                        }
                      } catch (v) {
                        D.e(v);
                      } finally {
                        D.f();
                      }
                      return {
                        v:
                          (i.push(
                            Dc,
                            '`',
                            mc(
                              pc([
                                dc,
                                fc(
                                  dc,
                                  y.map(function (e) {
                                    return fc(
                                      ' | ',
                                      e.cells.map(function (t, n) {
                                        return e.hasLineBreak
                                          ? t
                                          : t + ' '.repeat(h[n] - sc(t));
                                      })
                                    );
                                  })
                                ),
                              ])
                            ),
                            dc,
                            '`'
                          ),
                          pc(i)),
                      };
                    })();
                    if ('object' === k(a)) return a.v;
                  }
                })(e, n, t);
                if (u) return u;
              }
              var a = 'expressions';
              'TSTemplateLiteralType' === r.type && (a = 'types');
              var i = [],
                o = e.map(t, a),
                s = Fc(r);
              return (
                s &&
                  (o = o.map(function (e) {
                    return Ec(
                      e,
                      Object.assign({}, n, { printWidth: 1 / 0 })
                    ).formatted;
                  })),
                i.push(Dc, '`'),
                e.each(function (e) {
                  var u = e.getName();
                  if ((i.push(t(e)), u < o.length)) {
                    var l = n.tabWidth,
                      c = e.getValue(),
                      p = lc(c.value.raw, l),
                      f = o[u];
                    if (!s) {
                      var d = r[a][u];
                      ((d.comments && d.comments.length) ||
                        'MemberExpression' === d.type ||
                        'OptionalMemberExpression' === d.type ||
                        'ConditionalExpression' === d.type ||
                        'SequenceExpression' === d.type ||
                        'TSAsExpression' === d.type ||
                        bc(d)) &&
                        (f = pc([mc(pc([hc, f])), hc]));
                    }
                    var h =
                      0 === p && c.value.raw.endsWith('\n')
                        ? yc(-1 / 0, f)
                        : vc(f, p, l);
                    i.push(gc(pc(['${', h, Dc, '}'])));
                  }
                }, 'quasis'),
                i.push('`'),
                pc(i)
              );
            },
            wc = function (e, t) {
              return e.map(function (e) {
                return (function (e, t) {
                  var n = e.getValue(),
                    r = t(e);
                  return (
                    n.comments &&
                      n.comments.length &&
                      (r = gc(pc([mc(pc([hc, r])), hc]))),
                    pc(['${', r, Dc, '}'])
                  );
                })(e, t);
              }, 'expressions');
            },
            Bc = function (e, t) {
              return Cc(e, function (e) {
                if (!e.parts) return e;
                var n = e.parts.map(function (e) {
                  return 'string' == typeof e
                    ? t
                      ? e.replace(/(\\*)`/g, '$1$1\\`')
                      : xc(e)
                    : e;
                });
                return Object.assign({}, e, { parts: n });
              });
            },
            Tc = xc,
            kc = vn.builders,
            Nc = kc.indent,
            Oc = kc.softline,
            Pc = kc.literalline,
            Mc = kc.concat,
            Ic = kc.dedentToRoot,
            jc = Bc,
            Lc = vn.builders,
            _c = Lc.indent,
            Rc = Lc.hardline,
            $c = Lc.softline,
            Vc = Lc.concat,
            qc = vn.utils,
            Wc = qc.mapDoc,
            Uc = qc.replaceNewlinesWithLiterallines,
            Jc = wc,
            zc = vn.builders,
            Gc = zc.indent,
            Hc = zc.join,
            Xc = zc.hardline,
            Yc = zc.concat,
            Kc = Bc,
            Qc = wc;
          function Zc(e) {
            var t = [],
              n = !1;
            return (
              e
                .map(function (e) {
                  return e.trim();
                })
                .forEach(function (e, r, u) {
                  '' !== e &&
                    ('' === u[r - 1] && n ? t.push(Yc([Xc, e])) : t.push(e),
                    (n = !0));
                }),
              0 === t.length ? null : Hc(Xc, t)
            );
          }
          var ep = vn.builders,
            tp = ep.indent,
            np = ep.line,
            rp = ep.hardline,
            up = ep.concat,
            ap = ep.group,
            ip = vn.utils.mapDoc,
            op = wc,
            sp = Tc,
            lp = 0,
            cp = Bl.isBlockComment,
            pp = oc.hasLeadingComment;
          var fp = [
            function (e, t) {
              return 'ObjectExpression' === e.type && 'properties' === t;
            },
            function (e, t) {
              return (
                'CallExpression' === e.type &&
                'Identifier' === e.callee.type &&
                'Component' === e.callee.name &&
                'arguments' === t
              );
            },
            function (e, t) {
              return 'Decorator' === e.type && 'expression' === t;
            },
          ];
          function dp(e) {
            return 'Identifier' === e.type && 'styled' === e.name;
          }
          function hp(e) {
            return /^[A-Z]/.test(e.object.name) && 'extend' === e.property.name;
          }
          function gp(e, t) {
            return pp(e, function (e) {
              return cp(e) && e.value === ' '.concat(t, ' ');
            });
          }
          var mp = Bl.isBlockComment,
            yp = new Set([
              'range',
              'raw',
              'comments',
              'leadingComments',
              'trailingComments',
              'innerComments',
              'extra',
              'start',
              'end',
              'loc',
              'flags',
              'errors',
              'tokens',
            ]);
          function Dp(e, t, n) {
            if (
              ('Program' === e.type && delete t.sourceType,
              ('BigIntLiteral' !== e.type &&
                'BigIntLiteralTypeAnnotation' !== e.type) ||
                (t.value && (t.value = t.value.toLowerCase())),
              ('BigIntLiteral' !== e.type && 'Literal' !== e.type) ||
                (t.bigint && (t.bigint = t.bigint.toLowerCase())),
              'DecimalLiteral' === e.type && (t.value = Number(t.value)),
              'EmptyStatement' === e.type)
            )
              return null;
            if ('JSXText' === e.type) return null;
            if (
              'JSXExpressionContainer' === e.type &&
              ('Literal' === e.expression.type ||
                'StringLiteral' === e.expression.type) &&
              ' ' === e.expression.value
            )
              return null;
            ('Property' !== e.type &&
              'ObjectProperty' !== e.type &&
              'MethodDefinition' !== e.type &&
              'ClassProperty' !== e.type &&
              'ClassMethod' !== e.type &&
              'FieldDefinition' !== e.type &&
              'TSDeclareMethod' !== e.type &&
              'TSPropertySignature' !== e.type &&
              'ObjectTypeProperty' !== e.type) ||
              'object' != k(e.key) ||
              !e.key ||
              ('Literal' !== e.key.type &&
                'NumericLiteral' !== e.key.type &&
                'StringLiteral' !== e.key.type &&
                'Identifier' !== e.key.type) ||
              delete t.key,
              'OptionalMemberExpression' === e.type &&
                !1 === e.optional &&
                ((t.type = 'MemberExpression'), delete t.optional),
              'JSXElement' === e.type &&
                'style' === e.openingElement.name.name &&
                e.openingElement.attributes.some(function (e) {
                  return 'jsx' === e.name.name;
                }) &&
                t.children
                  .filter(function (e) {
                    return (
                      'JSXExpressionContainer' === e.type &&
                      'TemplateLiteral' === e.expression.type
                    );
                  })
                  .map(function (e) {
                    return e.expression;
                  })
                  .reduce(function (e, t) {
                    return e.concat(t.quasis);
                  }, [])
                  .forEach(function (e) {
                    return delete e.value;
                  }),
              'JSXAttribute' === e.type &&
                'css' === e.name.name &&
                'JSXExpressionContainer' === e.value.type &&
                'TemplateLiteral' === e.value.expression.type &&
                t.value.expression.quasis.forEach(function (e) {
                  return delete e.value;
                }),
              'JSXAttribute' === e.type &&
                e.value &&
                'Literal' === e.value.type &&
                /["']|&quot;|&apos;/.test(e.value.value) &&
                (t.value.value = t.value.value.replace(
                  /["']|&quot;|&apos;/g,
                  '"'
                ));
            var r = e.expression || e.callee;
            if (
              'Decorator' === e.type &&
              'CallExpression' === r.type &&
              'Component' === r.callee.name &&
              1 === r.arguments.length
            ) {
              var u = e.expression.arguments[0].properties;
              t.expression.arguments[0].properties.forEach(function (e, t) {
                var n = null;
                switch (u[t].key.name) {
                  case 'styles':
                    'ArrayExpression' === e.value.type &&
                      (n = e.value.elements[0]);
                    break;
                  case 'template':
                    'TemplateLiteral' === e.value.type && (n = e.value);
                }
                n &&
                  n.quasis.forEach(function (e) {
                    return delete e.value;
                  });
              });
            }
            'TaggedTemplateExpression' !== e.type ||
              ('MemberExpression' !== e.tag.type &&
                ('Identifier' !== e.tag.type ||
                  ('gql' !== e.tag.name &&
                    'graphql' !== e.tag.name &&
                    'css' !== e.tag.name &&
                    'md' !== e.tag.name &&
                    'markdown' !== e.tag.name &&
                    'html' !== e.tag.name)) &&
                'CallExpression' !== e.tag.type) ||
              t.quasi.quasis.forEach(function (e) {
                return delete e.value;
              }),
              'TemplateLiteral' === e.type &&
                (((e.leadingComments &&
                  e.leadingComments.some(function (e) {
                    return (
                      mp(e) &&
                      ['GraphQL', 'HTML'].some(function (t) {
                        return e.value === ' '.concat(t, ' ');
                      })
                    );
                  })) ||
                  ('CallExpression' === n.type &&
                    'graphql' === n.callee.name)) &&
                  t.quasis.forEach(function (e) {
                    return delete e.value;
                  }),
                e.leadingComments ||
                  t.quasis.forEach(function (e) {
                    e.value && delete e.value.cooked;
                  })),
              'InterpreterDirective' === e.type &&
                (t.value = t.value.trimEnd());
          }
          Dp.ignoredProperties = yp;
          var vp = Dp,
            Ep = function (e) {
              if ('string' != typeof e)
                throw new TypeError('Expected a string');
              var t = e.match(/(?:\r?\n)/g) || [];
              if (0 !== t.length) {
                var n = t.filter(function (e) {
                  return '\r\n' === e;
                }).length;
                return n > t.length - n ? '\r\n' : '\n';
              }
            },
            Cp = Ep;
          Cp.graceful = function (e) {
            return ('string' == typeof e && Ep(e)) || '\n';
          };
          var bp = Xe(function (e, t) {
              function n() {
                var e = Gr;
                return (
                  (n = function () {
                    return e;
                  }),
                  e
                );
              }
              function r() {
                var e,
                  t = (e = Cp) && e.__esModule ? e : { default: e };
                return (
                  (r = function () {
                    return t;
                  }),
                  t
                );
              }
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.extract = function (e) {
                  var t = e.match(i);
                  return t ? t[0].trimLeft() : '';
                }),
                (t.strip = function (e) {
                  var t = e.match(i);
                  return t && t[0] ? e.substring(t[0].length) : e;
                }),
                (t.parse = function (e) {
                  return d(e).pragmas;
                }),
                (t.parseWithComments = d),
                (t.print = function (e) {
                  var t = e.comments,
                    u = void 0 === t ? '' : t,
                    a = e.pragmas,
                    i = void 0 === a ? {} : a,
                    o = (0, r().default)(u) || n().EOL,
                    s = Object.keys(i),
                    l = s
                      .map(function (e) {
                        return h(e, i[e]);
                      })
                      .reduce(function (e, t) {
                        return e.concat(t);
                      }, [])
                      .map(function (e) {
                        return ' * ' + e + o;
                      })
                      .join('');
                  if (!u) {
                    if (0 === s.length) return '';
                    if (1 === s.length && !Array.isArray(i[s[0]])) {
                      var c = i[s[0]];
                      return ''
                        .concat('/**', ' ')
                        .concat(h(s[0], c)[0])
                        .concat(' */');
                    }
                  }
                  var p =
                    u
                      .split(o)
                      .map(function (e) {
                        return ''.concat(' *', ' ').concat(e);
                      })
                      .join(o) + o;
                  return (
                    '/**' +
                    o +
                    (u ? p : '') +
                    (u && s.length ? ' *' + o : '') +
                    l +
                    ' */'
                  );
                });
              var u = /\*\/$/,
                a = /^\/\*\*/,
                i = /^\s*(\/\*\*?(.|\r?\n)*?\*\/)/,
                o = /(^|\s+)\/\/([^\r\n]*)/g,
                s = /^(\r?\n)+/,
                l = /(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g,
                c = /(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g,
                p = /(\r?\n|^) *\* ?/g,
                f = [];
              function d(e) {
                var t = (0, r().default)(e) || n().EOL;
                e = e.replace(a, '').replace(u, '').replace(p, '$1');
                for (var i = ''; i !== e; )
                  (i = e), (e = e.replace(l, ''.concat(t, '$1 $2').concat(t)));
                e = e.replace(s, '').trimRight();
                for (
                  var d,
                    h = Object.create(null),
                    g = e.replace(c, '').replace(s, '').trimRight();
                  (d = c.exec(e));

                ) {
                  var m = d[2].replace(o, '');
                  'string' == typeof h[d[1]] || Array.isArray(h[d[1]])
                    ? (h[d[1]] = f.concat(h[d[1]], m))
                    : (h[d[1]] = m);
                }
                return { comments: g, pragmas: h };
              }
              function h(e, t) {
                return f.concat(t).map(function (t) {
                  return '@'.concat(e, ' ').concat(t).trim();
                });
              }
            }),
            Ap = bp.parseWithComments,
            Fp = bp.strip,
            xp = bp.extract,
            Sp = bp.print,
            wp = Ut.getShebang,
            Bp = Ht;
          function Tp(e) {
            var t = wp(e);
            t && (e = e.slice(t.length + 1));
            var n = xp(e),
              r = Ap(n);
            return {
              shebang: t,
              text: e,
              pragmas: r.pragmas,
              comments: r.comments,
            };
          }
          var kp = function (e) {
              var t = Tp(e),
                n = t.shebang,
                r = t.text,
                u = t.pragmas,
                a = t.comments,
                i = Fp(r),
                o = Sp({
                  pragmas: Object.assign({ format: '' }, u),
                  comments: a.trimStart(),
                });
              return (
                (n ? ''.concat(n, '\n') : '') +
                Bp(o) +
                (i.startsWith('\n') ? '\n' : '\n\n') +
                i
              );
            },
            Np = Bl.getFunctionParameters,
            Op = Bl.getLeftSidePathName,
            Pp = Bl.hasFlowShorthandAnnotationComment,
            Mp = Bl.hasNakedLeftSide,
            Ip = Bl.hasNode,
            jp = Bl.isBitwiseOperator,
            Lp = Bl.startsWithNoLookaheadToken,
            _p = Bl.shouldFlatten,
            Rp = Bl.getPrecedence;
          function $p(e, t) {
            var n = e.getParentNode();
            if (!n) return !1;
            var r = e.getName(),
              u = e.getNode();
            if (
              t.__isInHtmlInterpolation &&
              !t.bracketSpacing &&
              (function (e) {
                switch (u.type) {
                  case 'ObjectExpression':
                    return !0;
                  default:
                    return !1;
                }
              })() &&
              Vp(e)
            )
              return !0;
            if (
              (function (e) {
                return (
                  'BlockStatement' === e.type ||
                  'BreakStatement' === e.type ||
                  'ClassBody' === e.type ||
                  'ClassDeclaration' === e.type ||
                  'ClassMethod' === e.type ||
                  'ClassProperty' === e.type ||
                  'FieldDefinition' === e.type ||
                  'ClassPrivateProperty' === e.type ||
                  'ContinueStatement' === e.type ||
                  'DebuggerStatement' === e.type ||
                  'DeclareClass' === e.type ||
                  'DeclareExportAllDeclaration' === e.type ||
                  'DeclareExportDeclaration' === e.type ||
                  'DeclareFunction' === e.type ||
                  'DeclareInterface' === e.type ||
                  'DeclareModule' === e.type ||
                  'DeclareModuleExports' === e.type ||
                  'DeclareVariable' === e.type ||
                  'DoWhileStatement' === e.type ||
                  'EnumDeclaration' === e.type ||
                  'ExportAllDeclaration' === e.type ||
                  'ExportDefaultDeclaration' === e.type ||
                  'ExportNamedDeclaration' === e.type ||
                  'ExpressionStatement' === e.type ||
                  'ForInStatement' === e.type ||
                  'ForOfStatement' === e.type ||
                  'ForStatement' === e.type ||
                  'FunctionDeclaration' === e.type ||
                  'IfStatement' === e.type ||
                  'ImportDeclaration' === e.type ||
                  'InterfaceDeclaration' === e.type ||
                  'LabeledStatement' === e.type ||
                  'MethodDefinition' === e.type ||
                  'ReturnStatement' === e.type ||
                  'SwitchStatement' === e.type ||
                  'ThrowStatement' === e.type ||
                  'TryStatement' === e.type ||
                  'TSDeclareFunction' === e.type ||
                  'TSEnumDeclaration' === e.type ||
                  'TSImportEqualsDeclaration' === e.type ||
                  'TSInterfaceDeclaration' === e.type ||
                  'TSModuleDeclaration' === e.type ||
                  'TSNamespaceExportDeclaration' === e.type ||
                  'TypeAlias' === e.type ||
                  'VariableDeclaration' === e.type ||
                  'WhileStatement' === e.type ||
                  'WithStatement' === e.type
                );
              })(u)
            )
              return !1;
            if ('flow' !== t.parser && Pp(e.getValue())) return !0;
            if ('Identifier' === u.type)
              return !!(
                u.extra &&
                u.extra.parenthesized &&
                /^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(u.name)
              );
            switch (n.type) {
              case 'ParenthesizedExpression':
                return !1;
              case 'ClassDeclaration':
              case 'ClassExpression':
                if (
                  'superClass' === r &&
                  ('ArrowFunctionExpression' === u.type ||
                    'AssignmentExpression' === u.type ||
                    'AwaitExpression' === u.type ||
                    'BinaryExpression' === u.type ||
                    'ConditionalExpression' === u.type ||
                    'LogicalExpression' === u.type ||
                    'NewExpression' === u.type ||
                    'ObjectExpression' === u.type ||
                    'ParenthesizedExpression' === u.type ||
                    'SequenceExpression' === u.type ||
                    'TaggedTemplateExpression' === u.type ||
                    'UnaryExpression' === u.type ||
                    'UpdateExpression' === u.type ||
                    'YieldExpression' === u.type)
                )
                  return !0;
                break;
              case 'ExportDefaultDeclaration':
                return (
                  (function e(t, n) {
                    var r = t.getValue(),
                      u = t.getParentNode();
                    return 'FunctionExpression' === r.type ||
                      'ClassExpression' === r.type
                      ? 'ExportDefaultDeclaration' === u.type || !$p(t, n)
                      : !(
                          !Mp(r) ||
                          ('ExportDefaultDeclaration' !== u.type && $p(t, n))
                        ) &&
                          t.call.apply(
                            t,
                            [
                              function (t) {
                                return e(t, n);
                              },
                            ].concat(m(Op(t, r)))
                          );
                  })(e, t) || 'SequenceExpression' === u.type
                );
              case 'Decorator':
                if ('expression' === r) {
                  for (var a = !1, i = !1, o = u; o; )
                    switch (o.type) {
                      case 'MemberExpression':
                        (i = !0), (o = o.object);
                        break;
                      case 'CallExpression':
                        if (i || a) return !0;
                        (a = !0), (o = o.callee);
                        break;
                      case 'Identifier':
                        return !1;
                      default:
                        return !0;
                    }
                  return !0;
                }
                break;
              case 'ExpressionStatement':
                if (Lp(u, !0)) return !0;
                break;
              case 'ArrowFunctionExpression':
                if (
                  'body' === r &&
                  'SequenceExpression' !== u.type &&
                  Lp(u, !1)
                )
                  return !0;
            }
            switch (u.type) {
              case 'SpreadElement':
              case 'SpreadProperty':
                return 'object' === r && 'MemberExpression' === n.type;
              case 'UpdateExpression':
                if ('UnaryExpression' === n.type)
                  return (
                    u.prefix &&
                    (('++' === u.operator && '+' === n.operator) ||
                      ('--' === u.operator && '-' === n.operator))
                  );
              case 'UnaryExpression':
                switch (n.type) {
                  case 'UnaryExpression':
                    return (
                      u.operator === n.operator &&
                      ('+' === u.operator || '-' === u.operator)
                    );
                  case 'BindExpression':
                    return !0;
                  case 'MemberExpression':
                  case 'OptionalMemberExpression':
                    return 'object' === r;
                  case 'TaggedTemplateExpression':
                    return !0;
                  case 'NewExpression':
                  case 'CallExpression':
                  case 'OptionalCallExpression':
                    return 'callee' === r;
                  case 'BinaryExpression':
                    return 'left' === r && '**' === n.operator;
                  case 'TSNonNullExpression':
                    return !0;
                  default:
                    return !1;
                }
              case 'BinaryExpression':
                if (
                  'UpdateExpression' === n.type ||
                  ('PipelineTopicExpression' === n.type && '|>' === u.operator)
                )
                  return !0;
                if (
                  'in' === u.operator &&
                  (function (e) {
                    for (var t = 0, n = e.getValue(); n; ) {
                      var r = e.getParentNode(t++);
                      if (r && 'ForStatement' === r.type && r.init === n)
                        return !0;
                      n = r;
                    }
                    return !1;
                  })(e)
                )
                  return !0;
                if ('|>' === u.operator && u.extra && u.extra.parenthesized) {
                  var s = e.getParentNode(1);
                  if ('BinaryExpression' === s.type && '|>' === s.operator)
                    return !0;
                }
              case 'TSTypeAssertion':
              case 'TSAsExpression':
              case 'LogicalExpression':
                switch (n.type) {
                  case 'ConditionalExpression':
                    return 'TSAsExpression' === u.type;
                  case 'CallExpression':
                  case 'NewExpression':
                  case 'OptionalCallExpression':
                    return 'callee' === r;
                  case 'ClassExpression':
                  case 'ClassDeclaration':
                    return 'superClass' === r;
                  case 'TSTypeAssertion':
                  case 'TaggedTemplateExpression':
                  case 'UnaryExpression':
                  case 'JSXSpreadAttribute':
                  case 'SpreadElement':
                  case 'SpreadProperty':
                  case 'BindExpression':
                  case 'AwaitExpression':
                  case 'TSAsExpression':
                  case 'TSNonNullExpression':
                  case 'UpdateExpression':
                    return !0;
                  case 'MemberExpression':
                  case 'OptionalMemberExpression':
                    return 'object' === r;
                  case 'AssignmentExpression':
                    return (
                      'left' === r &&
                      ('TSTypeAssertion' === u.type ||
                        'TSAsExpression' === u.type)
                    );
                  case 'LogicalExpression':
                    if ('LogicalExpression' === u.type)
                      return n.operator !== u.operator;
                  case 'BinaryExpression':
                    var l = u.operator,
                      c = u.type;
                    if (!l && 'TSTypeAssertion' !== c) return !0;
                    var p = Rp(l),
                      f = n.operator,
                      d = Rp(f);
                    return (
                      d > p ||
                      ('right' === r && d === p) ||
                      (d === p && !_p(f, l)) ||
                      (d < p && '%' === l ? '+' === f || '-' === f : !!jp(f))
                    );
                  default:
                    return !1;
                }
              case 'SequenceExpression':
                switch (n.type) {
                  case 'ReturnStatement':
                  case 'ForStatement':
                    return !1;
                  case 'ExpressionStatement':
                    return 'expression' !== r;
                  case 'ArrowFunctionExpression':
                    return 'body' !== r;
                  default:
                    return !0;
                }
              case 'YieldExpression':
                if (
                  'UnaryExpression' === n.type ||
                  'AwaitExpression' === n.type ||
                  'TSAsExpression' === n.type ||
                  'TSNonNullExpression' === n.type
                )
                  return !0;
              case 'AwaitExpression':
                switch (n.type) {
                  case 'TaggedTemplateExpression':
                  case 'UnaryExpression':
                  case 'LogicalExpression':
                  case 'SpreadElement':
                  case 'SpreadProperty':
                  case 'TSAsExpression':
                  case 'TSNonNullExpression':
                  case 'BindExpression':
                    return !0;
                  case 'MemberExpression':
                  case 'OptionalMemberExpression':
                    return 'object' === r;
                  case 'NewExpression':
                  case 'CallExpression':
                  case 'OptionalCallExpression':
                    return 'callee' === r;
                  case 'ConditionalExpression':
                    return 'test' === r;
                  case 'BinaryExpression':
                    return !(!u.argument && '|>' === n.operator);
                  default:
                    return !1;
                }
              case 'TSJSDocFunctionType':
              case 'TSConditionalType':
                if ('extendsType' === r && 'TSConditionalType' === n.type)
                  return !0;
              case 'TSFunctionType':
              case 'TSConstructorType':
                if ('checkType' === r && 'TSConditionalType' === n.type)
                  return !0;
              case 'TSUnionType':
              case 'TSIntersectionType':
                if ('TSUnionType' === n.type || 'TSIntersectionType' === n.type)
                  return !0;
              case 'TSInferType':
                if ('TSInferType' === u.type && 'TSRestType' === n.type)
                  return !1;
              case 'TSTypeOperator':
                return (
                  'TSArrayType' === n.type ||
                  'TSOptionalType' === n.type ||
                  'TSRestType' === n.type ||
                  ('objectType' === r && 'TSIndexedAccessType' === n.type) ||
                  'TSTypeOperator' === n.type ||
                  ('TSTypeAnnotation' === n.type &&
                    /^TSJSDoc/.test(e.getParentNode(1).type))
                );
              case 'ArrayTypeAnnotation':
                return 'NullableTypeAnnotation' === n.type;
              case 'IntersectionTypeAnnotation':
              case 'UnionTypeAnnotation':
                return (
                  'ArrayTypeAnnotation' === n.type ||
                  'NullableTypeAnnotation' === n.type ||
                  'IntersectionTypeAnnotation' === n.type ||
                  'UnionTypeAnnotation' === n.type
                );
              case 'NullableTypeAnnotation':
                return 'ArrayTypeAnnotation' === n.type;
              case 'FunctionTypeAnnotation':
                var h =
                  'NullableTypeAnnotation' === n.type ? e.getParentNode(1) : n;
                return (
                  'UnionTypeAnnotation' === h.type ||
                  'IntersectionTypeAnnotation' === h.type ||
                  'ArrayTypeAnnotation' === h.type ||
                  'NullableTypeAnnotation' === h.type ||
                  ('FunctionTypeParam' === n.type &&
                    null === n.name &&
                    Np(u).some(function (e) {
                      return (
                        e.typeAnnotation &&
                        'NullableTypeAnnotation' === e.typeAnnotation.type
                      );
                    }))
                );
              case 'StringLiteral':
              case 'NumericLiteral':
              case 'Literal':
                if (
                  'string' == typeof u.value &&
                  'ExpressionStatement' === n.type &&
                  !n.directive
                ) {
                  var g = e.getParentNode(1);
                  return 'Program' === g.type || 'BlockStatement' === g.type;
                }
                return (
                  'object' === r &&
                  'MemberExpression' === n.type &&
                  'number' == typeof u.value
                );
              case 'AssignmentExpression':
                var y = e.getParentNode(1);
                return (
                  ('body' === r && 'ArrowFunctionExpression' === n.type) ||
                  (('key' !== r ||
                    ('ClassProperty' !== n.type &&
                      'FieldDefinition' !== n.type) ||
                    !n.computed) &&
                    (('init' !== r && 'update' !== r) ||
                      'ForStatement' !== n.type) &&
                    ('ExpressionStatement' === n.type
                      ? 'ObjectPattern' === u.left.type
                      : !(
                          ('key' === r && 'TSPropertySignature' === n.type) ||
                          'AssignmentExpression' === n.type ||
                          ('SequenceExpression' === n.type &&
                            y &&
                            'ForStatement' === y.type &&
                            (y.init === n || y.update === n)) ||
                          ('value' === r &&
                            'Property' === n.type &&
                            y &&
                            'ObjectPattern' === y.type &&
                            y.properties.includes(n)) ||
                          'NGChainedExpression' === n.type
                        )))
                );
              case 'ConditionalExpression':
                switch (n.type) {
                  case 'TaggedTemplateExpression':
                  case 'UnaryExpression':
                  case 'SpreadElement':
                  case 'SpreadProperty':
                  case 'BinaryExpression':
                  case 'LogicalExpression':
                  case 'NGPipeExpression':
                  case 'ExportDefaultDeclaration':
                  case 'AwaitExpression':
                  case 'JSXSpreadAttribute':
                  case 'TSTypeAssertion':
                  case 'TypeCastExpression':
                  case 'TSAsExpression':
                  case 'TSNonNullExpression':
                    return !0;
                  case 'NewExpression':
                  case 'CallExpression':
                  case 'OptionalCallExpression':
                    return 'callee' === r;
                  case 'ConditionalExpression':
                    return 'test' === r;
                  case 'MemberExpression':
                  case 'OptionalMemberExpression':
                    return 'object' === r;
                  default:
                    return !1;
                }
              case 'FunctionExpression':
                switch (n.type) {
                  case 'NewExpression':
                  case 'CallExpression':
                  case 'OptionalCallExpression':
                    return 'callee' === r;
                  case 'TaggedTemplateExpression':
                    return !0;
                  default:
                    return !1;
                }
              case 'ArrowFunctionExpression':
                switch (n.type) {
                  case 'PipelineTopicExpression':
                    return !(!u.extra || !u.extra.parenthesized);
                  case 'BinaryExpression':
                    return (
                      '|>' !== n.operator || (u.extra && u.extra.parenthesized)
                    );
                  case 'NewExpression':
                  case 'CallExpression':
                  case 'OptionalCallExpression':
                    return 'callee' === r;
                  case 'MemberExpression':
                  case 'OptionalMemberExpression':
                    return 'object' === r;
                  case 'TSAsExpression':
                  case 'BindExpression':
                  case 'TaggedTemplateExpression':
                  case 'UnaryExpression':
                  case 'LogicalExpression':
                  case 'AwaitExpression':
                  case 'TSTypeAssertion':
                    return !0;
                  case 'ConditionalExpression':
                    return 'test' === r;
                  default:
                    return !1;
                }
              case 'ClassExpression':
                switch (n.type) {
                  case 'NewExpression':
                    return 'callee' === r;
                  default:
                    return !1;
                }
              case 'OptionalMemberExpression':
              case 'OptionalCallExpression':
                var D = e.getParentNode(1);
                if (
                  ('object' === r && 'MemberExpression' === n.type) ||
                  ('callee' === r &&
                    ('CallExpression' === n.type ||
                      'NewExpression' === n.type)) ||
                  ('TSNonNullExpression' === n.type &&
                    'MemberExpression' === D.type &&
                    D.object === n)
                )
                  return !0;
              case 'CallExpression':
              case 'MemberExpression':
              case 'TaggedTemplateExpression':
              case 'TSNonNullExpression':
                if (
                  'callee' === r &&
                  ('BindExpression' === n.type || 'NewExpression' === n.type)
                )
                  for (var v = u; v; )
                    switch (v.type) {
                      case 'CallExpression':
                      case 'OptionalCallExpression':
                        return !0;
                      case 'MemberExpression':
                      case 'OptionalMemberExpression':
                      case 'BindExpression':
                        v = v.object;
                        break;
                      case 'TaggedTemplateExpression':
                        v = v.tag;
                        break;
                      case 'TSNonNullExpression':
                        v = v.expression;
                        break;
                      default:
                        return !1;
                    }
                return !1;
              case 'BindExpression':
                return (
                  ('callee' === r &&
                    ('BindExpression' === n.type ||
                      'NewExpression' === n.type)) ||
                  ('object' === r &&
                    ('MemberExpression' === n.type ||
                      'OptionalMemberExpression' === n.type))
                );
              case 'NGPipeExpression':
                return !(
                  'NGRoot' === n.type ||
                  'NGMicrosyntaxExpression' === n.type ||
                  !(
                    'ObjectProperty' !== n.type ||
                    (u.extra && u.extra.parenthesized)
                  ) ||
                  'ArrayExpression' === n.type ||
                  (('CallExpression' === n.type ||
                    'OptionalCallExpression' === n.type) &&
                    n.arguments[r] === u) ||
                  ('right' === r && 'NGPipeExpression' === n.type) ||
                  ('property' === r && 'MemberExpression' === n.type) ||
                  'AssignmentExpression' === n.type
                );
              case 'JSXFragment':
              case 'JSXElement':
                return (
                  'callee' === r ||
                  ('left' === r &&
                    'BinaryExpression' === n.type &&
                    '<' === n.operator) ||
                  ('ArrayExpression' !== n.type &&
                    'ArrowFunctionExpression' !== n.type &&
                    'AssignmentExpression' !== n.type &&
                    'AssignmentPattern' !== n.type &&
                    'BinaryExpression' !== n.type &&
                    'CallExpression' !== n.type &&
                    'NewExpression' !== n.type &&
                    'ConditionalExpression' !== n.type &&
                    'ExpressionStatement' !== n.type &&
                    'JsExpressionRoot' !== n.type &&
                    'JSXAttribute' !== n.type &&
                    'JSXElement' !== n.type &&
                    'JSXExpressionContainer' !== n.type &&
                    'JSXFragment' !== n.type &&
                    'LogicalExpression' !== n.type &&
                    'ObjectProperty' !== n.type &&
                    'OptionalCallExpression' !== n.type &&
                    'Property' !== n.type &&
                    'ReturnStatement' !== n.type &&
                    'ThrowStatement' !== n.type &&
                    'TypeCastExpression' !== n.type &&
                    'VariableDeclarator' !== n.type &&
                    'YieldExpression' !== n.type)
                );
              case 'TypeAnnotation':
                return (
                  'returnType' === r &&
                  'ArrowFunctionExpression' === n.type &&
                  Ip(u, function (e) {
                    return (
                      ('ObjectTypeAnnotation' === e.type &&
                        Ip(e, function (e) {
                          return 'FunctionTypeAnnotation' === e.type || void 0;
                        })) ||
                      void 0
                    );
                  })
                );
            }
            return !1;
          }
          function Vp(e) {
            var t = e.getValue(),
              n = e.getParentNode(),
              r = e.getName();
            switch (n.type) {
              case 'NGPipeExpression':
                if (
                  'number' == typeof r &&
                  n.arguments[r] === t &&
                  n.arguments.length - 1 === r
                )
                  return e.callParent(Vp);
                break;
              case 'ObjectProperty':
                if ('value' === r) {
                  var u = e.getParentNode(1);
                  return u.properties[u.properties.length - 1] === n;
                }
                break;
              case 'BinaryExpression':
              case 'LogicalExpression':
                if ('right' === r) return e.callParent(Vp);
                break;
              case 'ConditionalExpression':
                if ('alternate' === r) return e.callParent(Vp);
                break;
              case 'UnaryExpression':
                if (n.prefix) return e.callParent(Vp);
            }
            return !1;
          }
          var qp = $p,
            Wp = vn.builders,
            Up = Wp.concat,
            Jp = Wp.join,
            zp = Wp.line,
            Gp = Wp.group,
            Hp = Wp.softline,
            Xp = Wp.indent,
            Yp = function e(t) {
              switch (t.type) {
                case 'MemberExpression':
                  switch (t.property.type) {
                    case 'Identifier':
                    case 'NumericLiteral':
                    case 'StringLiteral':
                      return e(t.object);
                  }
                  return !1;
                case 'Identifier':
                  return !0;
                default:
                  return !1;
              }
            },
            Kp = function (e, t, n) {
              var r = e.getValue();
              if (
                (t.__onHtmlBindingRoot &&
                  null === e.getName() &&
                  t.__onHtmlBindingRoot(r, t),
                'File' === r.type)
              )
                return t.__isVueForBindingLeft
                  ? e.call(
                      function (e) {
                        var t = Jp(Up([',', zp]), e.map(n, 'params'));
                        return 1 === e.getValue().params.length
                          ? t
                          : Up(['(', Xp(Up([Hp, Gp(t)])), Hp, ')']);
                      },
                      'program',
                      'body',
                      0
                    )
                  : t.__isVueBindings
                  ? e.call(
                      function (e) {
                        return Jp(Up([',', zp]), e.map(n, 'params'));
                      },
                      'program',
                      'body',
                      0
                    )
                  : void 0;
            },
            Qp = function (e, t) {
              switch (t.parser) {
                case 'json':
                case 'json5':
                case 'json-stringify':
                case '__js_expression':
                case '__vue_expression':
                  return Object.assign({}, e, {
                    type: t.parser.startsWith('__')
                      ? 'JsExpressionRoot'
                      : 'JsonRoot',
                    node: e,
                    comments: [],
                    rootMarker: t.rootMarker,
                  });
                default:
                  return e;
              }
            },
            Zp = vn.builders,
            ef = Zp.concat,
            tf = Zp.group,
            nf = Zp.indent,
            rf = Zp.join,
            uf = Zp.line,
            af = Zp.hardline,
            of = Bl.hasNewlineBetweenOrAfterDecorators,
            sf = Bl.getParentExportDeclaration,
            lf = function (e) {
              var t = e.getValue();
              return !t.optional ||
                ('Identifier' === t.type && t === e.getParentNode().key)
                ? ''
                : 'OptionalCallExpression' === t.type ||
                  ('OptionalMemberExpression' === t.type && t.computed)
                ? '?.'
                : '?';
            },
            cf = function (e, t, n) {
              var r = e.getValue();
              return r.typeArguments
                ? e.call(n, 'typeArguments')
                : r.typeParameters
                ? e.call(n, 'typeParameters')
                : '';
            },
            pf = function (e, t, n) {
              return ef(['::', e.call(n, 'callee')]);
            },
            ff = function (e, t, n) {
              var r = e.getValue();
              return r.modifiers && r.modifiers.length
                ? ef([rf(' ', e.map(n, 'modifiers')), ' '])
                : '';
            },
            df = function (e, t, n) {
              var r = e.getValue();
              return tf(
                ef([rf(uf, e.map(n, 'decorators')), of(r, t) ? af : uf])
              );
            },
            hf = function (e, t) {
              var n = sf(e);
              return n
                ? (Eo.strictEqual(n.type, 'DeclareExportDeclaration'), t)
                : ef(['declare ', t]);
            },
            gf = function (e, t, n) {
              return 'EmptyStatement' === e.type
                ? ';'
                : 'BlockStatement' === e.type || n
                ? ef([' ', t])
                : nf(ef([uf, t]));
            },
            mf = vn.builders,
            yf = mf.concat,
            Df = mf.softline,
            vf = mf.group,
            Ef = mf.indent,
            Cf = mf.join,
            bf = mf.line,
            Af = mf.ifBreak,
            Ff = mf.hardline,
            xf = Wo.printDanglingComments,
            Sf = Bl.hasDanglingComments,
            wf = Bl.shouldPrintComma,
            Bf = Bl.needsHardlineAfterDanglingComment,
            Tf = Ai,
            kf = Si;
          function Nf(e, t, n) {
            var r = e.getValue();
            if (!r.source) return '';
            var u = [];
            return (
              Pf(r, t) || u.push(' from'),
              u.push(' ', e.call(n, 'source')),
              yf(u)
            );
          }
          function Of(e, t, n) {
            var r = e.getValue();
            if (Pf(r, t)) return '';
            var u = [' '];
            if (r.specifiers && r.specifiers.length > 0) {
              var a = [],
                i = [];
              e.each(function (t) {
                var r = e.getValue().type;
                if (
                  'ExportNamespaceSpecifier' === r ||
                  'ExportDefaultSpecifier' === r ||
                  'ImportNamespaceSpecifier' === r ||
                  'ImportDefaultSpecifier' === r
                )
                  a.push(n(t));
                else {
                  if ('ExportSpecifier' !== r && 'ImportSpecifier' !== r)
                    throw new Error(
                      'Unknown specifier type '.concat(JSON.stringify(r))
                    );
                  i.push(n(t));
                }
              }, 'specifiers'),
                u.push(Cf(', ', a)),
                0 !== i.length &&
                  (0 !== a.length && u.push(', '),
                  i.length > 1 ||
                  a.length > 0 ||
                  r.specifiers.some(function (e) {
                    return e.comments;
                  })
                    ? u.push(
                        vf(
                          yf([
                            '{',
                            Ef(
                              yf([
                                t.bracketSpacing ? bf : Df,
                                Cf(yf([',', bf]), i),
                              ])
                            ),
                            Af(wf(t) ? ',' : ''),
                            t.bracketSpacing ? bf : Df,
                            '}',
                          ])
                        )
                      )
                    : u.push(
                        yf([
                          '{',
                          t.bracketSpacing ? ' ' : '',
                          yf(i),
                          t.bracketSpacing ? ' ' : '',
                          '}',
                        ])
                      ));
            } else u.push('{}');
            return yf(u);
          }
          function Pf(e, t) {
            var n = e.type,
              r = e.importKind,
              u = e.source,
              a = e.specifiers;
            return !(
              'ImportDeclaration' !== n ||
              (Array.isArray(a) && a.length > 0) ||
              'type' === r ||
              /{\s*}/.test(t.originalText.slice(Tf(e), Tf(u)))
            );
          }
          function Mf(e, t, n) {
            var r = e.getNode();
            return Array.isArray(r.assertions) && 0 !== r.assertions.length
              ? yf([
                  ' assert {',
                  t.bracketSpacing ? ' ' : '',
                  Cf(', ', e.map(n, 'assertions')),
                  t.bracketSpacing ? ' ' : '',
                  '}',
                ])
              : '';
          }
          var If = function (e, t, n) {
              var r = e.getValue(),
                u = t.semi ? ';' : '',
                a = [],
                i = r.importKind;
              return (
                a.push('import'),
                i && 'value' !== i && a.push(' ', i),
                a.push(Of(e, t, n), Nf(e, t, n), Mf(e, t, n)),
                a.push(u),
                yf(a)
              );
            },
            jf = function (e, t, n) {
              var r = e.getValue(),
                u = [],
                a = r.type,
                i = r.exportKind,
                o = r.declaration;
              return (
                'DeclareExportDeclaration' === a && u.push('declare '),
                u.push('export'),
                (r.default || 'ExportDefaultDeclaration' === a) &&
                  u.push(' default'),
                Sf(r) && (u.push(' ', xf(e, t, !0)), Bf(r) && u.push(Ff)),
                o
                  ? u.push(' ', e.call(n, 'declaration'))
                  : u.push(
                      'type' === i ? ' type' : '',
                      Of(e, t, n),
                      Nf(e, t, n),
                      Mf(e, t, n)
                    ),
                (function (e, t) {
                  if (!t.semi) return !1;
                  var n = e.type,
                    r = e.declaration,
                    u = e.default || 'ExportDefaultDeclaration' === n;
                  if (!r) return !0;
                  var a = r.type;
                  return !(
                    !u ||
                    'ClassDeclaration' === a ||
                    'FunctionDeclaration' === a ||
                    'TSInterfaceDeclaration' === a ||
                    'DeclareClass' === a ||
                    'DeclareFunction' === a ||
                    'TSDeclareFunction' === a ||
                    'EnumDeclaration' === a
                  );
                })(r, t) && u.push(';'),
                yf(u)
              );
            },
            Lf = function (e, t, n) {
              var r = e.getValue(),
                u = t.semi ? ';' : '',
                a = [],
                i = r.type,
                o = r.exportKind,
                s = r.exported;
              return (
                'DeclareExportAllDeclaration' === i &&
                  (a.push('declare '), (u = '')),
                a.push('export'),
                'type' === o && a.push(' type'),
                a.push(' *'),
                s && a.push(' as ', e.call(n, 'exported')),
                a.push(Nf(e, t, n), Mf(e, t, n), u),
                yf(a)
              );
            },
            _f = function (e, t, n) {
              var r = e.getNode(),
                u = r.type,
                a = r.importKind,
                i = [];
              'ImportSpecifier' === u && a && i.push(a, ' ');
              var o = u.startsWith('Import'),
                s = o ? 'imported' : 'local',
                l = o ? 'local' : 'exported',
                c = '',
                p = '';
              return (
                'ExportNamespaceSpecifier' === u ||
                'ImportNamespaceSpecifier' === u
                  ? (c = '*')
                  : r[s] && (c = e.call(n, s)),
                !r[l] || (r[s] && kf(r[s], r[l])) || (p = e.call(n, l)),
                i.push(c, c && p ? ' as ' : '', p),
                yf(i)
              );
            },
            Rf = Ut.hasNewlineInRange,
            $f = Bl.isJSXNode,
            Vf = Bl.isBlockComment,
            qf = Ai,
            Wf = Fi,
            Uf = vn.builders,
            Jf = Uf.concat,
            zf = Uf.line,
            Gf = Uf.softline,
            Hf = Uf.group,
            Xf = Uf.indent,
            Yf = Uf.align,
            Kf = Uf.ifBreak,
            Qf = Uf.dedent,
            Zf = Uf.breakParent,
            ed = function (e, t, n, r) {
              var u,
                a,
                i = e.getValue(),
                o = i[r.consequentNodePropertyName],
                s = i[r.alternateNodePropertyName],
                l = [],
                c = !1,
                p = e.getParentNode(),
                f =
                  p.type === r.conditionalNodeType &&
                  r.testNodePropertyNames.some(function (e) {
                    return p[e] === i;
                  }),
                d = p.type === r.conditionalNodeType && !f,
                h = 0;
              do {
                (a = u || i), (u = e.getParentNode(h)), h++;
              } while (
                u &&
                u.type === r.conditionalNodeType &&
                r.testNodePropertyNames.every(function (e) {
                  return u[e] !== a;
                })
              );
              var g = u || p,
                y = a;
              if (
                r.shouldCheckJsx &&
                ($f(i[r.testNodePropertyNames[0]]) ||
                  $f(o) ||
                  $f(s) ||
                  (function (e) {
                    var t = [];
                    return (
                      (function e(n) {
                        'ConditionalExpression' === n.type
                          ? (e(n.test), e(n.consequent), e(n.alternate))
                          : t.push(n);
                      })(e),
                      t
                    );
                  })(y).some($f))
              ) {
                (c = !0), (d = !0);
                var D = function (e) {
                    return Jf([Kf('(', ''), Xf(Jf([Gf, e])), Gf, Kf(')', '')]);
                  },
                  v = function (e) {
                    return (
                      'NullLiteral' === e.type ||
                      ('Literal' === e.type && null === e.value) ||
                      ('Identifier' === e.type && 'undefined' === e.name)
                    );
                  };
                l.push(
                  ' ? ',
                  v(o)
                    ? e.call(n, r.consequentNodePropertyName)
                    : D(e.call(n, r.consequentNodePropertyName)),
                  ' : ',
                  s.type === r.conditionalNodeType || v(s)
                    ? e.call(n, r.alternateNodePropertyName)
                    : D(e.call(n, r.alternateNodePropertyName))
                );
              } else {
                var E = Jf([
                  zf,
                  '? ',
                  o.type === r.conditionalNodeType ? Kf('', '(') : '',
                  Yf(2, e.call(n, r.consequentNodePropertyName)),
                  o.type === r.conditionalNodeType ? Kf('', ')') : '',
                  zf,
                  ': ',
                  s.type === r.conditionalNodeType
                    ? e.call(n, r.alternateNodePropertyName)
                    : Yf(2, e.call(n, r.alternateNodePropertyName)),
                ]);
                l.push(
                  p.type !== r.conditionalNodeType ||
                    p[r.alternateNodePropertyName] === i ||
                    f
                    ? E
                    : t.useTabs
                    ? Qf(Xf(E))
                    : Yf(Math.max(0, t.tabWidth - 2), E)
                );
              }
              var C,
                b = hi(
                  [].concat(
                    m(
                      r.testNodePropertyNames.map(function (e) {
                        return i[e].comments;
                      })
                    ),
                    [o.comments, s.comments]
                  )
                )
                  .filter(Boolean)
                  .some(function (e) {
                    return Vf(e) && Rf(t.originalText, qf(e), Wf(e));
                  }),
                A =
                  !c &&
                  ('MemberExpression' === p.type ||
                    'OptionalMemberExpression' === p.type ||
                    ('NGPipeExpression' === p.type && p.left === i)) &&
                  !p.computed,
                F = (function (e) {
                  return p === g
                    ? Hf(e, { shouldBreak: b })
                    : b
                    ? Jf([e, Zf])
                    : e;
                })(
                  Jf(
                    [].concat(
                      ((C = Jf(r.beforeParts())),
                      p.type === r.conditionalNodeType &&
                      p[r.alternateNodePropertyName] === i
                        ? Yf(2, C)
                        : C),
                      d ? Jf(l) : Xf(Jf(l)),
                      r.afterParts(A)
                    )
                  )
                );
              return f ? Hf(Jf([Xf(Jf([Gf, F])), Gf])) : F;
            },
            td = Ut.getNextNonSpaceNonCommentCharacter,
            nd = Ut.isNextLineEmpty,
            rd = Wo.printDanglingComments,
            ud = vn.builders,
            ad = ud.concat,
            id = ud.line,
            od = ud.hardline,
            sd = ud.softline,
            ld = ud.group,
            cd = ud.indent,
            pd = ud.ifBreak,
            fd = vn.utils.removeLines,
            dd = Bl.getFunctionParameters,
            hd = Bl.iterateFunctionParametersPath,
            gd = Bl.isSimpleType,
            md = Bl.isTestCall,
            yd = Bl.isTypeAnnotationAFunction,
            Dd = Bl.isObjectType,
            vd = Bl.isObjectTypePropertyAFunction,
            Ed = Bl.hasRestParameter,
            Cd = Bl.shouldPrintComma,
            bd = Fi,
            Ad = cf;
          function Fd(e) {
            if (!e) return !1;
            var t = dd(e);
            if (1 !== t.length) return !1;
            var n = C(t, 1)[0];
            return (
              !n.comments &&
              ('ObjectPattern' === n.type ||
                'ArrayPattern' === n.type ||
                ('Identifier' === n.type &&
                  n.typeAnnotation &&
                  ('TypeAnnotation' === n.typeAnnotation.type ||
                    'TSTypeAnnotation' === n.typeAnnotation.type) &&
                  Dd(n.typeAnnotation.typeAnnotation)) ||
                ('FunctionTypeParam' === n.type && Dd(n.typeAnnotation)) ||
                ('AssignmentPattern' === n.type &&
                  ('ObjectPattern' === n.left.type ||
                    'ArrayPattern' === n.left.type) &&
                  ('Identifier' === n.right.type ||
                    ('ObjectExpression' === n.right.type &&
                      0 === n.right.properties.length) ||
                    ('ArrayExpression' === n.right.type &&
                      0 === n.right.elements.length))))
            );
          }
          var xd = function (e, t, n, r, u) {
              var a = e.getValue(),
                i = dd(a),
                o = u ? Ad(e, n, t) : '';
              if (0 === i.length)
                return ad([
                  o,
                  '(',
                  rd(e, n, !0, function (e) {
                    return ')' === td(n.originalText, e, bd);
                  }),
                  ')',
                ]);
              var s = e.getParentNode(),
                l = md(s),
                c = Fd(a),
                p =
                  r &&
                  !i.some(function (e) {
                    return e.comments;
                  }),
                f = [];
              if (
                (hd(e, function (e, r) {
                  var u = r === i.length - 1;
                  u && a.rest && f.push('...'),
                    f.push(e.call(t)),
                    u ||
                      (f.push(','),
                      l || c || p
                        ? f.push(' ')
                        : nd(n.originalText, i[r], bd)
                        ? f.push(od, od)
                        : f.push(id));
                }),
                p)
              )
                return ld(ad([fd(o), '(', ad(f.map(fd)), ')']));
              var d = i.every(function (e) {
                return !e.decorators;
              });
              return (c && d) || l
                ? ad([o, '(', ad(f), ')'])
                : (vd(s) ||
                    yd(s) ||
                    'TypeAlias' === s.type ||
                    'UnionTypeAnnotation' === s.type ||
                    'TSUnionType' === s.type ||
                    'IntersectionTypeAnnotation' === s.type ||
                    ('FunctionTypeAnnotation' === s.type &&
                      s.returnType === a)) &&
                  1 === i.length &&
                  null === i[0].name &&
                  a.this !== i[0] &&
                  i[0].typeAnnotation &&
                  null === a.typeParameters &&
                  gd(i[0].typeAnnotation) &&
                  !a.rest
                ? 'always' === n.arrowParens
                  ? ad(['(', ad(f), ')'])
                  : ad(f)
                : ad([
                    o,
                    '(',
                    cd(ad([sd, ad(f)])),
                    pd(!Ed(a) && Cd(n, 'all') ? ',' : ''),
                    sd,
                    ')',
                  ]);
            },
            Sd = Fd,
            wd = vn.builders.concat,
            Bd = Bl.isFlowAnnotationComment,
            Td = Bl.isSimpleType,
            kd = Bl.isObjectType,
            Nd = function (e, t, n) {
              var r = e.getValue();
              if (!r.typeAnnotation) return '';
              var u = e.getParentNode(),
                a =
                  r.definite ||
                  (u && 'VariableDeclarator' === u.type && u.definite),
                i = 'DeclareFunction' === u.type && u.id === r;
              return Bd(t.originalText, r.typeAnnotation)
                ? wd([' /*: ', e.call(n, 'typeAnnotation'), ' */'])
                : wd([i ? '' : a ? '!: ' : ': ', e.call(n, 'typeAnnotation')]);
            },
            Od = function (e) {
              if (Td(e) || kd(e)) return !0;
              if (
                'UnionTypeAnnotation' === e.type ||
                'TSUnionType' === e.type
              ) {
                var t = e.types.filter(function (e) {
                    return (
                      'VoidTypeAnnotation' === e.type ||
                      'TSVoidKeyword' === e.type ||
                      'NullLiteralTypeAnnotation' === e.type ||
                      'TSNullKeyword' === e.type
                    );
                  }).length,
                  n = e.types.some(function (e) {
                    return (
                      'ObjectTypeAnnotation' === e.type ||
                      'TSTypeLiteral' === e.type ||
                      'GenericTypeAnnotation' === e.type ||
                      'TSTypeReference' === e.type
                    );
                  });
                if (e.types.length - 1 === t && n) return !0;
              }
              return !1;
            },
            Pd = Wo.printDanglingComments,
            Md = vn.builders,
            Id = Md.concat,
            jd = Md.line,
            Ld = Md.softline,
            _d = Md.group,
            Rd = Md.indent,
            $d = Md.ifBreak,
            Vd = Ut.getLast,
            qd = Ut.isNextLineEmpty,
            Wd = Bl.hasDanglingComments,
            Ud = Bl.shouldPrintComma,
            Jd = Fi,
            zd = lf,
            Gd = Nd;
          function Hd(e, t, n, r) {
            var u = [],
              a = [];
            return (
              e.each(function (e) {
                u.push(Id(a)),
                  u.push(_d(r(e))),
                  (a = [',', jd]),
                  e.getValue() &&
                    qd(t.originalText, e.getValue(), Jd) &&
                    a.push(Ld);
              }, n),
              Id(u)
            );
          }
          var Xd = function (e, t, n) {
              var r = e.getValue(),
                u = [],
                a = 'TupleExpression' === r.type ? '#[' : '[';
              if (0 === r.elements.length)
                Wd(r) ? u.push(_d(Id([a, Pd(e, t), Ld, ']']))) : u.push(a, ']');
              else {
                var i = Vd(r.elements),
                  o = !(i && 'RestElement' === i.type),
                  s = o && null === i,
                  l =
                    !t.__inJestEach &&
                    r.elements.length > 1 &&
                    r.elements.every(function (e, t, n) {
                      var r = e && e.type;
                      if ('ArrayExpression' !== r && 'ObjectExpression' !== r)
                        return !1;
                      var u = n[t + 1];
                      if (u && r !== u.type) return !1;
                      var a =
                        'ArrayExpression' === r ? 'elements' : 'properties';
                      return e[a] && e[a].length > 1;
                    });
                u.push(
                  _d(
                    Id([
                      a,
                      Rd(Id([Ld, Hd(e, t, 'elements', n)])),
                      s ? ',' : '',
                      $d(o && !s && Ud(t) ? ',' : ''),
                      Pd(e, t, !0),
                      Ld,
                      ']',
                    ]),
                    { shouldBreak: l }
                  )
                );
              }
              return u.push(zd(e), Gd(e, t, n)), Id(u);
            },
            Yd = Hd,
            Kd = Wo.printDanglingComments,
            Qd = vn.builders,
            Zd = Qd.concat,
            eh = Qd.line,
            th = Qd.softline,
            nh = Qd.group,
            rh = Qd.indent,
            uh = Qd.ifBreak,
            ah = Qd.hardline,
            ih = Ut.getLast,
            oh = Ut.isNextLineEmpty,
            sh = Ut.hasNewlineInRange,
            lh = Ut.hasNewline,
            ch = Bl.hasDanglingComments,
            ph = Bl.shouldPrintComma,
            fh = Bl.hasNodeIgnoreComment,
            dh = Bl.isBlockComment,
            hh = Ai,
            gh = Fi,
            mh = lf,
            yh = Sd,
            Dh = Nd,
            vh = Od,
            Eh = function (e, t, n) {
              var r,
                u = t.semi ? ';' : '',
                a = e.getValue();
              r =
                'TSTypeLiteral' === a.type
                  ? 'members'
                  : 'TSInterfaceBody' === a.type
                  ? 'body'
                  : 'properties';
              var i = 'ObjectTypeAnnotation' === a.type,
                o = [];
              i && o.push('indexers', 'callProperties', 'internalSlots'),
                o.push(r);
              var s = o
                  .map(function (e) {
                    return a[e][0];
                  })
                  .sort(function (e, t) {
                    return hh(e) - hh(t);
                  })[0],
                l = e.getParentNode(0),
                c =
                  i &&
                  l &&
                  ('InterfaceDeclaration' === l.type ||
                    'DeclareInterface' === l.type ||
                    'DeclareClass' === l.type) &&
                  'body' === e.getName(),
                p =
                  'TSInterfaceBody' === a.type ||
                  c ||
                  ('ObjectPattern' === a.type &&
                    'FunctionDeclaration' !== l.type &&
                    'FunctionExpression' !== l.type &&
                    'ArrowFunctionExpression' !== l.type &&
                    'ObjectMethod' !== l.type &&
                    'ClassMethod' !== l.type &&
                    'ClassPrivateMethod' !== l.type &&
                    'AssignmentPattern' !== l.type &&
                    'CatchClause' !== l.type &&
                    a.properties.some(function (e) {
                      return (
                        e.value &&
                        ('ObjectPattern' === e.value.type ||
                          'ArrayPattern' === e.value.type)
                      );
                    })) ||
                  ('ObjectPattern' !== a.type &&
                    s &&
                    sh(t.originalText, hh(a), hh(s))),
                f = c
                  ? ';'
                  : 'TSInterfaceBody' === a.type || 'TSTypeLiteral' === a.type
                  ? uh(u, ';')
                  : ',',
                d = 'RecordExpression' === a.type ? '#{' : a.exact ? '{|' : '{',
                h = a.exact ? '|}' : '}',
                g = [];
              o.forEach(function (t) {
                e.each(function (e) {
                  var t = e.getValue();
                  g.push({ node: t, printed: n(e), loc: hh(t) });
                }, t);
              });
              var m = [],
                y = g
                  .sort(function (e, t) {
                    return e.loc - t.loc;
                  })
                  .map(function (e) {
                    var n = Zd(m.concat(nh(e.printed)));
                    return (
                      (m = [f, eh]),
                      ('TSPropertySignature' !== e.node.type &&
                        'TSMethodSignature' !== e.node.type &&
                        'TSConstructSignatureDeclaration' !== e.node.type) ||
                        !fh(e.node) ||
                        m.shift(),
                      oh(t.originalText, e.node, gh) && m.push(ah),
                      n
                    );
                  });
              if (a.inexact) {
                var D;
                if (ch(a)) {
                  var v = !a.comments.every(function (e) {
                      return dh(e);
                    }),
                    E = Kd(e, t, !0);
                  D = Zd([
                    E,
                    v ||
                    lh(t.originalText, gh(a.comments[a.comments.length - 1]))
                      ? ah
                      : eh,
                    '...',
                  ]);
                } else D = '...';
                y.push(Zd(m.concat(D)));
              }
              var C,
                b = ih(a[r]),
                A = !(
                  a.inexact ||
                  (b && 'RestElement' === b.type) ||
                  (b &&
                    ('TSPropertySignature' === b.type ||
                      'TSCallSignatureDeclaration' === b.type ||
                      'TSMethodSignature' === b.type ||
                      'TSConstructSignatureDeclaration' === b.type) &&
                    fh(b))
                );
              if (0 === y.length) {
                if (!ch(a)) return Zd([d, h, Dh(e, t, n)]);
                C = nh(Zd([d, Kd(e, t), th, h, mh(e), Dh(e, t, n)]));
              } else
                C = Zd([
                  d,
                  rh(Zd([t.bracketSpacing ? eh : th, Zd(y)])),
                  uh(A && (',' !== f || ph(t)) ? f : ''),
                  Zd([t.bracketSpacing ? eh : th, h]),
                  mh(e),
                  Dh(e, t, n),
                ]);
              return e.match(
                function (e) {
                  return 'ObjectPattern' === e.type && !e.decorators;
                },
                function (e, t, n) {
                  return (
                    yh(e) &&
                    ('params' === t ||
                      'parameters' === t ||
                      'this' === t ||
                      'rest' === t) &&
                    0 === n
                  );
                }
              ) ||
                e.match(
                  vh,
                  function (e, t) {
                    return 'typeAnnotation' === t;
                  },
                  function (e, t) {
                    return 'typeAnnotation' === t;
                  },
                  function (e, t, n) {
                    return (
                      yh(e) &&
                      ('params' === t ||
                        'parameters' === t ||
                        'this' === t ||
                        'rest' === t) &&
                      0 === n
                    );
                  }
                )
                ? C
                : nh(C, { shouldBreak: p });
            },
            Ch = Wo.printComments,
            bh = Wo.printDanglingComments,
            Ah = vn.builders,
            Fh = Ah.concat,
            xh = Ah.line,
            Sh = Ah.hardline,
            wh = Ah.softline,
            Bh = Ah.group,
            Th = Ah.indent,
            kh = Ah.conditionalGroup,
            Nh = Ah.fill,
            Oh = Ah.ifBreak,
            Ph = Ah.lineSuffixBoundary,
            Mh = vn.utils,
            Ih = Mh.willBreak,
            jh = Mh.isLineNext,
            Lh = Mh.isEmpty,
            _h = Ut.getLast,
            Rh = Ut.getPreferredQuote,
            $h = Bl.hasTrailingComment,
            Vh = Bl.isEmptyJSXElement,
            qh = Bl.isJSXWhitespaceExpression,
            Wh = Bl.isJSXNode,
            Uh = Bl.isMeaningfulJSXText,
            Jh = Bl.matchJsxWhitespaceRegex,
            zh = Bl.rawText,
            Gh = Bl.isLiteral,
            Hh = Bl.isCallOrOptionalCallExpression,
            Xh = Bl.isStringLiteral,
            Yh = Bl.isBinaryish,
            Kh = Bl.isBlockComment,
            Qh = oc.willPrintOwnComments;
          function Zh(e, t, n, r) {
            return e
              ? ''
              : ('JSXElement' === n.type && !n.closingElement) ||
                (r && 'JSXElement' === r.type && !r.closingElement)
              ? 1 === t.length
                ? wh
                : Sh
              : wh;
          }
          function eg(e, t, n, r) {
            return e
              ? Sh
              : 1 === t.length
              ? ('JSXElement' === n.type && !n.closingElement) ||
                (r && 'JSXElement' === r.type && !r.closingElement)
                ? Sh
                : wh
              : Sh;
          }
          function tg(e, t, n) {
            var r = e.getValue();
            return Fh([
              '{',
              e.call(
                function (e) {
                  var r = Fh(['...', n(e)]),
                    u = e.getValue();
                  return u.comments && u.comments.length && Qh(e)
                    ? Fh([
                        Th(
                          Fh([
                            wh,
                            Ch(
                              e,
                              function () {
                                return r;
                              },
                              t
                            ),
                          ])
                        ),
                        wh,
                      ])
                    : r;
                },
                'JSXSpreadAttribute' === r.type ? 'argument' : 'expression'
              ),
              '}',
            ]);
          }
          var ng = function (e, t, n) {
              var r = Ch(
                e,
                function () {
                  return (function (e, t, n) {
                    var r = e.getValue();
                    if ('JSXElement' === r.type && Vh(r))
                      return Fh([
                        e.call(n, 'openingElement'),
                        e.call(n, 'closingElement'),
                      ]);
                    var u =
                        'JSXElement' === r.type
                          ? e.call(n, 'openingElement')
                          : e.call(n, 'openingFragment'),
                      a =
                        'JSXElement' === r.type
                          ? e.call(n, 'closingElement')
                          : e.call(n, 'closingFragment');
                    if (
                      1 === r.children.length &&
                      'JSXExpressionContainer' === r.children[0].type &&
                      ('TemplateLiteral' === r.children[0].expression.type ||
                        'TaggedTemplateExpression' ===
                          r.children[0].expression.type)
                    )
                      return Fh([u, Fh(e.map(n, 'children')), a]);
                    r.children = r.children.map(function (e) {
                      return qh(e)
                        ? { type: 'JSXText', value: ' ', raw: ' ' }
                        : e;
                    });
                    for (
                      var i = r.children.filter(Wh).length > 0,
                        o =
                          r.children.filter(function (e) {
                            return 'JSXExpressionContainer' === e.type;
                          }).length > 1,
                        s =
                          'JSXElement' === r.type &&
                          r.openingElement.attributes.length > 1,
                        l = Ih(u) || i || s || o,
                        c = 'mdx' === e.getParentNode().rootMarker,
                        p = t.singleQuote ? "{' '}" : '{" "}',
                        f = c ? Fh([' ']) : Oh(Fh([p, wh]), ' '),
                        d =
                          r.openingElement &&
                          r.openingElement.name &&
                          'fbt' === r.openingElement.name.name,
                        h = (function (e, t, n, r, u) {
                          var a = e.getValue(),
                            i = [];
                          return (
                            e.each(function (e, t) {
                              var o = e.getValue();
                              if (Gh(o)) {
                                var s = zh(o);
                                if (Uh(o)) {
                                  var l,
                                    c = s.split(Jh);
                                  if ('' === c[0]) {
                                    if (
                                      (i.push(''), c.shift(), /\n/.test(c[0]))
                                    ) {
                                      var p = a.children[t + 1];
                                      i.push(eg(u, c[1], o, p));
                                    } else i.push(r);
                                    c.shift();
                                  }
                                  if (
                                    ('' === _h(c) && (c.pop(), (l = c.pop())),
                                    0 === c.length)
                                  )
                                    return;
                                  if (
                                    (c.forEach(function (e, t) {
                                      t % 2 == 1 ? i.push(xh) : i.push(e);
                                    }),
                                    void 0 !== l)
                                  )
                                    if (/\n/.test(l)) {
                                      var f = a.children[t + 1];
                                      i.push(eg(u, _h(i), o, f));
                                    } else i.push(r);
                                  else {
                                    var d = a.children[t + 1];
                                    i.push(Zh(u, _h(i), o, d));
                                  }
                                } else
                                  /\n/.test(s)
                                    ? s.match(/\n/g).length > 1 &&
                                      (i.push(''), i.push(Sh))
                                    : (i.push(''), i.push(r));
                              } else {
                                var h = n(e);
                                i.push(h);
                                var g = a.children[t + 1];
                                if (g && Uh(g)) {
                                  var m = zh(g).trim().split(Jh)[0];
                                  i.push(Zh(u, m, o, g));
                                } else i.push(Sh);
                              }
                            }, 'children'),
                            i
                          );
                        })(e, 0, n, f, d),
                        g = r.children.some(function (e) {
                          return Uh(e);
                        }),
                        m = h.length - 2;
                      m >= 0;
                      m--
                    ) {
                      var y = '' === h[m] && '' === h[m + 1],
                        D = h[m] === Sh && '' === h[m + 1] && h[m + 2] === Sh,
                        v =
                          (h[m] === wh || h[m] === Sh) &&
                          '' === h[m + 1] &&
                          h[m + 2] === f,
                        E =
                          h[m] === f &&
                          '' === h[m + 1] &&
                          (h[m + 2] === wh || h[m + 2] === Sh),
                        C = h[m] === f && '' === h[m + 1] && h[m + 2] === f,
                        b =
                          (h[m] === wh && '' === h[m + 1] && h[m + 2] === Sh) ||
                          (h[m] === Sh && '' === h[m + 1] && h[m + 2] === wh);
                      (D && g) || y || v || C || b
                        ? h.splice(m, 2)
                        : E && h.splice(m + 1, 2);
                    }
                    for (; h.length && (jh(_h(h)) || Lh(_h(h))); ) h.pop();
                    for (
                      ;
                      h.length &&
                      (jh(h[0]) || Lh(h[0])) &&
                      (jh(h[1]) || Lh(h[1]));

                    )
                      h.shift(), h.shift();
                    var A = [];
                    h.forEach(function (e, t) {
                      if (e === f) {
                        if (1 === t && '' === h[t - 1])
                          return 2 === h.length
                            ? void A.push(p)
                            : void A.push(Fh([p, Sh]));
                        if (t === h.length - 1) return void A.push(p);
                        if ('' === h[t - 1] && h[t - 2] === Sh)
                          return void A.push(p);
                      }
                      A.push(e), Ih(e) && (l = !0);
                    });
                    var F = g ? Nh(A) : Bh(Fh(A), { shouldBreak: !0 });
                    if (c) return F;
                    var x = Bh(Fh([u, Th(Fh([Sh, F])), Sh, a]));
                    return l ? x : kh([Bh(Fh([u, Fh(h), a])), x]);
                  })(e, t, n);
                },
                t
              );
              return (function (e, t, n) {
                var r = e.getParentNode();
                if (!r) return t;
                if (
                  {
                    ArrayExpression: !0,
                    JSXAttribute: !0,
                    JSXElement: !0,
                    JSXExpressionContainer: !0,
                    JSXFragment: !0,
                    ExpressionStatement: !0,
                    CallExpression: !0,
                    OptionalCallExpression: !0,
                    ConditionalExpression: !0,
                    JsExpressionRoot: !0,
                  }[r.type]
                )
                  return t;
                var u = e.match(
                    void 0,
                    function (e) {
                      return 'ArrowFunctionExpression' === e.type;
                    },
                    Hh,
                    function (e) {
                      return 'JSXExpressionContainer' === e.type;
                    }
                  ),
                  a = qp(e, n);
                return Bh(
                  Fh([a ? '' : Oh('('), Th(Fh([wh, t])), wh, a ? '' : Oh(')')]),
                  { shouldBreak: u }
                );
              })(e, r, t);
            },
            rg = function (e, t, n) {
              var r = e.getValue(),
                u = [];
              if ((u.push(e.call(n, 'name')), r.value)) {
                var a;
                if (Xh(r.value)) {
                  var i = zh(r.value)
                      .replace(/&apos;/g, "'")
                      .replace(/&quot;/g, '"'),
                    o = Rh(i, t.jsxSingleQuote ? "'" : '"'),
                    s = "'" === o ? '&apos;' : '&quot;';
                  (i = i.slice(1, -1).replace(new RegExp(o, 'g'), s)),
                    (a = Fh([o, i, o]));
                } else a = e.call(n, 'value');
                u.push('=', a);
              }
              return Fh(u);
            },
            ug = function (e, t, n) {
              var r = e.getValue(),
                u =
                  (r.name && r.name.comments && r.name.comments.length > 0) ||
                  (r.typeParameters &&
                    r.typeParameters.comments &&
                    r.typeParameters.comments.length > 0);
              if (r.selfClosing && !r.attributes.length && !u)
                return Fh([
                  '<',
                  e.call(n, 'name'),
                  e.call(n, 'typeParameters'),
                  ' />',
                ]);
              if (
                r.attributes &&
                1 === r.attributes.length &&
                r.attributes[0].value &&
                Xh(r.attributes[0].value) &&
                !r.attributes[0].value.value.includes('\n') &&
                !u &&
                (!r.attributes[0].comments || !r.attributes[0].comments.length)
              )
                return Bh(
                  Fh([
                    '<',
                    e.call(n, 'name'),
                    e.call(n, 'typeParameters'),
                    ' ',
                    Fh(e.map(n, 'attributes')),
                    r.selfClosing ? ' />' : '>',
                  ])
                );
              var a = r.attributes.length && $h(_h(r.attributes)),
                i =
                  (!r.attributes.length && !u) ||
                  (t.jsxBracketSameLine && (!u || r.attributes.length) && !a),
                o =
                  r.attributes &&
                  r.attributes.some(function (e) {
                    return (
                      e.value && Xh(e.value) && e.value.value.includes('\n')
                    );
                  });
              return Bh(
                Fh([
                  '<',
                  e.call(n, 'name'),
                  e.call(n, 'typeParameters'),
                  Fh([
                    Th(
                      Fh(
                        e.map(function (e) {
                          return Fh([xh, n(e)]);
                        }, 'attributes')
                      )
                    ),
                    r.selfClosing ? xh : i ? '>' : wh,
                  ]),
                  r.selfClosing ? '/>' : i ? '' : '>',
                ]),
                { shouldBreak: o }
              );
            },
            ag = function (e, t, n) {
              return Fh(['</', e.call(n, 'name'), '>']);
            },
            ig = function (e, t) {
              var n = e.getValue(),
                r = n.comments && n.comments.length,
                u =
                  r &&
                  !n.comments.every(function (e) {
                    return Kh(e);
                  }),
                a = 'JSXOpeningFragment' === n.type;
              return Fh([
                a ? '<' : '</',
                Th(Fh([u ? Sh : r && !a ? ' ' : '', bh(e, t, !0)])),
                u ? Sh : '',
                '>',
              ]);
            },
            og = function (e, t, n) {
              var r = e.getValue(),
                u = e.getParentNode(0),
                a = r.expression.comments && r.expression.comments.length > 0,
                i =
                  'JSXEmptyExpression' === r.expression.type ||
                  (!a &&
                    ('ArrayExpression' === r.expression.type ||
                      'ObjectExpression' === r.expression.type ||
                      'ArrowFunctionExpression' === r.expression.type ||
                      'CallExpression' === r.expression.type ||
                      'OptionalCallExpression' === r.expression.type ||
                      'FunctionExpression' === r.expression.type ||
                      'TemplateLiteral' === r.expression.type ||
                      'TaggedTemplateExpression' === r.expression.type ||
                      'DoExpression' === r.expression.type ||
                      (Wh(u) &&
                        ('ConditionalExpression' === r.expression.type ||
                          Yh(r.expression)))));
              return Bh(
                Fh(
                  i
                    ? ['{', e.call(n, 'expression'), Ph, '}']
                    : ['{', Th(Fh([wh, e.call(n, 'expression')])), wh, Ph, '}']
                )
              );
            },
            sg = function (e, t) {
              var n = e.getValue(),
                r =
                  n.comments &&
                  !n.comments.every(function (e) {
                    return Kh(e);
                  });
              return Fh([bh(e, t, !r), r ? Sh : '']);
            },
            lg = tg,
            cg = tg,
            pg = Wo.printDanglingComments,
            fg = vn.builders,
            dg = fg.concat,
            hg = fg.join,
            gg = fg.line,
            mg = fg.hardline,
            yg = fg.softline,
            Dg = fg.group,
            vg = fg.indent,
            Eg = fg.ifBreak,
            Cg = Bl.hasDanglingComments,
            bg = Bl.isTestCall,
            Ag = Bl.isBlockComment,
            Fg = Bl.shouldPrintComma,
            xg = Od,
            Sg = new WeakMap();
          function wg(e) {
            return Sg.has(e) || Sg.set(e, Symbol('typeParameters')), Sg.get(e);
          }
          function Bg(e, t) {
            var n = e.getValue();
            if (!Cg(n)) return '';
            var r = n.comments.every(function (e) {
                return Ag(e);
              }),
              u = pg(e, t, r);
            return r ? u : dg([u, mg]);
          }
          var Tg = function (e, t, n, r) {
              var u = e.getValue();
              if (!u[r]) return '';
              if (!Array.isArray(u[r])) return e.call(n, r);
              var a = e.getNode(2);
              return (null != a && bg(a)) ||
                0 === u[r].length ||
                (1 === u[r].length &&
                  (xg(u[r][0]) ||
                    ('GenericTypeAnnotation' === u[r][0].type &&
                      xg(u[r][0].id)) ||
                    ('TSTypeReference' === u[r][0].type &&
                      xg(u[r][0].typeName)) ||
                    'NullableTypeAnnotation' === u[r][0].type))
                ? dg(['<', hg(', ', e.map(n, r)), Bg(e, t), '>'])
                : Dg(
                    dg([
                      '<',
                      vg(dg([yg, hg(dg([',', gg]), e.map(n, r))])),
                      Eg(
                        'typescript' !== t.parser &&
                          'babel-ts' !== t.parser &&
                          Fg(t, 'all')
                          ? ','
                          : ''
                      ),
                      yg,
                      '>',
                    ]),
                    { id: wg(u) }
                  );
            },
            kg = wg,
            Ng = Wo.printComments,
            Og = Ut.printString,
            Pg = Ut.printNumber,
            Mg = vn.builders.concat,
            Ig = Bl.isNumericLiteral,
            jg = Bl.isSimpleNumber,
            Lg = Bl.isStringLiteral,
            _g = Bl.isStringPropSafeToUnquote,
            Rg = Bl.rawText,
            $g = new WeakMap(),
            Vg = function (e, t, n) {
              var r = e.getNode();
              if (r.computed) return Mg(['[', e.call(n, 'key'), ']']);
              var u = e.getParentNode(),
                a = r.key;
              if ('ClassPrivateProperty' === r.type && 'Identifier' === a.type)
                return Mg(['#', e.call(n, 'key')]);
              if ('consistent' === t.quoteProps && !$g.has(u)) {
                var i = (u.properties || u.body || u.members).some(function (
                  e
                ) {
                  return !e.computed && e.key && Lg(e.key) && !_g(e, t);
                });
                $g.set(u, i);
              }
              if (
                ('Identifier' === a.type ||
                  (Ig(a) &&
                    jg(Pg(Rg(a))) &&
                    String(a.value) === Pg(Rg(a)) &&
                    'typescript' !== t.parser &&
                    'babel-ts' !== t.parser)) &&
                ('json' === t.parser ||
                  ('consistent' === t.quoteProps && $g.get(u)))
              ) {
                var o = Og(
                  JSON.stringify(
                    'Identifier' === a.type ? a.name : a.value.toString()
                  ),
                  t
                );
                return e.call(function (e) {
                  return Ng(
                    e,
                    function () {
                      return o;
                    },
                    t
                  );
                }, 'key');
              }
              return _g(r, t) &&
                ('as-needed' === t.quoteProps ||
                  ('consistent' === t.quoteProps && !$g.get(u)))
                ? e.call(function (e) {
                    return Ng(
                      e,
                      function () {
                        return /^\d/.test(a.value) ? Pg(a.value) : a.value;
                      },
                      t
                    );
                  }, 'key')
                : e.call(n, 'key');
            },
            qg = Wo.printDanglingComments,
            Wg = Ut.getNextNonSpaceNonCommentCharacterIndex,
            Ug = vn.builders,
            Jg = Ug.concat,
            zg = Ug.line,
            Gg = Ug.softline,
            Hg = Ug.group,
            Xg = Ug.indent,
            Yg = Ug.ifBreak,
            Kg = Ug.hardline,
            Qg = Bl.getFunctionParameters,
            Zg = Bl.hasDanglingComments,
            em = Bl.hasLeadingOwnLineComment,
            tm = Bl.isFlowAnnotationComment,
            nm = Bl.isJSXNode,
            rm = Bl.isTemplateOnItsOwnLine,
            um = Bl.shouldPrintComma,
            am = Bl.startsWithNoLookaheadToken,
            im = Bl.returnArgumentHasLeadingComment,
            om = Bl.isBinaryish,
            sm = Bl.isLineComment,
            lm = Fi,
            cm = xd,
            pm = Vg,
            fm = cf;
          function dm(e, t, n) {
            var r = [fm(e, t, n), Hg(Jg([cm(e, n, t), gm(e, n, t)]))];
            return (
              e.getNode().body
                ? r.push(' ', e.call(n, 'body'))
                : r.push(t.semi ? ';' : ''),
              Jg(r)
            );
          }
          function hm(e, t) {
            return (
              'always' !== t.arrowParens &&
              'avoid' === t.arrowParens &&
              (function (e) {
                var t = Qg(e);
                return !(
                  1 !== t.length ||
                  e.typeParameters ||
                  Zg(e) ||
                  'Identifier' !== t[0].type ||
                  t[0].typeAnnotation ||
                  t[0].comments ||
                  t[0].optional ||
                  e.predicate ||
                  e.returnType
                );
              })(e.getValue())
            );
          }
          function gm(e, t, n) {
            var r = e.getValue(),
              u = e.call(t, 'returnType');
            if (r.returnType && tm(n.originalText, r.returnType))
              return Jg([' /*: ', u, ' */']);
            var a = [u];
            return (
              r.returnType && r.returnType.typeAnnotation && a.unshift(': '),
              r.predicate &&
                a.push(r.returnType ? ' ' : ': ', e.call(t, 'predicate')),
              Jg(a)
            );
          }
          var mm = function (e, t, n, r) {
              var u = e.getValue(),
                a = [];
              return (
                u.async && a.push('async '),
                u.generator ? a.push('function* ') : a.push('function '),
                u.id && a.push(e.call(t, 'id')),
                a.push(
                  fm(e, n, t),
                  Hg(Jg([cm(e, t, n, r), gm(e, t, n)])),
                  u.body ? ' ' : '',
                  e.call(t, 'body')
                ),
                Jg(a)
              );
            },
            ym = function (e, t, n, r) {
              var u = e.getValue(),
                a = [];
              u.async && a.push('async '),
                hm(e, t)
                  ? a.push(e.call(n, 'params', 0))
                  : a.push(
                      Hg(
                        Jg([
                          cm(
                            e,
                            n,
                            t,
                            r && (r.expandLastArg || r.expandFirstArg),
                            !0
                          ),
                          gm(e, n, t),
                        ])
                      )
                    );
              var i = qg(e, t, !0, function (e) {
                var n = Wg(t.originalText, e, lm);
                return !1 !== n && '=>' === t.originalText.slice(n, n + 2);
              });
              i && a.push(' ', i), a.push(' =>');
              var o = e.call(function (e) {
                return n(e, r);
              }, 'body');
              if (
                !em(t.originalText, u.body) &&
                ('ArrayExpression' === u.body.type ||
                  'ObjectExpression' === u.body.type ||
                  'BlockStatement' === u.body.type ||
                  nm(u.body) ||
                  rm(u.body, t.originalText) ||
                  'ArrowFunctionExpression' === u.body.type ||
                  'DoExpression' === u.body.type)
              )
                return Hg(Jg([Jg(a), ' ', o]));
              if ('SequenceExpression' === u.body.type)
                return Hg(
                  Jg([Jg(a), Hg(Jg([' (', Xg(Jg([Gg, o])), Gg, ')']))])
                );
              var s =
                  ((r && r.expandLastArg) ||
                    'JSXExpressionContainer' === e.getParentNode().type) &&
                  !(u.comments && u.comments.length),
                l = r && r.expandLastArg && um(t, 'all'),
                c = 'ConditionalExpression' === u.body.type && !am(u.body, !1);
              return Hg(
                Jg([
                  Jg(a),
                  Hg(
                    Jg([
                      Xg(
                        Jg([zg, c ? Yg('', '(') : '', o, c ? Yg('', ')') : ''])
                      ),
                      s ? Jg([Yg(l ? ',' : ''), Gg]) : '',
                    ])
                  ),
                ])
              );
            },
            Dm = function (e, t, n) {
              var r = e.getNode(),
                u = r.kind,
                a = r.value || r,
                i = [];
              return (
                u && 'init' !== u && 'method' !== u && 'constructor' !== u
                  ? (Eo.ok('get' === u || 'set' === u), i.push(u, ' '))
                  : a.async && i.push('async '),
                a.generator && i.push('*'),
                i.push(
                  pm(e, t, n),
                  r.optional || r.key.optional ? '?' : '',
                  r === a
                    ? dm(e, t, n)
                    : e.call(function (e) {
                        return dm(e, t, n);
                      }, 'value')
                ),
                Jg(i)
              );
            },
            vm = function (e, t, n) {
              var r = e.getValue(),
                u = t.semi ? ';' : '',
                a = [];
              r.argument &&
                (im(t, r.argument)
                  ? a.push(
                      Jg([' (', Xg(Jg([Kg, e.call(n, 'argument')])), Kg, ')'])
                    )
                  : om(r.argument) || 'SequenceExpression' === r.argument.type
                  ? a.push(
                      Hg(
                        Jg([
                          Yg(' (', ' '),
                          Xg(Jg([Gg, e.call(n, 'argument')])),
                          Gg,
                          Yg(')'),
                        ])
                      )
                    )
                  : a.push(' ', e.call(n, 'argument')));
              var i =
                  Array.isArray(r.comments) &&
                  r.comments[r.comments.length - 1],
                o = i && sm(i);
              return (
                o && a.push(u),
                Zg(r) && a.push(' ', qg(e, t, !0)),
                o || a.push(u),
                Jg(a)
              );
            },
            Em = hm,
            Cm = Wo.printComments,
            bm = Wo.printDanglingComments,
            Am = vn.builders,
            Fm = Am.concat,
            xm = Am.join,
            Sm = Am.line,
            wm = Am.hardline,
            Bm = Am.softline,
            Tm = Am.group,
            km = Am.indent,
            Nm = Am.ifBreak,
            Om = Bl.hasTrailingComment,
            Pm = Bl.hasTrailingLineComment,
            Mm = kg,
            Im = Dm,
            jm = df;
          function Lm(e) {
            return (
              e.typeParameters &&
              !Pm(e.typeParameters) &&
              !(function (e) {
                return (
                  ['superClass', 'extends', 'mixins', 'implements'].filter(
                    function (t) {
                      return !!e[t];
                    }
                  ).length > 1
                );
              })(e)
            );
          }
          function _m(e, t, n, r) {
            var u = e.getValue();
            if (!u[r] || 0 === u[r].length) return '';
            var a = bm(e, t, !0, function (e) {
              return e.marker === r;
            });
            return Fm([
              Lm(u) ? Nm(' ', Sm, { groupId: Mm(u.typeParameters) }) : Sm,
              a,
              a && wm,
              r,
              Tm(km(Fm([Sm, xm(Fm([',', Sm]), e.map(n, r))]))),
            ]);
          }
          function Rm(e, t, n) {
            var r = e.call(n, 'superClass');
            return 'AssignmentExpression' === e.getParentNode().type
              ? Tm(Nm(Fm(['(', km(Fm([Bm, r])), Bm, ')']), r))
              : r;
          }
          var $m = function (e, t, n) {
              var r = e.getValue(),
                u = [];
              r.abstract && u.push('abstract '), u.push('class');
              var a =
                  (r.id && Om(r.id)) ||
                  (r.superClass &&
                    r.superClass.comments &&
                    0 !== r.superClass.comments.length) ||
                  (r.extends && 0 !== r.extends.length) ||
                  (r.mixins && 0 !== r.mixins.length) ||
                  (r.implements && 0 !== r.implements.length),
                i = [],
                o = [];
              if (
                (r.id && i.push(' ', e.call(n, 'id')),
                i.push(e.call(n, 'typeParameters')),
                r.superClass)
              ) {
                var s = Fm([
                    'extends ',
                    Rm(e, 0, n),
                    e.call(n, 'superTypeParameters'),
                  ]),
                  l = e.call(function (e) {
                    return Cm(
                      e,
                      function () {
                        return s;
                      },
                      t
                    );
                  }, 'superClass');
                a ? o.push(Sm, Tm(l)) : o.push(' ', l);
              } else o.push(_m(e, t, n, 'extends'));
              if (
                (o.push(_m(e, t, n, 'mixins')),
                o.push(_m(e, t, n, 'implements')),
                a)
              ) {
                var c = Fm(o);
                Lm(r)
                  ? u.push(Tm(Fm(i.concat(Nm(km(c), c)))))
                  : u.push(Tm(km(Fm(i.concat(c)))));
              } else u.push.apply(u, i.concat(o));
              return u.push(' ', e.call(n, 'body')), Fm(u);
            },
            Vm = function (e, t, n) {
              var r = e.getValue(),
                u = [];
              return (
                r.decorators &&
                  0 !== r.decorators.length &&
                  u.push(jm(e, t, n)),
                r.accessibility && u.push(r.accessibility + ' '),
                r.static && u.push('static '),
                ('TSAbstractMethodDefinition' === r.type || r.abstract) &&
                  u.push('abstract '),
                u.push(Im(e, t, n)),
                Fm(u)
              );
            },
            qm = Ut.getLast,
            Wm = Ut.getPenultimate,
            Um = Ut.isNextLineEmpty,
            Jm = Bl.getFunctionParameters,
            zm = Bl.iterateFunctionParametersPath,
            Gm = Bl.hasLeadingComment,
            Hm = Bl.hasTrailingComment,
            Xm = Bl.isFunctionCompositionArgs,
            Ym = Bl.isJSXNode,
            Km = Bl.isLongCurriedCallExpression,
            Qm = Bl.shouldPrintComma,
            Zm = Bl.getCallArguments,
            ey = Bl.iterateCallArgumentsPath,
            ty = Fi,
            ny = vn.builders,
            ry = ny.concat,
            uy = ny.line,
            ay = ny.hardline,
            iy = ny.softline,
            oy = ny.group,
            sy = ny.indent,
            ly = ny.conditionalGroup,
            cy = ny.ifBreak,
            py = ny.breakParent,
            fy = vn.utils.willBreak;
          function dy(e) {
            return (
              ('ObjectExpression' === e.type &&
                (e.properties.length > 0 || e.comments)) ||
              ('ArrayExpression' === e.type &&
                (e.elements.length > 0 || e.comments)) ||
              ('TSTypeAssertion' === e.type && dy(e.expression)) ||
              ('TSAsExpression' === e.type && dy(e.expression)) ||
              'FunctionExpression' === e.type ||
              ('ArrowFunctionExpression' === e.type &&
                (!e.returnType ||
                  !e.returnType.typeAnnotation ||
                  'TSTypeReference' !== e.returnType.typeAnnotation.type) &&
                ('BlockStatement' === e.body.type ||
                  'ArrowFunctionExpression' === e.body.type ||
                  'ObjectExpression' === e.body.type ||
                  'ArrayExpression' === e.body.type ||
                  'CallExpression' === e.body.type ||
                  'OptionalCallExpression' === e.body.type ||
                  'ConditionalExpression' === e.body.type ||
                  Ym(e.body)))
            );
          }
          var hy = function (e, t, n) {
              var r = e.getValue(),
                u = 'ImportExpression' === r.type,
                a = Zm(r);
              if (0 === a.length)
                return ry(['(', Wo.printDanglingComments(e, t, !0), ')']);
              if (
                2 === a.length &&
                'ArrowFunctionExpression' === a[0].type &&
                0 === Jm(a[0]).length &&
                'BlockStatement' === a[0].body.type &&
                'ArrayExpression' === a[1].type &&
                !a.some(function (e) {
                  return e.comments;
                })
              )
                return ry([
                  '(',
                  e.call(n, 'arguments', 0),
                  ', ',
                  e.call(n, 'arguments', 1),
                  ')',
                ]);
              var i = !1,
                o = !1,
                s = !1,
                l = a.length - 1,
                c = [];
              ey(e, function (e, r) {
                var u = e.getNode(),
                  a = [n(e)];
                r === l ||
                  (Um(t.originalText, u, ty)
                    ? (0 === r && (s = !0), (i = !0), a.push(',', ay, ay))
                    : a.push(',', uy)),
                  (o = (function (e, t) {
                    if (
                      !e ||
                      'ArrowFunctionExpression' !== e.type ||
                      !e.body ||
                      'BlockStatement' !== e.body.type ||
                      0 === Jm(e).length
                    )
                      return !1;
                    var r = !1;
                    return (
                      zm(t, function (e) {
                        r = r || fy(ry([n(e)]));
                      }),
                      r
                    );
                  })(u, e)),
                  c.push(ry(a));
              });
              var p =
                u || (r.callee && 'Import' === r.callee.type) || !Qm(t, 'all')
                  ? ''
                  : ',';
              function f() {
                return oy(ry(['(', sy(ry([uy, ry(c)])), p, uy, ')']), {
                  shouldBreak: !0,
                });
              }
              if ('Decorator' !== e.getParentNode().type && Xm(a)) return f();
              var d = (function (e) {
                  if (2 !== e.length) return !1;
                  var t = C(e, 2),
                    n = t[0],
                    r = t[1];
                  return !(
                    (n.comments && n.comments.length) ||
                    ('FunctionExpression' !== n.type &&
                      ('ArrowFunctionExpression' !== n.type ||
                        'BlockStatement' !== n.body.type)) ||
                    'FunctionExpression' === r.type ||
                    'ArrowFunctionExpression' === r.type ||
                    'ConditionalExpression' === r.type ||
                    dy(r)
                  );
                })(a),
                h = (function (e) {
                  var t = qm(e),
                    n = Wm(e);
                  return !Gm(t) && !Hm(t) && dy(t) && (!n || n.type !== t.type);
                })(a);
              if (d || h) {
                var g =
                    (d ? c.slice(1).some(fy) : c.slice(0, -1).some(fy)) ||
                    i ||
                    o,
                  m = [];
                ey(e, function (e, t) {
                  d &&
                    0 === t &&
                    (m = [
                      ry([
                        e.call(function (e) {
                          return n(e, { expandFirstArg: !0 });
                        }),
                        c.length > 1 ? ',' : '',
                        s ? ay : uy,
                        s ? ay : '',
                      ]),
                    ].concat(c.slice(1))),
                    h &&
                      t === a.length - 1 &&
                      (m = c.slice(0, -1).concat(
                        e.call(function (e) {
                          return n(e, { expandLastArg: !0 });
                        })
                      ));
                });
                var y = c.some(fy),
                  D = ry(['(', ry(m), ')']);
                return ry([
                  y ? py : '',
                  ly(
                    [
                      y || r.typeArguments || r.typeParameters ? cy(f(), D) : D,
                      ry(
                        d
                          ? [
                              '(',
                              oy(m[0], { shouldBreak: !0 }),
                              ry(m.slice(1)),
                              ')',
                            ]
                          : [
                              '(',
                              ry(c.slice(0, -1)),
                              oy(qm(m), { shouldBreak: !0 }),
                              ')',
                            ]
                      ),
                      f(),
                    ],
                    { shouldBreak: g }
                  ),
                ]);
              }
              var v = ry(['(', sy(ry([iy, ry(c)])), cy(p), iy, ')']);
              return Km(e) ? v : oy(v, { shouldBreak: c.some(fy) || i });
            },
            gy = vn.builders,
            my = gy.concat,
            yy = gy.softline,
            Dy = gy.group,
            vy = gy.indent,
            Ey = Bl.isNumericLiteral,
            Cy = lf;
          function by(e, t, n) {
            var r = e.call(n, 'property'),
              u = e.getValue(),
              a = Cy(e);
            return u.computed
              ? !u.property || Ey(u.property)
                ? my([a, '[', r, ']'])
                : Dy(my([a, '[', vy(my([yy, r])), yy, ']']))
              : my([a, '.', r]);
          }
          var Ay = function (e, t, n) {
              var r,
                u = e.getValue(),
                a = e.getParentNode(),
                i = 0;
              do {
                (r = e.getParentNode(i)), i++;
              } while (
                r &&
                ('MemberExpression' === r.type ||
                  'OptionalMemberExpression' === r.type ||
                  'TSNonNullExpression' === r.type)
              );
              var o =
                (r &&
                  ('NewExpression' === r.type ||
                    'BindExpression' === r.type ||
                    ('VariableDeclarator' === r.type &&
                      'Identifier' !== r.id.type) ||
                    ('AssignmentExpression' === r.type &&
                      'Identifier' !== r.left.type))) ||
                u.computed ||
                ('Identifier' === u.object.type &&
                  'Identifier' === u.property.type &&
                  'MemberExpression' !== a.type &&
                  'OptionalMemberExpression' !== a.type);
              return my([
                e.call(n, 'object'),
                o ? by(e, 0, n) : Dy(vy(my([yy, by(e, 0, n)]))),
              ]);
            },
            Fy = by,
            xy = Ut.getLast,
            Sy = Ut.isNextLineEmpty,
            wy = Ut.isNextLineEmptyAfterIndex,
            By = Ut.getNextNonSpaceNonCommentCharacterIndex,
            Ty = Bl.hasLeadingComment,
            ky = Bl.hasTrailingComment,
            Ny = Bl.isCallOrOptionalCallExpression,
            Oy = Bl.isFunctionOrArrowExpression,
            Py = Bl.isLongCurriedCallExpression,
            My = Bl.isMemberish,
            Iy = Bl.isNumericLiteral,
            jy = Bl.isSimpleCallArgument,
            Ly = Fi,
            _y = vn.builders,
            Ry = _y.concat,
            $y = _y.join,
            Vy = _y.hardline,
            qy = _y.group,
            Wy = _y.indent,
            Uy = _y.conditionalGroup,
            Jy = _y.breakParent,
            zy = vn.utils.willBreak,
            Gy = Fy,
            Hy = lf,
            Xy = cf,
            Yy = pf,
            Ky = function (e, t, n) {
              var r = e.getParentNode(),
                u = !r || 'ExpressionStatement' === r.type,
                a = [];
              function i(e) {
                var n = t.originalText,
                  r = By(n, e, Ly);
                return ')' === n.charAt(r)
                  ? !1 !== r && wy(n, r + 1)
                  : Sy(n, e, Ly);
              }
              var o = e.getValue();
              a.unshift({
                node: o,
                printed: Ry([Hy(e), Xy(e, t, n), hy(e, t, n)]),
              }),
                o.callee &&
                  e.call(function (e) {
                    return (function e(r) {
                      var u = r.getValue();
                      Ny(u) && (My(u.callee) || Ny(u.callee))
                        ? (a.unshift({
                            node: u,
                            printed: Ry([
                              Wo.printComments(
                                r,
                                function () {
                                  return Ry([Hy(r), Xy(r, t, n), hy(r, t, n)]);
                                },
                                t
                              ),
                              i(u) ? Vy : '',
                            ]),
                          }),
                          r.call(function (t) {
                            return e(t);
                          }, 'callee'))
                        : My(u)
                        ? (a.unshift({
                            node: u,
                            needsParens: qp(r, t),
                            printed: Wo.printComments(
                              r,
                              function () {
                                return 'OptionalMemberExpression' === u.type ||
                                  'MemberExpression' === u.type
                                  ? Gy(r, t, n)
                                  : Yy(r, t, n);
                              },
                              t
                            ),
                          }),
                          r.call(function (t) {
                            return e(t);
                          }, 'object'))
                        : 'TSNonNullExpression' === u.type
                        ? (a.unshift({
                            node: u,
                            printed: Wo.printComments(
                              r,
                              function () {
                                return '!';
                              },
                              t
                            ),
                          }),
                          r.call(function (t) {
                            return e(t);
                          }, 'expression'))
                        : a.unshift({ node: u, printed: r.call(n) });
                    })(e);
                  }, 'callee');
              for (
                var s = [], l = [a[0]], c = 1;
                c < a.length &&
                ('TSNonNullExpression' === a[c].node.type ||
                  Ny(a[c].node) ||
                  (('MemberExpression' === a[c].node.type ||
                    'OptionalMemberExpression' === a[c].node.type) &&
                    a[c].node.computed &&
                    Iy(a[c].node.property)));
                ++c
              )
                l.push(a[c]);
              if (!Ny(a[0].node))
                for (
                  ;
                  c + 1 < a.length && My(a[c].node) && My(a[c + 1].node);
                  ++c
                )
                  l.push(a[c]);
              s.push(l), (l = []);
              for (var p = !1; c < a.length; ++c) {
                if (p && My(a[c].node)) {
                  if (a[c].node.computed && Iy(a[c].node.property)) {
                    l.push(a[c]);
                    continue;
                  }
                  s.push(l), (l = []), (p = !1);
                }
                (Ny(a[c].node) || 'ImportExpression' === a[c].node.type) &&
                  (p = !0),
                  l.push(a[c]),
                  a[c].node.comments &&
                    a[c].node.comments.some(function (e) {
                      return e.trailing;
                    }) &&
                    (s.push(l), (l = []), (p = !1));
              }
              function f(e) {
                return /^[A-Z]|^[$_]+$/.test(e);
              }
              l.length > 0 && s.push(l);
              var d =
                s.length >= 2 &&
                !s[1][0].node.comments &&
                (function (e) {
                  var n = e[1].length && e[1][0].node.computed;
                  if (1 === e[0].length) {
                    var r = e[0][0].node;
                    return (
                      'ThisExpression' === r.type ||
                      ('Identifier' === r.type &&
                        (f(r.name) || (u && r.name.length <= t.tabWidth) || n))
                    );
                  }
                  var a = xy(e[0]).node;
                  return (
                    ('MemberExpression' === a.type ||
                      'OptionalMemberExpression' === a.type) &&
                    'Identifier' === a.property.type &&
                    (f(a.property.name) || n)
                  );
                })(s);
              function h(e) {
                var t = e.map(function (e) {
                  return e.printed;
                });
                return e.length > 0 && e[e.length - 1].needsParens
                  ? Ry(['('].concat(m(t), [')']))
                  : Ry(t);
              }
              var g = s.map(h),
                y = Ry(g),
                D = d ? 3 : 2,
                v = hi(s),
                E =
                  v.slice(1, -1).some(function (e) {
                    return Ty(e.node);
                  }) ||
                  v.slice(0, -1).some(function (e) {
                    return ky(e.node);
                  }) ||
                  (s[D] && Ty(s[D][0].node));
              if (s.length <= D && !E) return Py(e) ? y : qy(y);
              var C = xy(s[d ? 1 : 0]).node,
                b = !Ny(C) && i(C),
                A = Ry([
                  h(s[0]),
                  d ? Ry(s.slice(1, 2).map(h)) : '',
                  b ? Vy : '',
                  (function (e) {
                    return 0 === e.length
                      ? ''
                      : Wy(qy(Ry([Vy, $y(Vy, e.map(h))])));
                  })(s.slice(d ? 2 : 1)),
                ]),
                F = a
                  .map(function (e) {
                    return e.node;
                  })
                  .filter(Ny);
              return E ||
                (F.length > 2 &&
                  F.some(function (e) {
                    return !e.arguments.every(function (e) {
                      return jy(e, 0);
                    });
                  })) ||
                g.slice(0, -1).some(zy) ||
                (function () {
                  var e = xy(xy(s)).node,
                    t = xy(g);
                  return (
                    Ny(e) &&
                    zy(t) &&
                    F.slice(0, -1).some(function (e) {
                      return e.arguments.some(Oy);
                    })
                  );
                })()
                ? qy(A)
                : Ry([zy(y) || b ? Jy : '', Uy([y, A])]);
            },
            Qy = vn.builders,
            Zy = Qy.concat,
            eD = Qy.join,
            tD = Qy.group,
            nD = Bl.getCallArguments,
            rD = Bl.hasFlowAnnotationComment,
            uD = Bl.isCallOrOptionalCallExpression,
            aD = Bl.isMemberish,
            iD = Bl.isTemplateOnItsOwnLine,
            oD = Bl.isTestCall,
            sD = Bl.iterateCallArgumentsPath,
            lD = lf,
            cD = cf,
            pD = function (e, t, n) {
              var r = e.getValue(),
                u = 'NewExpression' === r.type,
                a = 'ImportExpression' === r.type,
                i = lD(e),
                o = nD(r);
              if (
                o.length > 0 &&
                ((!a &&
                  !u &&
                  'Identifier' === r.callee.type &&
                  ('require' === r.callee.name ||
                    'define' === r.callee.name)) ||
                  (1 === o.length && iD(o[0], t.originalText)) ||
                  (!u && oD(r, e.getParentNode())))
              ) {
                var s = [];
                return (
                  sD(e, function (e) {
                    s.push(n(e));
                  }),
                  Zy([
                    u ? 'new ' : '',
                    e.call(n, 'callee'),
                    i,
                    cD(e, t, n),
                    Zy(['(', eD(', ', s), ')']),
                  ])
                );
              }
              var l =
                ('babel' === t.parser || 'babel-flow' === t.parser) &&
                r.callee &&
                'Identifier' === r.callee.type &&
                rD(r.callee.trailingComments);
              if (
                (l && (r.callee.trailingComments[0].printed = !0),
                !a &&
                  !u &&
                  aD(r.callee) &&
                  !e.call(function (e) {
                    return qp(e, t);
                  }, 'callee'))
              )
                return Ky(e, t, n);
              var c = Zy([
                u ? 'new ' : '',
                a ? 'import' : e.call(n, 'callee'),
                i,
                l
                  ? '/*:: '.concat(
                      r.callee.trailingComments[0].value.slice(2).trim(),
                      ' */'
                    )
                  : '',
                cD(e, t, n),
                hy(e, t, n),
              ]);
              return a || uD(r.callee) ? tD(c) : c;
            },
            fD = vn.builders,
            dD = fD.concat,
            hD = fD.join,
            gD = fD.line,
            mD = fD.group,
            yD = fD.indent,
            DD = fD.ifBreak,
            vD = Bl.hasTrailingComment,
            ED = Bl.hasTrailingLineComment,
            CD = Bl.identity,
            bD = kg,
            AD = ff,
            FD = function (e, t, n) {
              var r = e.getValue(),
                u = [];
              ('DeclareInterface' === r.type || r.declare) &&
                u.push('declare '),
                'TSInterfaceDeclaration' === r.type &&
                  u.push(r.abstract ? 'abstract ' : '', AD(e, t, n)),
                u.push('interface');
              var a = [],
                i = [];
              'InterfaceTypeAnnotation' !== r.type &&
                a.push(' ', e.call(n, 'id'), e.call(n, 'typeParameters'));
              var o = r.typeParameters && !ED(r.typeParameters);
              if (
                (r.extends &&
                  0 !== r.extends.length &&
                  i.push(
                    o ? DD(' ', gD, { groupId: bD(r.typeParameters) }) : gD,
                    'extends ',
                    (1 === r.extends.length ? CD : yD)(
                      hD(dD([',', gD]), e.map(n, 'extends'))
                    )
                  ),
                (r.id && vD(r.id)) || (r.extends && 0 !== r.extends.length))
              ) {
                var s = dD(i);
                o
                  ? u.push(mD(dD(a.concat(DD(yD(s), s)))))
                  : u.push(mD(yD(dD(a.concat(s)))));
              } else u.push.apply(u, a.concat(i));
              return u.push(' ', e.call(n, 'body')), mD(dD(u));
            },
            xD = Wo.printComments,
            SD = Ut.getLast,
            wD = vn.builders,
            BD = wD.concat,
            TD = wD.join,
            kD = wD.line,
            ND = wD.softline,
            OD = wD.group,
            PD = wD.indent,
            MD = wD.align,
            ID = wD.ifBreak,
            jD = vn.utils.normalizeParts,
            LD = Bl.hasLeadingOwnLineComment,
            _D = Bl.hasTrailingLineComment,
            RD = Bl.isBinaryish,
            $D = Bl.isJSXNode,
            VD = Bl.shouldFlatten,
            qD = 0;
          function WD(e) {
            return (
              'LogicalExpression' === e.type &&
              (('ObjectExpression' === e.right.type &&
                0 !== e.right.properties.length) ||
                ('ArrayExpression' === e.right.type &&
                  0 !== e.right.elements.length) ||
                !!$D(e.right))
            );
          }
          var UD = function (e, t, n) {
              var r = e.getValue(),
                u = e.getParentNode(),
                a = e.getParentNode(1),
                i =
                  r !== u.body &&
                  ('IfStatement' === u.type ||
                    'WhileStatement' === u.type ||
                    'SwitchStatement' === u.type ||
                    'DoWhileStatement' === u.type),
                o = (function e(t, n, r, u, a) {
                  var i = [],
                    o = t.getValue();
                  if (RD(o)) {
                    VD(o.operator, o.left.operator)
                      ? (i = i.concat(
                          t.call(function (t) {
                            return e(t, n, r, !0, a);
                          }, 'left')
                        ))
                      : i.push(OD(t.call(n, 'left')));
                    var s = WD(o),
                      l =
                        ('|>' === o.operator ||
                          'NGPipeExpression' === o.type ||
                          ('|' === o.operator &&
                            '__vue_expression' === r.parser)) &&
                        !LD(r.originalText, o.right),
                      c = 'NGPipeExpression' === o.type ? '|' : o.operator,
                      p =
                        'NGPipeExpression' === o.type &&
                        0 !== o.arguments.length
                          ? OD(
                              PD(
                                BD([
                                  ND,
                                  ': ',
                                  TD(
                                    BD([ND, ':', ID(' ')]),
                                    t.map(n, 'arguments').map(function (e) {
                                      return MD(2, OD(e));
                                    })
                                  ),
                                ])
                              )
                            )
                          : '',
                      f = BD(
                        s
                          ? [c, ' ', t.call(n, 'right'), p]
                          : [
                              l ? kD : '',
                              c,
                              l ? ' ' : kD,
                              t.call(n, 'right'),
                              p,
                            ]
                      ),
                      d = t.getParentNode(),
                      h = _D(o.left),
                      g =
                        h ||
                        (!(a && 'LogicalExpression' === o.type) &&
                          d.type !== o.type &&
                          o.left.type !== o.type &&
                          o.right.type !== o.type);
                    i.push(l ? '' : ' ', g ? OD(f, { shouldBreak: h }) : f),
                      u &&
                        o.comments &&
                        (i = jD(
                          xD(
                            t,
                            function () {
                              return BD(i);
                            },
                            r
                          ).parts
                        ));
                  } else i.push(OD(t.call(n)));
                  return i;
                })(e, n, t, !1, i);
              if (i) return BD(o);
              if (
                (('CallExpression' === u.type ||
                  'OptionalCallExpression' === u.type) &&
                  u.callee === r) ||
                'UnaryExpression' === u.type ||
                (('MemberExpression' === u.type ||
                  'OptionalMemberExpression' === u.type) &&
                  !u.computed)
              )
                return OD(BD([PD(BD([ND, BD(o)])), ND]));
              var s =
                  'ReturnStatement' === u.type ||
                  'ThrowStatement' === u.type ||
                  ('JSXExpressionContainer' === u.type &&
                    'JSXAttribute' === a.type) ||
                  ('|' !== r.operator && 'JsExpressionRoot' === u.type) ||
                  ('NGPipeExpression' !== r.type &&
                    (('NGRoot' === u.type && '__ng_binding' === t.parser) ||
                      ('NGMicrosyntaxExpression' === u.type &&
                        'NGMicrosyntax' === a.type &&
                        1 === a.body.length))) ||
                  (r === u.body && 'ArrowFunctionExpression' === u.type) ||
                  (r !== u.body && 'ForStatement' === u.type) ||
                  ('ConditionalExpression' === u.type &&
                    'ReturnStatement' !== a.type &&
                    'ThrowStatement' !== a.type &&
                    'CallExpression' !== a.type &&
                    'OptionalCallExpression' !== a.type) ||
                  'TemplateLiteral' === u.type,
                l =
                  'AssignmentExpression' === u.type ||
                  'VariableDeclarator' === u.type ||
                  'ClassProperty' === u.type ||
                  'FieldDefinition' === u.type ||
                  'TSAbstractClassProperty' === u.type ||
                  'ClassPrivateProperty' === u.type ||
                  'ObjectProperty' === u.type ||
                  'Property' === u.type,
                c = RD(r.left) && VD(r.operator, r.left.operator);
              if (s || (WD(r) && !c) || (!WD(r) && l)) return OD(BD(o));
              if (0 === o.length) return '';
              var p = $D(r.right),
                f = o.findIndex(function (e) {
                  return 'string' != typeof e && 'group' === e.type;
                }),
                d = o.slice(0, -1 === f ? 1 : f + 1),
                h = BD(o.slice(d.length, p ? -1 : void 0)),
                g = Symbol('logicalChain-' + ++qD),
                y = OD(BD([].concat(m(d), [PD(h)])), { id: g });
              if (!p) return y;
              var D = SD(o);
              return OD(BD([y, ID(PD(D), D, { groupId: g })]));
            },
            JD = WD,
            zD = vn.builders,
            GD = zD.concat,
            HD = zD.line,
            XD = zD.group,
            YD = zD.indent,
            KD = Bl.hasLeadingOwnLineComment,
            QD = Bl.isBinaryish,
            ZD = Bl.isMemberExpressionChain,
            ev = Bl.isStringLiteral,
            tv = JD;
          function nv(e, t, n, r, u, a) {
            if (!r) return t;
            var i = rv(e, r, u, a);
            return XD(GD([t, n, i]));
          }
          function rv(e, t, n, r) {
            return KD(r.originalText, t)
              ? YD(GD([HD, n]))
              : (QD(t) && !tv(t)) ||
                ('ConditionalExpression' === t.type &&
                  QD(t.test) &&
                  !tv(t.test)) ||
                'StringLiteralTypeAnnotation' === t.type ||
                ('ClassExpression' === t.type &&
                  t.decorators &&
                  t.decorators.length) ||
                (('Identifier' === e.type ||
                  ev(e) ||
                  'MemberExpression' === e.type) &&
                  (ev(t) || ZD(t)) &&
                  'json' !== r.parser &&
                  'json5' !== r.parser) ||
                'SequenceExpression' === t.type
              ? XD(YD(GD([HD, n])))
              : GD([' ', n]);
          }
          var uv = function (e, t, n) {
              var r = e.getValue();
              return nv(
                r.id,
                e.call(n, 'id'),
                ' =',
                r.init,
                r.init && e.call(n, 'init'),
                t
              );
            },
            av = function (e, t, n) {
              var r = e.getValue();
              return nv(
                r.left,
                e.call(n, 'left'),
                GD([' ', r.operator]),
                r.right,
                e.call(n, 'right'),
                t
              );
            },
            iv = nv,
            ov = rv,
            sv = Ut.isNextLineEmpty,
            lv = vn.builders,
            cv = lv.concat,
            pv = lv.join,
            fv = lv.hardline,
            dv = Bl.classChildNeedsASIProtection,
            hv = Bl.classPropMayCauseASIProblems,
            gv = Bl.getLeftSidePathName,
            mv = Bl.hasNakedLeftSide,
            yv = Bl.isJSXNode,
            Dv = Bl.isLastStatement,
            vv = Bl.isTheOnlyJSXElementInMarkdown,
            Ev = Fi,
            Cv = Em;
          function bv(e, t, n) {
            var r = e.path,
              u = e.index,
              a = e.bodyNode,
              i = e.isClass,
              o = r.getValue();
            if (o && 'EmptyStatement' !== o.type) {
              var s = n(r),
                l = t.originalText,
                c = [];
              if (
                (t.semi ||
                i ||
                vv(t, r) ||
                !(function (e, t) {
                  return (
                    'ExpressionStatement' === e.getNode().type &&
                    e.call(function (e) {
                      return (function e(t, n) {
                        var r = t.getValue();
                        return (
                          !!(
                            qp(t, n) ||
                            'ParenthesizedExpression' === r.type ||
                            'TypeCastExpression' === r.type ||
                            ('ArrowFunctionExpression' === r.type &&
                              !Cv(t, n)) ||
                            'ArrayExpression' === r.type ||
                            'ArrayPattern' === r.type ||
                            ('UnaryExpression' === r.type &&
                              r.prefix &&
                              ('+' === r.operator || '-' === r.operator)) ||
                            'TemplateLiteral' === r.type ||
                            'TemplateElement' === r.type ||
                            yv(r) ||
                            ('BindExpression' === r.type && !r.object) ||
                            'RegExpLiteral' === r.type ||
                            ('Literal' === r.type && r.pattern) ||
                            ('Literal' === r.type && r.regex)
                          ) ||
                          (!!mv(r) &&
                            t.call.apply(
                              t,
                              [
                                function (t) {
                                  return e(t, n);
                                },
                              ].concat(m(gv(t, r)))
                            ))
                        );
                      })(e, t);
                    }, 'expression')
                  );
                })(r, t)
                  ? c.push(s)
                  : o.comments &&
                    o.comments.some(function (e) {
                      return e.leading;
                    })
                  ? c.push(n(r, { needsSemi: !0 }))
                  : c.push(';', s),
                !t.semi && i)
              )
                if (hv(r)) c.push(';');
                else if (
                  'ClassProperty' === o.type ||
                  'FieldDefinition' === o.type
                ) {
                  var p = a.body[u + 1];
                  dv(p) && c.push(';');
                }
              return sv(l, o, Ev) && !Dv(r) && c.push(fv), cv(c);
            }
          }
          var Av = function (e, t, n) {
              var r = e.getNode(),
                u = 'ClassBody' === r.type,
                a = e
                  .map(function (a, i) {
                    return bv(
                      { path: e, index: i, bodyNode: r, isClass: u },
                      t,
                      n
                    );
                  })
                  .filter(Boolean);
              return pv(fv, a);
            },
            Fv = Wo.printDanglingComments,
            xv = Ut.isNextLineEmpty,
            Sv = vn.builders,
            wv = Sv.concat,
            Bv = Sv.hardline,
            Tv = Sv.indent,
            kv = Bl.hasDanglingComments,
            Nv = Fi,
            Ov = Av,
            Pv = function (e, t, n) {
              var r = e.getValue(),
                u = [],
                a = t.semi ? ';' : '',
                i = e.call(function (e) {
                  return Ov(e, t, n);
                }, 'body');
              'StaticBlock' === r.type && u.push('static ');
              var o = r.body.some(function (e) {
                  return 'EmptyStatement' !== e.type;
                }),
                s = r.directives && r.directives.length > 0,
                l = e.getParentNode(),
                c = e.getParentNode(1);
              return o ||
                s ||
                kv(r) ||
                ('ArrowFunctionExpression' !== l.type &&
                  'FunctionExpression' !== l.type &&
                  'FunctionDeclaration' !== l.type &&
                  'ObjectMethod' !== l.type &&
                  'ClassMethod' !== l.type &&
                  'ClassPrivateMethod' !== l.type &&
                  'ForStatement' !== l.type &&
                  'WhileStatement' !== l.type &&
                  'DoWhileStatement' !== l.type &&
                  'DoExpression' !== l.type &&
                  ('CatchClause' !== l.type || c.finalizer) &&
                  'TSModuleDeclaration' !== l.type &&
                  'TSDeclareFunction' !== l.type &&
                  'StaticBlock' !== r.type)
                ? (u.push('{'),
                  s &&
                    e.each(function (e) {
                      u.push(Tv(wv([Bv, n(e), a]))),
                        xv(t.originalText, e.getValue(), Nv) && u.push(Bv);
                    }, 'directives'),
                  o && u.push(Tv(wv([Bv, i]))),
                  u.push(Fv(e, t)),
                  u.push(Bv, '}'),
                  wv(u))
                : wv([].concat(u, ['{}']));
            },
            Mv = Ut.hasNewline,
            Iv = vn.builders,
            jv = Iv.concat,
            Lv = Iv.join,
            _v = Iv.hardline,
            Rv = Bl.isLineComment,
            $v = Bl.isBlockComment,
            Vv = Ai,
            qv = Fi,
            Wv = function (e, t) {
              var n = e.getValue();
              if (Rv(n)) return t.originalText.slice(Vv(n), qv(n)).trimEnd();
              if ($v(n)) {
                if (
                  (function (e) {
                    var t = '*'.concat(n.value, '*').split('\n');
                    return (
                      t.length > 1 &&
                      t.every(function (e) {
                        return '*' === e.trim()[0];
                      })
                    );
                  })()
                ) {
                  var r = (function (e) {
                    var t = n.value.split('\n');
                    return jv([
                      '/*',
                      Lv(
                        _v,
                        t.map(function (e, n) {
                          return 0 === n
                            ? e.trimEnd()
                            : ' ' +
                                (n < t.length - 1 ? e.trim() : e.trimStart());
                        })
                      ),
                      '*/',
                    ]);
                  })();
                  return n.trailing &&
                    !Mv(t.originalText, Vv(n), { backwards: !0 })
                    ? jv([_v, r])
                    : r;
                }
                var u = qv(n),
                  a = '*-/' === t.originalText.slice(u - 3, u);
                return '/*' + n.value + (a ? '*-/' : '*/');
              }
              throw new Error('Not a comment: ' + JSON.stringify(n));
            },
            Uv = Ut.hasNewline,
            Jv = Ut.hasNewlineInRange,
            zv = Ut.getLast,
            Gv = Ut.printString,
            Hv = Ut.printNumber,
            Xv = Ut.isNextLineEmpty,
            Yv = vn.builders,
            Kv = Yv.concat,
            Qv = Yv.join,
            Zv = Yv.line,
            eE = Yv.hardline,
            tE = Yv.softline,
            nE = Yv.literalline,
            rE = Yv.group,
            uE = Yv.indent,
            aE = Yv.align,
            iE = Yv.conditionalGroup,
            oE = Yv.ifBreak,
            sE = vn.utils.isEmpty,
            lE = Kp,
            cE = Yp,
            pE = Bl.getFunctionParameters,
            fE = Bl.getCallArguments,
            dE = Bl.getParentExportDeclaration,
            hE = Bl.getTypeScriptMappedTypeModifier,
            gE = Bl.hasDanglingComments,
            mE = Bl.hasFlowShorthandAnnotationComment,
            yE = Bl.hasLeadingOwnLineComment,
            DE = Bl.hasNewlineBetweenOrAfterDecorators,
            vE = Bl.hasNgSideEffect,
            EE = Bl.hasTrailingComment,
            CE = Bl.isExportDeclaration,
            bE = Bl.isFunctionNotation,
            AE = Bl.isGetterOrSetter,
            FE = Bl.isLiteral,
            xE = Bl.isNgForOf,
            SE = Bl.isObjectType,
            wE = Bl.isObjectTypePropertyAFunction,
            BE = Bl.isTheOnlyJSXElementInMarkdown,
            TE = Bl.isTSXFile,
            kE = Bl.isBlockComment,
            NE = Bl.needsHardlineAfterDanglingComment,
            OE = Bl.rawText,
            PE = Bl.shouldPrintComma,
            ME = Ai,
            IE = Fi,
            jE = lf,
            LE = pf,
            _E = ff,
            RE = df,
            $E = hf,
            VE = gf,
            qE = If,
            WE = jf,
            UE = Lf,
            JE = _f,
            zE = xd,
            GE = Sc,
            HE = Xd,
            XE = Yd,
            YE = Eh,
            KE = Nd,
            QE = Od,
            ZE = ng,
            eC = rg,
            tC = ug,
            nC = ag,
            rC = ig,
            uC = og,
            aC = sg,
            iC = lg,
            oC = cg,
            sC = $m,
            lC = Vm,
            cC = Tg,
            pC = Vg,
            fC = mm,
            dC = ym,
            hC = Dm,
            gC = vm,
            mC = pD,
            yC = FD,
            DC = uv,
            vC = av,
            EC = iv,
            CC = ov,
            bC = UD,
            AC = Av,
            FC = Ay,
            xC = Pv;
          function SC(e, t, n) {
            var r = OE(e),
              u = n || 'DirectiveLiteral' === e.type;
            return Gv(r, t, u);
          }
          function wC(e) {
            var t = e.flags.split('').sort().join('');
            return '/'.concat(e.pattern, '/').concat(t);
          }
          var BC = {
              preprocess: Qp,
              print: function (e, t, n, r) {
                var u = e.getValue(),
                  a = !1,
                  i = (function (e, t, n, r) {
                    var u = e.getValue(),
                      a = t.semi ? ';' : '';
                    if (!u) return '';
                    if ('string' == typeof u) return u;
                    var i = lE(e, t, n);
                    if (i) return i;
                    var o = [];
                    switch (u.type) {
                      case 'JsExpressionRoot':
                        return e.call(n, 'node');
                      case 'JsonRoot':
                        return Kv([e.call(n, 'node'), eE]);
                      case 'File':
                        return (
                          u.program &&
                            u.program.interpreter &&
                            o.push(
                              e.call(function (e) {
                                return e.call(n, 'interpreter');
                              }, 'program')
                            ),
                          o.push(e.call(n, 'program')),
                          Kv(o)
                        );
                      case 'Program':
                        var s =
                          !u.body.every(function (e) {
                            return 'EmptyStatement' === e.type;
                          }) || u.comments;
                        if (u.directives) {
                          var l = u.directives.length;
                          e.each(function (e, r) {
                            o.push(n(e), a, eE),
                              (r < l - 1 || s) &&
                                Xv(t.originalText, e.getValue(), IE) &&
                                o.push(eE);
                          }, 'directives');
                        }
                        return (
                          o.push(
                            e.call(function (e) {
                              return AC(e, t, n);
                            }, 'body')
                          ),
                          o.push(Wo.printDanglingComments(e, t, !0)),
                          s && o.push(eE),
                          Kv(o)
                        );
                      case 'EmptyStatement':
                        return '';
                      case 'ExpressionStatement':
                        if (u.directive)
                          return Kv([SC(u.expression, t, !0), a]);
                        if ('__vue_event_binding' === t.parser) {
                          var c = e.getParentNode();
                          if (
                            'Program' === c.type &&
                            1 === c.body.length &&
                            c.body[0] === u
                          )
                            return Kv([
                              e.call(n, 'expression'),
                              cE(u.expression) ? ';' : '',
                            ]);
                        }
                        return Kv([e.call(n, 'expression'), BE(t, e) ? '' : a]);
                      case 'ParenthesizedExpression':
                        return u.expression.comments
                          ? rE(
                              Kv([
                                '(',
                                uE(Kv([tE, e.call(n, 'expression')])),
                                tE,
                                ')',
                              ])
                            )
                          : Kv(['(', e.call(n, 'expression'), ')']);
                      case 'AssignmentExpression':
                        return vC(e, t, n);
                      case 'VariableDeclarator':
                        return DC(e, t, n);
                      case 'BinaryExpression':
                      case 'LogicalExpression':
                      case 'NGPipeExpression':
                        return bC(e, t, n);
                      case 'AssignmentPattern':
                        return Kv([
                          e.call(n, 'left'),
                          ' = ',
                          e.call(n, 'right'),
                        ]);
                      case 'TSTypeAssertion':
                        var p = !(
                            'ArrayExpression' === u.expression.type ||
                            'ObjectExpression' === u.expression.type
                          ),
                          f = rE(
                            Kv([
                              '<',
                              uE(Kv([tE, e.call(n, 'typeAnnotation')])),
                              tE,
                              '>',
                            ])
                          ),
                          d = Kv([
                            oE('('),
                            uE(Kv([tE, e.call(n, 'expression')])),
                            tE,
                            oE(')'),
                          ]);
                        return p
                          ? iE([
                              Kv([f, e.call(n, 'expression')]),
                              Kv([f, rE(d, { shouldBreak: !0 })]),
                              Kv([f, e.call(n, 'expression')]),
                            ])
                          : rE(Kv([f, e.call(n, 'expression')]));
                      case 'OptionalMemberExpression':
                      case 'MemberExpression':
                        return FC(e, t, n);
                      case 'MetaProperty':
                        return Kv([
                          e.call(n, 'meta'),
                          '.',
                          e.call(n, 'property'),
                        ]);
                      case 'BindExpression':
                        return (
                          u.object && o.push(e.call(n, 'object')),
                          o.push(rE(uE(Kv([tE, LE(e, t, n)])))),
                          Kv(o)
                        );
                      case 'Identifier':
                        return Kv([u.name, jE(e), KE(e, t, n)]);
                      case 'V8IntrinsicIdentifier':
                        return Kv(['%', u.name]);
                      case 'SpreadElement':
                      case 'SpreadElementPattern':
                      case 'SpreadProperty':
                      case 'SpreadPropertyPattern':
                      case 'RestElement':
                      case 'ObjectTypeSpreadProperty':
                        return Kv(['...', e.call(n, 'argument'), KE(e, t, n)]);
                      case 'FunctionDeclaration':
                      case 'FunctionExpression':
                        return (
                          o.push(
                            fC(
                              e,
                              n,
                              t,
                              r &&
                                r.expandLastArg &&
                                fE(e.getParentNode()).length > 1
                            )
                          ),
                          u.body || o.push(a),
                          Kv(o)
                        );
                      case 'ArrowFunctionExpression':
                        return dC(e, t, n, r);
                      case 'YieldExpression':
                        return (
                          o.push('yield'),
                          u.delegate && o.push('*'),
                          u.argument && o.push(' ', e.call(n, 'argument')),
                          Kv(o)
                        );
                      case 'AwaitExpression':
                        o.push('await'),
                          u.argument && o.push(' ', e.call(n, 'argument'));
                        var h = e.getParentNode();
                        return (('CallExpression' === h.type ||
                          'OptionalCallExpression' === h.type) &&
                          h.callee === u) ||
                          (('MemberExpression' === h.type ||
                            'OptionalMemberExpression' === h.type) &&
                            h.object === u)
                          ? rE(Kv([uE(Kv([tE, Kv(o)])), tE]))
                          : Kv(o);
                      case 'TSExportAssignment':
                        return Kv(['export = ', e.call(n, 'expression'), a]);
                      case 'ExportDefaultDeclaration':
                      case 'ExportNamedDeclaration':
                      case 'DeclareExportDeclaration':
                        return WE(e, t, n);
                      case 'ExportAllDeclaration':
                      case 'DeclareExportAllDeclaration':
                        return UE(e, t, n);
                      case 'ImportDeclaration':
                        return qE(e, t, n);
                      case 'ImportSpecifier':
                      case 'ExportSpecifier':
                      case 'ImportNamespaceSpecifier':
                      case 'ExportNamespaceSpecifier':
                      case 'ImportDefaultSpecifier':
                      case 'ExportDefaultSpecifier':
                        return JE(e, t, n);
                      case 'ImportAttribute':
                        return Kv([e.call(n, 'key'), ': ', e.call(n, 'value')]);
                      case 'Import':
                        return 'import';
                      case 'TSModuleBlock':
                      case 'BlockStatement':
                      case 'StaticBlock':
                        return xC(e, t, n);
                      case 'ThrowStatement':
                      case 'ReturnStatement':
                        return Kv([
                          'ReturnStatement' === u.type ? 'return' : 'throw',
                          gC(e, t, n),
                        ]);
                      case 'NewExpression':
                      case 'ImportExpression':
                      case 'OptionalCallExpression':
                      case 'CallExpression':
                        return mC(e, t, n);
                      case 'ObjectTypeInternalSlot':
                        return Kv([
                          u.static ? 'static ' : '',
                          '[[',
                          e.call(n, 'id'),
                          ']]',
                          jE(e),
                          u.method ? '' : ': ',
                          e.call(n, 'value'),
                        ]);
                      case 'ObjectExpression':
                      case 'ObjectPattern':
                      case 'ObjectTypeAnnotation':
                      case 'TSInterfaceBody':
                      case 'TSTypeLiteral':
                      case 'RecordExpression':
                        return YE(e, t, n);
                      case 'ObjectProperty':
                      case 'Property':
                        return u.method || 'get' === u.kind || 'set' === u.kind
                          ? hC(e, t, n)
                          : (u.shorthand
                              ? o.push(e.call(n, 'value'))
                              : o.push(
                                  EC(
                                    u.key,
                                    pC(e, t, n),
                                    ':',
                                    u.value,
                                    e.call(n, 'value'),
                                    t
                                  )
                                ),
                            Kv(o));
                      case 'ClassMethod':
                      case 'ClassPrivateMethod':
                      case 'MethodDefinition':
                      case 'TSAbstractMethodDefinition':
                      case 'TSDeclareMethod':
                        return lC(e, t, n);
                      case 'ObjectMethod':
                        return hC(e, t, n);
                      case 'Decorator':
                        return Kv([
                          '@',
                          e.call(n, 'expression'),
                          e.call(n, 'callee'),
                        ]);
                      case 'ArrayExpression':
                      case 'ArrayPattern':
                      case 'TupleExpression':
                        return HE(e, t, n);
                      case 'SequenceExpression':
                        var g = e.getParentNode(0);
                        if (
                          'ExpressionStatement' === g.type ||
                          'ForStatement' === g.type
                        ) {
                          var y = [];
                          return (
                            e.each(function (e) {
                              0 === e.getName()
                                ? y.push(n(e))
                                : y.push(',', uE(Kv([Zv, n(e)])));
                            }, 'expressions'),
                            rE(Kv(y))
                          );
                        }
                        return rE(
                          Kv([Qv(Kv([',', Zv]), e.map(n, 'expressions'))])
                        );
                      case 'ThisExpression':
                        return 'this';
                      case 'Super':
                        return 'super';
                      case 'NullLiteral':
                        return 'null';
                      case 'RegExpLiteral':
                        return wC(u);
                      case 'NumericLiteral':
                        return Hv(u.extra.raw);
                      case 'DecimalLiteral':
                        return Hv(u.value) + 'm';
                      case 'BigIntLiteral':
                        return (u.bigint || u.extra.raw).toLowerCase();
                      case 'BooleanLiteral':
                      case 'StringLiteral':
                      case 'Literal':
                        return u.regex
                          ? wC(u.regex)
                          : u.bigint
                          ? u.raw.toLowerCase()
                          : 'number' == typeof u.value
                          ? Hv(u.raw)
                          : 'string' != typeof u.value
                          ? '' + u.value
                          : SC(u, t);
                      case 'Directive':
                        return e.call(n, 'value');
                      case 'DirectiveLiteral':
                        return SC(u, t);
                      case 'UnaryExpression':
                        return (
                          o.push(u.operator),
                          /[a-z]$/.test(u.operator) && o.push(' '),
                          u.argument.comments && u.argument.comments.length > 0
                            ? o.push(
                                rE(
                                  Kv([
                                    '(',
                                    uE(Kv([tE, e.call(n, 'argument')])),
                                    tE,
                                    ')',
                                  ])
                                )
                              )
                            : o.push(e.call(n, 'argument')),
                          Kv(o)
                        );
                      case 'UpdateExpression':
                        return (
                          o.push(e.call(n, 'argument'), u.operator),
                          u.prefix && o.reverse(),
                          Kv(o)
                        );
                      case 'ConditionalExpression':
                        return ed(e, t, n, {
                          beforeParts: function () {
                            return [e.call(n, 'test')];
                          },
                          afterParts: function (e) {
                            return [e ? tE : ''];
                          },
                          shouldCheckJsx: !0,
                          conditionalNodeType: 'ConditionalExpression',
                          consequentNodePropertyName: 'consequent',
                          alternateNodePropertyName: 'alternate',
                          testNodePropertyNames: ['test'],
                        });
                      case 'VariableDeclaration':
                        var D,
                          v = e.map(function (e) {
                            return n(e);
                          }, 'declarations'),
                          E = e.getParentNode(),
                          C =
                            'ForStatement' === E.type ||
                            'ForInStatement' === E.type ||
                            'ForOfStatement' === E.type,
                          b = u.declarations.some(function (e) {
                            return e.init;
                          });
                        return (
                          1 !== v.length || u.declarations[0].comments
                            ? v.length > 0 && (D = uE(v[0]))
                            : (D = v[0]),
                          (o = [
                            u.declare ? 'declare ' : '',
                            u.kind,
                            D ? Kv([' ', D]) : '',
                            uE(
                              Kv(
                                v.slice(1).map(function (e) {
                                  return Kv([',', b && !C ? eE : Zv, e]);
                                })
                              )
                            ),
                          ]),
                          (C && E.body !== u) || o.push(a),
                          rE(Kv(o))
                        );
                      case 'TSTypeAliasDeclaration':
                        u.declare && o.push('declare ');
                        var A = CC(
                          u.id,
                          u.typeAnnotation,
                          u.typeAnnotation && e.call(n, 'typeAnnotation'),
                          t
                        );
                        return (
                          o.push(
                            'type ',
                            e.call(n, 'id'),
                            e.call(n, 'typeParameters'),
                            ' =',
                            A,
                            a
                          ),
                          rE(Kv(o))
                        );
                      case 'WithStatement':
                        return rE(
                          Kv([
                            'with (',
                            e.call(n, 'object'),
                            ')',
                            VE(u.body, e.call(n, 'body')),
                          ])
                        );
                      case 'IfStatement':
                        var F = VE(u.consequent, e.call(n, 'consequent')),
                          x = rE(
                            Kv([
                              'if (',
                              rE(Kv([uE(Kv([tE, e.call(n, 'test')])), tE])),
                              ')',
                              F,
                            ])
                          );
                        if ((o.push(x), u.alternate)) {
                          var S =
                              (EE(u.consequent) &&
                                u.consequent.comments.some(function (e) {
                                  return e.trailing && !kE(e);
                                })) ||
                              NE(u),
                            w = 'BlockStatement' === u.consequent.type && !S;
                          o.push(w ? ' ' : eE),
                            gE(u) &&
                              o.push(
                                Wo.printDanglingComments(e, t, !0),
                                S ? eE : ' '
                              ),
                            o.push(
                              'else',
                              rE(
                                VE(
                                  u.alternate,
                                  e.call(n, 'alternate'),
                                  'IfStatement' === u.alternate.type
                                )
                              )
                            );
                        }
                        return Kv(o);
                      case 'ForStatement':
                        var B = VE(u.body, e.call(n, 'body')),
                          T = Wo.printDanglingComments(e, t, !0),
                          N = T ? Kv([T, tE]) : '';
                        return u.init || u.test || u.update
                          ? Kv([
                              N,
                              rE(
                                Kv([
                                  'for (',
                                  rE(
                                    Kv([
                                      uE(
                                        Kv([
                                          tE,
                                          e.call(n, 'init'),
                                          ';',
                                          Zv,
                                          e.call(n, 'test'),
                                          ';',
                                          Zv,
                                          e.call(n, 'update'),
                                        ])
                                      ),
                                      tE,
                                    ])
                                  ),
                                  ')',
                                  B,
                                ])
                              ),
                            ])
                          : Kv([N, rE(Kv(['for (;;)', B]))]);
                      case 'WhileStatement':
                        return rE(
                          Kv([
                            'while (',
                            rE(Kv([uE(Kv([tE, e.call(n, 'test')])), tE])),
                            ')',
                            VE(u.body, e.call(n, 'body')),
                          ])
                        );
                      case 'ForInStatement':
                        return rE(
                          Kv([
                            'for (',
                            e.call(n, 'left'),
                            ' in ',
                            e.call(n, 'right'),
                            ')',
                            VE(u.body, e.call(n, 'body')),
                          ])
                        );
                      case 'ForOfStatement':
                        return rE(
                          Kv([
                            'for',
                            u.await ? ' await' : '',
                            ' (',
                            e.call(n, 'left'),
                            ' of ',
                            e.call(n, 'right'),
                            ')',
                            VE(u.body, e.call(n, 'body')),
                          ])
                        );
                      case 'DoWhileStatement':
                        var O = VE(u.body, e.call(n, 'body')),
                          P = rE(Kv(['do', O]));
                        return (
                          (o = [P]),
                          'BlockStatement' === u.body.type
                            ? o.push(' ')
                            : o.push(eE),
                          o.push('while ('),
                          o.push(
                            rE(Kv([uE(Kv([tE, e.call(n, 'test')])), tE])),
                            ')',
                            a
                          ),
                          Kv(o)
                        );
                      case 'DoExpression':
                        return Kv(['do ', e.call(n, 'body')]);
                      case 'BreakStatement':
                        return (
                          o.push('break'),
                          u.label && o.push(' ', e.call(n, 'label')),
                          o.push(a),
                          Kv(o)
                        );
                      case 'ContinueStatement':
                        return (
                          o.push('continue'),
                          u.label && o.push(' ', e.call(n, 'label')),
                          o.push(a),
                          Kv(o)
                        );
                      case 'LabeledStatement':
                        return 'EmptyStatement' === u.body.type
                          ? Kv([e.call(n, 'label'), ':;'])
                          : Kv([e.call(n, 'label'), ': ', e.call(n, 'body')]);
                      case 'TryStatement':
                        return Kv([
                          'try ',
                          e.call(n, 'block'),
                          u.handler ? Kv([' ', e.call(n, 'handler')]) : '',
                          u.finalizer
                            ? Kv([' finally ', e.call(n, 'finalizer')])
                            : '',
                        ]);
                      case 'CatchClause':
                        if (u.param) {
                          var M =
                              u.param.comments &&
                              u.param.comments.some(function (e) {
                                return (
                                  !kE(e) ||
                                  (e.leading && Uv(t.originalText, IE(e))) ||
                                  (e.trailing &&
                                    Uv(t.originalText, ME(e), {
                                      backwards: !0,
                                    }))
                                );
                              }),
                            I = e.call(n, 'param');
                          return Kv([
                            'catch ',
                            Kv(
                              M
                                ? ['(', uE(Kv([tE, I])), tE, ') ']
                                : ['(', I, ') ']
                            ),
                            e.call(n, 'body'),
                          ]);
                        }
                        return Kv(['catch ', e.call(n, 'body')]);
                      case 'SwitchStatement':
                        return Kv([
                          rE(
                            Kv([
                              'switch (',
                              uE(Kv([tE, e.call(n, 'discriminant')])),
                              tE,
                              ')',
                            ])
                          ),
                          ' {',
                          u.cases.length > 0
                            ? uE(
                                Kv([
                                  eE,
                                  Qv(
                                    eE,
                                    e.map(function (e) {
                                      var r = e.getValue();
                                      return Kv([
                                        e.call(n),
                                        u.cases.indexOf(r) !==
                                          u.cases.length - 1 &&
                                        Xv(t.originalText, r, IE)
                                          ? eE
                                          : '',
                                      ]);
                                    }, 'cases')
                                  ),
                                ])
                              )
                            : '',
                          eE,
                          '}',
                        ]);
                      case 'SwitchCase':
                        u.test
                          ? o.push('case ', e.call(n, 'test'), ':')
                          : o.push('default:');
                        var j = u.consequent.filter(function (e) {
                          return 'EmptyStatement' !== e.type;
                        });
                        if (j.length > 0) {
                          var L = e.call(function (e) {
                            return AC(e, t, n);
                          }, 'consequent');
                          o.push(
                            1 === j.length && 'BlockStatement' === j[0].type
                              ? Kv([' ', L])
                              : uE(Kv([eE, L]))
                          );
                        }
                        return Kv(o);
                      case 'DebuggerStatement':
                        return Kv(['debugger', a]);
                      case 'JSXAttribute':
                        return eC(e, t, n);
                      case 'JSXIdentifier':
                        return '' + u.name;
                      case 'JSXNamespacedName':
                        return Qv(':', [
                          e.call(n, 'namespace'),
                          e.call(n, 'name'),
                        ]);
                      case 'JSXMemberExpression':
                        return Qv('.', [
                          e.call(n, 'object'),
                          e.call(n, 'property'),
                        ]);
                      case 'TSQualifiedName':
                        return Qv('.', [e.call(n, 'left'), e.call(n, 'right')]);
                      case 'JSXSpreadAttribute':
                        return iC(e, t, n);
                      case 'JSXSpreadChild':
                        return oC(e, t, n);
                      case 'JSXExpressionContainer':
                        return uC(e, t, n);
                      case 'JSXFragment':
                      case 'JSXElement':
                        return ZE(e, t, n);
                      case 'JSXOpeningElement':
                        return tC(e, t, n);
                      case 'JSXClosingElement':
                        return nC(e, t, n);
                      case 'JSXOpeningFragment':
                      case 'JSXClosingFragment':
                        return rC(e, t);
                      case 'JSXText':
                        throw new Error(
                          'JSXTest should be handled by JSXElement'
                        );
                      case 'JSXEmptyExpression':
                        return aC(e, t);
                      case 'ClassBody':
                        return u.comments || 0 !== u.body.length
                          ? Kv([
                              '{',
                              u.body.length > 0
                                ? uE(
                                    Kv([
                                      eE,
                                      e.call(function (e) {
                                        return AC(e, t, n);
                                      }, 'body'),
                                    ])
                                  )
                                : Wo.printDanglingComments(e, t),
                              eE,
                              '}',
                            ])
                          : '{}';
                      case 'ClassProperty':
                      case 'FieldDefinition':
                      case 'TSAbstractClassProperty':
                      case 'ClassPrivateProperty':
                        return (
                          u.decorators &&
                            0 !== u.decorators.length &&
                            o.push(RE(e, t, n)),
                          u.accessibility && o.push(u.accessibility + ' '),
                          u.declare && o.push('declare '),
                          u.static && o.push('static '),
                          ('TSAbstractClassProperty' === u.type ||
                            u.abstract) &&
                            o.push('abstract '),
                          u.readonly && o.push('readonly '),
                          u.variance && o.push(e.call(n, 'variance')),
                          o.push(pC(e, t, n), jE(e), KE(e, t, n)),
                          u.value &&
                            o.push(
                              ' =',
                              CC(u.key, u.value, e.call(n, 'value'), t)
                            ),
                          o.push(a),
                          rE(Kv(o))
                        );
                      case 'ClassDeclaration':
                      case 'ClassExpression':
                        return (
                          u.declare && o.push('declare '),
                          o.push(sC(e, t, n)),
                          Kv(o)
                        );
                      case 'TSInterfaceHeritage':
                      case 'TSExpressionWithTypeArguments':
                        return (
                          o.push(e.call(n, 'expression')),
                          u.typeParameters &&
                            o.push(e.call(n, 'typeParameters')),
                          Kv(o)
                        );
                      case 'TemplateElement':
                        return Qv(nE, u.value.raw.split(/\r?\n/g));
                      case 'TSTemplateLiteralType':
                      case 'TemplateLiteral':
                        return GE(e, n, t);
                      case 'TaggedTemplateExpression':
                        return Kv([
                          e.call(n, 'tag'),
                          e.call(n, 'typeParameters'),
                          e.call(n, 'quasi'),
                        ]);
                      case 'Node':
                      case 'Printable':
                      case 'SourceLocation':
                      case 'Position':
                      case 'Statement':
                      case 'Function':
                      case 'Pattern':
                      case 'Expression':
                      case 'Declaration':
                      case 'Specifier':
                      case 'NamedSpecifier':
                      case 'Comment':
                      case 'MemberTypeAnnotation':
                      case 'Type':
                        throw new Error(
                          'unprintable type: ' + JSON.stringify(u.type)
                        );
                      case 'TypeAnnotation':
                      case 'TSTypeAnnotation':
                        return u.typeAnnotation
                          ? e.call(n, 'typeAnnotation')
                          : '';
                      case 'TSNamedTupleMember':
                        return Kv([
                          e.call(n, 'label'),
                          u.optional ? '?' : '',
                          ': ',
                          e.call(n, 'elementType'),
                        ]);
                      case 'TSTupleType':
                      case 'TupleTypeAnnotation':
                        var _ =
                            'TSTupleType' === u.type ? 'elementTypes' : 'types',
                          R = u[_].length > 0 && 'TSRestType' === zv(u[_]).type;
                        return rE(
                          Kv([
                            '[',
                            uE(Kv([tE, XE(e, t, _, n)])),
                            oE(PE(t, 'all') && !R ? ',' : ''),
                            Wo.printDanglingComments(e, t, !0),
                            tE,
                            ']',
                          ])
                        );
                      case 'ExistsTypeAnnotation':
                        return '*';
                      case 'EmptyTypeAnnotation':
                        return 'empty';
                      case 'MixedTypeAnnotation':
                        return 'mixed';
                      case 'ArrayTypeAnnotation':
                        return Kv([e.call(n, 'elementType'), '[]']);
                      case 'BooleanLiteralTypeAnnotation':
                        return '' + u.value;
                      case 'DeclareClass':
                        return $E(e, sC(e, t, n));
                      case 'TSDeclareFunction':
                        return Kv([
                          u.declare ? 'declare ' : '',
                          fC(e, n, t),
                          a,
                        ]);
                      case 'DeclareFunction':
                        return $E(
                          e,
                          Kv([
                            'function ',
                            e.call(n, 'id'),
                            u.predicate ? ' ' : '',
                            e.call(n, 'predicate'),
                            a,
                          ])
                        );
                      case 'DeclareModule':
                        return $E(
                          e,
                          Kv([
                            'module ',
                            e.call(n, 'id'),
                            ' ',
                            e.call(n, 'body'),
                          ])
                        );
                      case 'DeclareModuleExports':
                        return $E(
                          e,
                          Kv([
                            'module.exports',
                            ': ',
                            e.call(n, 'typeAnnotation'),
                            a,
                          ])
                        );
                      case 'DeclareVariable':
                        return $E(e, Kv(['var ', e.call(n, 'id'), a]));
                      case 'DeclareOpaqueType':
                      case 'OpaqueType':
                        return (
                          o.push(
                            'opaque type ',
                            e.call(n, 'id'),
                            e.call(n, 'typeParameters')
                          ),
                          u.supertype && o.push(': ', e.call(n, 'supertype')),
                          u.impltype && o.push(' = ', e.call(n, 'impltype')),
                          o.push(a),
                          'DeclareOpaqueType' === u.type ? $E(e, Kv(o)) : Kv(o)
                        );
                      case 'EnumDeclaration':
                        return Kv([
                          'enum ',
                          e.call(n, 'id'),
                          ' ',
                          e.call(n, 'body'),
                        ]);
                      case 'EnumBooleanBody':
                      case 'EnumNumberBody':
                      case 'EnumStringBody':
                      case 'EnumSymbolBody':
                        if ('EnumSymbolBody' === u.type || u.explicitType) {
                          var $ = null;
                          switch (u.type) {
                            case 'EnumBooleanBody':
                              $ = 'boolean';
                              break;
                            case 'EnumNumberBody':
                              $ = 'number';
                              break;
                            case 'EnumStringBody':
                              $ = 'string';
                              break;
                            case 'EnumSymbolBody':
                              $ = 'symbol';
                          }
                          o.push('of ', $, ' ');
                        }
                        if (0 !== u.members.length || u.hasUnknownMembers) {
                          var V = u.members.length
                            ? [
                                eE,
                                XE(e, t, 'members', n),
                                u.hasUnknownMembers || PE(t) ? ',' : '',
                              ]
                            : [];
                          o.push(
                            rE(
                              Kv([
                                '{',
                                uE(
                                  Kv(
                                    [].concat(
                                      V,
                                      m(u.hasUnknownMembers ? [eE, '...'] : [])
                                    )
                                  )
                                ),
                                Wo.printDanglingComments(e, t, !0),
                                eE,
                                '}',
                              ])
                            )
                          );
                        } else
                          o.push(
                            rE(
                              Kv(['{', Wo.printDanglingComments(e, t), tE, '}'])
                            )
                          );
                        return Kv(o);
                      case 'EnumBooleanMember':
                      case 'EnumNumberMember':
                      case 'EnumStringMember':
                        return Kv([
                          e.call(n, 'id'),
                          ' = ',
                          'object' == k(u.init)
                            ? e.call(n, 'init')
                            : String(u.init),
                        ]);
                      case 'EnumDefaultedMember':
                        return e.call(n, 'id');
                      case 'FunctionTypeAnnotation':
                      case 'TSFunctionType':
                        var q = e.getParentNode(0),
                          W = e.getParentNode(1),
                          U = e.getParentNode(2),
                          J =
                            'TSFunctionType' === u.type ||
                            !(
                              (('ObjectTypeProperty' === q.type ||
                                'ObjectTypeInternalSlot' === q.type) &&
                                !q.variance &&
                                !q.optional &&
                                ME(q) === ME(u)) ||
                              'ObjectTypeCallProperty' === q.type ||
                              (U && 'DeclareFunction' === U.type)
                            ),
                          z =
                            J &&
                            ('TypeAnnotation' === q.type ||
                              'TSTypeAnnotation' === q.type),
                          G =
                            z &&
                            J &&
                            ('TypeAnnotation' === q.type ||
                              'TSTypeAnnotation' === q.type) &&
                            'ArrowFunctionExpression' === W.type;
                        return (
                          wE(q) && ((J = !0), (z = !0)),
                          G && o.push('('),
                          o.push(zE(e, n, t, !1, !0)),
                          (u.returnType || u.predicate || u.typeAnnotation) &&
                            o.push(
                              J ? ' => ' : ': ',
                              e.call(n, 'returnType'),
                              e.call(n, 'predicate'),
                              e.call(n, 'typeAnnotation')
                            ),
                          G && o.push(')'),
                          rE(Kv(o))
                        );
                      case 'TSRestType':
                        return Kv(['...', e.call(n, 'typeAnnotation')]);
                      case 'TSOptionalType':
                        return Kv([e.call(n, 'typeAnnotation'), '?']);
                      case 'FunctionTypeParam':
                        var H = u.name
                          ? e.call(n, 'name')
                          : e.getParentNode().this === u
                          ? 'this'
                          : '';
                        return Kv([
                          H,
                          jE(e),
                          H ? ': ' : '',
                          e.call(n, 'typeAnnotation'),
                        ]);
                      case 'DeclareInterface':
                      case 'InterfaceDeclaration':
                      case 'InterfaceTypeAnnotation':
                      case 'TSInterfaceDeclaration':
                        return yC(e, t, n);
                      case 'ClassImplements':
                      case 'InterfaceExtends':
                        return Kv([
                          e.call(n, 'id'),
                          e.call(n, 'typeParameters'),
                        ]);
                      case 'TSClassImplements':
                        return Kv([
                          e.call(n, 'expression'),
                          e.call(n, 'typeParameters'),
                        ]);
                      case 'TSIntersectionType':
                      case 'IntersectionTypeAnnotation':
                        for (
                          var X = e.map(n, 'types'), Y = [], K = !1, Q = 0;
                          Q < X.length;
                          ++Q
                        )
                          0 === Q
                            ? Y.push(X[Q])
                            : SE(u.types[Q - 1]) && SE(u.types[Q])
                            ? Y.push(Kv([' & ', K ? uE(X[Q]) : X[Q]]))
                            : SE(u.types[Q - 1]) || SE(u.types[Q])
                            ? (Q > 1 && (K = !0),
                              Y.push(' & ', Q > 1 ? uE(X[Q]) : X[Q]))
                            : Y.push(uE(Kv([' &', Zv, X[Q]])));
                        return rE(Kv(Y));
                      case 'TSUnionType':
                      case 'UnionTypeAnnotation':
                        var Z = e.getParentNode(),
                          ee = !(
                            'TypeParameterInstantiation' === Z.type ||
                            'TSTypeParameterInstantiation' === Z.type ||
                            'GenericTypeAnnotation' === Z.type ||
                            'TSTypeReference' === Z.type ||
                            'TSTypeAssertion' === Z.type ||
                            'TupleTypeAnnotation' === Z.type ||
                            'TSTupleType' === Z.type ||
                            ('FunctionTypeParam' === Z.type &&
                              !Z.name &&
                              e.getParentNode(1).this !== Z) ||
                            (('TypeAlias' === Z.type ||
                              'VariableDeclarator' === Z.type ||
                              'TSTypeAliasDeclaration' === Z.type) &&
                              yE(t.originalText, u))
                          ),
                          te = QE(u),
                          ne = e.map(function (e) {
                            var r = e.call(n);
                            return (
                              te || (r = aE(2, r)),
                              Wo.printComments(
                                e,
                                function () {
                                  return r;
                                },
                                t
                              )
                            );
                          }, 'types');
                        if (te) return Qv(' | ', ne);
                        var re = ee && !yE(t.originalText, u),
                          ue = Kv([
                            oE(Kv([re ? Zv : '', '| '])),
                            Qv(Kv([Zv, '| ']), ne),
                          ]);
                        return qp(e, t)
                          ? rE(Kv([uE(ue), tE]))
                          : ('TupleTypeAnnotation' === Z.type &&
                              Z.types.length > 1) ||
                            ('TSTupleType' === Z.type &&
                              Z.elementTypes.length > 1)
                          ? rE(
                              Kv([uE(Kv([oE(Kv(['(', tE])), ue])), tE, oE(')')])
                            )
                          : rE(ee ? uE(ue) : ue);
                      case 'NullableTypeAnnotation':
                        return Kv(['?', e.call(n, 'typeAnnotation')]);
                      case 'Variance':
                        var ae = u.kind;
                        return (
                          Eo.ok('plus' === ae || 'minus' === ae),
                          'plus' === ae ? '+' : '-'
                        );
                      case 'ObjectTypeCallProperty':
                        return (
                          u.static && o.push('static '),
                          o.push(e.call(n, 'value')),
                          Kv(o)
                        );
                      case 'ObjectTypeIndexer':
                        return Kv([
                          u.variance ? e.call(n, 'variance') : '',
                          '[',
                          e.call(n, 'id'),
                          u.id ? ': ' : '',
                          e.call(n, 'key'),
                          ']: ',
                          e.call(n, 'value'),
                        ]);
                      case 'ObjectTypeProperty':
                        var ie = '';
                        return (
                          u.proto
                            ? (ie = 'proto ')
                            : u.static && (ie = 'static '),
                          Kv([
                            ie,
                            AE(u) ? u.kind + ' ' : '',
                            u.variance ? e.call(n, 'variance') : '',
                            pC(e, t, n),
                            jE(e),
                            bE(u) ? '' : ': ',
                            e.call(n, 'value'),
                          ])
                        );
                      case 'QualifiedTypeIdentifier':
                        return Kv([
                          e.call(n, 'qualification'),
                          '.',
                          e.call(n, 'id'),
                        ]);
                      case 'StringLiteralTypeAnnotation':
                        return SC(u, t);
                      case 'NumberLiteralTypeAnnotation':
                        Eo.strictEqual(k(u.value), 'number');
                      case 'BigIntLiteralTypeAnnotation':
                        return null != u.extra ? Hv(u.extra.raw) : Hv(u.raw);
                      case 'DeclareTypeAlias':
                      case 'TypeAlias':
                        ('DeclareTypeAlias' === u.type || u.declare) &&
                          o.push('declare ');
                        var oe = CC(u.id, u.right, e.call(n, 'right'), t);
                        return (
                          o.push(
                            'type ',
                            e.call(n, 'id'),
                            e.call(n, 'typeParameters'),
                            ' =',
                            oe,
                            a
                          ),
                          rE(Kv(o))
                        );
                      case 'TypeCastExpression':
                        return Kv([
                          '(',
                          e.call(n, 'expression'),
                          KE(e, t, n),
                          ')',
                        ]);
                      case 'TypeParameterDeclaration':
                      case 'TypeParameterInstantiation':
                        var se = cC(e, t, n, 'params');
                        if ('flow' === t.parser) {
                          var le = ME(u),
                            ce = IE(u),
                            pe = t.originalText.lastIndexOf('/*', le),
                            fe = t.originalText.indexOf('*/', ce);
                          if (-1 !== pe && -1 !== fe) {
                            var de = t.originalText.slice(pe + 2, fe).trim();
                            if (
                              de.startsWith('::') &&
                              !de.includes('/*') &&
                              !de.includes('*/')
                            )
                              return Kv(['/*:: ', se, ' */']);
                          }
                        }
                        return se;
                      case 'TSTypeParameterDeclaration':
                      case 'TSTypeParameterInstantiation':
                        return cC(e, t, n, 'params');
                      case 'TSTypeParameter':
                      case 'TypeParameter':
                        var he = e.getParentNode();
                        if ('TSMappedType' === he.type)
                          return (
                            o.push('[', e.call(n, 'name')),
                            u.constraint &&
                              o.push(' in ', e.call(n, 'constraint')),
                            he.nameType &&
                              o.push(
                                ' as ',
                                e.callParent(function (e) {
                                  return e.call(n, 'nameType');
                                })
                              ),
                            o.push(']'),
                            Kv(o)
                          );
                        u.variance && o.push(e.call(n, 'variance')),
                          o.push(e.call(n, 'name')),
                          u.bound && (o.push(': '), o.push(e.call(n, 'bound'))),
                          u.constraint &&
                            o.push(' extends ', e.call(n, 'constraint')),
                          u.default && o.push(' = ', e.call(n, 'default'));
                        var ge = e.getNode(2);
                        return (
                          1 === pE(he).length &&
                            TE(t) &&
                            !u.constraint &&
                            'ArrowFunctionExpression' === ge.type &&
                            o.push(','),
                          Kv(o)
                        );
                      case 'TypeofTypeAnnotation':
                        return Kv(['typeof ', e.call(n, 'argument')]);
                      case 'InferredPredicate':
                        return '%checks';
                      case 'DeclaredPredicate':
                        return Kv(['%checks(', e.call(n, 'value'), ')']);
                      case 'TSAbstractKeyword':
                        return 'abstract';
                      case 'AnyTypeAnnotation':
                      case 'TSAnyKeyword':
                        return 'any';
                      case 'TSAsyncKeyword':
                        return 'async';
                      case 'BooleanTypeAnnotation':
                      case 'TSBooleanKeyword':
                        return 'boolean';
                      case 'BigIntTypeAnnotation':
                      case 'TSBigIntKeyword':
                        return 'bigint';
                      case 'TSConstKeyword':
                        return 'const';
                      case 'TSDeclareKeyword':
                        return 'declare';
                      case 'TSExportKeyword':
                        return 'export';
                      case 'NullLiteralTypeAnnotation':
                      case 'TSNullKeyword':
                        return 'null';
                      case 'TSNeverKeyword':
                        return 'never';
                      case 'NumberTypeAnnotation':
                      case 'TSNumberKeyword':
                        return 'number';
                      case 'TSObjectKeyword':
                        return 'object';
                      case 'TSProtectedKeyword':
                        return 'protected';
                      case 'TSPrivateKeyword':
                        return 'private';
                      case 'TSPublicKeyword':
                        return 'public';
                      case 'TSReadonlyKeyword':
                        return 'readonly';
                      case 'SymbolTypeAnnotation':
                      case 'TSSymbolKeyword':
                        return 'symbol';
                      case 'TSStaticKeyword':
                        return 'static';
                      case 'StringTypeAnnotation':
                      case 'TSStringKeyword':
                        return 'string';
                      case 'TSUndefinedKeyword':
                        return 'undefined';
                      case 'TSUnknownKeyword':
                        return 'unknown';
                      case 'VoidTypeAnnotation':
                      case 'TSVoidKeyword':
                        return 'void';
                      case 'TSAsExpression':
                        return Kv([
                          e.call(n, 'expression'),
                          ' as ',
                          e.call(n, 'typeAnnotation'),
                        ]);
                      case 'TSArrayType':
                        return Kv([e.call(n, 'elementType'), '[]']);
                      case 'TSPropertySignature':
                        return (
                          u.export && o.push('export '),
                          u.accessibility && o.push(u.accessibility + ' '),
                          u.static && o.push('static '),
                          u.readonly && o.push('readonly '),
                          o.push(pC(e, t, n), jE(e)),
                          u.typeAnnotation &&
                            (o.push(': '), o.push(e.call(n, 'typeAnnotation'))),
                          u.initializer &&
                            o.push(' = ', e.call(n, 'initializer')),
                          Kv(o)
                        );
                      case 'TSParameterProperty':
                        return (
                          u.accessibility && o.push(u.accessibility + ' '),
                          u.export && o.push('export '),
                          u.static && o.push('static '),
                          u.readonly && o.push('readonly '),
                          o.push(e.call(n, 'parameter')),
                          Kv(o)
                        );
                      case 'GenericTypeAnnotation':
                      case 'TSTypeReference':
                        return Kv([
                          e.call(
                            n,
                            'TSTypeReference' === u.type ? 'typeName' : 'id'
                          ),
                          cC(e, t, n, 'typeParameters'),
                        ]);
                      case 'TSTypeQuery':
                        return Kv(['typeof ', e.call(n, 'exprName')]);
                      case 'TSIndexSignature':
                        var me = e.getParentNode(),
                          ye =
                            u.parameters.length > 1 ? oE(PE(t) ? ',' : '') : '',
                          De = rE(
                            Kv([
                              uE(
                                Kv([
                                  tE,
                                  Qv(Kv([', ', tE]), e.map(n, 'parameters')),
                                ])
                              ),
                              ye,
                              tE,
                            ])
                          );
                        return Kv([
                          u.export ? 'export ' : '',
                          u.accessibility ? Kv([u.accessibility, ' ']) : '',
                          u.static ? 'static ' : '',
                          u.readonly ? 'readonly ' : '',
                          u.declare ? 'declare ' : '',
                          '[',
                          u.parameters ? De : '',
                          u.typeAnnotation ? ']: ' : ']',
                          u.typeAnnotation ? e.call(n, 'typeAnnotation') : '',
                          'ClassBody' === me.type ? a : '',
                        ]);
                      case 'TSTypePredicate':
                        return Kv([
                          u.asserts ? 'asserts ' : '',
                          e.call(n, 'parameterName'),
                          u.typeAnnotation
                            ? Kv([' is ', e.call(n, 'typeAnnotation')])
                            : '',
                        ]);
                      case 'TSNonNullExpression':
                        return Kv([e.call(n, 'expression'), '!']);
                      case 'ThisTypeAnnotation':
                      case 'TSThisType':
                        return 'this';
                      case 'TSImportType':
                        return Kv([
                          u.isTypeOf ? 'typeof ' : '',
                          'import(',
                          e.call(n, u.parameter ? 'parameter' : 'argument'),
                          ')',
                          u.qualifier ? Kv(['.', e.call(n, 'qualifier')]) : '',
                          cC(e, t, n, 'typeParameters'),
                        ]);
                      case 'TSLiteralType':
                        return e.call(n, 'literal');
                      case 'TSIndexedAccessType':
                        return Kv([
                          e.call(n, 'objectType'),
                          '[',
                          e.call(n, 'indexType'),
                          ']',
                        ]);
                      case 'TSConstructSignatureDeclaration':
                      case 'TSCallSignatureDeclaration':
                      case 'TSConstructorType':
                        if (
                          ('TSCallSignatureDeclaration' !== u.type &&
                            o.push('new '),
                          o.push(rE(zE(e, n, t, !1, !0))),
                          u.returnType || u.typeAnnotation)
                        ) {
                          var ve = 'TSConstructorType' === u.type;
                          o.push(
                            ve ? ' => ' : ': ',
                            e.call(n, 'returnType'),
                            e.call(n, 'typeAnnotation')
                          );
                        }
                        return Kv(o);
                      case 'TSTypeOperator':
                        return Kv([
                          u.operator,
                          ' ',
                          e.call(n, 'typeAnnotation'),
                        ]);
                      case 'TSMappedType':
                        var Ee = Jv(t.originalText, ME(u), IE(u));
                        return rE(
                          Kv([
                            '{',
                            uE(
                              Kv([
                                t.bracketSpacing ? Zv : tE,
                                u.readonly
                                  ? Kv([hE(u.readonly, 'readonly'), ' '])
                                  : '',
                                _E(e, t, n),
                                e.call(n, 'typeParameter'),
                                u.optional ? hE(u.optional, '?') : '',
                                u.typeAnnotation ? ': ' : '',
                                e.call(n, 'typeAnnotation'),
                                oE(a, ''),
                              ])
                            ),
                            Wo.printDanglingComments(e, t, !0),
                            t.bracketSpacing ? Zv : tE,
                            '}',
                          ]),
                          { shouldBreak: Ee }
                        );
                      case 'TSMethodSignature':
                        return (
                          o.push(
                            u.accessibility ? Kv([u.accessibility, ' ']) : '',
                            u.export ? 'export ' : '',
                            u.static ? 'static ' : '',
                            u.readonly ? 'readonly ' : '',
                            u.computed ? '[' : '',
                            e.call(n, 'key'),
                            u.computed ? ']' : '',
                            jE(e),
                            zE(e, n, t, !1, !0)
                          ),
                          (u.returnType || u.typeAnnotation) &&
                            o.push(
                              ': ',
                              e.call(n, 'returnType'),
                              e.call(n, 'typeAnnotation')
                            ),
                          rE(Kv(o))
                        );
                      case 'TSNamespaceExportDeclaration':
                        return (
                          o.push('export as namespace ', e.call(n, 'id')),
                          t.semi && o.push(';'),
                          rE(Kv(o))
                        );
                      case 'TSEnumDeclaration':
                        return (
                          u.declare && o.push('declare '),
                          u.modifiers && o.push(_E(e, t, n)),
                          u.const && o.push('const '),
                          o.push('enum ', e.call(n, 'id'), ' '),
                          0 === u.members.length
                            ? o.push(
                                rE(
                                  Kv([
                                    '{',
                                    Wo.printDanglingComments(e, t),
                                    tE,
                                    '}',
                                  ])
                                )
                              )
                            : o.push(
                                rE(
                                  Kv([
                                    '{',
                                    uE(
                                      Kv([
                                        eE,
                                        XE(e, t, 'members', n),
                                        PE(t, 'es5') ? ',' : '',
                                      ])
                                    ),
                                    Wo.printDanglingComments(e, t, !0),
                                    eE,
                                    '}',
                                  ])
                                )
                              ),
                          Kv(o)
                        );
                      case 'TSEnumMember':
                        return (
                          o.push(e.call(n, 'id')),
                          u.initializer &&
                            o.push(' = ', e.call(n, 'initializer')),
                          Kv(o)
                        );
                      case 'TSImportEqualsDeclaration':
                        return (
                          u.isExport && o.push('export '),
                          o.push(
                            'import ',
                            e.call(n, 'id'),
                            ' = ',
                            e.call(n, 'moduleReference')
                          ),
                          t.semi && o.push(';'),
                          rE(Kv(o))
                        );
                      case 'TSExternalModuleReference':
                        return Kv(['require(', e.call(n, 'expression'), ')']);
                      case 'TSModuleDeclaration':
                        var Ce = e.getParentNode(),
                          be = FE(u.id),
                          Ae = 'TSModuleDeclaration' === Ce.type,
                          Fe = u.body && 'TSModuleDeclaration' === u.body.type;
                        if (Ae) o.push('.');
                        else {
                          u.declare && o.push('declare '), o.push(_E(e, t, n));
                          var xe = t.originalText.slice(ME(u), ME(u.id));
                          ('Identifier' === u.id.type &&
                            'global' === u.id.name &&
                            !/namespace|module/.test(xe)) ||
                            o.push(
                              be || /(^|\s)module(\s|$)/.test(xe)
                                ? 'module '
                                : 'namespace '
                            );
                        }
                        return (
                          o.push(e.call(n, 'id')),
                          Fe
                            ? o.push(e.call(n, 'body'))
                            : u.body
                            ? o.push(' ', rE(e.call(n, 'body')))
                            : o.push(a),
                          Kv(o)
                        );
                      case 'PrivateName':
                        return Kv(['#', e.call(n, u.id ? 'id' : 'name')]);
                      case 'TSPrivateIdentifier':
                        return u.escapedText;
                      case 'TSConditionalType':
                        return ed(e, t, n, {
                          beforeParts: function () {
                            return [
                              e.call(n, 'checkType'),
                              ' ',
                              'extends',
                              ' ',
                              e.call(n, 'extendsType'),
                            ];
                          },
                          afterParts: function () {
                            return [];
                          },
                          shouldCheckJsx: !1,
                          conditionalNodeType: 'TSConditionalType',
                          consequentNodePropertyName: 'trueType',
                          alternateNodePropertyName: 'falseType',
                          testNodePropertyNames: ['checkType', 'extendsType'],
                        });
                      case 'TSInferType':
                        return Kv(['infer', ' ', e.call(n, 'typeParameter')]);
                      case 'InterpreterDirective':
                        return (
                          o.push('#!', u.value, eE),
                          Xv(t.originalText, u, IE) && o.push(eE),
                          Kv(o)
                        );
                      case 'NGRoot':
                        return Kv(
                          [].concat(
                            e.call(n, 'node'),
                            u.node.comments && 0 !== u.node.comments.length
                              ? Kv([' //', u.node.comments[0].value.trimEnd()])
                              : []
                          )
                        );
                      case 'NGChainedExpression':
                        return rE(
                          Qv(
                            Kv([';', Zv]),
                            e.map(function (e) {
                              return vE(e) ? n(e) : Kv(['(', n(e), ')']);
                            }, 'expressions')
                          )
                        );
                      case 'NGEmptyExpression':
                        return '';
                      case 'NGQuotedExpression':
                        return Kv([u.prefix, ': ', u.value.trim()]);
                      case 'NGMicrosyntax':
                        return Kv(
                          e.map(function (e, t) {
                            return Kv([
                              0 === t
                                ? ''
                                : xE(e.getValue(), t, u)
                                ? ' '
                                : Kv([';', Zv]),
                              n(e),
                            ]);
                          }, 'body')
                        );
                      case 'NGMicrosyntaxKey':
                        return /^[$_a-z][\w$]*(-[$_a-z][\w$])*$/i.test(u.name)
                          ? u.name
                          : JSON.stringify(u.name);
                      case 'NGMicrosyntaxExpression':
                        return Kv([
                          e.call(n, 'expression'),
                          null === u.alias
                            ? ''
                            : Kv([' as ', e.call(n, 'alias')]),
                        ]);
                      case 'NGMicrosyntaxKeyedExpression':
                        var Se = e.getName(),
                          we = e.getParentNode(),
                          Be =
                            xE(u, Se, we) ||
                            (((1 === Se &&
                              ('then' === u.key.name ||
                                'else' === u.key.name)) ||
                              (2 === Se &&
                                'else' === u.key.name &&
                                'NGMicrosyntaxKeyedExpression' ===
                                  we.body[Se - 1].type &&
                                'then' === we.body[Se - 1].key.name)) &&
                              'NGMicrosyntaxExpression' === we.body[0].type);
                        return Kv([
                          e.call(n, 'key'),
                          Be ? ' ' : ': ',
                          e.call(n, 'expression'),
                        ]);
                      case 'NGMicrosyntaxLet':
                        return Kv([
                          'let ',
                          e.call(n, 'key'),
                          null === u.value
                            ? ''
                            : Kv([' = ', e.call(n, 'value')]),
                        ]);
                      case 'NGMicrosyntaxAs':
                        return Kv([
                          e.call(n, 'key'),
                          ' as ',
                          e.call(n, 'alias'),
                        ]);
                      case 'PipelineBareFunction':
                        return e.call(n, 'callee');
                      case 'PipelineTopicExpression':
                        return e.call(n, 'expression');
                      case 'PipelinePrimaryTopicReference':
                        return o.push('#'), Kv(o);
                      case 'ArgumentPlaceholder':
                        return '?';
                      case 'TSJSDocAllType':
                        return '*';
                      case 'TSJSDocUnknownType':
                        return '?';
                      case 'TSJSDocNullableType':
                        return Kv(['?', e.call(n, 'typeAnnotation')]);
                      case 'TSJSDocNonNullableType':
                        return Kv(['!', e.call(n, 'typeAnnotation')]);
                      case 'TSJSDocFunctionType':
                        return Kv([
                          'function(',
                          '): ',
                          e.call(n, 'typeAnnotation'),
                        ]);
                      default:
                        throw new Error(
                          'unknown type: ' + JSON.stringify(u.type)
                        );
                    }
                  })(e, t, n, r);
                if (!u || sE(i)) return i;
                var o = dE(e),
                  s = [];
                if (
                  'ClassMethod' === u.type ||
                  'ClassPrivateMethod' === u.type ||
                  'ClassProperty' === u.type ||
                  'FieldDefinition' === u.type ||
                  'TSAbstractClassProperty' === u.type ||
                  'ClassPrivateProperty' === u.type ||
                  'MethodDefinition' === u.type ||
                  'TSAbstractMethodDefinition' === u.type ||
                  'TSDeclareMethod' === u.type
                );
                else if (
                  u.decorators &&
                  u.decorators.length > 0 &&
                  !(o && ME(o, { ignoreDecorators: !0 }) > ME(u.decorators[0]))
                ) {
                  var l =
                    'ClassExpression' === u.type ||
                    'ClassDeclaration' === u.type ||
                    DE(u, t)
                      ? eE
                      : Zv;
                  e.each(function (e) {
                    var t = e.getValue();
                    (t = t.expression ? t.expression : t.callee),
                      s.push(n(e), l);
                  }, 'decorators'),
                    o && s.unshift(eE);
                } else
                  CE(u) &&
                  u.declaration &&
                  u.declaration.decorators &&
                  u.declaration.decorators.length > 0 &&
                  ME(u, { ignoreDecorators: !0 }) >
                    ME(u.declaration.decorators[0])
                    ? e.each(
                        function (e) {
                          var t = 'Decorator' === e.getValue().type ? '' : '@';
                          s.push(t, n(e), eE);
                        },
                        'declaration',
                        'decorators'
                      )
                    : (a = qp(e, t));
                var c = [];
                if ((a && c.unshift('('), c.push(i), a)) {
                  var p = e.getValue();
                  mE(p) &&
                    (c.push(' /*'),
                    c.push(p.trailingComments[0].value.trimStart()),
                    c.push('*/'),
                    (p.trailingComments[0].printed = !0)),
                    c.push(')');
                }
                return s.length > 0 ? rE(Kv(s.concat(c))) : Kv(c);
              },
              embed: function (e, t, n, r) {
                var u = e.getValue();
                if (
                  'TemplateLiteral' === u.type &&
                  !u.quasis.some(function (e) {
                    return null === e.value.cooked;
                  })
                ) {
                  var a = (function (e) {
                    return (function (e) {
                      var t = e.getValue(),
                        n = e.getParentNode(),
                        r = e.getParentNode(1);
                      return (
                        (r &&
                          t.quasis &&
                          'JSXExpressionContainer' === n.type &&
                          'JSXElement' === r.type &&
                          'style' === r.openingElement.name.name &&
                          r.openingElement.attributes.some(function (e) {
                            return 'jsx' === e.name.name;
                          })) ||
                        (n &&
                          'TaggedTemplateExpression' === n.type &&
                          'Identifier' === n.tag.type &&
                          'css' === n.tag.name) ||
                        (n &&
                          'TaggedTemplateExpression' === n.type &&
                          'MemberExpression' === n.tag.type &&
                          'css' === n.tag.object.name &&
                          ('global' === n.tag.property.name ||
                            'resolve' === n.tag.property.name))
                      );
                    })(e) ||
                      (function (e) {
                        var t = e.getParentNode();
                        if (!t || 'TaggedTemplateExpression' !== t.type)
                          return !1;
                        var n = t.tag;
                        switch (n.type) {
                          case 'MemberExpression':
                            return dp(n.object) || hp(n);
                          case 'CallExpression':
                            return (
                              dp(n.callee) ||
                              ('MemberExpression' === n.callee.type &&
                                (('MemberExpression' === n.callee.object.type &&
                                  (dp(n.callee.object.object) ||
                                    hp(n.callee.object))) ||
                                  ('CallExpression' === n.callee.object.type &&
                                    dp(n.callee.object.callee))))
                            );
                          case 'Identifier':
                            return 'css' === n.name;
                          default:
                            return !1;
                        }
                      })(e) ||
                      (function (e) {
                        var t = e.getParentNode(),
                          n = e.getParentNode(1);
                        return (
                          n &&
                          'JSXExpressionContainer' === t.type &&
                          'JSXAttribute' === n.type &&
                          'JSXIdentifier' === n.name.type &&
                          'css' === n.name.name
                        );
                      })(e) ||
                      (function (e) {
                        return e.match.apply(
                          e,
                          [
                            function (e) {
                              return 'TemplateLiteral' === e.type;
                            },
                            function (e, t) {
                              return (
                                'ArrayExpression' === e.type && 'elements' === t
                              );
                            },
                            function (e, t) {
                              return (
                                ('Property' === e.type ||
                                  'ObjectProperty' === e.type) &&
                                'Identifier' === e.key.type &&
                                'styles' === e.key.name &&
                                'value' === t
                              );
                            },
                          ].concat(fp)
                        );
                      })(e)
                      ? 'css'
                      : (function (e) {
                          var t = e.getValue(),
                            n = e.getParentNode();
                          return (
                            gp(t, 'GraphQL') ||
                            (n &&
                              (('TaggedTemplateExpression' === n.type &&
                                (('MemberExpression' === n.tag.type &&
                                  'graphql' === n.tag.object.name &&
                                  'experimental' === n.tag.property.name) ||
                                  ('Identifier' === n.tag.type &&
                                    ('gql' === n.tag.name ||
                                      'graphql' === n.tag.name)))) ||
                                ('CallExpression' === n.type &&
                                  'Identifier' === n.callee.type &&
                                  'graphql' === n.callee.name)))
                          );
                        })(e)
                      ? 'graphql'
                      : (function (e) {
                          return (
                            gp(e.getValue(), 'HTML') ||
                            e.match(
                              function (e) {
                                return 'TemplateLiteral' === e.type;
                              },
                              function (e, t) {
                                return (
                                  'TaggedTemplateExpression' === e.type &&
                                  'Identifier' === e.tag.type &&
                                  'html' === e.tag.name &&
                                  'quasi' === t
                                );
                              }
                            )
                          );
                        })(e)
                      ? 'html'
                      : (function (e) {
                          return e.match.apply(
                            e,
                            [
                              function (e) {
                                return 'TemplateLiteral' === e.type;
                              },
                              function (e, t) {
                                return (
                                  ('Property' === e.type ||
                                    'ObjectProperty' === e.type) &&
                                  'Identifier' === e.key.type &&
                                  'template' === e.key.name &&
                                  'value' === t
                                );
                              },
                            ].concat(fp)
                          );
                        })(e)
                      ? 'angular'
                      : (function (e) {
                          var t = e.getValue(),
                            n = e.getParentNode();
                          return (
                            n &&
                            'TaggedTemplateExpression' === n.type &&
                            1 === t.quasis.length &&
                            'Identifier' === n.tag.type &&
                            ('md' === n.tag.name || 'markdown' === n.tag.name)
                          );
                        })(e)
                      ? 'markdown'
                      : void 0;
                  })(e);
                  return a
                    ? 'markdown' === a
                      ? (function (e, t, n) {
                          var r = e
                              .getValue()
                              .quasis[0].value.raw.replace(
                                /((?:\\\\)*)\\`/g,
                                function (e, t) {
                                  return '\\'.repeat(t.length / 2) + '`';
                                }
                              ),
                            u = (function (e) {
                              var t = r.match(/^([^\S\n]*)\S/m);
                              return null === t ? '' : t[1];
                            })(),
                            a = '' !== u;
                          a &&
                            (r = r.replace(
                              new RegExp('^'.concat(u), 'gm'),
                              ''
                            ));
                          var i = jc(
                            n(
                              r,
                              { parser: 'markdown', __inJsTemplate: !0 },
                              { stripTrailingHardline: !0 }
                            ),
                            !0
                          );
                          return Mc([
                            '`',
                            a ? Nc(Mc([Oc, i])) : Mc([Pc, Ic(i)]),
                            Oc,
                            '`',
                          ]);
                        })(e, 0, n)
                      : 'css' === a
                      ? (function (e, t, n) {
                          var r = e.getValue(),
                            u = r.quasis.map(function (e) {
                              return e.value.raw;
                            }),
                            a = 0;
                          return (function (e, t, n) {
                            if (
                              1 === t.quasis.length &&
                              !t.quasis[0].value.raw.trim()
                            )
                              return '``';
                            var r = (function (e, t) {
                              if (!t || !t.length) return e;
                              var n = 0,
                                r = Wc(e, function (e) {
                                  if (!e || !e.parts || !e.parts.length)
                                    return e;
                                  var r = e.parts,
                                    u = r.indexOf('@'),
                                    a = u + 1;
                                  if (
                                    u > -1 &&
                                    'string' == typeof r[a] &&
                                    r[a].startsWith('prettier-placeholder')
                                  ) {
                                    var i = r[u],
                                      o = r[a],
                                      s = r.slice(a + 1);
                                    r = r
                                      .slice(0, u)
                                      .concat([i + o])
                                      .concat(s);
                                  }
                                  var l = [];
                                  return (
                                    r.forEach(function (e) {
                                      'string' == typeof e &&
                                      e.includes('@prettier-placeholder')
                                        ? e
                                            .split(
                                              /@prettier-placeholder-(\d+)-id/
                                            )
                                            .forEach(function (e, r) {
                                              r % 2 != 0
                                                ? (l.push(t[e]), n++)
                                                : l.push(Uc(e));
                                            })
                                        : l.push(e);
                                    }),
                                    Object.assign({}, e, { parts: l })
                                  );
                                });
                              return t.length === n ? r : null;
                            })(e, n);
                            if (!r)
                              throw new Error(
                                "Couldn't insert all the expressions"
                              );
                            return Vc(['`', _c(Vc([Rc, r])), $c, '`']);
                          })(
                            n(
                              u.reduce(function (e, t, n) {
                                return 0 === n
                                  ? t
                                  : e +
                                      '@prettier-placeholder-' +
                                      a++ +
                                      '-id' +
                                      t;
                              }, ''),
                              { parser: 'scss' },
                              { stripTrailingHardline: !0 }
                            ),
                            r,
                            Jc(e, t)
                          );
                        })(e, t, n)
                      : 'graphql' === a
                      ? (function (e, t, n) {
                          var r = e.getValue(),
                            u = r.quasis.length;
                          if (1 === u && '' === r.quasis[0].value.raw.trim())
                            return '``';
                          for (var a = Qc(e, t), i = [], o = 0; o < u; o++) {
                            var s = 0 === o,
                              l = o === u - 1,
                              c = r.quasis[o].value.cooked,
                              p = c.split('\n'),
                              f = p.length,
                              d = a[o],
                              h =
                                f > 2 &&
                                '' === p[0].trim() &&
                                '' === p[1].trim(),
                              g =
                                f > 2 &&
                                '' === p[f - 1].trim() &&
                                '' === p[f - 2].trim(),
                              m = p.every(function (e) {
                                return /^\s*(?:#[^\n\r]*)?$/.test(e);
                              });
                            if (!l && /#[^\n\r]*$/.test(p[f - 1])) return null;
                            var y = null;
                            (y = m
                              ? Zc(p)
                              : n(
                                  c,
                                  { parser: 'graphql' },
                                  { stripTrailingHardline: !0 }
                                ))
                              ? ((y = Kc(y, !1)),
                                !s && h && i.push(''),
                                i.push(y),
                                !l && g && i.push(''))
                              : s || l || !h || i.push(''),
                              d && i.push(d);
                          }
                          return Yc(['`', Gc(Yc([Xc, Hc(Xc, i)])), Xc, '`']);
                        })(e, t, n)
                      : 'html' === a || 'angular' === a
                      ? (function (e, t, n, r, u) {
                          var a = u.parser,
                            i = e.getValue(),
                            o = lp;
                          lp = (lp + 1) >>> 0;
                          var s = function (e) {
                              return 'PRETTIER_HTML_PLACEHOLDER_'
                                .concat(e, '_')
                                .concat(o, '_IN_JS');
                            },
                            l = i.quasis
                              .map(function (e, t, n) {
                                return t === n.length - 1
                                  ? e.value.cooked
                                  : e.value.cooked + s(t);
                              })
                              .join(''),
                            c = op(e, t);
                          if (0 === c.length && 0 === l.trim().length)
                            return '``';
                          var p = new RegExp(s('(\\d+)'), 'g'),
                            f = 0,
                            d = n(
                              l,
                              {
                                parser: a,
                                __onHtmlRoot: function (e) {
                                  f = e.children.length;
                                },
                              },
                              { stripTrailingHardline: !0 }
                            ),
                            h = ip(d, function (e) {
                              if ('string' != typeof e) return e;
                              for (
                                var t = [], n = e.split(p), u = 0;
                                u < n.length;
                                u++
                              ) {
                                var a = n[u];
                                if (u % 2 != 0) {
                                  var i = +a;
                                  t.push(c[i]);
                                } else
                                  a &&
                                    ((a = sp(a)),
                                    r.embeddedInHtml &&
                                      (a = a.replace(
                                        /<\/(script)\b/gi,
                                        '<\\/$1'
                                      )),
                                    t.push(a));
                              }
                              return up(t);
                            }),
                            g = /^\s/.test(l) ? ' ' : '',
                            m = /\s$/.test(l) ? ' ' : '',
                            y =
                              'ignore' === r.htmlWhitespaceSensitivity
                                ? rp
                                : g && m
                                ? np
                                : null;
                          return ap(
                            up(
                              y
                                ? ['`', tp(up([y, ap(h)])), y, '`']
                                : ['`', g, f > 1 ? tp(ap(h)) : ap(h), m, '`']
                            )
                          );
                        })(e, t, n, r, { parser: a })
                      : void 0
                    : void 0;
                }
              },
              insertPragma: kp,
              massageAstNode: vp,
              hasPrettierIgnore: Bl.hasPrettierIgnore,
              willPrintOwnComments: oc.willPrintOwnComments,
              canAttachComment: function (e) {
                return (
                  e.type &&
                  'CommentBlock' !== e.type &&
                  'CommentLine' !== e.type &&
                  'Line' !== e.type &&
                  'Block' !== e.type &&
                  'EmptyStatement' !== e.type &&
                  'TemplateElement' !== e.type &&
                  'Import' !== e.type
                );
              },
              printComment: Wv,
              isBlockComment: kE,
              handleComments: {
                ownLine: oc.handleOwnLineComment,
                endOfLine: oc.handleEndOfLineComment,
                remaining: oc.handleRemainingComment,
              },
              getGapRegex: oc.getGapRegex,
              getCommentChildNodes: oc.getCommentChildNodes,
            },
            TC = vn.builders,
            kC = TC.concat,
            NC = TC.hardline,
            OC = TC.indent,
            PC = TC.join,
            MC = new Set([
              'start',
              'end',
              'extra',
              'loc',
              'comments',
              'errors',
              'range',
            ]);
          function IC(e, t) {
            var n = e.type;
            return 'Identifier' === n
              ? { type: 'StringLiteral', value: e.name }
              : 'UnaryExpression' === n && '+' === e.operator
              ? t.argument
              : void 0;
          }
          IC.ignoredProperties = MC;
          var jC = {
              preprocess: Qp,
              print: function (e, t, n) {
                var r = e.getValue();
                switch (r.type) {
                  case 'JsonRoot':
                    return kC([e.call(n, 'node'), NC]);
                  case 'ArrayExpression':
                    return 0 === r.elements.length
                      ? '[]'
                      : kC([
                          '[',
                          OC(kC([NC, PC(kC([',', NC]), e.map(n, 'elements'))])),
                          NC,
                          ']',
                        ]);
                  case 'ObjectExpression':
                    return 0 === r.properties.length
                      ? '{}'
                      : kC([
                          '{',
                          OC(
                            kC([NC, PC(kC([',', NC]), e.map(n, 'properties'))])
                          ),
                          NC,
                          '}',
                        ]);
                  case 'ObjectProperty':
                    return kC([e.call(n, 'key'), ': ', e.call(n, 'value')]);
                  case 'UnaryExpression':
                    return kC([
                      '+' === r.operator ? '' : r.operator,
                      e.call(n, 'argument'),
                    ]);
                  case 'NullLiteral':
                    return 'null';
                  case 'BooleanLiteral':
                    return r.value ? 'true' : 'false';
                  case 'StringLiteral':
                  case 'NumericLiteral':
                    return JSON.stringify(r.value);
                  case 'Identifier':
                    return JSON.stringify(r.name);
                  default:
                    throw new Error('unknown type: ' + JSON.stringify(r.type));
                }
              },
              massageAstNode: IC,
            },
            LC = 'Common',
            _C = {
              bracketSpacing: {
                since: '0.0.0',
                category: LC,
                type: 'boolean',
                default: !0,
                description: 'Print spaces between brackets.',
                oppositeDescription: 'Do not print spaces between brackets.',
              },
              singleQuote: {
                since: '0.0.0',
                category: LC,
                type: 'boolean',
                default: !1,
                description: 'Use single quotes instead of double quotes.',
              },
              proseWrap: {
                since: '1.8.2',
                category: LC,
                type: 'choice',
                default: [
                  { since: '1.8.2', value: !0 },
                  { since: '1.9.0', value: 'preserve' },
                ],
                description: 'How to wrap prose.',
                choices: [
                  {
                    since: '1.9.0',
                    value: 'always',
                    description: 'Wrap prose if it exceeds the print width.',
                  },
                  {
                    since: '1.9.0',
                    value: 'never',
                    description: 'Do not wrap prose.',
                  },
                  {
                    since: '1.9.0',
                    value: 'preserve',
                    description: 'Wrap prose as-is.',
                  },
                ],
              },
            },
            RC = 'JavaScript',
            $C = {
              arrowParens: {
                since: '1.9.0',
                category: RC,
                type: 'choice',
                default: [
                  { since: '1.9.0', value: 'avoid' },
                  { since: '2.0.0', value: 'always' },
                ],
                description:
                  'Include parentheses around a sole arrow function parameter.',
                choices: [
                  {
                    value: 'always',
                    description: 'Always include parens. Example: `(x) => x`',
                  },
                  {
                    value: 'avoid',
                    description: 'Omit parens when possible. Example: `x => x`',
                  },
                ],
              },
              bracketSpacing: _C.bracketSpacing,
              jsxBracketSameLine: {
                since: '0.17.0',
                category: RC,
                type: 'boolean',
                default: !1,
                description: 'Put > on the last line instead of at a new line.',
              },
              semi: {
                since: '1.0.0',
                category: RC,
                type: 'boolean',
                default: !0,
                description: 'Print semicolons.',
                oppositeDescription:
                  'Do not print semicolons, except at the beginning of lines which may need them.',
              },
              singleQuote: _C.singleQuote,
              jsxSingleQuote: {
                since: '1.15.0',
                category: RC,
                type: 'boolean',
                default: !1,
                description: 'Use single quotes in JSX.',
              },
              quoteProps: {
                since: '1.17.0',
                category: RC,
                type: 'choice',
                default: 'as-needed',
                description: 'Change when properties in objects are quoted.',
                choices: [
                  {
                    value: 'as-needed',
                    description:
                      'Only add quotes around object properties where required.',
                  },
                  {
                    value: 'consistent',
                    description:
                      'If at least one property in an object requires quotes, quote all properties.',
                  },
                  {
                    value: 'preserve',
                    description:
                      'Respect the input use of quotes in object properties.',
                  },
                ],
              },
              trailingComma: {
                since: '0.0.0',
                category: RC,
                type: 'choice',
                default: [
                  { since: '0.0.0', value: !1 },
                  { since: '0.19.0', value: 'none' },
                  { since: '2.0.0', value: 'es5' },
                ],
                description:
                  'Print trailing commas wherever possible when multi-line.',
                choices: [
                  {
                    value: 'es5',
                    description:
                      'Trailing commas where valid in ES5 (objects, arrays, etc.)',
                  },
                  { value: 'none', description: 'No trailing commas.' },
                  {
                    value: 'all',
                    description:
                      'Trailing commas wherever possible (including function arguments).',
                  },
                ],
              },
            },
            VC = {
              name: 'JavaScript',
              type: 'programming',
              tmScope: 'source.js',
              aceMode: 'javascript',
              codemirrorMode: 'javascript',
              codemirrorMimeType: 'text/javascript',
              color: '#f1e05a',
              aliases: ['js', 'node'],
              extensions: [
                '.js',
                '._js',
                '.bones',
                '.cjs',
                '.es',
                '.es6',
                '.frag',
                '.gs',
                '.jake',
                '.jsb',
                '.jscad',
                '.jsfl',
                '.jsm',
                '.jss',
                '.mjs',
                '.njs',
                '.pac',
                '.sjs',
                '.ssjs',
                '.xsjs',
                '.xsjslib',
              ],
              filenames: ['Jakefile'],
              interpreters: [
                'chakra',
                'd8',
                'gjs',
                'js',
                'node',
                'nodejs',
                'qjs',
                'rhino',
                'v8',
                'v8-shell',
              ],
              languageId: 183,
            },
            qC = {
              name: 'JSON',
              type: 'data',
              tmScope: 'source.json',
              aceMode: 'json',
              codemirrorMode: 'javascript',
              codemirrorMimeType: 'application/json',
              searchable: !1,
              extensions: [
                '.json',
                '.avsc',
                '.geojson',
                '.gltf',
                '.har',
                '.ice',
                '.JSON-tmLanguage',
                '.jsonl',
                '.mcmeta',
                '.tfstate',
                '.tfstate.backup',
                '.topojson',
                '.webapp',
                '.webmanifest',
                '.yy',
                '.yyp',
              ],
              filenames: [
                '.arcconfig',
                '.htmlhintrc',
                '.tern-config',
                '.tern-project',
                '.watchmanconfig',
                'composer.lock',
                'mcmod.info',
              ],
              languageId: 174,
            },
            WC = {
              languages: [
                Os(VC, function (e) {
                  return {
                    since: '0.0.0',
                    parsers: [
                      'babel',
                      'espree',
                      'meriyah',
                      'babel-flow',
                      'babel-ts',
                      'flow',
                      'typescript',
                    ],
                    vscodeLanguageIds: ['javascript', 'mongo'],
                    extensions: [].concat(m(e.extensions), ['.wxs']),
                  };
                }),
                Os(VC, function () {
                  return {
                    name: 'Flow',
                    since: '0.0.0',
                    parsers: ['flow', 'babel-flow'],
                    vscodeLanguageIds: ['javascript'],
                    aliases: [],
                    filenames: [],
                    extensions: ['.js.flow'],
                  };
                }),
                Os(
                  {
                    name: 'JSX',
                    type: 'programming',
                    group: 'JavaScript',
                    extensions: ['.jsx'],
                    tmScope: 'source.js.jsx',
                    aceMode: 'javascript',
                    codemirrorMode: 'jsx',
                    codemirrorMimeType: 'text/jsx',
                    languageId: 178,
                  },
                  function () {
                    return {
                      since: '0.0.0',
                      parsers: [
                        'babel',
                        'babel-flow',
                        'babel-ts',
                        'flow',
                        'typescript',
                        'espree',
                        'meriyah',
                      ],
                      vscodeLanguageIds: ['javascriptreact'],
                    };
                  }
                ),
                Os(
                  {
                    name: 'TypeScript',
                    type: 'programming',
                    color: '#2b7489',
                    aliases: ['ts'],
                    interpreters: ['deno', 'ts-node'],
                    extensions: ['.ts'],
                    tmScope: 'source.ts',
                    aceMode: 'typescript',
                    codemirrorMode: 'javascript',
                    codemirrorMimeType: 'application/typescript',
                    languageId: 378,
                  },
                  function () {
                    return {
                      since: '1.4.0',
                      parsers: ['typescript', 'babel-ts'],
                      vscodeLanguageIds: ['typescript'],
                    };
                  }
                ),
                Os(
                  {
                    name: 'TSX',
                    type: 'programming',
                    group: 'TypeScript',
                    extensions: ['.tsx'],
                    tmScope: 'source.tsx',
                    aceMode: 'javascript',
                    codemirrorMode: 'jsx',
                    codemirrorMimeType: 'text/jsx',
                    languageId: 94901924,
                  },
                  function () {
                    return {
                      since: '1.4.0',
                      parsers: ['typescript', 'babel-ts'],
                      vscodeLanguageIds: ['typescriptreact'],
                    };
                  }
                ),
                Os(qC, function () {
                  return {
                    name: 'JSON.stringify',
                    since: '1.13.0',
                    parsers: ['json-stringify'],
                    vscodeLanguageIds: ['json'],
                    extensions: [],
                    filenames: [
                      'package.json',
                      'package-lock.json',
                      'composer.json',
                    ],
                  };
                }),
                Os(qC, function (e) {
                  return {
                    since: '1.5.0',
                    parsers: ['json'],
                    vscodeLanguageIds: ['json'],
                    filenames: [].concat(m(e.filenames), ['.prettierrc']),
                    extensions: e.extensions.filter(function (e) {
                      return '.jsonl' !== e;
                    }),
                  };
                }),
                Os(
                  {
                    name: 'JSON with Comments',
                    type: 'data',
                    group: 'JSON',
                    tmScope: 'source.js',
                    aceMode: 'javascript',
                    codemirrorMode: 'javascript',
                    codemirrorMimeType: 'text/javascript',
                    aliases: ['jsonc'],
                    extensions: [
                      '.jsonc',
                      '.sublime-build',
                      '.sublime-commands',
                      '.sublime-completions',
                      '.sublime-keymap',
                      '.sublime-macro',
                      '.sublime-menu',
                      '.sublime-mousemap',
                      '.sublime-project',
                      '.sublime-settings',
                      '.sublime-theme',
                      '.sublime-workspace',
                      '.sublime_metrics',
                      '.sublime_session',
                    ],
                    filenames: [
                      '.babelrc',
                      '.eslintrc.json',
                      '.jscsrc',
                      '.jshintrc',
                      '.jslintrc',
                      'devcontainer.json',
                      'jsconfig.json',
                      'language-configuration.json',
                      'tsconfig.json',
                      'tslint.json',
                    ],
                    languageId: 423,
                  },
                  function (e) {
                    return {
                      since: '1.5.0',
                      parsers: ['json'],
                      vscodeLanguageIds: ['jsonc'],
                      filenames: [].concat(m(e.filenames), ['.eslintrc']),
                    };
                  }
                ),
                Os(
                  {
                    name: 'JSON5',
                    type: 'data',
                    extensions: ['.json5'],
                    tmScope: 'source.js',
                    aceMode: 'javascript',
                    codemirrorMode: 'javascript',
                    codemirrorMimeType: 'application/json',
                    languageId: 175,
                  },
                  function () {
                    return {
                      since: '1.13.0',
                      parsers: ['json5'],
                      vscodeLanguageIds: ['json5'],
                    };
                  }
                ),
              ],
              options: $C,
              printers: { estree: BC, 'estree-json': jC },
              parsers: {
                get babel() {
                  return {}.parsers.babel;
                },
                get 'babel-flow'() {
                  return {}.parsers['babel-flow'];
                },
                get 'babel-ts'() {
                  return {}.parsers['babel-ts'];
                },
                get json() {
                  return {}.parsers.json;
                },
                get json5() {
                  return {}.parsers.json5;
                },
                get 'json-stringify'() {
                  return {}.parsers['json-stringify'];
                },
                get __js_expression() {
                  return {}.parsers.__js_expression;
                },
                get __vue_expression() {
                  return {}.parsers.__vue_expression;
                },
                get __vue_event_binding() {
                  return {}.parsers.__vue_event_binding;
                },
                get flow() {
                  return {}.parsers.flow;
                },
                get typescript() {
                  return {}.parsers.typescript;
                },
                get __ng_action() {
                  return {}.parsers.__ng_action;
                },
                get __ng_binding() {
                  return {}.parsers.__ng_binding;
                },
                get __ng_interpolation() {
                  return {}.parsers.__ng_interpolation;
                },
                get __ng_directive() {
                  return {}.parsers.__ng_directive;
                },
                get espree() {
                  return {}.parsers.espree;
                },
                get meriyah() {
                  return {}.parsers.meriyah;
                },
              },
            },
            UC = Ut.isFrontMatterNode,
            JC = new Set([
              'raw',
              'raws',
              'sourceIndex',
              'source',
              'before',
              'after',
              'trailingComma',
            ]);
          function zC(e, t, n) {
            if (
              (UC(e) && 'yaml' === e.lang && delete t.value,
              'css-comment' === e.type &&
                'css-root' === n.type &&
                0 !== n.nodes.length)
            ) {
              if (
                (n.nodes[0] === e || (UC(n.nodes[0]) && n.nodes[1] === e)) &&
                (delete t.text, /^\*\s*@(format|prettier)\s*$/.test(e.text))
              )
                return null;
              if ('css-root' === n.type && Ee(n.nodes) === e) return null;
            }
            if (
              ('value-root' === e.type && delete t.text,
              ('media-query' !== e.type &&
                'media-query-list' !== e.type &&
                'media-feature-expression' !== e.type) ||
                delete t.value,
              'css-rule' === e.type && delete t.params,
              'selector-combinator' === e.type &&
                (t.value = t.value.replace(/\s+/g, ' ')),
              'media-feature' === e.type &&
                (t.value = t.value.replace(/ /g, '')),
              (('value-word' === e.type &&
                ((e.isColor && e.isHex) ||
                  ['initial', 'inherit', 'unset', 'revert'].includes(
                    t.value.replace().toLowerCase()
                  ))) ||
                'media-feature' === e.type ||
                'selector-root-invalid' === e.type ||
                'selector-pseudo' === e.type) &&
                (t.value = t.value.toLowerCase()),
              'css-decl' === e.type && (t.prop = t.prop.toLowerCase()),
              ('css-atrule' !== e.type && 'css-import' !== e.type) ||
                (t.name = t.name.toLowerCase()),
              'value-number' === e.type && (t.unit = t.unit.toLowerCase()),
              ('media-feature' !== e.type &&
                'media-keyword' !== e.type &&
                'media-type' !== e.type &&
                'media-unknown' !== e.type &&
                'media-url' !== e.type &&
                'media-value' !== e.type &&
                'selector-attribute' !== e.type &&
                'selector-string' !== e.type &&
                'selector-class' !== e.type &&
                'selector-combinator' !== e.type &&
                'value-string' !== e.type) ||
                !t.value ||
                (t.value = t.value
                  .replace(/'/g, '"')
                  .replace(/\\([^\dA-Fa-f])/g, '$1')),
              'selector-attribute' === e.type &&
                ((t.attribute = t.attribute.trim()),
                t.namespace &&
                  'string' == typeof t.namespace &&
                  ((t.namespace = t.namespace.trim()),
                  0 === t.namespace.length && (t.namespace = !0)),
                t.value &&
                  ((t.value = t.value.trim().replace(/^["']|["']$/g, '')),
                  delete t.quoted)),
              ('media-value' !== e.type &&
                'media-type' !== e.type &&
                'value-number' !== e.type &&
                'selector-root-invalid' !== e.type &&
                'selector-class' !== e.type &&
                'selector-combinator' !== e.type &&
                'selector-tag' !== e.type) ||
                !t.value ||
                (t.value = t.value.replace(
                  /([\d+.Ee-]+)([A-Za-z]*)/g,
                  function (e, t, n) {
                    var r = Number(t);
                    return isNaN(r) ? e : r + n.toLowerCase();
                  }
                )),
              'selector-tag' === e.type)
            ) {
              var r = e.value.toLowerCase();
              ['from', 'to'].includes(r) && (t.value = r);
            }
            'css-atrule' === e.type &&
              'supports' === e.name.toLowerCase() &&
              delete t.value,
              'selector-unknown' === e.type && delete t.value;
          }
          zC.ignoredProperties = JC;
          var GC = zC,
            HC = vn.builders,
            XC = HC.hardline,
            YC = HC.concat,
            KC = HC.markAsRoot,
            QC = { '---': 'yaml', '+++': 'toml' },
            ZC = function (e) {
              var t = Object.keys(QC).map(ve).join('|'),
                n = e.match(
                  new RegExp(
                    '^('.concat(
                      t,
                      ')([^\\n]*)\\n(?:([\\s\\S]*?)\\n)?\\1[^\\n\\S]*(\\n|$)'
                    )
                  )
                );
              if (null === n) return { frontMatter: null, content: e };
              var r = C(n, 4),
                u = r[0],
                a = r[1],
                i = r[2],
                o = r[3],
                s = QC[a];
              return (
                'toml' !== s && i && i.trim() && (s = i.trim()),
                {
                  frontMatter: {
                    type: 'front-matter',
                    lang: s,
                    value: o,
                    raw: u.replace(/\n$/, ''),
                  },
                  content: u.replace(/[^\n]/g, ' ') + e.slice(u.length),
                }
              );
            },
            eb = function (e, t) {
              if ('yaml' === e.lang) {
                var n = e.value.trim(),
                  r = n
                    ? t(n, { parser: 'yaml' }, { stripTrailingHardline: !0 })
                    : '';
                return KC(YC(['---', XC, r, r ? XC : '', '---']));
              }
            },
            tb = vn.builders,
            nb = tb.hardline,
            rb = tb.concat,
            ub = eb,
            ab = ZC,
            ib = function (e) {
              var t = ab(e),
                n = t.frontMatter,
                r = t.content;
              return (n ? n.raw + '\n\n' : '') + kp(r);
            },
            ob = new Set([
              'red',
              'green',
              'blue',
              'alpha',
              'a',
              'rgb',
              'hue',
              'h',
              'saturation',
              's',
              'lightness',
              'l',
              'whiteness',
              'w',
              'blackness',
              'b',
              'tint',
              'shade',
              'blend',
              'blenda',
              'contrast',
              'hsl',
              'hsla',
              'hwb',
              'hwba',
            ]);
          function sb(e, t) {
            for (var n, r = [].concat(t), u = -1; (n = e.getParentNode(++u)); )
              if (r.includes(n.type)) return u;
            return -1;
          }
          function lb(e, t) {
            var n = sb(e, t);
            return -1 === n ? null : e.getParentNode(n);
          }
          function cb(e) {
            return 'value-operator' === e.type && '*' === e.value;
          }
          function pb(e) {
            return 'value-operator' === e.type && '/' === e.value;
          }
          function fb(e) {
            return 'value-operator' === e.type && '+' === e.value;
          }
          function db(e) {
            return 'value-operator' === e.type && '-' === e.value;
          }
          function hb(e) {
            return 'value-operator' === e.type && '%' === e.value;
          }
          function gb(e) {
            return (
              'value-comma_group' === e.type &&
              e.groups &&
              e.groups[1] &&
              'value-colon' === e.groups[1].type
            );
          }
          function mb(e) {
            return (
              'value-paren_group' === e.type &&
              e.groups &&
              e.groups[0] &&
              gb(e.groups[0])
            );
          }
          var yb = lb,
            Db = function (e) {
              var t = lb(e, 'css-decl');
              return t && t.prop && t.prop.toLowerCase();
            },
            vb = function (e) {
              return e.includes('$') ||
                e.includes('@') ||
                e.includes('#') ||
                e.startsWith('%') ||
                e.startsWith('--') ||
                e.startsWith(':--') ||
                (e.includes('(') && e.includes(')'))
                ? e
                : e.toLowerCase();
            },
            Eb = function (e, t) {
              var n = lb(e, 'value-func');
              return n && n.value && n.value.toLowerCase() === t;
            },
            Cb = function (e) {
              var t = lb(e, 'css-rule');
              return (
                t &&
                t.raws &&
                t.raws.selector &&
                (t.raws.selector.startsWith(':import') ||
                  t.raws.selector.startsWith(':export'))
              );
            },
            bb = function (e, t) {
              var n = [].concat(t),
                r = lb(e, 'css-atrule');
              return r && n.includes(r.name.toLowerCase());
            },
            Ab = function (e) {
              var t = e.getValue(),
                n = lb(e, 'css-atrule');
              return (
                n &&
                'import' === n.name &&
                'url' === t.groups[0].value &&
                2 === t.groups.length
              );
            },
            Fb = function (e, t) {
              var n = lb(e, 'css-atrule');
              return (
                n &&
                n.name &&
                n.name.toLowerCase().endsWith('keyframes') &&
                ['from', 'to'].includes(t.toLowerCase())
              );
            },
            xb = function (e) {
              return ['initial', 'inherit', 'unset', 'revert'].includes(
                e.toLowerCase()
              );
            },
            Sb = function (e, t) {
              return 'less' === e || 'scss' === e
                ? 'scss' === e
                : /(\w\s*:\s*[^:}]+|#){|@import[^\n]+(?:url|,)/.test(t);
            },
            wb = function (e, t) {
              var n = e.getParentNode();
              if (!n) return !1;
              var r = n.nodes;
              return r && r.indexOf(t) === r.length - 1;
            },
            Bb = function (e) {
              return 'css' === e.parser || 'less' === e.parser;
            },
            Tb = function (e) {
              return (
                'css-atrule' === e.type &&
                ['if', 'else', 'for', 'each', 'while'].includes(e.name)
              );
            },
            kb = function (e) {
              return (
                !!e.selector &&
                (('string' == typeof e.selector &&
                  /^@.+:.*$/.test(e.selector)) ||
                  (e.selector.value && /^@.+:.*$/.test(e.selector.value)))
              );
            },
            Nb = function (e) {
              return (
                'value-word' === e.type &&
                ['<', '>', '<=', '>='].includes(e.value)
              );
            },
            Ob = function (e) {
              return 'value-word' === e.type && ['==', '!='].includes(e.value);
            },
            Pb = cb,
            Mb = pb,
            Ib = fb,
            jb = db,
            Lb = function (e) {
              return cb(e) || pb(e) || fb(e) || db(e) || hb(e);
            },
            _b = function (e) {
              return 'value-word' === e.type && 'in' === e.value;
            },
            Rb = function (e) {
              return (
                'value-word' === e.type &&
                ['from', 'through', 'end'].includes(e.value)
              );
            },
            $b = function (e) {
              return 'value-func' === e.type && 'url' === e.value.toLowerCase();
            },
            Vb = function (e) {
              return (
                'value-word' === e.type &&
                ['and', 'or', 'not'].includes(e.value)
              );
            },
            qb = function (e) {
              return (
                e.value &&
                'value-root' === e.value.type &&
                e.value.group &&
                'value-value' === e.value.group.type &&
                'composes' === e.prop.toLowerCase()
              );
            },
            Wb = function (e) {
              return (
                e.value &&
                e.value.group &&
                e.value.group.group &&
                'value-paren_group' === e.value.group.group.type &&
                null !== e.value.group.group.open &&
                null !== e.value.group.group.close
              );
            },
            Ub = function (e) {
              return e.raws && '' === e.raws.before;
            },
            Jb = function (e) {
              return e.raws && e.raws.params && /^\(\s*\)$/.test(e.raws.params);
            },
            zb = function (e) {
              return e.name.startsWith('prettier-placeholder');
            },
            Gb = function (e) {
              return e.prop.startsWith('@prettier-placeholder');
            },
            Hb = function (e, t) {
              return (
                '$$' === e.value &&
                'value-func' === e.type &&
                t &&
                'value-word' === t.type &&
                !t.raws.before
              );
            },
            Xb = gb,
            Yb = function (e) {
              var t = e.getValue();
              if (0 === t.groups.length) return !1;
              var n = e.getParentNode(1);
              if (!(mb(t) || (n && mb(n)))) return !1;
              var r = lb(e, 'css-decl');
              return (
                !!(r && r.prop && r.prop.startsWith('$')) ||
                !!mb(n) ||
                'value-func' === n.type
              );
            },
            Kb = function (e) {
              return 'value-comment' === e.type && e.inline;
            },
            Qb = function (e) {
              return 'value-word' === e.type && '#' === e.value;
            },
            Zb = function (e) {
              return 'value-word' === e.type && '{' === e.value;
            },
            eA = function (e) {
              return 'value-word' === e.type && '}' === e.value;
            },
            tA = function (e) {
              return ['value-word', 'value-atword'].includes(e.type);
            },
            nA = function (e) {
              return 'value-colon' === e.type;
            },
            rA = function (e) {
              return (
                e.value && ['not', 'and', 'or'].includes(e.value.toLowerCase())
              );
            },
            uA = function (e) {
              return 'value-func' === e.type && ob.has(e.value.toLowerCase());
            },
            aA = function (e) {
              return /\/\//.test(e.split(/[\n\r]/).pop());
            },
            iA = function (e) {
              return (
                e &&
                'value-atword' === e.type &&
                e.value.startsWith('prettier-placeholder-')
              );
            };
          var oA = function (e) {
              return e.source.startOffset;
            },
            sA = function (e) {
              return e.source.endOffset;
            },
            lA = Ut.printNumber,
            cA = Ut.printString,
            pA = Ut.hasNewline,
            fA = Ut.isFrontMatterNode,
            dA = Ut.isNextLineEmpty,
            hA = vn.builders,
            gA = hA.concat,
            mA = hA.join,
            yA = hA.line,
            DA = hA.hardline,
            vA = hA.softline,
            EA = hA.group,
            CA = hA.fill,
            bA = hA.indent,
            AA = hA.dedent,
            FA = hA.ifBreak,
            xA = hA.breakParent,
            SA = vn.utils.removeLines,
            wA = ib,
            BA = yb,
            TA = Db,
            kA = vb,
            NA = Eb,
            OA = Cb,
            PA = bb,
            MA = Ab,
            IA = Fb,
            jA = xb,
            LA = Sb,
            _A = wb,
            RA = Bb,
            $A = Tb,
            VA = kb,
            qA = Nb,
            WA = Ob,
            UA = Pb,
            JA = Mb,
            zA = Ib,
            GA = jb,
            HA = Lb,
            XA = _b,
            YA = Rb,
            KA = $b,
            QA = Vb,
            ZA = qb,
            eF = Wb,
            tF = Ub,
            nF = Xb,
            rF = Jb,
            uF = zb,
            aF = Gb,
            iF = Hb,
            oF = Yb,
            sF = Kb,
            lF = Qb,
            cF = Zb,
            pF = eA,
            fF = tA,
            dF = nA,
            hF = rA,
            gF = uA,
            mF = aA,
            yF = iA,
            DF = oA,
            vF = sA;
          function EF(e) {
            return 'es5' === e.trailingComma || 'all' === e.trailingComma;
          }
          function CF(e, t, n) {
            var r = e.getValue(),
              u = [];
            return (
              e.each(function (e, a) {
                var i = r.nodes[a - 1];
                if (
                  i &&
                  'css-comment' === i.type &&
                  'prettier-ignore' === i.text.trim()
                ) {
                  var o = e.getValue();
                  u.push(t.originalText.slice(DF(o), vF(o)));
                } else u.push(e.call(n));
                a !== r.nodes.length - 1 &&
                  (('css-comment' === r.nodes[a + 1].type &&
                    !pA(t.originalText, DF(r.nodes[a + 1]), {
                      backwards: !0,
                    }) &&
                    !fA(r.nodes[a])) ||
                  ('css-atrule' === r.nodes[a + 1].type &&
                    'else' === r.nodes[a + 1].name &&
                    'css-comment' !== r.nodes[a].type)
                    ? u.push(' ')
                    : (u.push(t.__isHTMLStyleAttribute ? yA : DA),
                      dA(t.originalText, e.getValue(), vF) &&
                        !fA(r.nodes[a]) &&
                        u.push(DA)));
              }, 'nodes'),
              gA(u)
            );
          }
          var bF = /(["'])(?:(?!\1)[^\\]|\\[\S\s])*\1/g,
            AF = new RegExp(
              bF.source +
                '|' +
                '('.concat(
                  /[$@]?[A-Z_a-z\u0080-\uFFFF][\w\u0080-\uFFFF-]*/g.source,
                  ')?'
                ) +
                '('.concat(
                  /(?:\d*\.\d+|\d+\.?)(?:[Ee][+-]?\d+)?/g.source,
                  ')'
                ) +
                '('.concat(/[A-Za-z]+/g.source, ')?'),
              'g'
            );
          function FF(e, t) {
            return e.replace(bF, function (e) {
              return cA(e, t);
            });
          }
          function xF(e, t) {
            var n = t.singleQuote ? "'" : '"';
            return e.includes('"') || e.includes("'") ? e : n + e + n;
          }
          function SF(e) {
            return e.replace(AF, function (e, t, n, r, u) {
              return !n && r ? wF(r) + kA(u || '') : e;
            });
          }
          function wF(e) {
            return lA(e).replace(/\.0(?=$|e)/, '');
          }
          var BF = {
              print: function (e, t, n) {
                var r = e.getValue();
                if (!r) return '';
                if ('string' == typeof r) return r;
                switch (r.type) {
                  case 'front-matter':
                    return gA([r.raw, DA]);
                  case 'css-root':
                    var u = CF(e, t, n),
                      a = r.raws.after.trim();
                    return gA([
                      u,
                      a ? ' '.concat(a) : '',
                      u.parts.length ? DA : '',
                    ]);
                  case 'css-comment':
                    var i = r.inline || r.raws.inline,
                      o = t.originalText.slice(DF(r), vF(r));
                    return i ? o.trimEnd() : o;
                  case 'css-rule':
                    return gA([
                      e.call(n, 'selector'),
                      r.important ? ' !important' : '',
                      r.nodes
                        ? gA([
                            r.selector &&
                            'selector-unknown' === r.selector.type &&
                            mF(r.selector.value)
                              ? yA
                              : ' ',
                            '{',
                            r.nodes.length > 0 ? bA(gA([DA, CF(e, t, n)])) : '',
                            DA,
                            '}',
                            VA(r) ? ';' : '',
                          ])
                        : ';',
                    ]);
                  case 'css-decl':
                    var s = e.getParentNode(),
                      l = r.raws.between.trim(),
                      c = ':' === l,
                      p = ZA(r) ? SA(e.call(n, 'value')) : e.call(n, 'value');
                    return (
                      !c && mF(l) && (p = bA(gA([DA, AA(p)]))),
                      gA([
                        r.raws.before.replace(/[\s;]/g, ''),
                        OA(e) ? r.prop : kA(r.prop),
                        l.startsWith('//') ? ' ' : '',
                        l,
                        r.extend ? '' : ' ',
                        RA(t) && r.extend && r.selector
                          ? gA(['extend(', e.call(n, 'selector'), ')'])
                          : '',
                        p,
                        r.raws.important
                          ? r.raws.important.replace(
                              /\s*!\s*important/i,
                              ' !important'
                            )
                          : r.important
                          ? ' !important'
                          : '',
                        r.raws.scssDefault
                          ? r.raws.scssDefault.replace(
                              /\s*!default/i,
                              ' !default'
                            )
                          : r.scssDefault
                          ? ' !default'
                          : '',
                        r.raws.scssGlobal
                          ? r.raws.scssGlobal.replace(/\s*!global/i, ' !global')
                          : r.scssGlobal
                          ? ' !global'
                          : '',
                        r.nodes
                          ? gA([' {', bA(gA([vA, CF(e, t, n)])), vA, '}'])
                          : aF(r) &&
                            !s.raws.semicolon &&
                            ';' !== t.originalText[vF(r) - 1]
                          ? ''
                          : t.__isHTMLStyleAttribute && _A(e, r)
                          ? FA(';', '')
                          : ';',
                      ])
                    );
                  case 'css-atrule':
                    var f = e.getParentNode(),
                      d =
                        uF(r) &&
                        !f.raws.semicolon &&
                        ';' !== t.originalText[vF(r) - 1];
                    if (RA(t)) {
                      if (r.mixin)
                        return gA([
                          e.call(n, 'selector'),
                          r.important ? ' !important' : '',
                          d ? '' : ';',
                        ]);
                      if (r.function)
                        return gA([
                          r.name,
                          gA([e.call(n, 'params')]),
                          d ? '' : ';',
                        ]);
                      if (r.variable)
                        return gA([
                          '@',
                          r.name,
                          ': ',
                          r.value ? gA([e.call(n, 'value')]) : '',
                          r.raws.between.trim()
                            ? r.raws.between.trim() + ' '
                            : '',
                          r.nodes
                            ? gA([
                                '{',
                                bA(
                                  gA([
                                    r.nodes.length > 0 ? vA : '',
                                    CF(e, t, n),
                                  ])
                                ),
                                vA,
                                '}',
                              ])
                            : '',
                          d ? '' : ';',
                        ]);
                    }
                    return gA([
                      '@',
                      rF(r) || r.name.endsWith(':') ? r.name : kA(r.name),
                      r.params
                        ? gA([
                            rF(r)
                              ? ''
                              : uF(r)
                              ? '' === r.raws.afterName
                                ? ''
                                : r.name.endsWith(':')
                                ? ' '
                                : /^\s*\n\s*\n/.test(r.raws.afterName)
                                ? gA([DA, DA])
                                : /^\s*\n/.test(r.raws.afterName)
                                ? DA
                                : ' '
                              : ' ',
                            e.call(n, 'params'),
                          ])
                        : '',
                      r.selector ? bA(gA([' ', e.call(n, 'selector')])) : '',
                      r.value
                        ? EA(
                            gA([
                              ' ',
                              e.call(n, 'value'),
                              $A(r) ? (eF(r) ? ' ' : yA) : '',
                            ])
                          )
                        : 'else' === r.name
                        ? ' '
                        : '',
                      r.nodes
                        ? gA([
                            $A(r)
                              ? ''
                              : (r.selector &&
                                  !r.selector.nodes &&
                                  'string' == typeof r.selector.value &&
                                  mF(r.selector.value)) ||
                                (!r.selector &&
                                  'string' == typeof r.params &&
                                  mF(r.params))
                              ? yA
                              : ' ',
                            '{',
                            bA(gA([r.nodes.length > 0 ? vA : '', CF(e, t, n)])),
                            vA,
                            '}',
                          ])
                        : d
                        ? ''
                        : ';',
                    ]);
                  case 'media-query-list':
                    var h = [];
                    return (
                      e.each(function (e) {
                        var t = e.getValue();
                        ('media-query' === t.type && '' === t.value) ||
                          h.push(e.call(n));
                      }, 'nodes'),
                      EA(bA(mA(yA, h)))
                    );
                  case 'media-query':
                    return gA([
                      mA(' ', e.map(n, 'nodes')),
                      _A(e, r) ? '' : ',',
                    ]);
                  case 'media-type':
                    return SF(FF(r.value, t));
                  case 'media-feature-expression':
                    return r.nodes
                      ? gA(['(', gA(e.map(n, 'nodes')), ')'])
                      : r.value;
                  case 'media-feature':
                    return kA(FF(r.value.replace(/ +/g, ' '), t));
                  case 'media-colon':
                    return gA([r.value, ' ']);
                  case 'media-value':
                    return SF(FF(r.value, t));
                  case 'media-keyword':
                    return FF(r.value, t);
                  case 'media-url':
                    return FF(
                      r.value
                        .replace(/^url\(\s+/gi, 'url(')
                        .replace(/\s+\)$/gi, ')'),
                      t
                    );
                  case 'media-unknown':
                    return r.value;
                  case 'selector-root':
                    return EA(
                      gA([
                        PA(e, 'custom-selector')
                          ? gA([BA(e, 'css-atrule').customSelector, yA])
                          : '',
                        mA(
                          gA([
                            ',',
                            PA(e, ['extend', 'custom-selector', 'nest'])
                              ? yA
                              : DA,
                          ]),
                          e.map(n, 'nodes')
                        ),
                      ])
                    );
                  case 'selector-selector':
                    return EA(bA(gA(e.map(n, 'nodes'))));
                  case 'selector-comment':
                    return r.value;
                  case 'selector-string':
                    return FF(r.value, t);
                  case 'selector-tag':
                    var g = e.getParentNode(),
                      m = g && g.nodes.indexOf(r),
                      y = m && g.nodes[m - 1];
                    return gA([
                      r.namespace
                        ? gA([
                            !0 === r.namespace ? '' : r.namespace.trim(),
                            '|',
                          ])
                        : '',
                      'selector-nesting' === y.type
                        ? r.value
                        : SF(IA(e, r.value) ? r.value.toLowerCase() : r.value),
                    ]);
                  case 'selector-id':
                    return gA(['#', r.value]);
                  case 'selector-class':
                    return gA(['.', SF(FF(r.value, t))]);
                  case 'selector-attribute':
                    return gA([
                      '[',
                      r.namespace
                        ? gA([
                            !0 === r.namespace ? '' : r.namespace.trim(),
                            '|',
                          ])
                        : '',
                      r.attribute.trim(),
                      r.operator ? r.operator : '',
                      r.value ? xF(FF(r.value.trim(), t), t) : '',
                      r.insensitive ? ' i' : '',
                      ']',
                    ]);
                  case 'selector-combinator':
                    if (
                      '+' === r.value ||
                      '>' === r.value ||
                      '~' === r.value ||
                      '>>>' === r.value
                    ) {
                      var D = e.getParentNode(),
                        v =
                          'selector-selector' === D.type && D.nodes[0] === r
                            ? ''
                            : yA;
                      return gA([v, r.value, _A(e, r) ? '' : ' ']);
                    }
                    var E = r.value.trim().startsWith('(') ? yA : '',
                      C = SF(FF(r.value.trim(), t)) || yA;
                    return gA([E, C]);
                  case 'selector-universal':
                    return gA([
                      r.namespace
                        ? gA([
                            !0 === r.namespace ? '' : r.namespace.trim(),
                            '|',
                          ])
                        : '',
                      r.value,
                    ]);
                  case 'selector-pseudo':
                    return gA([
                      kA(r.value),
                      r.nodes && r.nodes.length > 0
                        ? gA(['(', mA(', ', e.map(n, 'nodes')), ')'])
                        : '',
                    ]);
                  case 'selector-nesting':
                    return r.value;
                  case 'selector-unknown':
                    var b = BA(e, 'css-rule');
                    if (b && b.isSCSSNesterProperty)
                      return SF(FF(kA(r.value), t));
                    var A = e.getParentNode();
                    if (A.raws && A.raws.selector) {
                      var F = DF(A),
                        x = F + A.raws.selector.length;
                      return t.originalText.slice(F, x).trim();
                    }
                    var S = e.getParentNode(1);
                    if (
                      'value-paren_group' === A.type &&
                      S &&
                      'value-func' === S.type &&
                      'selector' === S.value
                    ) {
                      var w = DF(A.open) + 1,
                        B = vF(A.close) - 1,
                        T = t.originalText.slice(w, B).trim();
                      return mF(T) ? gA([xA, T]) : T;
                    }
                    return r.value;
                  case 'value-value':
                  case 'value-root':
                    return e.call(n, 'group');
                  case 'value-comment':
                    return t.originalText.slice(DF(r), vF(r));
                  case 'value-comma_group':
                    for (
                      var k = e.getParentNode(),
                        N = e.getParentNode(1),
                        O = TA(e),
                        P =
                          O &&
                          'value-value' === k.type &&
                          ('grid' === O || O.startsWith('grid-template')),
                        M = BA(e, 'css-atrule'),
                        I = M && $A(M),
                        j = e.map(n, 'groups'),
                        L = [],
                        _ = NA(e, 'url'),
                        R = !1,
                        $ = !1,
                        V = 0;
                      V < r.groups.length;
                      ++V
                    ) {
                      L.push(j[V]);
                      var q = r.groups[V - 1],
                        W = r.groups[V],
                        U = r.groups[V + 1],
                        J = r.groups[V + 2];
                      if (_) ((U && zA(U)) || zA(W)) && L.push(' ');
                      else if (
                        U &&
                        ('value-word' !== W.type ||
                          !W.value.endsWith('-') ||
                          !yF(U))
                      ) {
                        var z =
                            'value-string' === W.type &&
                            W.value.startsWith('#{'),
                          G =
                            R &&
                            'value-string' === U.type &&
                            U.value.endsWith('}');
                        if (z || G) R = !R;
                        else if (
                          !R &&
                          !(
                            dF(W) ||
                            dF(U) ||
                            ('value-atword' === W.type && '' === W.value) ||
                            '~' === W.value ||
                            (W.value &&
                              W.value.includes('\\') &&
                              U &&
                              'value-comment' !== U.type) ||
                            (q &&
                              q.value &&
                              q.value.indexOf('\\') === q.value.length - 1 &&
                              'value-operator' === W.type &&
                              '/' === W.value) ||
                            '\\' === W.value ||
                            iF(W, U) ||
                            lF(W) ||
                            cF(W) ||
                            pF(U) ||
                            (cF(U) && tF(U)) ||
                            (pF(W) && tF(U)) ||
                            ('--' === W.value && lF(U))
                          )
                        ) {
                          var H = HA(W),
                            X = HA(U);
                          if (
                            !(
                              (((H && lF(U)) || (X && pF(W))) && tF(U)) ||
                              (NA(e, 'calc') &&
                                (zA(W) || zA(U) || GA(W) || GA(U)) &&
                                tF(U))
                            )
                          ) {
                            var Y =
                                (zA(W) || GA(W)) &&
                                0 === V &&
                                ('value-number' === U.type || U.isHex) &&
                                N &&
                                gF(N) &&
                                !tF(U),
                              K =
                                (J && 'value-func' === J.type) ||
                                (J && fF(J)) ||
                                'value-func' === W.type ||
                                fF(W),
                              Q =
                                'value-func' === U.type ||
                                fF(U) ||
                                (q && 'value-func' === q.type) ||
                                (q && fF(q));
                            if (
                              UA(U) ||
                              UA(W) ||
                              NA(e, 'calc') ||
                              Y ||
                              !(
                                (JA(U) && !K) ||
                                (JA(W) && !Q) ||
                                (zA(U) && !K) ||
                                (zA(W) && !Q) ||
                                GA(U) ||
                                GA(W)
                              ) ||
                              !(tF(U) || (H && (!q || (q && HA(q)))))
                            )
                              if (sF(W)) {
                                if ('value-paren_group' === k.type) {
                                  L.push(AA(DA));
                                  continue;
                                }
                                L.push(DA);
                              } else
                                (I &&
                                  (WA(U) ||
                                    qA(U) ||
                                    QA(U) ||
                                    XA(W) ||
                                    YA(W))) ||
                                (M && 'namespace' === M.name.toLowerCase())
                                  ? L.push(' ')
                                  : P
                                  ? W.source &&
                                    U.source &&
                                    W.source.start.line !== U.source.start.line
                                    ? (L.push(DA), ($ = !0))
                                    : L.push(' ')
                                  : X
                                  ? L.push(' ')
                                  : (U && '...' === U.value) ||
                                    (yF(W) && yF(U) && vF(W) === DF(U)) ||
                                    L.push(yA);
                          }
                        }
                      }
                    }
                    return (
                      $ && L.unshift(DA),
                      I ? EA(bA(gA(L))) : MA(e) ? EA(CA(L)) : EA(bA(CA(L)))
                    );
                  case 'value-paren_group':
                    var Z = e.getParentNode();
                    if (
                      Z &&
                      KA(Z) &&
                      (1 === r.groups.length ||
                        (r.groups.length > 0 &&
                          'value-comma_group' === r.groups[0].type &&
                          r.groups[0].groups.length > 0 &&
                          'value-word' === r.groups[0].groups[0].type &&
                          r.groups[0].groups[0].value.startsWith('data:')))
                    )
                      return gA([
                        r.open ? e.call(n, 'open') : '',
                        mA(',', e.map(n, 'groups')),
                        r.close ? e.call(n, 'close') : '',
                      ]);
                    if (!r.open) {
                      for (
                        var ee = e.map(n, 'groups'), te = [], ne = 0;
                        ne < ee.length;
                        ne++
                      )
                        0 !== ne && te.push(gA([',', yA])), te.push(ee[ne]);
                      return EA(bA(CA(te)));
                    }
                    var re = oF(e),
                      ue = r.groups[r.groups.length - 1],
                      ae = ue && 'value-comment' === ue.type;
                    return EA(
                      gA([
                        r.open ? e.call(n, 'open') : '',
                        bA(
                          gA([
                            vA,
                            mA(
                              gA([',', yA]),
                              e.map(function (e) {
                                var t = e.getValue(),
                                  r = n(e);
                                return nF(t) &&
                                  'value-comma_group' === t.type &&
                                  t.groups &&
                                  t.groups[2] &&
                                  'value-paren_group' === t.groups[2].type
                                  ? ((r.contents.contents.parts[1] = EA(
                                      r.contents.contents.parts[1]
                                    )),
                                    EA(AA(r)))
                                  : r;
                              }, 'groups')
                            ),
                          ])
                        ),
                        FA(
                          !ae && LA(t.parser, t.originalText) && re && EF(t)
                            ? ','
                            : ''
                        ),
                        vA,
                        r.close ? e.call(n, 'close') : '',
                      ]),
                      { shouldBreak: re }
                    );
                  case 'value-func':
                    return gA([
                      r.value,
                      PA(e, 'supports') && hF(r) ? ' ' : '',
                      e.call(n, 'group'),
                    ]);
                  case 'value-paren':
                    return r.value;
                  case 'value-number':
                    return gA([wF(r.value), kA(r.unit)]);
                  case 'value-operator':
                    return r.value;
                  case 'value-word':
                    return (r.isColor && r.isHex) || jA(r.value)
                      ? r.value.toLowerCase()
                      : r.value;
                  case 'value-colon':
                    var ie = e.getParentNode(),
                      oe = ie && ie.groups.indexOf(r),
                      se = oe && ie.groups[oe - 1];
                    return gA([
                      r.value,
                      (se && '\\' === se.value[se.value.length - 1]) ||
                      NA(e, 'url')
                        ? ''
                        : yA,
                    ]);
                  case 'value-comma':
                    return gA([r.value, ' ']);
                  case 'value-string':
                    return cA(r.raws.quote + r.value + r.raws.quote, t);
                  case 'value-atword':
                    return gA(['@', r.value]);
                  case 'value-unicode-range':
                  case 'value-unknown':
                    return r.value;
                  default:
                    throw new Error(
                      'Unknown postcss type '.concat(JSON.stringify(r.type))
                    );
                }
              },
              embed: function (e, t, n) {
                var r = e.getValue();
                if ('front-matter' === r.type) {
                  var u = ub(r, n);
                  return u ? rb([u, nb]) : '';
                }
              },
              insertPragma: wA,
              massageAstNode: GC,
            },
            TF = { singleQuote: _C.singleQuote },
            kF = {
              languages: [
                Os(
                  {
                    name: 'CSS',
                    type: 'markup',
                    tmScope: 'source.css',
                    aceMode: 'css',
                    codemirrorMode: 'css',
                    codemirrorMimeType: 'text/css',
                    color: '#563d7c',
                    extensions: ['.css'],
                    languageId: 50,
                  },
                  function (e) {
                    return {
                      since: '1.4.0',
                      parsers: ['css'],
                      vscodeLanguageIds: ['css'],
                      extensions: [].concat(m(e.extensions), ['.wxss']),
                    };
                  }
                ),
                Os(
                  {
                    name: 'PostCSS',
                    type: 'markup',
                    tmScope: 'source.postcss',
                    group: 'CSS',
                    extensions: ['.pcss', '.postcss'],
                    aceMode: 'text',
                    languageId: 262764437,
                  },
                  function () {
                    return {
                      since: '1.4.0',
                      parsers: ['css'],
                      vscodeLanguageIds: ['postcss'],
                    };
                  }
                ),
                Os(
                  {
                    name: 'Less',
                    type: 'markup',
                    color: '#1d365d',
                    extensions: ['.less'],
                    tmScope: 'source.css.less',
                    aceMode: 'less',
                    codemirrorMode: 'css',
                    codemirrorMimeType: 'text/css',
                    languageId: 198,
                  },
                  function () {
                    return {
                      since: '1.4.0',
                      parsers: ['less'],
                      vscodeLanguageIds: ['less'],
                    };
                  }
                ),
                Os(
                  {
                    name: 'SCSS',
                    type: 'markup',
                    color: '#c6538c',
                    tmScope: 'source.css.scss',
                    aceMode: 'scss',
                    codemirrorMode: 'css',
                    codemirrorMimeType: 'text/x-scss',
                    extensions: ['.scss'],
                    languageId: 329,
                  },
                  function () {
                    return {
                      since: '1.4.0',
                      parsers: ['scss'],
                      vscodeLanguageIds: ['scss'],
                    };
                  }
                ),
              ],
              options: TF,
              printers: { postcss: BF },
              parsers: {
                get css() {
                  return {}.parsers.css;
                },
                get less() {
                  return {}.parsers.less;
                },
                get scss() {
                  return {}.parsers.scss;
                },
              },
            },
            NF = function (e) {
              return e.loc.start.offset;
            },
            OF = function (e) {
              return e.loc.end.offset;
            };
          function PF(e, t) {
            if ('TextNode' === e.type) {
              var n = e.chars.trim();
              if (!n) return null;
              t.chars = n;
            }
          }
          PF.ignoredProperties = new Set(['loc', 'selfClosing']);
          var MF = PF,
            IF = new Set([
              'area',
              'base',
              'basefont',
              'bgsound',
              'br',
              'col',
              'command',
              'embed',
              'frame',
              'hr',
              'image',
              'img',
              'input',
              'isindex',
              'keygen',
              'link',
              'menuitem',
              'meta',
              'nextid',
              'param',
              'source',
              'track',
              'wbr',
            ]);
          function jF(e) {
            return LF(e, ['TextNode']) && !/\S/.test(e.chars);
          }
          function LF(e, t) {
            return (
              e &&
              t.some(function (t) {
                return e.type === t;
              })
            );
          }
          function _F(e, t) {
            var n = e.getValue(),
              r = e.getParentNode(0) || {},
              u = r.children || r.body || r.parts || [],
              a = u.indexOf(n);
            return -1 !== a && u[a + t];
          }
          function RF(e) {
            return _F(
              e,
              -(arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1)
            );
          }
          function $F(e) {
            return _F(e, 1);
          }
          function VF(e) {
            return (
              LF(e, ['MustacheCommentStatement']) &&
              'string' == typeof e.value &&
              'prettier-ignore' === e.value.trim()
            );
          }
          var qF = $F,
            WF = RF,
            UF = function (e) {
              var t = e.getValue(),
                n = RF(e, 2);
              return VF(t) || VF(n);
            },
            JF = function (e, t) {
              return LF($F(e), t);
            },
            zF = LF,
            GF = function (e, t) {
              return LF(e.getParentNode(0), t);
            },
            HF = function (e, t) {
              return LF(RF(e), t);
            },
            XF = function (e) {
              return (
                ((function (e) {
                  return (
                    LF(e, ['ElementNode']) &&
                    'string' == typeof e.tag &&
                    ((function (e) {
                      return e.toUpperCase() === e;
                    })(e.tag[0]) ||
                      e.tag.includes('.'))
                  );
                })(e) &&
                  e.children.every(function (e) {
                    return jF(e);
                  })) ||
                IF.has(e.tag)
              );
            },
            YF = jF,
            KF = vn.builders,
            QF = KF.concat,
            ZF = KF.group,
            ex = KF.hardline,
            tx = KF.ifBreak,
            nx = KF.indent,
            rx = KF.join,
            ux = KF.line,
            ax = KF.softline,
            ix = NF,
            ox = OF,
            sx = qF,
            lx = WF,
            cx = UF,
            px = JF,
            fx = zF,
            dx = GF,
            hx = HF,
            gx = XF,
            mx = YF;
          function yx(e, t) {
            var n = e.getValue();
            return QF(['<', n.tag, Dx(e, t), Ux(n), Ex(n)]);
          }
          function Dx(e, t) {
            var n = e.getValue();
            return nx(
              QF([
                n.attributes.length ? ux : '',
                rx(ux, e.map(t, 'attributes')),
                n.modifiers.length ? ux : '',
                rx(ux, e.map(t, 'modifiers')),
                n.comments.length ? ux : '',
                rx(ux, e.map(t, 'comments')),
              ])
            );
          }
          function vx(e, t, n) {
            return QF(
              e.map(function (e, r) {
                return 0 === r ? QF([ax, n(e, t, n)]) : n(e, t, n);
              }, 'children')
            );
          }
          function Ex(e) {
            return gx(e)
              ? tx(QF([ax, '/>']), QF([' />', ax]))
              : tx(QF([ax, '>']), '>');
          }
          function Cx(e) {
            var t = !1 === e.escaped ? '{{{' : '{{',
              n = e.strip && e.strip.open ? '~' : '';
            return QF([t, n]);
          }
          function bx(e) {
            var t = !1 === e.escaped ? '}}}' : '}}',
              n = e.strip && e.strip.close ? '~' : '';
            return QF([n, t]);
          }
          function Ax(e) {
            var t = Cx(e),
              n = e.openStrip.open ? '~' : '';
            return QF([t, n, '#']);
          }
          function Fx(e) {
            var t = bx(e),
              n = e.openStrip.close ? '~' : '';
            return QF([n, t]);
          }
          function xx(e) {
            var t = Cx(e),
              n = e.closeStrip.open ? '~' : '';
            return QF([t, n, '/']);
          }
          function Sx(e) {
            var t = bx(e),
              n = e.closeStrip.close ? '~' : '';
            return QF([n, t]);
          }
          function wx(e) {
            var t = Cx(e),
              n = e.inverseStrip.open ? '~' : '';
            return QF([t, n]);
          }
          function Bx(e) {
            var t = bx(e),
              n = e.inverseStrip.close ? '~' : '';
            return QF([n, t]);
          }
          function Tx(e, t) {
            var n = e.getValue();
            return ZF(QF([Ax(n), Vx(e, t), Ux(n.program), ax, Fx(n)]));
          }
          function kx(e) {
            return QF([ex, wx(e), 'else', Bx(e)]);
          }
          function Nx(e, t) {
            var n = e.getParentNode(1);
            return QF([wx(n), 'else ', Vx(e, t), Bx(n)]);
          }
          function Ox(e, t) {
            var n = e.getValue();
            return QF([Px(n) ? ax : ex, xx(n), e.call(t, 'path'), Sx(n)]);
          }
          function Px(e) {
            return (
              fx(e, ['BlockStatement']) &&
              e.program.body.every(function (e) {
                return mx(e);
              })
            );
          }
          function Mx(e) {
            return fx(e, ['BlockStatement']) && e.inverse;
          }
          function Ix(e, t) {
            if (Px(e.getValue())) return '';
            var n = e.call(t, 'program');
            return nx(QF([ex, n]));
          }
          function jx(e, t) {
            var n = e.getValue(),
              r = e.call(t, 'inverse'),
              u = QF([ex, r]);
            return (function (e) {
              return (
                Mx(e) &&
                1 === e.inverse.body.length &&
                fx(e.inverse.body[0], ['BlockStatement']) &&
                'if' === e.inverse.body[0].path.parts[0]
              );
            })(n)
              ? u
              : Mx(n)
              ? QF([kx(n), nx(u)])
              : '';
          }
          function Lx(e) {
            return (e = 'string' == typeof e ? e : '').split('\n').length - 1;
          }
          function _x() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0,
              t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
            return new Array(Math.min(e, t)).fill(ex);
          }
          function Rx(e, t) {
            var n = { quote: '"', regex: /"/g },
              r = { quote: "'", regex: /'/g },
              u = t.singleQuote ? r : n,
              a = u === r ? n : r,
              i = !1;
            (e.includes(u.quote) || e.includes(a.quote)) &&
              (i =
                (e.match(u.regex) || []).length >
                (e.match(a.regex) || []).length);
            var o = i ? a : u,
              s = e.replace(o.regex, '\\'.concat(o.quote));
            return QF([o.quote, s, o.quote]);
          }
          function $x(e, t) {
            var n = qx(e, t),
              r = Wx(e, t);
            return r ? nx(QF([n, ux, ZF(r)])) : n;
          }
          function Vx(e, t) {
            var n = qx(e, t),
              r = Wx(e, t);
            return r ? nx(ZF(QF([n, ux, r]))) : n;
          }
          function qx(e, t) {
            return e.call(t, 'path');
          }
          function Wx(e, t) {
            var n = e.getValue(),
              r = [];
            if (n.params.length) {
              var u = e.map(t, 'params');
              r.push.apply(r, m(u));
            }
            if (n.hash && n.hash.pairs.length > 0) {
              var a = e.call(t, 'hash');
              r.push(a);
            }
            return r.length ? rx(ux, r) : '';
          }
          function Ux(e) {
            return e && e.blockParams.length
              ? QF([' as |', e.blockParams.join(' '), '|'])
              : '';
          }
          var Jx = {
              print: function (e, t, n) {
                var r = e.getValue();
                if (!r) return '';
                if (cx(e)) return t.originalText.slice(ix(r), ox(r));
                switch (r.type) {
                  case 'Block':
                  case 'Program':
                  case 'Template':
                    return ZF(QF(e.map(n, 'body')));
                  case 'ElementNode':
                    var u = px(e, ['ElementNode']) ? ex : '';
                    if (gx(r)) return QF([ZF(yx(e, n)), u]);
                    var a = r.children.every(function (e) {
                      return mx(e);
                    });
                    return QF([
                      ZF(yx(e, n)),
                      ZF(
                        QF([
                          a ? '' : nx(vx(e, t, n)),
                          r.children.length ? ex : '',
                          QF(['</', r.tag, '>']),
                        ])
                      ),
                      u,
                    ]);
                  case 'BlockStatement':
                    var i = e.getParentNode(1),
                      o =
                        i &&
                        i.inverse &&
                        1 === i.inverse.body.length &&
                        i.inverse.body[0] === r &&
                        'if' === i.inverse.body[0].path.parts[0];
                    return QF(
                      o
                        ? [Nx(e, n), Ix(e, n), jx(e, n)]
                        : [Tx(e, n), ZF(QF([Ix(e, n), jx(e, n), Ox(e, n)]))]
                    );
                  case 'ElementModifierStatement':
                    return ZF(QF(['{{', Vx(e, n), ax, '}}']));
                  case 'MustacheStatement':
                    var s = dx(e, ['AttrNode', 'ConcatStatement']),
                      l =
                        dx(e, ['ElementNode']) &&
                        0 === r.hash.pairs.length &&
                        0 === r.params.length,
                      c = s || l;
                    return ZF(
                      QF([Cx(r), c ? nx(ax) : '', Vx(e, n), ax, bx(r)])
                    );
                  case 'SubExpression':
                    return ZF(QF(['(', $x(e, n), ax, ')']));
                  case 'AttrNode':
                    var p = 'TextNode' === r.value.type;
                    if (
                      p &&
                      '' === r.value.chars &&
                      ix(r.value) === ox(r.value)
                    )
                      return QF([r.name]);
                    var f = e.call(n, 'value'),
                      d = p ? Rx(f.parts.join(), t) : f;
                    return QF([r.name, '=', d]);
                  case 'ConcatStatement':
                    var h = t.singleQuote ? "'" : '"';
                    return QF(
                      [h].concat(
                        m(
                          e.map(function (e) {
                            return n(e);
                          }, 'parts')
                        ),
                        [h]
                      )
                    );
                  case 'Hash':
                    return QF([rx(ux, e.map(n, 'pairs'))]);
                  case 'HashPair':
                    return QF([r.key, '=', e.call(n, 'value')]);
                  case 'TextNode':
                    var g = !lx(e),
                      y = !sx(e),
                      D = !/\S/.test(r.chars),
                      v = Lx(r.chars),
                      E = (function (e) {
                        return Lx(
                          ((e = 'string' == typeof e ? e : '').match(
                            /^([^\S\n\r]*[\n\r])+/g
                          ) || [])[0] || ''
                        );
                      })(r.chars),
                      C = (function (e) {
                        return Lx(
                          ((e = 'string' == typeof e ? e : '').match(
                            /([\n\r][^\S\n\r]*)+$/g
                          ) || [])[0] || ''
                        );
                      })(r.chars);
                    if (
                      (g || y) &&
                      D &&
                      dx(e, ['Block', 'ElementNode', 'Template'])
                    )
                      return '';
                    if (
                      (D && v
                        ? ((E = Math.min(v, 2)), (C = 0))
                        : (px(e, ['BlockStatement', 'ElementNode']) &&
                            (C = Math.max(C, 1)),
                          hx(e, ['BlockStatement', 'ElementNode']) &&
                            (E = Math.max(E, 1))),
                      e.stack.includes('attributes'))
                    ) {
                      if (
                        !(function (e, t) {
                          return (
                            (dx(e, ['AttrNode']) &&
                              e.getParentNode().name.toLowerCase() === t) ||
                            (dx(e, ['ConcatStatement']) &&
                              e.getParentNode(1).name.toLowerCase() === t)
                          );
                        })(e, 'class')
                      )
                        return QF([r.chars]);
                      var b = '',
                        A = '';
                      return (
                        dx(e, ['ConcatStatement']) &&
                          (hx(e, ['MustacheStatement']) && (b = ' '),
                          px(e, ['MustacheStatement']) && (A = ' ')),
                        QF(
                          [].concat(
                            m(_x(E, 2)),
                            [r.chars.replace(/^\s+/g, b).replace(/\s+$/, A)],
                            m(_x(C, 2))
                          )
                        )
                      );
                    }
                    var F = '',
                      x = '';
                    0 === C && px(e, ['MustacheStatement']) && (x = ' '),
                      0 === E && hx(e, ['MustacheStatement']) && (F = ' '),
                      g && ((E = 0), (F = '')),
                      y && ((C = 0), (x = ''));
                    var S = r.chars;
                    return (
                      S.startsWith('{{') && S.includes('}}') && (S = '\\' + S),
                      QF(
                        [].concat(
                          m(_x(E, 2)),
                          [S.replace(/^\s+/g, F).replace(/\s+$/, x)],
                          m(_x(C, 2))
                        )
                      )
                    );
                  case 'MustacheCommentStatement':
                    var w = r.value.includes('}}') ? '--' : '';
                    return QF(['{{!', w, r.value, w, '}}']);
                  case 'PathExpression':
                    return r.original;
                  case 'BooleanLiteral':
                    return String(r.value);
                  case 'CommentStatement':
                    return QF(['\x3c!--', r.value, '--\x3e']);
                  case 'StringLiteral':
                    return Rx(r.value, t);
                  case 'NumberLiteral':
                    return String(r.value);
                  case 'UndefinedLiteral':
                    return 'undefined';
                  case 'NullLiteral':
                    return 'null';
                  default:
                    throw new Error(
                      'unknown glimmer type: ' + JSON.stringify(r.type)
                    );
                }
              },
              massageAstNode: MF,
            },
            zx = {
              languages: [
                Os(
                  {
                    name: 'Handlebars',
                    type: 'markup',
                    color: '#f7931e',
                    aliases: ['hbs', 'htmlbars'],
                    extensions: ['.handlebars', '.hbs'],
                    tmScope: 'text.html.handlebars',
                    aceMode: 'handlebars',
                    languageId: 155,
                  },
                  function () {
                    return {
                      since: null,
                      parsers: ['glimmer'],
                      vscodeLanguageIds: ['handlebars'],
                    };
                  }
                ),
              ],
              printers: { glimmer: Jx },
              parsers: {
                get glimmer() {
                  return {}.parsers.glimmer;
                },
              },
            },
            Gx = function (e) {
              return 'number' == typeof e.start
                ? e.start
                : e.loc && e.loc.start;
            },
            Hx = function (e) {
              return 'number' == typeof e.end ? e.end : e.loc && e.loc.end;
            },
            Xx = vn.builders,
            Yx = Xx.concat,
            Kx = Xx.join,
            Qx = Xx.hardline,
            Zx = Xx.line,
            eS = Xx.softline,
            tS = Xx.group,
            nS = Xx.indent,
            rS = Xx.ifBreak,
            uS = Ut.isNextLineEmpty,
            aS = function (e) {
              return '# @format\n\n' + e;
            },
            iS = Gx,
            oS = Hx;
          function sS(e, t, n) {
            if (0 === n.directives.length) return '';
            var r = Kx(Zx, e.map(t, 'directives'));
            return 'FragmentDefinition' === n.kind ||
              'OperationDefinition' === n.kind
              ? tS(Yx([Zx, r]))
              : Yx([' ', tS(nS(Yx([eS, r])))]);
          }
          function lS(e, t, n) {
            var r = e.getValue().length;
            return e.map(function (e, u) {
              var a = n(e);
              return uS(t.originalText, e.getValue(), oS) && u < r - 1
                ? Yx([a, Qx])
                : a;
            });
          }
          function cS(e, t, n) {
            for (
              var r = [],
                u = e.getNode().interfaces,
                a = e.map(function (e) {
                  return n(e);
                }, 'interfaces'),
                i = 0;
              i < u.length;
              i++
            ) {
              var o = u[i];
              r.push(a[i]);
              var s = u[i + 1];
              if (s) {
                var l = t.originalText.slice(o.loc.end, s.loc.start),
                  c = l.includes('#'),
                  p = l.replace(/#.*/g, '').trim();
                r.push(',' === p ? ',' : ' &'), r.push(c ? Zx : ' ');
              }
            }
            return r;
          }
          function pS() {}
          pS.ignoredProperties = new Set(['loc', 'comments']);
          var fS = {
              print: function (e, t, n) {
                var r = e.getValue();
                if (!r) return '';
                if ('string' == typeof r) return r;
                switch (r.kind) {
                  case 'Document':
                    var u = [];
                    return (
                      e.each(function (e, a) {
                        u.push(Yx([e.call(n)])),
                          a !== r.definitions.length - 1 &&
                            (u.push(Qx),
                            uS(t.originalText, e.getValue(), oS) && u.push(Qx));
                      }, 'definitions'),
                      Yx([Yx(u), Qx])
                    );
                  case 'OperationDefinition':
                    var a = '{' !== t.originalText[iS(r)],
                      i = !!r.name;
                    return Yx([
                      a ? r.operation : '',
                      a && i ? Yx([' ', e.call(n, 'name')]) : '',
                      r.variableDefinitions && r.variableDefinitions.length
                        ? tS(
                            Yx([
                              '(',
                              nS(
                                Yx([
                                  eS,
                                  Kx(
                                    Yx([rS('', ', '), eS]),
                                    e.map(n, 'variableDefinitions')
                                  ),
                                ])
                              ),
                              eS,
                              ')',
                            ])
                          )
                        : '',
                      sS(e, n, r),
                      r.selectionSet && (a || i) ? ' ' : '',
                      e.call(n, 'selectionSet'),
                    ]);
                  case 'FragmentDefinition':
                    return Yx([
                      'fragment ',
                      e.call(n, 'name'),
                      r.variableDefinitions && r.variableDefinitions.length
                        ? tS(
                            Yx([
                              '(',
                              nS(
                                Yx([
                                  eS,
                                  Kx(
                                    Yx([rS('', ', '), eS]),
                                    e.map(n, 'variableDefinitions')
                                  ),
                                ])
                              ),
                              eS,
                              ')',
                            ])
                          )
                        : '',
                      ' on ',
                      e.call(n, 'typeCondition'),
                      sS(e, n, r),
                      ' ',
                      e.call(n, 'selectionSet'),
                    ]);
                  case 'SelectionSet':
                    return Yx([
                      '{',
                      nS(
                        Yx([
                          Qx,
                          Kx(
                            Qx,
                            e.call(function (e) {
                              return lS(e, t, n);
                            }, 'selections')
                          ),
                        ])
                      ),
                      Qx,
                      '}',
                    ]);
                  case 'Field':
                    return tS(
                      Yx([
                        r.alias ? Yx([e.call(n, 'alias'), ': ']) : '',
                        e.call(n, 'name'),
                        r.arguments.length > 0
                          ? tS(
                              Yx([
                                '(',
                                nS(
                                  Yx([
                                    eS,
                                    Kx(
                                      Yx([rS('', ', '), eS]),
                                      e.call(function (e) {
                                        return lS(e, t, n);
                                      }, 'arguments')
                                    ),
                                  ])
                                ),
                                eS,
                                ')',
                              ])
                            )
                          : '',
                        sS(e, n, r),
                        r.selectionSet ? ' ' : '',
                        e.call(n, 'selectionSet'),
                      ])
                    );
                  case 'Name':
                    return r.value;
                  case 'StringValue':
                    return r.block
                      ? Yx([
                          '"""',
                          Qx,
                          Kx(Qx, r.value.replace(/"""/g, '\\$&').split('\n')),
                          Qx,
                          '"""',
                        ])
                      : Yx([
                          '"',
                          r.value
                            .replace(/["\\]/g, '\\$&')
                            .replace(/\n/g, '\\n'),
                          '"',
                        ]);
                  case 'IntValue':
                  case 'FloatValue':
                  case 'EnumValue':
                    return r.value;
                  case 'BooleanValue':
                    return r.value ? 'true' : 'false';
                  case 'NullValue':
                    return 'null';
                  case 'Variable':
                    return Yx(['$', e.call(n, 'name')]);
                  case 'ListValue':
                    return tS(
                      Yx([
                        '[',
                        nS(
                          Yx([
                            eS,
                            Kx(Yx([rS('', ', '), eS]), e.map(n, 'values')),
                          ])
                        ),
                        eS,
                        ']',
                      ])
                    );
                  case 'ObjectValue':
                    return tS(
                      Yx([
                        '{',
                        t.bracketSpacing && r.fields.length > 0 ? ' ' : '',
                        nS(
                          Yx([
                            eS,
                            Kx(Yx([rS('', ', '), eS]), e.map(n, 'fields')),
                          ])
                        ),
                        eS,
                        rS(
                          '',
                          t.bracketSpacing && r.fields.length > 0 ? ' ' : ''
                        ),
                        '}',
                      ])
                    );
                  case 'ObjectField':
                  case 'Argument':
                    return Yx([e.call(n, 'name'), ': ', e.call(n, 'value')]);
                  case 'Directive':
                    return Yx([
                      '@',
                      e.call(n, 'name'),
                      r.arguments.length > 0
                        ? tS(
                            Yx([
                              '(',
                              nS(
                                Yx([
                                  eS,
                                  Kx(
                                    Yx([rS('', ', '), eS]),
                                    e.call(function (e) {
                                      return lS(e, t, n);
                                    }, 'arguments')
                                  ),
                                ])
                              ),
                              eS,
                              ')',
                            ])
                          )
                        : '',
                    ]);
                  case 'NamedType':
                    return e.call(n, 'name');
                  case 'VariableDefinition':
                    return Yx([
                      e.call(n, 'variable'),
                      ': ',
                      e.call(n, 'type'),
                      r.defaultValue
                        ? Yx([' = ', e.call(n, 'defaultValue')])
                        : '',
                      sS(e, n, r),
                    ]);
                  case 'ObjectTypeExtension':
                  case 'ObjectTypeDefinition':
                    return Yx([
                      e.call(n, 'description'),
                      r.description ? Qx : '',
                      'ObjectTypeExtension' === r.kind ? 'extend ' : '',
                      'type ',
                      e.call(n, 'name'),
                      r.interfaces.length > 0
                        ? Yx([' implements ', Yx(cS(e, t, n))])
                        : '',
                      sS(e, n, r),
                      r.fields.length > 0
                        ? Yx([
                            ' {',
                            nS(
                              Yx([
                                Qx,
                                Kx(
                                  Qx,
                                  e.call(function (e) {
                                    return lS(e, t, n);
                                  }, 'fields')
                                ),
                              ])
                            ),
                            Qx,
                            '}',
                          ])
                        : '',
                    ]);
                  case 'FieldDefinition':
                    return Yx([
                      e.call(n, 'description'),
                      r.description ? Qx : '',
                      e.call(n, 'name'),
                      r.arguments.length > 0
                        ? tS(
                            Yx([
                              '(',
                              nS(
                                Yx([
                                  eS,
                                  Kx(
                                    Yx([rS('', ', '), eS]),
                                    e.call(function (e) {
                                      return lS(e, t, n);
                                    }, 'arguments')
                                  ),
                                ])
                              ),
                              eS,
                              ')',
                            ])
                          )
                        : '',
                      ': ',
                      e.call(n, 'type'),
                      sS(e, n, r),
                    ]);
                  case 'DirectiveDefinition':
                    return Yx([
                      e.call(n, 'description'),
                      r.description ? Qx : '',
                      'directive ',
                      '@',
                      e.call(n, 'name'),
                      r.arguments.length > 0
                        ? tS(
                            Yx([
                              '(',
                              nS(
                                Yx([
                                  eS,
                                  Kx(
                                    Yx([rS('', ', '), eS]),
                                    e.call(function (e) {
                                      return lS(e, t, n);
                                    }, 'arguments')
                                  ),
                                ])
                              ),
                              eS,
                              ')',
                            ])
                          )
                        : '',
                      r.repeatable ? ' repeatable' : '',
                      Yx([' on ', Kx(' | ', e.map(n, 'locations'))]),
                    ]);
                  case 'EnumTypeExtension':
                  case 'EnumTypeDefinition':
                    return Yx([
                      e.call(n, 'description'),
                      r.description ? Qx : '',
                      'EnumTypeExtension' === r.kind ? 'extend ' : '',
                      'enum ',
                      e.call(n, 'name'),
                      sS(e, n, r),
                      r.values.length > 0
                        ? Yx([
                            ' {',
                            nS(
                              Yx([
                                Qx,
                                Kx(
                                  Qx,
                                  e.call(function (e) {
                                    return lS(e, t, n);
                                  }, 'values')
                                ),
                              ])
                            ),
                            Qx,
                            '}',
                          ])
                        : '',
                    ]);
                  case 'EnumValueDefinition':
                    return Yx([
                      e.call(n, 'description'),
                      r.description ? Qx : '',
                      e.call(n, 'name'),
                      sS(e, n, r),
                    ]);
                  case 'InputValueDefinition':
                    return Yx([
                      e.call(n, 'description'),
                      r.description ? (r.description.block ? Qx : Zx) : '',
                      e.call(n, 'name'),
                      ': ',
                      e.call(n, 'type'),
                      r.defaultValue
                        ? Yx([' = ', e.call(n, 'defaultValue')])
                        : '',
                      sS(e, n, r),
                    ]);
                  case 'InputObjectTypeExtension':
                  case 'InputObjectTypeDefinition':
                    return Yx([
                      e.call(n, 'description'),
                      r.description ? Qx : '',
                      'InputObjectTypeExtension' === r.kind ? 'extend ' : '',
                      'input ',
                      e.call(n, 'name'),
                      sS(e, n, r),
                      r.fields.length > 0
                        ? Yx([
                            ' {',
                            nS(
                              Yx([
                                Qx,
                                Kx(
                                  Qx,
                                  e.call(function (e) {
                                    return lS(e, t, n);
                                  }, 'fields')
                                ),
                              ])
                            ),
                            Qx,
                            '}',
                          ])
                        : '',
                    ]);
                  case 'SchemaDefinition':
                    return Yx([
                      'schema',
                      sS(e, n, r),
                      ' {',
                      r.operationTypes.length > 0
                        ? nS(
                            Yx([
                              Qx,
                              Kx(
                                Qx,
                                e.call(function (e) {
                                  return lS(e, t, n);
                                }, 'operationTypes')
                              ),
                            ])
                          )
                        : '',
                      Qx,
                      '}',
                    ]);
                  case 'OperationTypeDefinition':
                    return Yx([
                      e.call(n, 'operation'),
                      ': ',
                      e.call(n, 'type'),
                    ]);
                  case 'InterfaceTypeExtension':
                  case 'InterfaceTypeDefinition':
                    return Yx([
                      e.call(n, 'description'),
                      r.description ? Qx : '',
                      'InterfaceTypeExtension' === r.kind ? 'extend ' : '',
                      'interface ',
                      e.call(n, 'name'),
                      r.interfaces.length > 0
                        ? Yx([' implements ', Yx(cS(e, t, n))])
                        : '',
                      sS(e, n, r),
                      r.fields.length > 0
                        ? Yx([
                            ' {',
                            nS(
                              Yx([
                                Qx,
                                Kx(
                                  Qx,
                                  e.call(function (e) {
                                    return lS(e, t, n);
                                  }, 'fields')
                                ),
                              ])
                            ),
                            Qx,
                            '}',
                          ])
                        : '',
                    ]);
                  case 'FragmentSpread':
                    return Yx(['...', e.call(n, 'name'), sS(e, n, r)]);
                  case 'InlineFragment':
                    return Yx([
                      '...',
                      r.typeCondition
                        ? Yx([' on ', e.call(n, 'typeCondition')])
                        : '',
                      sS(e, n, r),
                      ' ',
                      e.call(n, 'selectionSet'),
                    ]);
                  case 'UnionTypeExtension':
                  case 'UnionTypeDefinition':
                    return tS(
                      Yx([
                        e.call(n, 'description'),
                        r.description ? Qx : '',
                        tS(
                          Yx([
                            'UnionTypeExtension' === r.kind ? 'extend ' : '',
                            'union ',
                            e.call(n, 'name'),
                            sS(e, n, r),
                            r.types.length > 0
                              ? Yx([
                                  ' =',
                                  rS('', ' '),
                                  nS(
                                    Yx([
                                      rS(Yx([Zx, '  '])),
                                      Kx(Yx([Zx, '| ']), e.map(n, 'types')),
                                    ])
                                  ),
                                ])
                              : '',
                          ])
                        ),
                      ])
                    );
                  case 'ScalarTypeExtension':
                  case 'ScalarTypeDefinition':
                    return Yx([
                      e.call(n, 'description'),
                      r.description ? Qx : '',
                      'ScalarTypeExtension' === r.kind ? 'extend ' : '',
                      'scalar ',
                      e.call(n, 'name'),
                      sS(e, n, r),
                    ]);
                  case 'NonNullType':
                    return Yx([e.call(n, 'type'), '!']);
                  case 'ListType':
                    return Yx(['[', e.call(n, 'type'), ']']);
                  default:
                    throw new Error(
                      'unknown graphql type: ' + JSON.stringify(r.kind)
                    );
                }
              },
              massageAstNode: pS,
              hasPrettierIgnore: function (e) {
                var t = e.getValue();
                return (
                  t &&
                  Array.isArray(t.comments) &&
                  t.comments.some(function (e) {
                    return 'prettier-ignore' === e.value.trim();
                  })
                );
              },
              insertPragma: aS,
              printComment: function (e) {
                var t = e.getValue();
                if ('Comment' === t.kind) return '#' + t.value.trimEnd();
                throw new Error('Not a comment: ' + JSON.stringify(t));
              },
              canAttachComment: function (e) {
                return e.kind && 'Comment' !== e.kind;
              },
            },
            dS = { bracketSpacing: _C.bracketSpacing },
            hS = {
              languages: [
                Os(
                  {
                    name: 'GraphQL',
                    type: 'data',
                    color: '#e10098',
                    extensions: ['.graphql', '.gql', '.graphqls'],
                    tmScope: 'source.graphql',
                    aceMode: 'text',
                    languageId: 139,
                  },
                  function () {
                    return {
                      since: '1.5.0',
                      parsers: ['graphql'],
                      vscodeLanguageIds: ['graphql'],
                    };
                  }
                ),
              ],
              options: dS,
              printers: { graphql: fS },
              parsers: {
                get graphql() {
                  return {}.parsers.graphql;
                },
              },
            },
            gS = function (e) {
              return e.position.start.offset;
            },
            mS = function (e) {
              return e.position.end.offset;
            },
            yS = Ut.getLast,
            DS = gS,
            vS = mS,
            ES =
              '(?:[\\u02ea-\\u02eb\\u1100-\\u11ff\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u3000-\\u303f\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u3190-\\u3191\\u3196-\\u31ba\\u31c0-\\u31e3\\u31f0-\\u321e\\u322a-\\u3247\\u3260-\\u327e\\u328a-\\u32b0\\u32c0-\\u32cb\\u32d0-\\u3370\\u337b-\\u337f\\u33e0-\\u33fe\\u3400-\\u4db5\\u4e00-\\u9fef\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufe10-\\ufe1f\\ufe30-\\ufe6f\\uff00-\\uffef]|[\\ud840-\\ud868\\ud86a-\\ud86c\\ud86f-\\ud872\\ud874-\\ud879][\\udc00-\\udfff]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67]|\\ud83c[\\ude00\\ude50-\\ude51]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])(?:[\\ufe00-\\ufe0f]|\\udb40[\\udd00-\\uddef])?',
            CS =
              '[\\u1100-\\u11ff\\u3001-\\u3003\\u3008-\\u3011\\u3013-\\u301f\\u302e-\\u3030\\u3037\\u30fb\\u3131-\\u318e\\u3200-\\u321e\\u3260-\\u327e\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\ufe45-\\ufe46\\uff61-\\uff65\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]',
            bS =
              '[\\u0021-\\u002f\\u003a-\\u0040\\u005b-\\u0060\\u007b-\\u007e\\u00a1\\u00a7\\u00ab\\u00b6-\\u00b7\\u00bb\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589-\\u058a\\u05be\\u05c0\\u05c3\\u05c6\\u05f3-\\u05f4\\u0609-\\u060a\\u060c-\\u060d\\u061b\\u061e-\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964-\\u0965\\u0970\\u09fd\\u0a76\\u0af0\\u0c77\\u0c84\\u0df4\\u0e4f\\u0e5a-\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f3a-\\u0f3d\\u0f85\\u0fd0-\\u0fd4\\u0fd9-\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u1400\\u166e\\u169b-\\u169c\\u16eb-\\u16ed\\u1735-\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u180a\\u1944-\\u1945\\u1a1e-\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e-\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205e\\u207d-\\u207e\\u208d-\\u208e\\u2308-\\u230b\\u2329-\\u232a\\u2768-\\u2775\\u27c5-\\u27c6\\u27e6-\\u27ef\\u2983-\\u2998\\u29d8-\\u29db\\u29fc-\\u29fd\\u2cf9-\\u2cfc\\u2cfe-\\u2cff\\u2d70\\u2e00-\\u2e2e\\u2e30-\\u2e4f\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301f\\u3030\\u303d\\u30a0\\u30fb\\ua4fe-\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce-\\ua8cf\\ua8f8-\\ua8fa\\ua8fc\\ua92e-\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de-\\ua9df\\uaa5c-\\uaa5f\\uaade-\\uaadf\\uaaf0-\\uaaf1\\uabeb\\ufd3e-\\ufd3f\\ufe10-\\ufe19\\ufe30-\\ufe52\\ufe54-\\ufe61\\ufe63\\ufe68\\ufe6a-\\ufe6b\\uff01-\\uff03\\uff05-\\uff0a\\uff0c-\\uff0f\\uff1a-\\uff1b\\uff1f-\\uff20\\uff3b-\\uff3d\\uff3f\\uff5b\\uff5d\\uff5f-\\uff65]|\\ud800[\\udd00-\\udd02\\udf9f\\udfd0]|\\ud801[\\udd6f]|\\ud802[\\udc57\\udd1f\\udd3f\\ude50-\\ude58\\ude7f\\udef0-\\udef6\\udf39-\\udf3f\\udf99-\\udf9c]|\\ud803[\\udf55-\\udf59]|\\ud804[\\udc47-\\udc4d\\udcbb-\\udcbc\\udcbe-\\udcc1\\udd40-\\udd43\\udd74-\\udd75\\uddc5-\\uddc8\\uddcd\\udddb\\udddd-\\udddf\\ude38-\\ude3d\\udea9]|\\ud805[\\udc4b-\\udc4f\\udc5b\\udc5d\\udcc6\\uddc1-\\uddd7\\ude41-\\ude43\\ude60-\\ude6c\\udf3c-\\udf3e]|\\ud806[\\udc3b\\udde2\\ude3f-\\ude46\\ude9a-\\ude9c\\ude9e-\\udea2]|\\ud807[\\udc41-\\udc45\\udc70-\\udc71\\udef7-\\udef8\\udfff]|\\ud809[\\udc70-\\udc74]|\\ud81a[\\ude6e-\\ude6f\\udef5\\udf37-\\udf3b\\udf44]|\\ud81b[\\ude97-\\ude9a\\udfe2]|\\ud82f[\\udc9f]|\\ud836[\\ude87-\\ude8b]|\\ud83a[\\udd5e-\\udd5f]',
            AS = [
              'liquidNode',
              'inlineCode',
              'emphasis',
              'strong',
              'delete',
              'wikiLink',
              'link',
              'linkReference',
              'image',
              'imageReference',
              'footnote',
              'footnoteReference',
              'sentence',
              'whitespace',
              'word',
              'break',
              'inlineMath',
            ],
            FS = AS.concat(['tableCell', 'paragraph', 'heading']),
            xS = new RegExp(CS),
            SS = new RegExp(bS);
          function wS(e, t) {
            var n = C(
              t
                .slice(e.position.start.offset, e.position.end.offset)
                .match(/^\s*(\d+)(\.|\))(\s*)/),
              4
            );
            return { numberText: n[1], marker: n[2], leadingSpaces: n[3] };
          }
          var BS = {
              mapAst: function (e, t) {
                return (function e(n, r, u) {
                  u = u || [];
                  var a = Object.assign({}, t(n, r, u));
                  return (
                    a.children &&
                      (a.children = a.children.map(function (t, n) {
                        return e(t, n, [a].concat(u));
                      })),
                    a
                  );
                })(e, null, null);
              },
              splitText: function (e, t) {
                var n = 'non-cjk',
                  r = 'cj-letter',
                  u = 'cjk-punctuation',
                  a = [];
                return (
                  ('preserve' === t.proseWrap
                    ? e
                    : e.replace(
                        new RegExp('('.concat(ES, ')\n(').concat(ES, ')'), 'g'),
                        '$1$2'
                      )
                  )
                    .split(/([\t\n ]+)/)
                    .forEach(function (e, t, o) {
                      t % 2 != 1
                        ? ((0 !== t && t !== o.length - 1) || '' !== e) &&
                          e
                            .split(new RegExp('('.concat(ES, ')')))
                            .forEach(function (e, t, a) {
                              ((0 !== t && t !== a.length - 1) || '' !== e) &&
                                (t % 2 != 0
                                  ? i(
                                      SS.test(e)
                                        ? {
                                            type: 'word',
                                            value: e,
                                            kind: u,
                                            hasLeadingPunctuation: !0,
                                            hasTrailingPunctuation: !0,
                                          }
                                        : {
                                            type: 'word',
                                            value: e,
                                            kind: xS.test(e) ? 'k-letter' : r,
                                            hasLeadingPunctuation: !1,
                                            hasTrailingPunctuation: !1,
                                          }
                                    )
                                  : '' !== e &&
                                    i({
                                      type: 'word',
                                      value: e,
                                      kind: n,
                                      hasLeadingPunctuation: SS.test(e[0]),
                                      hasTrailingPunctuation: SS.test(yS(e)),
                                    }));
                            })
                        : a.push({
                            type: 'whitespace',
                            value: /\n/.test(e) ? '\n' : ' ',
                          });
                    }),
                  a
                );
                function i(e) {
                  var t,
                    i,
                    o = yS(a);
                  o &&
                    'word' === o.type &&
                    ((o.kind === n &&
                      e.kind === r &&
                      !o.hasTrailingPunctuation) ||
                    (o.kind === r && e.kind === n && !e.hasLeadingPunctuation)
                      ? a.push({ type: 'whitespace', value: ' ' })
                      : ((t = n),
                        (i = u),
                        (o.kind === t && e.kind === i) ||
                          (o.kind === i && e.kind === t) ||
                          [o.value, e.value].some(function (e) {
                            return /\u3000/.test(e);
                          }) ||
                          a.push({ type: 'whitespace', value: '' }))),
                    a.push(e);
                }
              },
              punctuationPattern: bS,
              getFencedCodeBlockValue: function (e, t) {
                var n = e.value;
                return e.position.end.offset === t.length &&
                  n.endsWith('\n') &&
                  t.endsWith('\n')
                  ? n.slice(0, -1)
                  : n;
              },
              getOrderedListItemInfo: wS,
              hasGitDiffFriendlyOrderedList: function (e, t) {
                if (!e.ordered) return !1;
                if (e.children.length < 2) return !1;
                var n = Number(wS(e.children[0], t.originalText).numberText),
                  r = Number(wS(e.children[1], t.originalText).numberText);
                if (0 === n && e.children.length > 2) {
                  var u = Number(wS(e.children[2], t.originalText).numberText);
                  return 1 === r && 1 === u;
                }
                return 1 === r;
              },
              INLINE_NODE_TYPES: AS,
              INLINE_NODE_WRAPPER_TYPES: FS,
              isAutolink: function (e) {
                if (!e || 'link' !== e.type || 1 !== e.children.length)
                  return !1;
                var t = e.children[0];
                return t && DS(e) === DS(t) && vS(e) === vS(t);
              },
            },
            TS = Ut.inferParserByLanguage,
            kS = Ut.getMaxContinuousCount,
            NS = vn.builders,
            OS = NS.hardline,
            PS = NS.concat,
            MS = NS.markAsRoot,
            IS = vn.utils.replaceNewlinesWithLiterallines,
            jS = eb,
            LS = BS.getFencedCodeBlockValue,
            _S = ZC,
            RS = ['format', 'prettier'];
          function $S(e) {
            var t = '@('.concat(RS.join('|'), ')'),
              n = new RegExp(
                [
                  '\x3c!--\\s*'.concat(t, '\\s*--\x3e'),
                  '\x3c!--.*\r?\n[\\s\\S]*(^|\n)[^\\S\n]*'.concat(
                    t,
                    '[^\\S\n]*($|\n)[\\s\\S]*\n.*--\x3e'
                  ),
                ].join('|'),
                'm'
              ),
              r = e.match(n);
            return r && 0 === r.index;
          }
          var VS = function (e) {
              var t = _S(e),
                n = '\x3c!-- @'.concat(RS[0], ' --\x3e');
              return t.frontMatter
                ? ''
                    .concat(t.frontMatter.raw, '\n\n')
                    .concat(n, '\n\n')
                    .concat(t.content)
                : ''.concat(n, '\n\n').concat(t.content);
            },
            qS = BS.getOrderedListItemInfo,
            WS = BS.mapAst,
            US = BS.splitText,
            JS = /^([\u0000-\uffff]|[\ud800-\udbff][\udc00-\udfff])$/;
          function zS(e, t, n) {
            return WS(e, function (e) {
              if (!e.children) return e;
              var r = e.children.reduce(function (e, r) {
                var u = e[e.length - 1];
                return u && t(u, r) ? e.splice(-1, 1, n(u, r)) : e.push(r), e;
              }, []);
              return Object.assign({}, e, { children: r });
            });
          }
          var GS = Ut.isFrontMatterNode,
            HS = $S,
            XS = new Set(['position', 'raw']);
          function YS(e, t, n) {
            return (
              ('front-matter' !== e.type &&
                'code' !== e.type &&
                'yaml' !== e.type &&
                'import' !== e.type &&
                'export' !== e.type &&
                'jsx' !== e.type) ||
                delete t.value,
              'list' === e.type && delete t.isAligned,
              ('list' !== e.type && 'listItem' !== e.type) ||
                (delete t.spread, delete t.loose),
              'text' === e.type
                ? null
                : ('inlineCode' === e.type &&
                    (t.value = e.value.replace(/[\t\n ]+/g, ' ')),
                  'wikiLink' === e.type &&
                    (t.value = e.value.trim().replace(/[\t\n]+/g, ' ')),
                  ('definition' !== e.type && 'linkReference' !== e.type) ||
                    (t.label = e.label
                      .trim()
                      .replace(/[\t\n ]+/g, ' ')
                      .toLowerCase()),
                  ('definition' !== e.type &&
                    'link' !== e.type &&
                    'image' !== e.type) ||
                    !e.title ||
                    (t.title = e.title.replace(/\\(["')])/g, '$1')),
                  n &&
                  'root' === n.type &&
                  n.children.length > 0 &&
                  (n.children[0] === e ||
                    (GS(n.children[0]) && n.children[1] === e)) &&
                  'html' === e.type &&
                  HS(e.value)
                    ? null
                    : void 0)
            );
          }
          YS.ignoredProperties = XS;
          var KS = YS,
            QS = Ut.getLast,
            ZS = Ut.getMinNotPresentContinuousCount,
            ew = Ut.getMaxContinuousCount,
            tw = Ut.getStringWidth,
            nw = vn.builders,
            rw = nw.breakParent,
            uw = nw.concat,
            aw = nw.join,
            iw = nw.line,
            ow = nw.literalline,
            sw = nw.markAsRoot,
            lw = nw.hardline,
            cw = nw.softline,
            pw = nw.ifBreak,
            fw = nw.fill,
            dw = nw.align,
            hw = nw.indent,
            gw = nw.group,
            mw = vn.utils.normalizeDoc,
            yw = vn.printer.printDocToString,
            Dw = Ut.replaceEndOfLineWith,
            vw = VS,
            Ew = gS,
            Cw = mS,
            bw = BS.getFencedCodeBlockValue,
            Aw = BS.hasGitDiffFriendlyOrderedList,
            Fw = BS.splitText,
            xw = BS.punctuationPattern,
            Sw = BS.INLINE_NODE_TYPES,
            ww = BS.INLINE_NODE_WRAPPER_TYPES,
            Bw = BS.isAutolink,
            Tw = new Set(['importExport']),
            kw = ['heading', 'tableCell', 'link', 'wikiLink'],
            Nw = new Set(['listItem', 'definition', 'footnoteDefinition']);
          function Ow(e, t, n, r) {
            var u = e.getValue(),
              a = null === u.checked ? '' : u.checked ? '[x] ' : '[ ] ';
            return uw([
              a,
              _w(e, t, n, {
                processor: function (e, u) {
                  if (0 === u && 'list' !== e.getValue().type)
                    return dw(' '.repeat(a.length), e.call(n));
                  var i,
                    o = ' '.repeat(
                      (3, (i = t.tabWidth - r.length) < 0 ? 0 : i > 3 ? 3 : i)
                    );
                  return uw([o, dw(o, e.call(n))]);
                },
              }),
            ]);
          }
          function Pw(e, t) {
            return (function (e, t, n) {
              n =
                n ||
                function () {
                  return !0;
                };
              var r,
                u = -1,
                a = g(t.children);
              try {
                for (a.s(); !(r = a.n()).done; ) {
                  var i = r.value;
                  if ((i.type === e.type && n(i) ? u++ : (u = -1), i === e))
                    return u;
                }
              } catch (o) {
                a.e(o);
              } finally {
                a.f();
              }
            })(e, t, function (t) {
              return t.ordered === e.ordered;
            });
          }
          function Mw(e, t) {
            for (var n, r = [].concat(t), u = -1; (n = e.getParentNode(++u)); )
              if (r.includes(n.type)) return u;
            return -1;
          }
          function Iw(e, t) {
            var n = Mw(e, t);
            return -1 === n ? null : e.getParentNode(n);
          }
          function jw(e, t, n) {
            if ('preserve' === n.proseWrap && '\n' === t) return lw;
            var r = 'always' === n.proseWrap && !Iw(e, kw);
            return '' !== t ? (r ? iw : ' ') : r ? cw : '';
          }
          function Lw(e, t, n) {
            var r = [],
              u = null,
              a = e.getValue().children;
            return (
              a.forEach(function (e, t) {
                switch ($w(e)) {
                  case 'start':
                    null === u &&
                      (u = { index: t, offset: e.position.end.offset });
                    break;
                  case 'end':
                    null !== u &&
                      (r.push({
                        start: u,
                        end: { index: t, offset: e.position.start.offset },
                      }),
                      (u = null));
                }
              }),
              _w(e, t, n, {
                processor: function (e, u) {
                  if (0 !== r.length) {
                    var i = r[0];
                    if (u === i.start.index)
                      return uw([
                        a[i.start.index].value,
                        t.originalText.slice(i.start.offset, i.end.offset),
                        a[i.end.index].value,
                      ]);
                    if (i.start.index < u && u < i.end.index) return !1;
                    if (u === i.end.index) return r.shift(), !1;
                  }
                  return e.call(n);
                },
              })
            );
          }
          function _w(e, t, n, r) {
            var u,
              a = (r = r || {}).postprocessor || uw,
              i =
                r.processor ||
                function (e) {
                  return e.call(n);
                },
              o = e.getValue(),
              s = [];
            return (
              e.each(function (e, n) {
                var r = e.getValue(),
                  a = i(e, n);
                if (!1 !== a) {
                  var l = { parts: s, prevNode: u, parentNode: o, options: t };
                  (function (e, t) {
                    var n = 0 === t.parts.length,
                      r = Sw.includes(e.type),
                      u = 'html' === e.type && ww.includes(t.parentNode.type);
                    return n || r || u;
                  })(r, l) ||
                    (s.push(lw),
                    (u && Tw.has(u.type)) ||
                      (((function (e, t) {
                        var n =
                            (t.prevNode && t.prevNode.type) === e.type &&
                            Nw.has(e.type),
                          r =
                            'listItem' === t.parentNode.type &&
                            !t.parentNode.loose,
                          u =
                            t.prevNode &&
                            'listItem' === t.prevNode.type &&
                            t.prevNode.loose,
                          a = 'next' === $w(t.prevNode),
                          i =
                            'html' === e.type &&
                            t.prevNode &&
                            'html' === t.prevNode.type &&
                            t.prevNode.position.end.line + 1 ===
                              e.position.start.line,
                          o =
                            'html' === e.type &&
                            'listItem' === t.parentNode.type &&
                            t.prevNode &&
                            'paragraph' === t.prevNode.type &&
                            t.prevNode.position.end.line + 1 ===
                              e.position.start.line;
                        return u || !(n || r || a || i || o);
                      })(r, l) ||
                        Vw(r, l)) &&
                        s.push(lw)),
                    Vw(r, l) && s.push(lw)),
                    s.push(a),
                    (u = r);
                }
              }, 'children'),
              a(s)
            );
          }
          function Rw(e) {
            for (var t = e; t.children && 0 !== t.children.length; )
              t = t.children[t.children.length - 1];
            return t;
          }
          function $w(e) {
            if ('html' !== e.type) return !1;
            var t = e.value.match(
              /^<!--\s*prettier-ignore(?:-(start|end))?\s*-->$/
            );
            return null !== t && (t[1] ? t[1] : 'next');
          }
          function Vw(e, t) {
            var n = t.prevNode && 'list' === t.prevNode.type,
              r = 'code' === e.type && e.isIndented;
            return n && r;
          }
          function qw(e, t) {
            var n = [' '].concat(t || []);
            return new RegExp(
              n
                .map(function (e) {
                  return '\\'.concat(e);
                })
                .join('|')
            ).test(e)
              ? '<'.concat(e, '>')
              : e;
          }
          function Ww(e, t, n) {
            if ((null == n && (n = !0), !e)) return '';
            if (n) return ' ' + Ww(e, t, !1);
            if (
              (e = e.replace(/\\(["')])/g, '$1')).includes('"') &&
              e.includes("'") &&
              !e.includes(')')
            )
              return '('.concat(e, ')');
            var r = e.split("'").length - 1,
              u = e.split('"').length - 1,
              a = r > u ? '"' : u > r || t.singleQuote ? "'" : '"';
            return (
              (e = (e = e.replace(/\\/, '\\\\')).replace(
                new RegExp('('.concat(a, ')'), 'g'),
                '\\$1'
              )),
              ''.concat(a).concat(e).concat(a)
            );
          }
          var Uw = {
              preprocess: function (e, t) {
                return (function (e) {
                  return zS(
                    e,
                    function (e, t) {
                      return (
                        'importExport' === e.type && 'importExport' === t.type
                      );
                    },
                    function (e, t) {
                      return {
                        type: 'importExport',
                        value: e.value + '\n\n' + t.value,
                        position: {
                          start: e.position.start,
                          end: t.position.end,
                        },
                      };
                    }
                  );
                })(
                  (e = (function (e) {
                    return WS(e, function (e) {
                      return 'import' !== e.type && 'export' !== e.type
                        ? e
                        : Object.assign({}, e, { type: 'importExport' });
                    });
                  })(
                    (e = (function (e, t) {
                      return WS(e, function (e, n, r) {
                        var u = C(r, 1)[0];
                        if ('text' !== e.type) return e;
                        var a = e.value;
                        return (
                          'paragraph' === u.type &&
                            (0 === n && (a = a.trimStart()),
                            n === u.children.length - 1 && (a = a.trimEnd())),
                          {
                            type: 'sentence',
                            position: e.position,
                            children: US(a, t),
                          }
                        );
                      });
                    })(
                      (e = (function (e, t) {
                        return WS(e, function (e, t, n) {
                          if ('list' === e.type && 0 !== e.children.length) {
                            for (var u = 0; u < n.length; u++) {
                              var a = n[u];
                              if ('list' === a.type && !a.isAligned)
                                return (e.isAligned = !1), e;
                            }
                            e.isAligned = r(e);
                          }
                          return e;
                        });
                        function n(e) {
                          return 0 === e.children.length
                            ? -1
                            : e.children[0].position.start.column - 1;
                        }
                        function r(e) {
                          if (!e.ordered) return !0;
                          var r = C(e.children, 2),
                            u = r[0],
                            a = r[1];
                          if (qS(u, t.originalText).leadingSpaces.length > 1)
                            return !0;
                          var i = n(u);
                          return (
                            -1 !== i &&
                            (1 === e.children.length
                              ? i % t.tabWidth == 0
                              : i === n(a) &&
                                (i % t.tabWidth == 0 ||
                                  qS(a, t.originalText).leadingSpaces.length >
                                    1))
                          );
                        }
                      })(
                        (e = (function (e, t) {
                          return WS(e, function (e, n, r) {
                            if ('code' === e.type) {
                              var u = /^\n?( {4,}|\t)/.test(
                                t.originalText.slice(
                                  e.position.start.offset,
                                  e.position.end.offset
                                )
                              );
                              if (((e.isIndented = u), u))
                                for (var a = 0; a < r.length; a++) {
                                  var i = r[a];
                                  if (i.hasIndentedCodeblock) break;
                                  'list' === i.type &&
                                    (i.hasIndentedCodeblock = !0);
                                }
                            }
                            return e;
                          });
                        })(
                          (e = (function (e) {
                            return WS(e, function (e) {
                              return 'inlineCode' !== e.type
                                ? e
                                : Object.assign({}, e, {
                                    value: e.value.replace(/\s+/g, ' '),
                                  });
                            });
                          })(
                            (e = (function (e) {
                              return zS(
                                e,
                                function (e, t) {
                                  return 'text' === e.type && 'text' === t.type;
                                },
                                function (e, t) {
                                  return {
                                    type: 'text',
                                    value: e.value + t.value,
                                    position: {
                                      start: e.position.start,
                                      end: t.position.end,
                                    },
                                  };
                                }
                              );
                            })(
                              (e = (function (e, t) {
                                return WS(e, function (e) {
                                  return 'text' === e.type &&
                                    '*' !== e.value &&
                                    '_' !== e.value &&
                                    JS.test(e.value) &&
                                    e.position.end.offset -
                                      e.position.start.offset !==
                                      e.value.length
                                    ? Object.assign({}, e, {
                                        value: t.originalText.slice(
                                          e.position.start.offset,
                                          e.position.end.offset
                                        ),
                                      })
                                    : e;
                                });
                              })(e, t))
                            ))
                          )),
                          t
                        )),
                        t
                      )),
                      t
                    ))
                  ))
                );
              },
              print: function (e, t, n) {
                var r = e.getValue();
                if (
                  (function (e) {
                    var t = Iw(e, ['linkReference', 'imageReference']);
                    return (
                      t &&
                      ('linkReference' !== t.type || 'full' !== t.referenceType)
                    );
                  })(e)
                )
                  return uw(
                    Fw(
                      t.originalText.slice(
                        r.position.start.offset,
                        r.position.end.offset
                      ),
                      t
                    ).map(function (n) {
                      return 'word' === n.type
                        ? n.value
                        : '' === n.value
                        ? ''
                        : jw(e, n.value, t);
                    })
                  );
                switch (r.type) {
                  case 'front-matter':
                    return t.originalText.slice(
                      r.position.start.offset,
                      r.position.end.offset
                    );
                  case 'root':
                    return 0 === r.children.length
                      ? ''
                      : uw([mw(Lw(e, t, n)), Tw.has(Rw(r).type) ? '' : lw]);
                  case 'paragraph':
                    return _w(e, t, n, { postprocessor: fw });
                  case 'sentence':
                    return _w(e, t, n);
                  case 'word':
                    var u = r.value
                        .replace(/\*/g, '\\$&')
                        .replace(
                          new RegExp(
                            [
                              '(^|'.concat(xw, ')(_+)'),
                              '(_+)('.concat(xw, '|$)'),
                            ].join('|'),
                            'g'
                          ),
                          function (e, t, n, r, u) {
                            return (n
                              ? ''.concat(t).concat(n)
                              : ''.concat(r).concat(u)
                            ).replace(/_/g, '\\_');
                          }
                        ),
                      a = function (e, t, n) {
                        return 'sentence' === e.type && 0 === n;
                      },
                      i = function (e, t, n) {
                        return Bw(e.children[n - 1]);
                      };
                    return (
                      u !== r.value &&
                        (e.match(void 0, a, i) ||
                          e.match(
                            void 0,
                            a,
                            function (e, t, n) {
                              return 'emphasis' === e.type && 0 === n;
                            },
                            i
                          )) &&
                        (u = u.replace(/^(\\?[*_])+/, function (e) {
                          return e.replace(/\\/g, '');
                        })),
                      u
                    );
                  case 'whitespace':
                    var o = e.getParentNode(),
                      s = o.children.indexOf(r),
                      l = o.children[s + 1],
                      c =
                        l && /^>|^([*+-]|#{1,6}|\d+[).])$/.test(l.value)
                          ? 'never'
                          : t.proseWrap;
                    return jw(e, r.value, { proseWrap: c });
                  case 'emphasis':
                    var p;
                    if (Bw(r.children[0]))
                      p = t.originalText[r.position.start.offset];
                    else {
                      var f = e.getParentNode(),
                        d = f.children.indexOf(r),
                        h = f.children[d - 1],
                        g = f.children[d + 1];
                      p =
                        (h &&
                          'sentence' === h.type &&
                          h.children.length > 0 &&
                          'word' === QS(h.children).type &&
                          !QS(h.children).hasTrailingPunctuation) ||
                        (g &&
                          'sentence' === g.type &&
                          g.children.length > 0 &&
                          'word' === g.children[0].type &&
                          !g.children[0].hasLeadingPunctuation) ||
                        Iw(e, 'emphasis')
                          ? '*'
                          : '_';
                    }
                    return uw([p, _w(e, t, n), p]);
                  case 'strong':
                    return uw(['**', _w(e, t, n), '**']);
                  case 'delete':
                    return uw(['~~', _w(e, t, n), '~~']);
                  case 'inlineCode':
                    var m = ZS(r.value, '`'),
                      y = '`'.repeat(m || 1),
                      D = m && !/^\s/.test(r.value) ? ' ' : '';
                    return uw([y, D, r.value, D, y]);
                  case 'wikiLink':
                    var v;
                    return (
                      (v =
                        'preserve' === t.proseWrap
                          ? r.value
                          : r.value.replace(/[\t\n]+/g, ' ')),
                      uw(['[[', v, ']]'])
                    );
                  case 'link':
                    switch (t.originalText[r.position.start.offset]) {
                      case '<':
                        var E =
                          r.url.startsWith('mailto:') &&
                          'mailto:' !==
                            t.originalText.slice(
                              r.position.start.offset + 1,
                              r.position.start.offset + 1 + 'mailto:'.length
                            )
                            ? r.url.slice('mailto:'.length)
                            : r.url;
                        return uw(['<', E, '>']);
                      case '[':
                        return uw([
                          '[',
                          _w(e, t, n),
                          '](',
                          qw(r.url, ')'),
                          Ww(r.title, t),
                          ')',
                        ]);
                      default:
                        return t.originalText.slice(
                          r.position.start.offset,
                          r.position.end.offset
                        );
                    }
                  case 'image':
                    return uw([
                      '![',
                      r.alt || '',
                      '](',
                      qw(r.url, ')'),
                      Ww(r.title, t),
                      ')',
                    ]);
                  case 'blockquote':
                    return uw(['> ', dw('> ', _w(e, t, n))]);
                  case 'heading':
                    return uw(['#'.repeat(r.depth) + ' ', _w(e, t, n)]);
                  case 'code':
                    if (r.isIndented) {
                      var C = ' '.repeat(4);
                      return dw(C, uw([C, uw(Dw(r.value, lw))]));
                    }
                    var b = t.__inJsTemplate ? '~' : '`',
                      A = b.repeat(Math.max(3, ew(r.value, b) + 1));
                    return uw([
                      A,
                      r.lang || '',
                      r.meta ? ' ' + r.meta : '',
                      lw,
                      uw(Dw(bw(r, t.originalText), lw)),
                      lw,
                      A,
                    ]);
                  case 'html':
                    var F = e.getParentNode(),
                      x =
                        'root' === F.type && QS(F.children) === r
                          ? r.value.trimEnd()
                          : r.value,
                      S = /^<!--[\S\s]*-->$/.test(x);
                    return uw(Dw(x, S ? lw : sw(ow)));
                  case 'list':
                    var w = Pw(r, e.getParentNode()),
                      B = Aw(r, t);
                    return _w(e, t, n, {
                      processor: function (e, u) {
                        var a = (function () {
                            var e = r.ordered
                              ? (0 === u ? r.start : B ? 1 : r.start + u) +
                                (w % 2 == 0 ? '. ' : ') ')
                              : w % 2 == 0
                              ? '- '
                              : '* ';
                            return r.isAligned || r.hasIndentedCodeblock
                              ? (function (e, t) {
                                  var n = (function () {
                                    var n = e.length % t.tabWidth;
                                    return 0 === n ? 0 : t.tabWidth - n;
                                  })();
                                  return e + ' '.repeat(n >= 4 ? 0 : n);
                                })(e, t)
                              : e;
                          })(),
                          i = e.getValue();
                        return 2 === i.children.length &&
                          'html' === i.children[1].type &&
                          i.children[0].position.start.column !==
                            i.children[1].position.start.column
                          ? uw([a, Ow(e, t, n, a)])
                          : uw([a, dw(' '.repeat(a.length), Ow(e, t, n, a))]);
                      },
                    });
                  case 'thematicBreak':
                    var T = Mw(e, 'list');
                    return -1 === T
                      ? '---'
                      : Pw(e.getParentNode(T), e.getParentNode(T + 1)) % 2 == 0
                      ? '***'
                      : '---';
                  case 'linkReference':
                    return uw([
                      '[',
                      _w(e, t, n),
                      ']',
                      'full' === r.referenceType
                        ? uw(['[', r.identifier, ']'])
                        : 'collapsed' === r.referenceType
                        ? '[]'
                        : '',
                    ]);
                  case 'imageReference':
                    switch (r.referenceType) {
                      case 'full':
                        return uw(['![', r.alt || '', '][', r.identifier, ']']);
                      default:
                        return uw([
                          '![',
                          r.alt,
                          ']',
                          'collapsed' === r.referenceType ? '[]' : '',
                        ]);
                    }
                  case 'definition':
                    var k = 'always' === t.proseWrap ? iw : ' ';
                    return gw(
                      uw([
                        uw(['[', r.identifier, ']:']),
                        hw(
                          uw([
                            k,
                            qw(r.url),
                            null === r.title ? '' : uw([k, Ww(r.title, t, !1)]),
                          ])
                        ),
                      ])
                    );
                  case 'footnote':
                    return uw(['[^', _w(e, t, n), ']']);
                  case 'footnoteReference':
                    return uw(['[^', r.identifier, ']']);
                  case 'footnoteDefinition':
                    var N = e.getParentNode().children[e.getName() + 1],
                      O =
                        1 === r.children.length &&
                        'paragraph' === r.children[0].type &&
                        ('never' === t.proseWrap ||
                          ('preserve' === t.proseWrap &&
                            r.children[0].position.start.line ===
                              r.children[0].position.end.line));
                    return uw([
                      '[^',
                      r.identifier,
                      ']: ',
                      O
                        ? _w(e, t, n)
                        : gw(
                            uw([
                              dw(
                                ' '.repeat(4),
                                _w(e, t, n, {
                                  processor: function (e, t) {
                                    return 0 === t
                                      ? gw(uw([cw, e.call(n)]))
                                      : e.call(n);
                                  },
                                })
                              ),
                              N && 'footnoteDefinition' === N.type ? cw : '',
                            ])
                          ),
                    ]);
                  case 'table':
                    return (function (e, t, n) {
                      var r = lw.parts[0],
                        u = e.getValue(),
                        a = [],
                        i = e.map(function (e) {
                          return e.map(function (e, r) {
                            var u = yw(e.call(n), t).formatted,
                              i = tw(u);
                            return (
                              (a[r] = Math.max(a[r] || 3, i)),
                              { text: u, width: i }
                            );
                          }, 'children');
                        }, 'children'),
                        o = l(!1);
                      if ('never' !== t.proseWrap) return uw([rw, o]);
                      var s = l(!0);
                      return uw([rw, gw(pw(s, o))]);
                      function l(e) {
                        var t = [p(i[0], e), c(e)];
                        return (
                          i.length > 1 &&
                            t.push(
                              aw(
                                r,
                                i.slice(1).map(function (t) {
                                  return p(t, e);
                                })
                              )
                            ),
                          aw(r, t)
                        );
                      }
                      function c(e) {
                        var t = a.map(function (t, n) {
                          var r = u.align[n],
                            a = 'center' === r || 'left' === r ? ':' : '-',
                            i = 'center' === r || 'right' === r ? ':' : '-',
                            o = e ? '-' : '-'.repeat(t - 2);
                          return ''.concat(a).concat(o).concat(i);
                        });
                        return '| '.concat(t.join(' | '), ' |');
                      }
                      function p(e, t) {
                        var n = e.map(function (e, n) {
                          var r = e.text,
                            i = e.width;
                          if (t) return r;
                          var o = a[n] - i,
                            s = u.align[n],
                            l = 0;
                          'right' === s
                            ? (l = o)
                            : 'center' === s && (l = Math.floor(o / 2));
                          var c = o - l;
                          return ''
                            .concat(' '.repeat(l))
                            .concat(r)
                            .concat(' '.repeat(c));
                        });
                        return '| '.concat(n.join(' | '), ' |');
                      }
                    })(e, t, n);
                  case 'tableCell':
                    return _w(e, t, n);
                  case 'break':
                    return /\s/.test(t.originalText[r.position.start.offset])
                      ? uw(['  ', sw(ow)])
                      : uw(['\\', lw]);
                  case 'liquidNode':
                    return uw(Dw(r.value, lw));
                  case 'importExport':
                    return uw([r.value, lw]);
                  case 'jsx':
                    return r.value;
                  case 'math':
                    return uw([
                      '$$',
                      lw,
                      r.value ? uw([uw(Dw(r.value, lw)), lw]) : '',
                      '$$',
                    ]);
                  case 'inlineMath':
                    return t.originalText.slice(Ew(r), Cw(r));
                  case 'tableRow':
                  case 'listItem':
                  default:
                    throw new Error(
                      'Unknown markdown type '.concat(JSON.stringify(r.type))
                    );
                }
              },
              embed: function (e, t, n, r) {
                var u = e.getValue();
                if ('code' === u.type && null !== u.lang) {
                  var a = TS(u.lang, r);
                  if (a) {
                    var i = r.__inJsTemplate ? '~' : '`',
                      o = i.repeat(Math.max(3, kS(u.value, i) + 1)),
                      s = n(
                        LS(u, r.originalText),
                        { parser: a },
                        { stripTrailingHardline: !0 }
                      );
                    return MS(
                      PS([
                        o,
                        u.lang,
                        u.meta ? ' ' + u.meta : '',
                        OS,
                        IS(s),
                        OS,
                        o,
                      ])
                    );
                  }
                }
                switch (u.type) {
                  case 'front-matter':
                    return jS(u, n);
                  case 'importExport':
                    return PS([
                      n(
                        u.value,
                        { parser: 'babel' },
                        { stripTrailingHardline: !0 }
                      ),
                      OS,
                    ]);
                  case 'jsx':
                    return n(
                      '<$>'.concat(u.value, '</$>'),
                      { parser: '__js_expression', rootMarker: 'mdx' },
                      { stripTrailingHardline: !0 }
                    );
                }
                return null;
              },
              massageAstNode: KS,
              hasPrettierIgnore: function (e) {
                var t = +e.getName();
                return (
                  0 !== t && 'next' === $w(e.getParentNode().children[t - 1])
                );
              },
              insertPragma: vw,
            },
            Jw = { proseWrap: _C.proseWrap, singleQuote: _C.singleQuote },
            zw = {
              name: 'Markdown',
              type: 'prose',
              color: '#083fa1',
              aliases: ['pandoc'],
              aceMode: 'markdown',
              codemirrorMode: 'gfm',
              codemirrorMimeType: 'text/x-gfm',
              wrap: !0,
              extensions: [
                '.md',
                '.markdown',
                '.mdown',
                '.mdwn',
                '.mdx',
                '.mkd',
                '.mkdn',
                '.mkdown',
                '.ronn',
                '.workbook',
              ],
              filenames: ['contents.lr'],
              tmScope: 'source.gfm',
              languageId: 222,
            },
            Gw = {
              languages: [
                Os(zw, function (e) {
                  return {
                    since: '1.8.0',
                    parsers: ['markdown'],
                    vscodeLanguageIds: ['markdown'],
                    filenames: e.filenames.concat(['README']),
                    extensions: e.extensions.filter(function (e) {
                      return '.mdx' !== e;
                    }),
                  };
                }),
                Os(zw, function () {
                  return {
                    name: 'MDX',
                    since: '1.15.0',
                    parsers: ['mdx'],
                    vscodeLanguageIds: ['mdx'],
                    filenames: [],
                    extensions: ['.mdx'],
                  };
                }),
              ],
              options: Jw,
              printers: { mdast: Uw },
              parsers: {
                get remark() {
                  return {}.parsers.remark;
                },
                get markdown() {
                  return {}.parsers.remark;
                },
                get mdx() {
                  return {}.parsers.mdx;
                },
              },
            },
            Hw = Ut.isFrontMatterNode,
            Xw = new Set([
              'sourceSpan',
              'startSourceSpan',
              'endSourceSpan',
              'nameSpan',
              'valueSpan',
            ]);
          function Yw(e, t) {
            return 'text' === e.type ||
              'comment' === e.type ||
              Hw(e) ||
              'yaml' === e.type ||
              'toml' === e.type
              ? null
              : ('attribute' === e.type && delete t.value,
                void ('docType' === e.type && delete t.value));
          }
          Yw.ignoredProperties = Xw;
          var Kw = Yw,
            Qw = Ut.inferParserByLanguage,
            Zw = Ut.isFrontMatterNode,
            eB = {
              area: 'none',
              base: 'none',
              basefont: 'none',
              datalist: 'none',
              head: 'none',
              link: 'none',
              meta: 'none',
              noembed: 'none',
              noframes: 'none',
              param: 'block',
              rp: 'none',
              script: 'block',
              source: 'block',
              style: 'none',
              template: 'inline',
              track: 'block',
              title: 'none',
              html: 'block',
              body: 'block',
              address: 'block',
              blockquote: 'block',
              center: 'block',
              div: 'block',
              figure: 'block',
              figcaption: 'block',
              footer: 'block',
              form: 'block',
              header: 'block',
              hr: 'block',
              legend: 'block',
              listing: 'block',
              main: 'block',
              p: 'block',
              plaintext: 'block',
              pre: 'block',
              xmp: 'block',
              slot: 'contents',
              ruby: 'ruby',
              rt: 'ruby-text',
              article: 'block',
              aside: 'block',
              h1: 'block',
              h2: 'block',
              h3: 'block',
              h4: 'block',
              h5: 'block',
              h6: 'block',
              hgroup: 'block',
              nav: 'block',
              section: 'block',
              dir: 'block',
              dd: 'block',
              dl: 'block',
              dt: 'block',
              ol: 'block',
              ul: 'block',
              li: 'list-item',
              table: 'table',
              caption: 'table-caption',
              colgroup: 'table-column-group',
              col: 'table-column',
              thead: 'table-header-group',
              tbody: 'table-row-group',
              tfoot: 'table-footer-group',
              tr: 'table-row',
              td: 'table-cell',
              th: 'table-cell',
              fieldset: 'block',
              button: 'inline-block',
              details: 'block',
              summary: 'block',
              dialog: 'block',
              meter: 'inline-block',
              progress: 'inline-block',
              object: 'inline-block',
              video: 'inline-block',
              audio: 'inline-block',
              select: 'inline-block',
              option: 'block',
              optgroup: 'block',
            },
            tB = 'inline',
            nB = {
              listing: 'pre',
              plaintext: 'pre',
              pre: 'pre',
              xmp: 'pre',
              nobr: 'nowrap',
              table: 'initial',
              textarea: 'pre-wrap',
            },
            rB = 'normal',
            uB =
              (oB([
                'a',
                'abbr',
                'acronym',
                'address',
                'applet',
                'area',
                'article',
                'aside',
                'audio',
                'b',
                'base',
                'basefont',
                'bdi',
                'bdo',
                'bgsound',
                'big',
                'blink',
                'blockquote',
                'body',
                'br',
                'button',
                'canvas',
                'caption',
                'center',
                'cite',
                'code',
                'col',
                'colgroup',
                'command',
                'content',
                'data',
                'datalist',
                'dd',
                'del',
                'details',
                'dfn',
                'dialog',
                'dir',
                'div',
                'dl',
                'dt',
                'element',
                'em',
                'embed',
                'fieldset',
                'figcaption',
                'figure',
                'font',
                'footer',
                'form',
                'frame',
                'frameset',
                'h1',
                'h2',
                'h3',
                'h4',
                'h5',
                'h6',
                'head',
                'header',
                'hgroup',
                'hr',
                'html',
                'i',
                'iframe',
                'image',
                'img',
                'input',
                'ins',
                'isindex',
                'kbd',
                'keygen',
                'label',
                'legend',
                'li',
                'link',
                'listing',
                'main',
                'map',
                'mark',
                'marquee',
                'math',
                'menu',
                'menuitem',
                'meta',
                'meter',
                'multicol',
                'nav',
                'nextid',
                'nobr',
                'noembed',
                'noframes',
                'noscript',
                'object',
                'ol',
                'optgroup',
                'option',
                'output',
                'p',
                'param',
                'picture',
                'plaintext',
                'pre',
                'progress',
                'q',
                'rb',
                'rbc',
                'rp',
                'rt',
                'rtc',
                'ruby',
                's',
                'samp',
                'script',
                'section',
                'select',
                'shadow',
                'slot',
                'small',
                'source',
                'spacer',
                'span',
                'strike',
                'strong',
                'style',
                'sub',
                'summary',
                'sup',
                'svg',
                'table',
                'tbody',
                'td',
                'template',
                'textarea',
                'tfoot',
                'th',
                'thead',
                'time',
                'title',
                'tr',
                'track',
                'tt',
                'u',
                'ul',
                'var',
                'video',
                'wbr',
                'xmp',
              ]),
              (function (e, t) {
                for (
                  var n = Object.create(null), r = 0, u = Object.keys(e);
                  r < u.length;
                  r++
                ) {
                  var a = u[r];
                  n[a] = t(e[a], a);
                }
              })(
                {
                  '*': [
                    'accesskey',
                    'autocapitalize',
                    'autofocus',
                    'class',
                    'contenteditable',
                    'dir',
                    'draggable',
                    'enterkeyhint',
                    'hidden',
                    'id',
                    'inputmode',
                    'is',
                    'itemid',
                    'itemprop',
                    'itemref',
                    'itemscope',
                    'itemtype',
                    'lang',
                    'nonce',
                    'slot',
                    'spellcheck',
                    'style',
                    'tabindex',
                    'title',
                    'translate',
                  ],
                  a: [
                    'accesskey',
                    'charset',
                    'coords',
                    'download',
                    'href',
                    'hreflang',
                    'name',
                    'ping',
                    'referrerpolicy',
                    'rel',
                    'rev',
                    'shape',
                    'tabindex',
                    'target',
                    'type',
                  ],
                  abbr: ['title'],
                  applet: [
                    'align',
                    'alt',
                    'archive',
                    'code',
                    'codebase',
                    'height',
                    'hspace',
                    'name',
                    'object',
                    'vspace',
                    'width',
                  ],
                  area: [
                    'accesskey',
                    'alt',
                    'coords',
                    'download',
                    'href',
                    'hreflang',
                    'nohref',
                    'ping',
                    'referrerpolicy',
                    'rel',
                    'shape',
                    'tabindex',
                    'target',
                    'type',
                  ],
                  audio: [
                    'autoplay',
                    'controls',
                    'crossorigin',
                    'loop',
                    'muted',
                    'preload',
                    'src',
                  ],
                  base: ['href', 'target'],
                  basefont: ['color', 'face', 'size'],
                  bdo: ['dir'],
                  blockquote: ['cite'],
                  body: [
                    'alink',
                    'background',
                    'bgcolor',
                    'link',
                    'text',
                    'vlink',
                  ],
                  br: ['clear'],
                  button: [
                    'accesskey',
                    'autofocus',
                    'disabled',
                    'form',
                    'formaction',
                    'formenctype',
                    'formmethod',
                    'formnovalidate',
                    'formtarget',
                    'name',
                    'tabindex',
                    'type',
                    'value',
                  ],
                  canvas: ['height', 'width'],
                  caption: ['align'],
                  col: ['align', 'char', 'charoff', 'span', 'valign', 'width'],
                  colgroup: [
                    'align',
                    'char',
                    'charoff',
                    'span',
                    'valign',
                    'width',
                  ],
                  data: ['value'],
                  del: ['cite', 'datetime'],
                  details: ['open'],
                  dfn: ['title'],
                  dialog: ['open'],
                  dir: ['compact'],
                  div: ['align'],
                  dl: ['compact'],
                  embed: ['height', 'src', 'type', 'width'],
                  fieldset: ['disabled', 'form', 'name'],
                  font: ['color', 'face', 'size'],
                  form: [
                    'accept',
                    'accept-charset',
                    'action',
                    'autocomplete',
                    'enctype',
                    'method',
                    'name',
                    'novalidate',
                    'target',
                  ],
                  frame: [
                    'frameborder',
                    'longdesc',
                    'marginheight',
                    'marginwidth',
                    'name',
                    'noresize',
                    'scrolling',
                    'src',
                  ],
                  frameset: ['cols', 'rows'],
                  h1: ['align'],
                  h2: ['align'],
                  h3: ['align'],
                  h4: ['align'],
                  h5: ['align'],
                  h6: ['align'],
                  head: ['profile'],
                  hr: ['align', 'noshade', 'size', 'width'],
                  html: ['manifest', 'version'],
                  iframe: [
                    'align',
                    'allow',
                    'allowfullscreen',
                    'allowpaymentrequest',
                    'allowusermedia',
                    'frameborder',
                    'height',
                    'loading',
                    'longdesc',
                    'marginheight',
                    'marginwidth',
                    'name',
                    'referrerpolicy',
                    'sandbox',
                    'scrolling',
                    'src',
                    'srcdoc',
                    'width',
                  ],
                  img: [
                    'align',
                    'alt',
                    'border',
                    'crossorigin',
                    'decoding',
                    'height',
                    'hspace',
                    'ismap',
                    'loading',
                    'longdesc',
                    'name',
                    'referrerpolicy',
                    'sizes',
                    'src',
                    'srcset',
                    'usemap',
                    'vspace',
                    'width',
                  ],
                  input: [
                    'accept',
                    'accesskey',
                    'align',
                    'alt',
                    'autocomplete',
                    'autofocus',
                    'checked',
                    'dirname',
                    'disabled',
                    'form',
                    'formaction',
                    'formenctype',
                    'formmethod',
                    'formnovalidate',
                    'formtarget',
                    'height',
                    'ismap',
                    'list',
                    'max',
                    'maxlength',
                    'min',
                    'minlength',
                    'multiple',
                    'name',
                    'pattern',
                    'placeholder',
                    'readonly',
                    'required',
                    'size',
                    'src',
                    'step',
                    'tabindex',
                    'title',
                    'type',
                    'usemap',
                    'value',
                    'width',
                  ],
                  ins: ['cite', 'datetime'],
                  isindex: ['prompt'],
                  label: ['accesskey', 'for', 'form'],
                  legend: ['accesskey', 'align'],
                  li: ['type', 'value'],
                  link: [
                    'as',
                    'charset',
                    'color',
                    'crossorigin',
                    'disabled',
                    'href',
                    'hreflang',
                    'imagesizes',
                    'imagesrcset',
                    'integrity',
                    'media',
                    'nonce',
                    'referrerpolicy',
                    'rel',
                    'rev',
                    'sizes',
                    'target',
                    'title',
                    'type',
                  ],
                  map: ['name'],
                  menu: ['compact'],
                  meta: ['charset', 'content', 'http-equiv', 'name', 'scheme'],
                  meter: ['high', 'low', 'max', 'min', 'optimum', 'value'],
                  object: [
                    'align',
                    'archive',
                    'border',
                    'classid',
                    'codebase',
                    'codetype',
                    'data',
                    'declare',
                    'form',
                    'height',
                    'hspace',
                    'name',
                    'standby',
                    'tabindex',
                    'type',
                    'typemustmatch',
                    'usemap',
                    'vspace',
                    'width',
                  ],
                  ol: ['compact', 'reversed', 'start', 'type'],
                  optgroup: ['disabled', 'label'],
                  option: ['disabled', 'label', 'selected', 'value'],
                  output: ['for', 'form', 'name'],
                  p: ['align'],
                  param: ['name', 'type', 'value', 'valuetype'],
                  pre: ['width'],
                  progress: ['max', 'value'],
                  q: ['cite'],
                  script: [
                    'async',
                    'charset',
                    'crossorigin',
                    'defer',
                    'integrity',
                    'language',
                    'nomodule',
                    'nonce',
                    'referrerpolicy',
                    'src',
                    'type',
                  ],
                  select: [
                    'autocomplete',
                    'autofocus',
                    'disabled',
                    'form',
                    'multiple',
                    'name',
                    'required',
                    'size',
                    'tabindex',
                  ],
                  slot: ['name'],
                  source: ['media', 'sizes', 'src', 'srcset', 'type'],
                  style: ['media', 'nonce', 'title', 'type'],
                  table: [
                    'align',
                    'bgcolor',
                    'border',
                    'cellpadding',
                    'cellspacing',
                    'frame',
                    'rules',
                    'summary',
                    'width',
                  ],
                  tbody: ['align', 'char', 'charoff', 'valign'],
                  td: [
                    'abbr',
                    'align',
                    'axis',
                    'bgcolor',
                    'char',
                    'charoff',
                    'colspan',
                    'headers',
                    'height',
                    'nowrap',
                    'rowspan',
                    'scope',
                    'valign',
                    'width',
                  ],
                  textarea: [
                    'accesskey',
                    'autocomplete',
                    'autofocus',
                    'cols',
                    'dirname',
                    'disabled',
                    'form',
                    'maxlength',
                    'minlength',
                    'name',
                    'placeholder',
                    'readonly',
                    'required',
                    'rows',
                    'tabindex',
                    'wrap',
                  ],
                  tfoot: ['align', 'char', 'charoff', 'valign'],
                  th: [
                    'abbr',
                    'align',
                    'axis',
                    'bgcolor',
                    'char',
                    'charoff',
                    'colspan',
                    'headers',
                    'height',
                    'nowrap',
                    'rowspan',
                    'scope',
                    'valign',
                    'width',
                  ],
                  thead: ['align', 'char', 'charoff', 'valign'],
                  time: ['datetime'],
                  tr: ['align', 'bgcolor', 'char', 'charoff', 'valign'],
                  track: ['default', 'kind', 'label', 'src', 'srclang'],
                  ul: ['compact', 'type'],
                  video: [
                    'autoplay',
                    'controls',
                    'crossorigin',
                    'height',
                    'loop',
                    'muted',
                    'playsinline',
                    'poster',
                    'preload',
                    'src',
                    'width',
                  ],
                },
                oB
              ),
              new Set(['\t', '\n', '\f', '\r', ' '])),
            aB = function (e) {
              return e.replace(/[\t\n\f\r ]+$/, '');
            },
            iB = function (e) {
              return e.match(/^[\t\n\f\r ]*/)[0];
            };
          function oB(e) {
            var t,
              n = Object.create(null),
              r = g(e);
            try {
              for (r.s(); !(t = r.n()).done; ) {
                n[t.value] = !0;
              }
            } catch (u) {
              r.e(u);
            } finally {
              r.f();
            }
            return n;
          }
          function sB(e, t) {
            return (
              !(
                'ieConditionalComment' !== e.type ||
                !e.lastChild ||
                e.lastChild.isSelfClosing ||
                e.lastChild.endSourceSpan
              ) ||
              ('ieConditionalComment' === e.type && !e.complete) ||
              !(
                !EB(e) ||
                !e.children.some(function (e) {
                  return 'text' !== e.type && 'interpolation' !== e.type;
                })
              ) ||
              !(!SB(e, t) || cB(e) || 'interpolation' === e.type)
            );
          }
          function lB(e) {
            return (
              'attribute' !== e.type &&
              !!e.parent &&
              'number' == typeof e.index &&
              0 !== e.index &&
              (function (e) {
                return (
                  'comment' === e.type && 'prettier-ignore' === e.value.trim()
                );
              })(e.parent.children[e.index - 1])
            );
          }
          function cB(e) {
            return (
              'element' === e.type &&
              ('script' === e.fullName ||
                'style' === e.fullName ||
                'svg:style' === e.fullName ||
                (CB(e) && ('script' === e.name || 'style' === e.name)))
            );
          }
          function pB(e) {
            return bB(e).startsWith('pre');
          }
          function fB(e) {
            return (
              'element' === e.type &&
              0 !== e.children.length &&
              (['html', 'head', 'ul', 'ol', 'select'].includes(e.name) ||
                (e.cssDisplay.startsWith('table') &&
                  'table-cell' !== e.cssDisplay))
            );
          }
          function dB(e) {
            return (
              yB(e) || ('element' === e.type && 'br' === e.fullName) || hB(e)
            );
          }
          function hB(e) {
            return gB(e) && mB(e);
          }
          function gB(e) {
            return (
              e.hasLeadingSpaces &&
              (e.prev
                ? e.prev.sourceSpan.end.line < e.sourceSpan.start.line
                : 'root' === e.parent.type ||
                  e.parent.startSourceSpan.end.line < e.sourceSpan.start.line)
            );
          }
          function mB(e) {
            return (
              e.hasTrailingSpaces &&
              (e.next
                ? e.next.sourceSpan.start.line > e.sourceSpan.end.line
                : 'root' === e.parent.type ||
                  (e.parent.endSourceSpan &&
                    e.parent.endSourceSpan.start.line > e.sourceSpan.end.line))
            );
          }
          function yB(e) {
            switch (e.type) {
              case 'ieConditionalComment':
              case 'comment':
              case 'directive':
                return !0;
              case 'element':
                return ['script', 'select'].includes(e.name);
            }
            return !1;
          }
          function DB(e) {
            var t = e.attrMap,
              n = t.type,
              r = t.lang;
            return 'module' === n ||
              'text/javascript' === n ||
              'text/babel' === n ||
              'application/javascript' === n ||
              'jsx' === r
              ? 'babel'
              : 'application/x-typescript' === n || 'ts' === r || 'tsx' === r
              ? 'typescript'
              : 'text/markdown' === n
              ? 'markdown'
              : 'text/html' === n
              ? 'html'
              : n && (n.endsWith('json') || n.endsWith('importmap'))
              ? 'json'
              : 'text/x-handlebars-template' === n
              ? 'glimmer'
              : void 0;
          }
          function vB(e) {
            return 'block' === e || 'list-item' === e || e.startsWith('table');
          }
          function EB(e) {
            return bB(e).startsWith('pre');
          }
          function CB(e) {
            return (
              'element' === e.type &&
              !e.hasExplicitNamespace &&
              !['html', 'svg'].includes(e.namespace)
            );
          }
          function bB(e) {
            return (
              ('element' === e.type && (!e.namespace || CB(e)) && nB[e.name]) ||
              rB
            );
          }
          var AB = new Set(['template', 'style', 'script']);
          function FB(e, t) {
            return xB(e, t) && !AB.has(e.fullName);
          }
          function xB(e, t) {
            return (
              'vue' === t.parser &&
              'element' === e.type &&
              'root' === e.parent.type &&
              'html' !== e.fullName.toLowerCase()
            );
          }
          function SB(e, t) {
            return (
              xB(e, t) &&
              (FB(e, t) || (e.attrMap.lang && 'html' !== e.attrMap.lang))
            );
          }
          var wB = function (e) {
              return (function (e) {
                return e.replace(/^[\t\n\f\r ]+/, '');
              })(aB(e));
            },
            BB = function (e) {
              return (function (e) {
                return e.replace(/^[\t\f\r ]*?\n/g, '');
              })(aB(e));
            },
            TB = function (e) {
              return e.split(/[\t\n\f\r ]+/);
            },
            kB = function (e) {
              return /[\t\n\f\r ]/.test(e);
            },
            NB = function (e) {
              var t = C(e.match(/^([\t\n\f\r ]*)([\S\s]*?)([\t\n\f\r ]*)$/), 4),
                n = t[1],
                r = t[2];
              return {
                leadingWhitespace: n,
                trailingWhitespace: t[3],
                text: r,
              };
            },
            OB = function (e) {
              return e.children && !cB(e);
            },
            PB = function (e, t) {
              for (var n = 0, r = 0; r < e.length; r++) e[r] === t && n++;
              return n;
            },
            MB = function (e, t) {
              for (var n = 0, r = e.stack.length - 1; r >= 0; r--) {
                var u = e.stack[r];
                u && 'object' == k(u) && !Array.isArray(u) && t(u) && n++;
              }
              return n;
            },
            IB = function (e) {
              var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : (function (e) {
                      var t,
                        n = 1 / 0,
                        r = g(e.split('\n'));
                      try {
                        for (r.s(); !(t = r.n()).done; ) {
                          var u = t.value;
                          if (0 !== u.length) {
                            if (!uB.has(u[0])) return 0;
                            var a = iB(u).length;
                            u.length !== a && a < n && (n = a);
                          }
                        }
                      } catch (i) {
                        r.e(i);
                      } finally {
                        r.f();
                      }
                      return n === 1 / 0 ? 0 : n;
                    })(e);
              return 0 === t
                ? e
                : e
                    .split('\n')
                    .map(function (e) {
                      return e.slice(t);
                    })
                    .join('\n');
            },
            jB = fB,
            LB = function (e) {
              return (
                fB(e) ||
                ('element' === e.type &&
                  0 !== e.children.length &&
                  (['body', 'script', 'style'].includes(e.name) ||
                    e.children.some(function (e) {
                      return (function (e) {
                        return (
                          e.children &&
                          e.children.some(function (e) {
                            return 'text' !== e.type;
                          })
                        );
                      })(e);
                    }))) ||
                (e.firstChild &&
                  e.firstChild === e.lastChild &&
                  'text' !== e.firstChild.type &&
                  gB(e.firstChild) &&
                  (!e.lastChild.isTrailingSpaceSensitive || mB(e.lastChild)))
              );
            },
            _B = function (e) {
              return (
                Zw(e) ||
                (e.next &&
                  e.sourceSpan.end &&
                  e.sourceSpan.end.line + 1 < e.next.sourceSpan.start.line)
              );
            },
            RB = function e(t) {
              return t.lastChild ? e(t.lastChild) : t;
            },
            $B = function (e, t) {
              if (e.prev && 'comment' === e.prev.type) {
                var n = e.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/);
                if (n) return n[1];
              }
              var r = !1;
              if ('element' === e.type && 'svg' === e.namespace) {
                if (
                  !(function (e, t) {
                    for (var n = e; n; ) {
                      if (t(n)) return !0;
                      n = n.parent;
                    }
                    return !1;
                  })(e, function (e) {
                    return 'svg:foreignObject' === e.fullName;
                  })
                )
                  return 'svg' === e.name ? 'inline-block' : 'block';
                r = !0;
              }
              switch (t.htmlWhitespaceSensitivity) {
                case 'strict':
                  return 'inline';
                case 'ignore':
                  return 'block';
                default:
                  return 'vue' === t.parser &&
                    e.parent &&
                    'root' === e.parent.type
                    ? 'block'
                    : ('element' === e.type &&
                        (!e.namespace || r || CB(e)) &&
                        eB[e.name]) ||
                        tB;
              }
            },
            VB = function (e) {
              var t = e
                .trim()
                .match(/^prettier-ignore-attribute(?:\s+([^]+))?$/);
              return !!t && (!t[1] || t[1].split(/\s+/));
            },
            qB = lB,
            WB = function (e, t) {
              return 'script' !== e.name || e.attrMap.src
                ? 'style' === e.name
                  ? (function (e) {
                      var t = e.attrMap.lang;
                      return t && 'postcss' !== t && 'css' !== t
                        ? 'scss' === t
                          ? 'scss'
                          : 'less' === t
                          ? 'less'
                          : void 0
                        : 'css';
                    })(e)
                  : t && SB(e, t)
                  ? DB(e) || (!('src' in e.attrMap) && Qw(e.attrMap.lang, t))
                  : void 0
                : e.attrMap.lang || e.attrMap.type
                ? DB(e)
                : 'babel';
            },
            UB = FB,
            JB = SB,
            zB = function (e) {
              var t = e.fullName;
              return (
                '#' === t.charAt(0) ||
                'slot-scope' === t ||
                'v-slot' === t ||
                t.startsWith('v-slot:')
              );
            },
            GB = function (e, t) {
              var n = e.parent;
              if (!xB(n, t)) return !1;
              var r = n.fullName,
                u = e.fullName;
              return (
                ('script' === r && 'setup' === u) ||
                ('style' === r && 'vars' === u)
              );
            },
            HB = function (e) {
              return !(vB((t = e.cssDisplay)) || 'inline-block' === t || cB(e));
              var t;
            },
            XB = pB,
            YB = function (e, t) {
              var n = (function () {
                return (
                  !Zw(e) &&
                  (!(
                    ('text' !== e.type && 'interpolation' !== e.type) ||
                    !e.prev ||
                    ('text' !== e.prev.type && 'interpolation' !== e.prev.type)
                  ) ||
                    (!(!e.parent || 'none' === e.parent.cssDisplay) &&
                      (!!EB(e.parent) ||
                        (!(
                          !e.prev &&
                          ('root' === e.parent.type ||
                            (EB(e) && e.parent) ||
                            cB(e.parent) ||
                            FB(e.parent, t) ||
                            ((n = e.parent.cssDisplay),
                            vB(n) || 'inline-block' === n))
                        ) &&
                          !(
                            e.prev &&
                            !(function (e) {
                              return !vB(e);
                            })(e.prev.cssDisplay)
                          )))))
                );
                var n;
              })();
              return n &&
                !e.prev &&
                e.parent &&
                e.parent.tagDefinition &&
                e.parent.tagDefinition.ignoreFirstLf
                ? 'interpolation' === e.type
                : n;
            },
            KB = EB,
            QB = cB,
            ZB = function (e) {
              return 'text' === e.type || 'comment' === e.type;
            },
            eT = function (e, t) {
              return !(
                Zw(e) ||
                ((('text' !== e.type && 'interpolation' !== e.type) ||
                  !e.next ||
                  ('text' !== e.next.type &&
                    'interpolation' !== e.next.type)) &&
                  (!e.parent ||
                    'none' === e.parent.cssDisplay ||
                    (!EB(e.parent) &&
                      ((!e.next &&
                        ('root' === e.parent.type ||
                          (EB(e) && e.parent) ||
                          cB(e.parent) ||
                          FB(e.parent, t) ||
                          ((n = e.parent.cssDisplay),
                          vB(n) || 'inline-block' === n))) ||
                        (e.next &&
                          !(function (e) {
                            return !vB(e);
                          })(e.next.cssDisplay))))))
              );
              var n;
            },
            tT = function (e) {
              return cB(e) || 'interpolation' === e.type || pB(e);
            },
            nT = function (e) {
              return yB(e) || (e.prev && dB(e.prev)) || hB(e);
            },
            rT = function (e, t) {
              return (
                !e.isSelfClosing &&
                !e.endSourceSpan &&
                (lB(e) || sB(e.parent, t))
              );
            },
            uT = sB,
            aT = function (e) {
              return e.replace(/&apos;/g, "'").replace(/&quot;/g, '"');
            },
            iT = Xe(function (e, t) {
              function n(e) {
                return t.$0 <= e && e <= t.$9;
              }
              Object.defineProperty(t, '__esModule', { value: !0 }),
                (t.$EOF = 0),
                (t.$BSPACE = 8),
                (t.$TAB = 9),
                (t.$LF = 10),
                (t.$VTAB = 11),
                (t.$FF = 12),
                (t.$CR = 13),
                (t.$SPACE = 32),
                (t.$BANG = 33),
                (t.$DQ = 34),
                (t.$HASH = 35),
                (t.$$ = 36),
                (t.$PERCENT = 37),
                (t.$AMPERSAND = 38),
                (t.$SQ = 39),
                (t.$LPAREN = 40),
                (t.$RPAREN = 41),
                (t.$STAR = 42),
                (t.$PLUS = 43),
                (t.$COMMA = 44),
                (t.$MINUS = 45),
                (t.$PERIOD = 46),
                (t.$SLASH = 47),
                (t.$COLON = 58),
                (t.$SEMICOLON = 59),
                (t.$LT = 60),
                (t.$EQ = 61),
                (t.$GT = 62),
                (t.$QUESTION = 63),
                (t.$0 = 48),
                (t.$7 = 55),
                (t.$9 = 57),
                (t.$A = 65),
                (t.$E = 69),
                (t.$F = 70),
                (t.$X = 88),
                (t.$Z = 90),
                (t.$LBRACKET = 91),
                (t.$BACKSLASH = 92),
                (t.$RBRACKET = 93),
                (t.$CARET = 94),
                (t.$_ = 95),
                (t.$a = 97),
                (t.$b = 98),
                (t.$e = 101),
                (t.$f = 102),
                (t.$n = 110),
                (t.$r = 114),
                (t.$t = 116),
                (t.$u = 117),
                (t.$v = 118),
                (t.$x = 120),
                (t.$z = 122),
                (t.$LBRACE = 123),
                (t.$BAR = 124),
                (t.$RBRACE = 125),
                (t.$NBSP = 160),
                (t.$PIPE = 124),
                (t.$TILDA = 126),
                (t.$AT = 64),
                (t.$BT = 96),
                (t.isWhitespace = function (e) {
                  return (e >= t.$TAB && e <= t.$SPACE) || e == t.$NBSP;
                }),
                (t.isDigit = n),
                (t.isAsciiLetter = function (e) {
                  return (e >= t.$a && e <= t.$z) || (e >= t.$A && e <= t.$Z);
                }),
                (t.isAsciiHexDigit = function (e) {
                  return (
                    (e >= t.$a && e <= t.$f) || (e >= t.$A && e <= t.$F) || n(e)
                  );
                }),
                (t.isNewLine = function (e) {
                  return e === t.$LF || e === t.$CR;
                }),
                (t.isOctalDigit = function (e) {
                  return t.$0 <= e && e <= t.$7;
                });
            }),
            oT = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = (function () {
                function e(t, n, r) {
                  w(this, e),
                    (this.filePath = t),
                    (this.name = n),
                    (this.members = r);
                }
                return (
                  T(e, [
                    {
                      key: 'assertNoMembers',
                      value: function () {
                        if (this.members.length)
                          throw new Error(
                            'Illegal state: symbol without members expected, but got '.concat(
                              JSON.stringify(this),
                              '.'
                            )
                          );
                      },
                    },
                  ]),
                  e
                );
              })();
              (t.StaticSymbol = n),
                (t.StaticSymbolCache = (function () {
                  function e() {
                    w(this, e), (this.cache = new Map());
                  }
                  return (
                    T(e, [
                      {
                        key: 'get',
                        value: function (e, t, r) {
                          var u = (r = r || []).length
                              ? '.'.concat(r.join('.'))
                              : '',
                            a = '"'.concat(e, '".').concat(t).concat(u),
                            i = this.cache.get(a);
                          return (
                            i || ((i = new n(e, t, r)), this.cache.set(a, i)), i
                          );
                        },
                      },
                    ]),
                    e
                  );
                })());
            }),
            sT = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = /-+([a-z0-9])/g;
              function r(e, t, n) {
                var r = e.indexOf(t);
                return -1 == r
                  ? n
                  : [e.slice(0, r).trim(), e.slice(r + 1).trim()];
              }
              function u(e, t, n) {
                return Array.isArray(e)
                  ? t.visitArray(e, n)
                  : 'object' == k((r = e)) &&
                    null !== r &&
                    Object.getPrototypeOf(r) === o
                  ? t.visitStringMap(e, n)
                  : null == e ||
                    'string' == typeof e ||
                    'number' == typeof e ||
                    'boolean' == typeof e
                  ? t.visitPrimitive(e, n)
                  : t.visitOther(e, n);
                var r;
              }
              (t.dashCaseToCamelCase = function (e) {
                return e.replace(n, function () {
                  for (
                    var e = arguments.length, t = new Array(e), n = 0;
                    n < e;
                    n++
                  )
                    t[n] = arguments[n];
                  return t[1].toUpperCase();
                });
              }),
                (t.splitAtColon = function (e, t) {
                  return r(e, ':', t);
                }),
                (t.splitAtPeriod = function (e, t) {
                  return r(e, '.', t);
                }),
                (t.visitValue = u),
                (t.isDefined = function (e) {
                  return null != e;
                }),
                (t.noUndefined = function (e) {
                  return void 0 === e ? null : e;
                }),
                (t.ValueTransformer = (function () {
                  function e() {
                    w(this, e);
                  }
                  return (
                    T(e, [
                      {
                        key: 'visitArray',
                        value: function (e, t) {
                          var n = this;
                          return e.map(function (e) {
                            return u(e, n, t);
                          });
                        },
                      },
                      {
                        key: 'visitStringMap',
                        value: function (e, t) {
                          var n = this,
                            r = {};
                          return (
                            Object.keys(e).forEach(function (a) {
                              r[a] = u(e[a], n, t);
                            }),
                            r
                          );
                        },
                      },
                      {
                        key: 'visitPrimitive',
                        value: function (e, t) {
                          return e;
                        },
                      },
                      {
                        key: 'visitOther',
                        value: function (e, t) {
                          return e;
                        },
                      },
                    ]),
                    e
                  );
                })()),
                (t.SyncAsync = {
                  assertSync: function (e) {
                    if (s(e))
                      throw new Error(
                        'Illegal state: value cannot be a promise'
                      );
                    return e;
                  },
                  then: function (e, t) {
                    return s(e) ? e.then(t) : t(e);
                  },
                  all: function (e) {
                    return e.some(s) ? Promise.all(e) : e;
                  },
                }),
                (t.error = function (e) {
                  throw new Error('Internal Error: '.concat(e));
                }),
                (t.syntaxError = function (e, t) {
                  var n = Error(e);
                  return (n[a] = !0), t && (n[i] = t), n;
                });
              var a = 'ngSyntaxError',
                i = 'ngParseErrors';
              (t.isSyntaxError = function (e) {
                return e[a];
              }),
                (t.getParseErrors = function (e) {
                  return e[i] || [];
                }),
                (t.escapeRegExp = function (e) {
                  return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
                });
              var o = Object.getPrototypeOf({});
              function s(e) {
                return !!e && 'function' == typeof e.then;
              }
              (t.utf8Encode = function (e) {
                for (var t = '', n = 0; n < e.length; n++) {
                  var r = e.charCodeAt(n);
                  if (r >= 55296 && r <= 56319 && e.length > n + 1) {
                    var u = e.charCodeAt(n + 1);
                    u >= 56320 &&
                      u <= 57343 &&
                      (n++, (r = ((r - 55296) << 10) + u - 56320 + 65536));
                  }
                  r <= 127
                    ? (t += String.fromCharCode(r))
                    : r <= 2047
                    ? (t += String.fromCharCode(
                        ((r >> 6) & 31) | 192,
                        (63 & r) | 128
                      ))
                    : r <= 65535
                    ? (t += String.fromCharCode(
                        (r >> 12) | 224,
                        ((r >> 6) & 63) | 128,
                        (63 & r) | 128
                      ))
                    : r <= 2097151 &&
                      (t += String.fromCharCode(
                        ((r >> 18) & 7) | 240,
                        ((r >> 12) & 63) | 128,
                        ((r >> 6) & 63) | 128,
                        (63 & r) | 128
                      ));
                }
                return t;
              }),
                (t.stringify = function e(t) {
                  if ('string' == typeof t) return t;
                  if (t instanceof Array)
                    return '[' + t.map(e).join(', ') + ']';
                  if (null == t) return '' + t;
                  if (t.overriddenName) return ''.concat(t.overriddenName);
                  if (t.name) return ''.concat(t.name);
                  if (!t.toString) return 'object';
                  var n = t.toString();
                  if (null == n) return '' + n;
                  var r = n.indexOf('\n');
                  return -1 === r ? n : n.substring(0, r);
                }),
                (t.resolveForwardRef = function (e) {
                  return 'function' == typeof e &&
                    e.hasOwnProperty('__forward_ref__')
                    ? e()
                    : e;
                }),
                (t.isPromise = s),
                (t.Version = (function () {
                  return function e(t) {
                    w(this, e), (this.full = t);
                    var n = t.split('.');
                    (this.major = n[0]),
                      (this.minor = n[1]),
                      (this.patch = n.slice(2).join('.'));
                  };
                })());
              var l = 'undefined' != typeof window && window,
                c =
                  'undefined' != typeof self &&
                  'undefined' != typeof WorkerGlobalScope &&
                  self instanceof WorkerGlobalScope &&
                  self,
                p = (void 0 !== He && He) || l || c;
              t.global = p;
            }),
            lT = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = /^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;
              function r(e) {
                return e.replace(/\W/g, '_');
              }
              t.sanitizeIdentifier = r;
              var u,
                a = 0;
              function i(e) {
                if (!e || !e.reference) return null;
                var t = e.reference;
                if (t instanceof oT.StaticSymbol) return t.name;
                if (t.__anonymousType) return t.__anonymousType;
                var n = sT.stringify(t);
                return (
                  n.indexOf('(') >= 0
                    ? ((n = 'anonymous_'.concat(a++)), (t.__anonymousType = n))
                    : (n = r(n)),
                  n
                );
              }
              (t.identifierName = i),
                (t.identifierModuleUrl = function (e) {
                  var t = e.reference;
                  return t instanceof oT.StaticSymbol
                    ? t.filePath
                    : './'.concat(sT.stringify(t));
                }),
                (t.viewClassName = function (e, t) {
                  return 'View_'.concat(i({ reference: e }), '_').concat(t);
                }),
                (t.rendererTypeName = function (e) {
                  return 'RenderType_'.concat(i({ reference: e }));
                }),
                (t.hostViewClassName = function (e) {
                  return 'HostView_'.concat(i({ reference: e }));
                }),
                (t.componentFactoryName = function (e) {
                  return ''.concat(i({ reference: e }), 'NgFactory');
                }),
                (function (e) {
                  (e[(e.Pipe = 0)] = 'Pipe'),
                    (e[(e.Directive = 1)] = 'Directive'),
                    (e[(e.NgModule = 2)] = 'NgModule'),
                    (e[(e.Injectable = 3)] = 'Injectable');
                })((u = t.CompileSummaryKind || (t.CompileSummaryKind = {}))),
                (t.tokenName = function (e) {
                  return null != e.value ? r(e.value) : i(e.identifier);
                }),
                (t.tokenReference = function (e) {
                  return null != e.identifier
                    ? e.identifier.reference
                    : e.value;
                }),
                (t.CompileStylesheetMetadata = (function () {
                  return function e() {
                    var t =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      n = t.moduleUrl,
                      r = t.styles,
                      u = t.styleUrls;
                    w(this, e),
                      (this.moduleUrl = n || null),
                      (this.styles = s(r)),
                      (this.styleUrls = s(u));
                  };
                })()),
                (t.CompileTemplateMetadata = (function () {
                  function e(t) {
                    var n = t.encapsulation,
                      r = t.template,
                      u = t.templateUrl,
                      a = t.htmlAst,
                      i = t.styles,
                      o = t.styleUrls,
                      c = t.externalStylesheets,
                      p = t.animations,
                      f = t.ngContentSelectors,
                      d = t.interpolation,
                      h = t.isInline,
                      g = t.preserveWhitespaces;
                    if (
                      (w(this, e),
                      (this.encapsulation = n),
                      (this.template = r),
                      (this.templateUrl = u),
                      (this.htmlAst = a),
                      (this.styles = s(i)),
                      (this.styleUrls = s(o)),
                      (this.externalStylesheets = s(c)),
                      (this.animations = p ? l(p) : []),
                      (this.ngContentSelectors = f || []),
                      d && 2 != d.length)
                    )
                      throw new Error(
                        "'interpolation' should have a start and an end symbol."
                      );
                    (this.interpolation = d),
                      (this.isInline = h),
                      (this.preserveWhitespaces = g);
                  }
                  return (
                    T(e, [
                      {
                        key: 'toSummary',
                        value: function () {
                          return {
                            ngContentSelectors: this.ngContentSelectors,
                            encapsulation: this.encapsulation,
                            styles: this.styles,
                            animations: this.animations,
                          };
                        },
                      },
                    ]),
                    e
                  );
                })());
              var o = (function () {
                function e(t) {
                  var n = t.isHost,
                    r = t.type,
                    u = t.isComponent,
                    a = t.selector,
                    i = t.exportAs,
                    o = t.changeDetection,
                    l = t.inputs,
                    c = t.outputs,
                    p = t.hostListeners,
                    f = t.hostProperties,
                    d = t.hostAttributes,
                    h = t.providers,
                    g = t.viewProviders,
                    m = t.queries,
                    y = t.guards,
                    D = t.viewQueries,
                    v = t.entryComponents,
                    E = t.template,
                    C = t.componentViewType,
                    b = t.rendererType,
                    A = t.componentFactory;
                  w(this, e),
                    (this.isHost = !!n),
                    (this.type = r),
                    (this.isComponent = u),
                    (this.selector = a),
                    (this.exportAs = i),
                    (this.changeDetection = o),
                    (this.inputs = l),
                    (this.outputs = c),
                    (this.hostListeners = p),
                    (this.hostProperties = f),
                    (this.hostAttributes = d),
                    (this.providers = s(h)),
                    (this.viewProviders = s(g)),
                    (this.queries = s(m)),
                    (this.guards = y),
                    (this.viewQueries = s(D)),
                    (this.entryComponents = s(v)),
                    (this.template = E),
                    (this.componentViewType = C),
                    (this.rendererType = b),
                    (this.componentFactory = A);
                }
                return (
                  T(e, null, [
                    {
                      key: 'create',
                      value: function (t) {
                        var r = t.isHost,
                          u = t.type,
                          a = t.isComponent,
                          i = t.selector,
                          o = t.exportAs,
                          s = t.changeDetection,
                          l = t.inputs,
                          c = t.outputs,
                          p = t.host,
                          f = t.providers,
                          d = t.viewProviders,
                          h = t.queries,
                          g = t.guards,
                          m = t.viewQueries,
                          y = t.entryComponents,
                          D = t.template,
                          v = t.componentViewType,
                          E = t.rendererType,
                          C = t.componentFactory,
                          b = {},
                          A = {},
                          F = {};
                        null != p &&
                          Object.keys(p).forEach(function (e) {
                            var t = p[e],
                              r = e.match(n);
                            null === r
                              ? (F[e] = t)
                              : null != r[1]
                              ? (A[r[1]] = t)
                              : null != r[2] && (b[r[2]] = t);
                          });
                        var x = {};
                        null != l &&
                          l.forEach(function (e) {
                            var t = sT.splitAtColon(e, [e, e]);
                            x[t[0]] = t[1];
                          });
                        var S = {};
                        return (
                          null != c &&
                            c.forEach(function (e) {
                              var t = sT.splitAtColon(e, [e, e]);
                              S[t[0]] = t[1];
                            }),
                          new e({
                            isHost: r,
                            type: u,
                            isComponent: !!a,
                            selector: i,
                            exportAs: o,
                            changeDetection: s,
                            inputs: x,
                            outputs: S,
                            hostListeners: b,
                            hostProperties: A,
                            hostAttributes: F,
                            providers: f,
                            viewProviders: d,
                            queries: h,
                            guards: g,
                            viewQueries: m,
                            entryComponents: y,
                            template: D,
                            componentViewType: v,
                            rendererType: E,
                            componentFactory: C,
                          })
                        );
                      },
                    },
                  ]),
                  T(e, [
                    {
                      key: 'toSummary',
                      value: function () {
                        return {
                          summaryKind: u.Directive,
                          type: this.type,
                          isComponent: this.isComponent,
                          selector: this.selector,
                          exportAs: this.exportAs,
                          inputs: this.inputs,
                          outputs: this.outputs,
                          hostListeners: this.hostListeners,
                          hostProperties: this.hostProperties,
                          hostAttributes: this.hostAttributes,
                          providers: this.providers,
                          viewProviders: this.viewProviders,
                          queries: this.queries,
                          guards: this.guards,
                          viewQueries: this.viewQueries,
                          entryComponents: this.entryComponents,
                          changeDetection: this.changeDetection,
                          template: this.template && this.template.toSummary(),
                          componentViewType: this.componentViewType,
                          rendererType: this.rendererType,
                          componentFactory: this.componentFactory,
                        };
                      },
                    },
                  ]),
                  e
                );
              })();
              function s(e) {
                return e || [];
              }
              function l(e) {
                return e.reduce(function (e, t) {
                  var n = Array.isArray(t) ? l(t) : t;
                  return e.concat(n);
                }, []);
              }
              function c(e) {
                return e.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/, 'ng:///');
              }
              (t.CompileDirectiveMetadata = o),
                (t.CompilePipeMetadata = (function () {
                  function e(t) {
                    var n = t.type,
                      r = t.name,
                      u = t.pure;
                    w(this, e),
                      (this.type = n),
                      (this.name = r),
                      (this.pure = !!u);
                  }
                  return (
                    T(e, [
                      {
                        key: 'toSummary',
                        value: function () {
                          return {
                            summaryKind: u.Pipe,
                            type: this.type,
                            name: this.name,
                            pure: this.pure,
                          };
                        },
                      },
                    ]),
                    e
                  );
                })()),
                (t.CompileShallowModuleMetadata = (function () {
                  return function e() {
                    w(this, e);
                  };
                })()),
                (t.CompileNgModuleMetadata = (function () {
                  function e(t) {
                    var n = t.type,
                      r = t.providers,
                      u = t.declaredDirectives,
                      a = t.exportedDirectives,
                      i = t.declaredPipes,
                      o = t.exportedPipes,
                      l = t.entryComponents,
                      c = t.bootstrapComponents,
                      p = t.importedModules,
                      f = t.exportedModules,
                      d = t.schemas,
                      h = t.transitiveModule,
                      g = t.id;
                    w(this, e),
                      (this.type = n || null),
                      (this.declaredDirectives = s(u)),
                      (this.exportedDirectives = s(a)),
                      (this.declaredPipes = s(i)),
                      (this.exportedPipes = s(o)),
                      (this.providers = s(r)),
                      (this.entryComponents = s(l)),
                      (this.bootstrapComponents = s(c)),
                      (this.importedModules = s(p)),
                      (this.exportedModules = s(f)),
                      (this.schemas = s(d)),
                      (this.id = g || null),
                      (this.transitiveModule = h || null);
                  }
                  return (
                    T(e, [
                      {
                        key: 'toSummary',
                        value: function () {
                          var e = this.transitiveModule;
                          return {
                            summaryKind: u.NgModule,
                            type: this.type,
                            entryComponents: e.entryComponents,
                            providers: e.providers,
                            modules: e.modules,
                            exportedDirectives: e.exportedDirectives,
                            exportedPipes: e.exportedPipes,
                          };
                        },
                      },
                    ]),
                    e
                  );
                })()),
                (t.TransitiveCompileNgModuleMetadata = (function () {
                  function e() {
                    w(this, e),
                      (this.directivesSet = new Set()),
                      (this.directives = []),
                      (this.exportedDirectivesSet = new Set()),
                      (this.exportedDirectives = []),
                      (this.pipesSet = new Set()),
                      (this.pipes = []),
                      (this.exportedPipesSet = new Set()),
                      (this.exportedPipes = []),
                      (this.modulesSet = new Set()),
                      (this.modules = []),
                      (this.entryComponentsSet = new Set()),
                      (this.entryComponents = []),
                      (this.providers = []);
                  }
                  return (
                    T(e, [
                      {
                        key: 'addProvider',
                        value: function (e, t) {
                          this.providers.push({ provider: e, module: t });
                        },
                      },
                      {
                        key: 'addDirective',
                        value: function (e) {
                          this.directivesSet.has(e.reference) ||
                            (this.directivesSet.add(e.reference),
                            this.directives.push(e));
                        },
                      },
                      {
                        key: 'addExportedDirective',
                        value: function (e) {
                          this.exportedDirectivesSet.has(e.reference) ||
                            (this.exportedDirectivesSet.add(e.reference),
                            this.exportedDirectives.push(e));
                        },
                      },
                      {
                        key: 'addPipe',
                        value: function (e) {
                          this.pipesSet.has(e.reference) ||
                            (this.pipesSet.add(e.reference),
                            this.pipes.push(e));
                        },
                      },
                      {
                        key: 'addExportedPipe',
                        value: function (e) {
                          this.exportedPipesSet.has(e.reference) ||
                            (this.exportedPipesSet.add(e.reference),
                            this.exportedPipes.push(e));
                        },
                      },
                      {
                        key: 'addModule',
                        value: function (e) {
                          this.modulesSet.has(e.reference) ||
                            (this.modulesSet.add(e.reference),
                            this.modules.push(e));
                        },
                      },
                      {
                        key: 'addEntryComponent',
                        value: function (e) {
                          this.entryComponentsSet.has(e.componentType) ||
                            (this.entryComponentsSet.add(e.componentType),
                            this.entryComponents.push(e));
                        },
                      },
                    ]),
                    e
                  );
                })()),
                (t.ProviderMeta = (function () {
                  return function e(t, n) {
                    var r = n.useClass,
                      u = n.useValue,
                      a = n.useExisting,
                      i = n.useFactory,
                      o = n.deps,
                      s = n.multi;
                    w(this, e),
                      (this.token = t),
                      (this.useClass = r || null),
                      (this.useValue = u),
                      (this.useExisting = a),
                      (this.useFactory = i || null),
                      (this.dependencies = o || null),
                      (this.multi = !!s);
                  };
                })()),
                (t.flatten = l),
                (t.templateSourceUrl = function (e, t, n) {
                  var r;
                  return (
                    (r = n.isInline
                      ? t.type.reference instanceof oT.StaticSymbol
                        ? ''
                            .concat(t.type.reference.filePath, '.')
                            .concat(t.type.reference.name, '.html')
                        : ''.concat(i(e), '/').concat(i(t.type), '.html')
                      : n.templateUrl),
                    t.type.reference instanceof oT.StaticSymbol ? r : c(r)
                  );
                }),
                (t.sharedStylesheetJitUrl = function (e, t) {
                  var n = e.moduleUrl.split(/\/\\/g),
                    r = n[n.length - 1];
                  return c('css/'.concat(t).concat(r, '.ngstyle.js'));
                }),
                (t.ngModuleJitUrl = function (e) {
                  return c(''.concat(i(e.type), '/module.ngfactory.js'));
                }),
                (t.templateJitUrl = function (e, t) {
                  return c(
                    ''.concat(i(e), '/').concat(i(t.type), '.ngfactory.js')
                  );
                });
            }),
            cT = Xe(function (e, t) {
              Object.defineProperty(t, '__esModule', { value: !0 });
              var n = (function () {
                function e(t, n, r, u) {
                  w(this, e),
                    (this.file = t),
                    (this.offset = n),
                    (this.line = r),
                    (this.col = u);
                }
                return (
                  T(e, [
                    {
                      key: 'toString',
                      value: function () {
                        return null != this.offset
                          ? ''
                              .concat(this.file.url, '@')
                              .concat(this.line, ':')
                              .concat(this.col)
                          : this.file.url;
                      },
                    },
                    {
                      key: 'moveBy',
                      value: function (t) {
                        for (
                          var n = this.file.content,
                            r = n.length,
                            u = this.offset,
                            a = this.line,
                            i = this.col;
                          u > 0 && t < 0;

                        )
                          if ((u--, t++, n.charCodeAt(u) == iT.$LF)) {
                            a--;
                            var o = n
                              .substr(0, u - 1)
                              .lastIndexOf(String.fromCharCode(iT.$LF));
                            i = o > 0 ? u - o : u;
                          } else i--;
                        for (; u < r && t > 0; ) {
                          var s = n.charCodeAt(u);
                          u++, t--, s == iT.$LF ? (a++, (i = 0)) : i++;
                        }
                        return new e(this.file, u, a, i);
                      },
                    },
                    {
                      key: 'getContext',
                      value: function (e, t) {
                        var n = this.file.content,
                          r = this.offset;
                        if (null != r) {
                          r > n.length - 1 && (r = n.length - 1);
                          for (
                            var u = r, a = 0, i = 0;
                            a < e && r > 0 && (a++, '\n' != n[--r] || ++i != t);

                          );
                          for (
                            a = 0, i = 0;
                            a < e &&
                            u < n.length - 1 &&
                            (a++, '\n' != n[++u] || ++i != t);

                          );
                          return {
                            before: n.substring(r, this.offset),
                            after: n.substring(this.offset, u + 1),
                          };
                        }
                        return null;
                      },
                    },
                  ]),
                  e
                );
              })();
              t.ParseLocation = n;
              var r = function e(t, n) {
                w(this, e), (this.content = t), (this.url = n);
              };
              t.ParseSourceFile = r;
              var u,
                a = (function () {
                  function e(t, n) {
                    var r =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : null;
                    w(this, e),
                      (this.start = t),
                      (this.end = n),
                      (this.details = r);
                  }
                  return (
                    T(e, [
                      {
                        key: 'toString',
                        value: function () {
                          return this.start.file.content.substring(
                            this.start.offset,
                            this.end.offset
                          );
                        },
                      },
                    ]),
                    e
                  );
                })();
              (t.ParseSourceSpan = a),
                (t.EMPTY_PARSE_LOCATION = new n(new r('', ''), 0, 0, 0)),
                (t.EMPTY_SOURCE_SPAN = new a(
                  t.EMPTY_PARSE_LOCATION,
                  t.EMPTY_PARSE_LOCATION
                )),
                (function (e) {
                  (e[(e.WARNING = 0)] = 'WARNING'),
                    (e[(e.ERROR = 1)] = 'ERROR');
                })((u = t.ParseErrorLevel || (t.ParseErrorLevel = {}))),
                (t.ParseError = (function () {
                  function e(t, n) {
                    var r =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : u.ERROR;
                    w(this, e),
                      (this.span = t),
                      (this.msg = n),
                      (this.level = r);
                  }
                  return (
                    T(e, [
                      {
                        key: 'contextualMessage',
                        value: function () {
                          var e = this.span.start.getContext(100, 3);
                          return e
                            ? ''
                                .concat(this.msg, ' ("')
                                .concat(e.before, '[')
                                .concat(u[this.level], ' ->]')
                                .concat(e.after, '")')
                            : this.msg;
                        },
                      },
                      {
                        key: 'toString',
                        value: function () {
                          var e = this.span.details
                            ? ', '.concat(this.span.details)
                            : '';
                          return ''
                            .concat(this.contextualMessage(), ': ')
                            .concat(this.span.start)
                            .concat(e);
                        },
                      },
                    ]),
                    e
                  );
                })()),
                (t.typeSourceSpan = function (e, t) {
                  var u = lT.identifierModuleUrl(t),
                    i =
                      null != u
                        ? 'in '
                            .concat(e, ' ')
                            .concat(lT.identifierName(t), ' in ')
                            .concat(u)
                        : 'in '.concat(e, ' ').concat(lT.identifierName(t)),
                    o = new r('', i);
                  return new a(new n(o, -1, -1, -1), new n(o, -1, -1, -1));
                }),
                (t.r3JitTypeSourceSpan = function (e, t, u) {
                  var i = 'in '.concat(e, ' ').concat(t, ' in ').concat(u),
                    o = new r('', i);
                  return new a(new n(o, -1, -1, -1), new n(o, -1, -1, -1));
                });
            }).ParseSourceSpan,
            pT = wB,
            fT = NB,
            dT = kB,
            hT = OB,
            gT = $B,
            mT = HB,
            yT = XB,
            DT = YB,
            vT = eT,
            ET = tT,
            CT = [
              function (e) {
                return e.map(function (e) {
                  if (
                    'element' === e.type &&
                    e.tagDefinition.ignoreFirstLf &&
                    0 !== e.children.length &&
                    'text' === e.children[0].type &&
                    '\n' === e.children[0].value[0]
                  ) {
                    var t = n(e.children),
                      r = t[0],
                      u = t.slice(1);
                    return e.clone({
                      children:
                        1 === r.value.length
                          ? u
                          : [r.clone({ value: r.value.slice(1) })].concat(m(u)),
                    });
                  }
                  return e;
                });
              },
              function (e) {
                var t = function (e) {
                  return (
                    'element' === e.type &&
                    e.prev &&
                    'ieConditionalStartComment' === e.prev.type &&
                    e.prev.sourceSpan.end.offset ===
                      e.startSourceSpan.start.offset &&
                    e.firstChild &&
                    'ieConditionalEndComment' === e.firstChild.type &&
                    e.firstChild.sourceSpan.start.offset ===
                      e.startSourceSpan.end.offset
                  );
                };
                return e.map(function (e) {
                  if (e.children) {
                    var n = e.children.map(t);
                    if (n.some(Boolean)) {
                      for (var r = [], u = 0; u < e.children.length; u++) {
                        var a = e.children[u];
                        if (!n[u + 1])
                          if (n[u]) {
                            var i = a.prev,
                              o = a.firstChild,
                              s = new cT(i.sourceSpan.start, o.sourceSpan.end),
                              l = new cT(s.start, a.sourceSpan.end);
                            r.push(
                              a.clone({
                                condition: i.condition,
                                sourceSpan: l,
                                startSourceSpan: s,
                                children: a.children.slice(1),
                              })
                            );
                          } else r.push(a);
                      }
                      return e.clone({ children: r });
                    }
                  }
                  return e;
                });
              },
              function (e) {
                return (function (e, t, n) {
                  return e.map(function (e) {
                    if (e.children) {
                      var r = e.children.map(t);
                      if (r.some(Boolean)) {
                        for (var u = [], a = 0; a < e.children.length; a++) {
                          var i = e.children[a];
                          if ('text' === i.type || r[a]) {
                            var o =
                              'text' === i.type
                                ? i
                                : i.clone({ type: 'text', value: n(i) });
                            if (
                              0 !== u.length &&
                              'text' === u[u.length - 1].type
                            ) {
                              var s = u.pop();
                              u.push(
                                s.clone({
                                  value: s.value + o.value,
                                  sourceSpan: new cT(
                                    s.sourceSpan.start,
                                    o.sourceSpan.end
                                  ),
                                })
                              );
                            } else u.push(o);
                          } else u.push(i);
                        }
                        return e.clone({ children: u });
                      }
                    }
                    return e;
                  });
                })(
                  e,
                  function (e) {
                    return 'cdata' === e.type;
                  },
                  function (e) {
                    return '<![CDATA['.concat(e.value, ']]>');
                  }
                );
              },
              function (e, t) {
                if ('html' === t.parser) return e;
                var n = /{{([\S\s]+?)}}/g;
                return e.map(function (e) {
                  if (!hT(e)) return e;
                  var t,
                    r = [],
                    u = g(e.children);
                  try {
                    for (u.s(); !(t = u.n()).done; ) {
                      var a = t.value;
                      if ('text' === a.type)
                        for (
                          var i = a.sourceSpan.start,
                            o = null,
                            s = a.value.split(n),
                            l = 0;
                          l < s.length;
                          l++, i = o
                        ) {
                          var c = s[l];
                          l % 2 != 0
                            ? ((o = i.moveBy(c.length + 4)),
                              r.push({
                                type: 'interpolation',
                                sourceSpan: new cT(i, o),
                                children:
                                  0 === c.length
                                    ? []
                                    : [
                                        {
                                          type: 'text',
                                          value: c,
                                          sourceSpan: new cT(
                                            i.moveBy(2),
                                            o.moveBy(-2)
                                          ),
                                        },
                                      ],
                              }))
                            : ((o = i.moveBy(c.length)),
                              0 !== c.length &&
                                r.push({
                                  type: 'text',
                                  value: c,
                                  sourceSpan: new cT(i, o),
                                }));
                        }
                      else r.push(a);
                    }
                  } catch (p) {
                    u.e(p);
                  } finally {
                    u.f();
                  }
                  return e.clone({ children: r });
                });
              },
              function (e) {
                var t = 'whitespace';
                return e.map(function (e) {
                  if (!e.children) return e;
                  if (
                    0 === e.children.length ||
                    (1 === e.children.length &&
                      'text' === e.children[0].type &&
                      0 === pT(e.children[0].value).length)
                  )
                    return e.clone({
                      children: [],
                      hasDanglingSpaces: 0 !== e.children.length,
                    });
                  var n = ET(e),
                    r = yT(e);
                  return e.clone({
                    isWhitespaceSensitive: n,
                    isIndentationSensitive: r,
                    children: e.children
                      .reduce(function (e, r) {
                        if ('text' !== r.type || n) return e.concat(r);
                        var u = [],
                          a = fT(r.value),
                          i = a.leadingWhitespace,
                          o = a.text,
                          s = a.trailingWhitespace;
                        return (
                          i && u.push({ type: t }),
                          o &&
                            u.push({
                              type: 'text',
                              value: o,
                              sourceSpan: new cT(
                                r.sourceSpan.start.moveBy(i.length),
                                r.sourceSpan.end.moveBy(-s.length)
                              ),
                            }),
                          s && u.push({ type: t }),
                          e.concat(u)
                        );
                      }, [])
                      .reduce(function (e, n, r, u) {
                        if (n.type === t) return e;
                        var a = 0 !== r && u[r - 1].type === t,
                          i = r !== u.length - 1 && u[r + 1].type === t;
                        return e.concat(
                          Object.assign({}, n, {
                            hasLeadingSpaces: a,
                            hasTrailingSpaces: i,
                          })
                        );
                      }, []),
                  });
                });
              },
              function (e, t) {
                return e.map(function (e) {
                  return Object.assign(e, { cssDisplay: gT(e, t) });
                });
              },
              function (e) {
                return e.map(function (e) {
                  return Object.assign(e, {
                    isSelfClosing:
                      !e.children ||
                      ('element' === e.type &&
                        (e.tagDefinition.isVoid ||
                          e.startSourceSpan === e.endSourceSpan)),
                  });
                });
              },
              function (e, t) {
                return e.map(function (e) {
                  return 'element' !== e.type
                    ? e
                    : Object.assign(e, {
                        hasHtmComponentClosingTag:
                          e.endSourceSpan &&
                          /^<\s*\/\s*\/\s*>$/.test(
                            t.originalText.slice(
                              e.endSourceSpan.start.offset,
                              e.endSourceSpan.end.offset
                            )
                          ),
                      });
                });
              },
              function (e, t) {
                return e.map(function (e) {
                  return e.children
                    ? 0 === e.children.length
                      ? e.clone({ isDanglingSpaceSensitive: mT(e) })
                      : e.clone({
                          children: e.children
                            .map(function (e) {
                              return Object.assign({}, e, {
                                isLeadingSpaceSensitive: DT(e, t),
                                isTrailingSpaceSensitive: vT(e, t),
                              });
                            })
                            .map(function (e, t, n) {
                              return Object.assign({}, e, {
                                isLeadingSpaceSensitive:
                                  (0 === t ||
                                    n[t - 1].isTrailingSpaceSensitive) &&
                                  e.isLeadingSpaceSensitive,
                                isTrailingSpaceSensitive:
                                  (t === n.length - 1 ||
                                    n[t + 1].isLeadingSpaceSensitive) &&
                                  e.isTrailingSpaceSensitive,
                              });
                            }),
                        })
                    : e;
                });
              },
              function (e) {
                var t = function (e) {
                  return (
                    'element' === e.type &&
                    0 === e.attrs.length &&
                    1 === e.children.length &&
                    'text' === e.firstChild.type &&
                    !dT(e.children[0].value) &&
                    !e.firstChild.hasLeadingSpaces &&
                    !e.firstChild.hasTrailingSpaces &&
                    e.isLeadingSpaceSensitive &&
                    !e.hasLeadingSpaces &&
                    e.isTrailingSpaceSensitive &&
                    !e.hasTrailingSpaces &&
                    e.prev &&
                    'text' === e.prev.type &&
                    e.next &&
                    'text' === e.next.type
                  );
                };
                return e.map(function (e) {
                  if (e.children) {
                    var n = e.children.map(t);
                    if (n.some(Boolean)) {
                      for (var r = [], u = 0; u < e.children.length; u++) {
                        var a = e.children[u];
                        if (n[u]) {
                          var i = r.pop(),
                            o = e.children[++u],
                            s = o.isTrailingSpaceSensitive,
                            l = o.hasTrailingSpaces;
                          r.push(
                            i.clone({
                              value:
                                i.value +
                                '<'.concat(a.rawName, '>') +
                                a.firstChild.value +
                                '</'.concat(a.rawName, '>') +
                                o.value,
                              sourceSpan: new cT(
                                i.sourceSpan.start,
                                o.sourceSpan.end
                              ),
                              isTrailingSpaceSensitive: s,
                              hasTrailingSpaces: l,
                            })
                          );
                        } else r.push(a);
                      }
                      return e.clone({ children: r });
                    }
                  }
                  return e;
                });
              },
            ],
            bT = function (e) {
              return e.sourceSpan.start.offset;
            },
            AT = function (e) {
              return e.sourceSpan.end.offset;
            },
            FT = vn.builders,
            xT = FT.concat,
            ST = FT.group,
            wT = function (e) {
              var t = e.trim();
              return (
                /^([\w$]+|\([^)]*?\))\s*=>|^function\s*\(/.test(t) ||
                /^[$A-Z_a-z][\w$]*(?:\.[$A-Z_a-z][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[$A-Z_a-z][\w$]*])*$/.test(
                  t
                )
              );
            },
            BT = function (e, t) {
              var n = (function (e) {
                  var t = /,([^,\]}]*)(?:,([^,\]}]*))?$/,
                    n = e.match(/([^]*?)\s+(in|of)\s+([^]*)/);
                  if (n) {
                    var r = {};
                    r.for = n[3].trim();
                    var u = n[1].trim().replace(/^\(|\)$/g, ''),
                      a = u.match(t);
                    return (
                      a
                        ? ((r.alias = u.replace(t, '')),
                          (r.iterator1 = a[1].trim()),
                          a[2] && (r.iterator2 = a[2].trim()))
                        : (r.alias = u),
                      {
                        left: ''.concat(
                          [r.alias, r.iterator1, r.iterator2]
                            .filter(Boolean)
                            .join(',')
                        ),
                        operator: n[2],
                        right: r.for,
                      }
                    );
                  }
                })(e),
                r = n.left,
                u = n.operator,
                a = n.right;
              return xT([
                ST(
                  t('function _('.concat(r, ') {}'), {
                    parser: 'babel',
                    __isVueForBindingLeft: !0,
                  })
                ),
                ' ',
                u,
                ' ',
                t(
                  a,
                  { parser: '__js_expression' },
                  { stripTrailingHardline: !0 }
                ),
              ]);
            },
            TT = function (e, t) {
              return t(
                'function _('.concat(e, ') {}'),
                { parser: 'babel', __isVueBindings: !0 },
                { stripTrailingHardline: !0 }
              );
            },
            kT = Xe(function (e) {
              var t, n;
              (t = He),
                (n = function () {
                  return function (e, t) {
                    var n = (t && t.logger) || console;
                    function r(e) {
                      return (
                        ' ' === e ||
                        '\t' === e ||
                        '\n' === e ||
                        '\f' === e ||
                        '\r' === e
                      );
                    }
                    function u(t) {
                      var n,
                        r = t.exec(e.substring(y));
                      if (r) return (n = r[0]), (y += n.length), n;
                    }
                    for (
                      var a,
                        i,
                        o,
                        s,
                        l,
                        c = e.length,
                        p = /^[ \t\n\r\u000c]+/,
                        f = /^[, \t\n\r\u000c]+/,
                        d = /^[^ \t\n\r\u000c]+/,
                        h = /[,]+$/,
                        g = /^\d+$/,
                        m = /^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,
                        y = 0,
                        D = [];
                      ;

                    ) {
                      if ((u(f), y >= c)) return D;
                      (a = u(d)),
                        (i = []),
                        ',' === a.slice(-1)
                          ? ((a = a.replace(h, '')), E())
                          : v();
                    }
                    function v() {
                      for (u(p), o = '', s = 'in descriptor'; ; ) {
                        if (((l = e.charAt(y)), 'in descriptor' === s))
                          if (r(l))
                            o &&
                              (i.push(o), (o = ''), (s = 'after descriptor'));
                          else {
                            if (',' === l)
                              return (y += 1), o && i.push(o), void E();
                            if ('(' === l) (o += l), (s = 'in parens');
                            else {
                              if ('' === l) return o && i.push(o), void E();
                              o += l;
                            }
                          }
                        else if ('in parens' === s)
                          if (')' === l) (o += l), (s = 'in descriptor');
                          else {
                            if ('' === l) return i.push(o), void E();
                            o += l;
                          }
                        else if ('after descriptor' === s)
                          if (r(l));
                          else {
                            if ('' === l) return void E();
                            (s = 'in descriptor'), (y -= 1);
                          }
                        y += 1;
                      }
                    }
                    function E() {
                      var t,
                        r,
                        u,
                        o,
                        s,
                        l,
                        c,
                        p,
                        f,
                        d = !1,
                        h = {};
                      for (o = 0; o < i.length; o++)
                        (l = (s = i[o])[s.length - 1]),
                          (c = s.substring(0, s.length - 1)),
                          (p = parseInt(c, 10)),
                          (f = parseFloat(c)),
                          g.test(c) && 'w' === l
                            ? ((t || r) && (d = !0),
                              0 === p ? (d = !0) : (t = p))
                            : m.test(c) && 'x' === l
                            ? ((t || r || u) && (d = !0),
                              f < 0 ? (d = !0) : (r = f))
                            : g.test(c) && 'h' === l
                            ? ((u || r) && (d = !0),
                              0 === p ? (d = !0) : (u = p))
                            : (d = !0);
                      d
                        ? n &&
                          n.error &&
                          n.error(
                            "Invalid srcset descriptor found in '" +
                              e +
                              "' at '" +
                              s +
                              "'."
                          )
                        : ((h.url = a),
                          t && (h.w = t),
                          r && (h.d = r),
                          u && (h.h = u),
                          D.push(h));
                    }
                  };
                }),
                e.exports ? (e.exports = n()) : (t.parseSrcset = n());
            }),
            NT = vn.builders,
            OT = NT.concat,
            PT = NT.ifBreak,
            MT = NT.join,
            IT = NT.line,
            jT = function (e) {
              var t = kT(e, {
                  logger: {
                    error: function (e) {
                      throw new Error(e);
                    },
                  },
                }),
                n = t.some(function (e) {
                  return e.w;
                }),
                r = t.some(function (e) {
                  return e.h;
                });
              if (
                n +
                  r +
                  t.some(function (e) {
                    return e.d;
                  }) >
                1
              )
                throw new Error('Mixed descriptor in srcset is not supported');
              var u = n ? 'w' : r ? 'h' : 'd',
                a = n ? 'w' : r ? 'h' : 'x',
                i = function (e) {
                  return Math.max.apply(Math, m(e));
                },
                o = t.map(function (e) {
                  return e.url;
                }),
                s = i(
                  o.map(function (e) {
                    return e.length;
                  })
                ),
                l = t
                  .map(function (e) {
                    return e[u];
                  })
                  .map(function (e) {
                    return e ? e.toString() : '';
                  }),
                c = l.map(function (e) {
                  var t = e.indexOf('.');
                  return -1 === t ? e.length : t;
                }),
                p = i(c);
              return MT(
                OT([',', IT]),
                o.map(function (e, t) {
                  var n = [e],
                    r = l[t];
                  if (r) {
                    var u = s - e.length + 1,
                      i = p - c[t],
                      o = ' '.repeat(u + i);
                    n.push(PT(o, ' '), r + a);
                  }
                  return OT(n);
                })
              );
            },
            LT = function (e) {
              return e.trim().split(/\s+/).join(' ');
            },
            _T = vn.builders,
            RT = vn.utils,
            $T = RT.mapDoc,
            VT = RT.normalizeParts,
            qT = Ut.replaceEndOfLineWith,
            WT = eb,
            UT = _T.breakParent,
            JT = _T.dedentToRoot,
            zT = _T.fill,
            GT = _T.group,
            HT = _T.hardline,
            XT = _T.ifBreak,
            YT = _T.indent,
            KT = _T.join,
            QT = _T.line,
            ZT = _T.literalline,
            ek = _T.softline,
            tk = BB,
            nk = TB,
            rk = PB,
            uk = MB,
            ak = IB,
            ik = jB,
            ok = LB,
            sk = _B,
            lk = RB,
            ck = VB,
            pk = qB,
            fk = WB,
            dk = UB,
            hk = JB,
            gk = zB,
            mk = GB,
            yk = QB,
            Dk = ZB,
            vk = nT,
            Ek = rT,
            Ck = uT,
            bk = aT,
            Ak = KB,
            Fk = bT,
            xk = AT,
            Sk = BT,
            wk = TT,
            Bk = wT,
            Tk = jT,
            kk = LT;
          function Nk(e) {
            var t = VT(e);
            return 0 === t.length ? '' : 1 === t.length ? t[0] : _T.concat(t);
          }
          function Ok(e, t, n) {
            var r = e.getValue();
            if (ik(r))
              return Nk([
                UT,
                Nk(
                  e.map(function (e) {
                    var t = e.getValue(),
                      n = t.prev ? i(t.prev, t) : '';
                    return Nk([n ? Nk([n, sk(t.prev) ? HT : '']) : '', a(e)]);
                  }, 'children')
                ),
              ]);
            var u = r.children.map(function () {
              return Symbol('');
            });
            return Nk(
              e.map(function (e, t) {
                var n = e.getValue();
                if (Dk(n)) {
                  if (n.prev && Dk(n.prev)) {
                    var r = i(n.prev, n);
                    if (r)
                      return sk(n.prev) ? Nk([HT, HT, a(e)]) : Nk([r, a(e)]);
                  }
                  return a(e);
                }
                var o = [],
                  s = [],
                  l = [],
                  c = [],
                  p = n.prev ? i(n.prev, n) : '',
                  f = n.next ? i(n, n.next) : '';
                return (
                  p &&
                    (sk(n.prev)
                      ? o.push(HT, HT)
                      : p === HT
                      ? o.push(HT)
                      : Dk(n.prev)
                      ? s.push(p)
                      : s.push(XT('', ek, { groupId: u[t - 1] }))),
                  f &&
                    (sk(n)
                      ? Dk(n.next) && c.push(HT, HT)
                      : f === HT
                      ? Dk(n.next) && c.push(HT)
                      : l.push(f)),
                  Nk(
                    [].concat(
                      o,
                      GT(Nk([Nk(s), GT(Nk([a(e), Nk(l)]), { id: u[t] })])),
                      c
                    )
                  )
                );
              }, 'children')
            );
            function a(e) {
              var r = e.getValue();
              return pk(r)
                ? Nk(
                    [].concat(
                      zk(r, t),
                      qT(
                        t.originalText.slice(
                          Fk(r) + (r.prev && Vk(r.prev) ? Xk(r).length : 0),
                          xk(r) - (r.next && Wk(r.next) ? Qk(r, t).length : 0)
                        ),
                        ZT
                      ),
                      Hk(r, t)
                    )
                  )
                : n(e);
            }
            function i(e, t) {
              return Dk(e) && Dk(t)
                ? e.isTrailingSpaceSensitive
                  ? e.hasTrailingSpaces
                    ? vk(t)
                      ? HT
                      : QT
                    : ''
                  : vk(t)
                  ? HT
                  : ek
                : (Vk(e) &&
                    (pk(t) ||
                      t.firstChild ||
                      t.isSelfClosing ||
                      ('element' === t.type && 0 !== t.attrs.length))) ||
                  ('element' === e.type && e.isSelfClosing && Wk(t))
                ? ''
                : !t.isLeadingSpaceSensitive ||
                  vk(t) ||
                  (Wk(t) &&
                    e.lastChild &&
                    Jk(e.lastChild) &&
                    e.lastChild.lastChild &&
                    Jk(e.lastChild.lastChild))
                ? HT
                : t.hasLeadingSpaces
                ? QT
                : ek;
            }
          }
          function Pk(e, t) {
            var n = e.startSourceSpan.end.offset;
            e.firstChild && qk(e.firstChild) && (n -= Yk(e).length);
            var r = e.endSourceSpan.start.offset;
            return (
              e.lastChild && Jk(e.lastChild)
                ? (r += Kk(e, t).length)
                : Uk(e) && (r -= Qk(e.lastChild, t).length),
              t.originalText.slice(n, r)
            );
          }
          function Mk(e, t, n) {
            var r = e.getValue();
            if (!r.attrs || 0 === r.attrs.length)
              return r.isSelfClosing ? ' ' : '';
            var u = r.prev && 'comment' === r.prev.type && ck(r.prev.value),
              a =
                'boolean' == typeof u
                  ? function () {
                      return u;
                    }
                  : Array.isArray(u)
                  ? function (e) {
                      return u.includes(e.rawName);
                    }
                  : function () {
                      return !1;
                    },
              i = e.map(function (e) {
                var r = e.getValue();
                return a(r)
                  ? Nk(qT(t.originalText.slice(Fk(r), xk(r)), ZT))
                  : n(e);
              }, 'attrs'),
              o =
                'element' === r.type &&
                'script' === r.fullName &&
                1 === r.attrs.length &&
                'src' === r.attrs[0].fullName &&
                0 === r.children.length,
              s = [YT(Nk([o ? ' ' : QT, KT(QT, i)]))];
            return (
              (r.firstChild && qk(r.firstChild)) ||
              (r.isSelfClosing && Uk(r.parent)) ||
              o
                ? s.push(r.isSelfClosing ? ' ' : '')
                : s.push(r.isSelfClosing ? QT : ek),
              Nk(s)
            );
          }
          function Ik(e, t, n) {
            var r = e.getValue();
            return Nk([jk(r, t), Mk(e, t, n), r.isSelfClosing ? '' : Lk(r)]);
          }
          function jk(e, t) {
            return e.prev && Vk(e.prev) ? '' : Nk([zk(e, t), Xk(e)]);
          }
          function Lk(e) {
            return e.firstChild && qk(e.firstChild) ? '' : Yk(e);
          }
          function _k(e, t) {
            return Nk([e.isSelfClosing ? '' : Rk(e, t), $k(e, t)]);
          }
          function Rk(e, t) {
            return e.lastChild && Jk(e.lastChild)
              ? ''
              : Nk([Gk(e, t), Kk(e, t)]);
          }
          function $k(e, t) {
            return (e.next ? Wk(e.next) : Uk(e.parent))
              ? ''
              : Nk([Qk(e, t), Hk(e, t)]);
          }
          function Vk(e) {
            return (
              e.next &&
              !Dk(e.next) &&
              Dk(e) &&
              e.isTrailingSpaceSensitive &&
              !e.hasTrailingSpaces
            );
          }
          function qk(e) {
            return !e.prev && e.isLeadingSpaceSensitive && !e.hasLeadingSpaces;
          }
          function Wk(e) {
            return (
              e.prev &&
              'docType' !== e.prev.type &&
              !Dk(e.prev) &&
              e.isLeadingSpaceSensitive &&
              !e.hasLeadingSpaces
            );
          }
          function Uk(e) {
            return (
              e.lastChild &&
              e.lastChild.isTrailingSpaceSensitive &&
              !e.lastChild.hasTrailingSpaces &&
              !Dk(lk(e.lastChild)) &&
              !Ak(e)
            );
          }
          function Jk(e) {
            return (
              !e.next &&
              !e.hasTrailingSpaces &&
              e.isTrailingSpaceSensitive &&
              Dk(lk(e))
            );
          }
          function zk(e, t) {
            return qk(e) ? Yk(e.parent) : Wk(e) ? Qk(e.prev, t) : '';
          }
          function Gk(e, t) {
            return Uk(e) ? Qk(e.lastChild, t) : '';
          }
          function Hk(e, t) {
            return Jk(e) ? Kk(e.parent, t) : Vk(e) ? Xk(e.next) : '';
          }
          function Xk(e) {
            switch (e.type) {
              case 'ieConditionalComment':
              case 'ieConditionalStartComment':
                return '\x3c!--[if '.concat(e.condition);
              case 'ieConditionalEndComment':
                return '\x3c!--<!';
              case 'interpolation':
                return '{{';
              case 'docType':
                return '<!DOCTYPE';
              case 'element':
                if (e.condition)
                  return '\x3c!--[if '
                    .concat(e.condition, ']>\x3c!--\x3e<')
                    .concat(e.rawName);
              default:
                return '<'.concat(e.rawName);
            }
          }
          function Yk(e) {
            switch ((Eo(!e.isSelfClosing), e.type)) {
              case 'ieConditionalComment':
                return ']>';
              case 'element':
                if (e.condition) return '>\x3c!--<![endif]--\x3e';
              default:
                return '>';
            }
          }
          function Kk(e, t) {
            if ((Eo(!e.isSelfClosing), Ek(e, t))) return '';
            switch (e.type) {
              case 'ieConditionalComment':
                return '<!';
              case 'element':
                if (e.hasHtmComponentClosingTag) return '<//';
              default:
                return '</'.concat(e.rawName);
            }
          }
          function Qk(e, t) {
            if (Ek(e, t)) return '';
            switch (e.type) {
              case 'ieConditionalComment':
              case 'ieConditionalEndComment':
                return '[endif]--\x3e';
              case 'ieConditionalStartComment':
                return ']>\x3c!--\x3e';
              case 'interpolation':
                return '}}';
              case 'element':
                if (e.isSelfClosing) return '/>';
              default:
                return '>';
            }
          }
          function Zk(e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : e.value;
            return e.parent.isWhitespaceSensitive
              ? e.parent.isIndentationSensitive
                ? qT(t, ZT)
                : qT(ak(tk(t)), HT)
              : KT(QT, nk(t)).parts;
          }
          var eN = {
              preprocess: function (e, t) {
                var n,
                  r = g(CT);
                try {
                  for (r.s(); !(n = r.n()).done; ) e = (0, n.value)(e, t);
                } catch (u) {
                  r.e(u);
                } finally {
                  r.f();
                }
                return e;
              },
              print: function (e, t, n) {
                var r,
                  u = e.getValue();
                switch (u.type) {
                  case 'front-matter':
                    return Nk(qT(u.raw, ZT));
                  case 'root':
                    return (
                      t.__onHtmlRoot && t.__onHtmlRoot(u),
                      _T.concat([GT(Ok(e, t, n)), HT])
                    );
                  case 'element':
                  case 'ieConditionalComment':
                    if (Ck(u, t))
                      return Nk(
                        [].concat(
                          zk(u, t),
                          GT(Ik(e, t, n)),
                          qT(Pk(u, t), ZT),
                          _k(u, t),
                          Hk(u, t)
                        )
                      );
                    var a =
                        1 === u.children.length &&
                        'interpolation' === u.firstChild.type &&
                        u.firstChild.isLeadingSpaceSensitive &&
                        !u.firstChild.hasLeadingSpaces &&
                        u.lastChild.isTrailingSpaceSensitive &&
                        !u.lastChild.hasTrailingSpaces,
                      i = Symbol('element-attr-group-id');
                    return Nk([
                      GT(
                        Nk([
                          GT(Ik(e, t, n), { id: i }),
                          0 === u.children.length
                            ? u.hasDanglingSpaces && u.isDanglingSpaceSensitive
                              ? QT
                              : ''
                            : Nk([
                                ok(u) ? UT : '',
                                ((r = Nk([
                                  a
                                    ? XT(ek, '', { groupId: i })
                                    : u.firstChild.hasLeadingSpaces &&
                                      u.firstChild.isLeadingSpaceSensitive
                                    ? QT
                                    : 'text' === u.firstChild.type &&
                                      u.isWhitespaceSensitive &&
                                      u.isIndentationSensitive
                                    ? JT(ek)
                                    : ek,
                                  Ok(e, t, n),
                                ])),
                                a
                                  ? XT(YT(r), r, { groupId: i })
                                  : (!yk(u) && !dk(u, t)) ||
                                    'root' !== u.parent.type ||
                                    'vue' !== t.parser ||
                                    t.vueIndentScriptAndStyle
                                  ? YT(r)
                                  : r),
                                (u.next ? Wk(u.next) : Uk(u.parent))
                                  ? u.lastChild.hasTrailingSpaces &&
                                    u.lastChild.isTrailingSpaceSensitive
                                    ? ' '
                                    : ''
                                  : a
                                  ? XT(ek, '', { groupId: i })
                                  : u.lastChild.hasTrailingSpaces &&
                                    u.lastChild.isTrailingSpaceSensitive
                                  ? QT
                                  : ('comment' === u.lastChild.type ||
                                      ('text' === u.lastChild.type &&
                                        u.isWhitespaceSensitive &&
                                        u.isIndentationSensitive)) &&
                                    new RegExp(
                                      '\\n[\\t ]{'.concat(
                                        t.tabWidth *
                                          uk(e, function (e) {
                                            return (
                                              e.parent &&
                                              'root' !== e.parent.type
                                            );
                                          }),
                                        '}$'
                                      )
                                    ).test(u.lastChild.value)
                                  ? ''
                                  : ek,
                              ]),
                        ])
                      ),
                      _k(u, t),
                    ]);
                  case 'ieConditionalStartComment':
                  case 'ieConditionalEndComment':
                    return Nk([jk(u), $k(u)]);
                  case 'interpolation':
                    return Nk([jk(u, t), Nk(e.map(n, 'children')), $k(u, t)]);
                  case 'text':
                    if ('interpolation' === u.parent.type) {
                      var o = /\n[^\S\n]*?$/,
                        s = o.test(u.value),
                        l = s ? u.value.replace(o, '') : u.value;
                      return Nk([Nk(qT(l, ZT)), s ? HT : '']);
                    }
                    return zT(VT([].concat(zk(u, t), Zk(u), Hk(u, t))));
                  case 'docType':
                    return Nk([
                      GT(
                        Nk([
                          jk(u, t),
                          ' ',
                          u.value
                            .replace(/^html\b/i, 'html')
                            .replace(/\s+/g, ' '),
                        ])
                      ),
                      $k(u, t),
                    ]);
                  case 'comment':
                    return Nk([
                      zk(u, t),
                      Nk(qT(t.originalText.slice(Fk(u), xk(u)), ZT)),
                      Hk(u, t),
                    ]);
                  case 'attribute':
                    if (null === u.value) return u.rawName;
                    var c = bk(u.value),
                      p = rk(c, "'") < rk(c, '"') ? "'" : '"';
                    return Nk([
                      u.rawName,
                      Nk([
                        '=',
                        p,
                        Nk(
                          qT(
                            '"' === p
                              ? c.replace(/"/g, '&quot;')
                              : c.replace(/'/g, '&apos;'),
                            ZT
                          )
                        ),
                        p,
                      ]),
                    ]);
                  default:
                    throw new Error('Unexpected node type '.concat(u.type));
                }
              },
              insertPragma: function (e) {
                return '\x3c!-- @format --\x3e\n\n' + e.replace(/^\s*\n/, '');
              },
              massageAstNode: Kw,
              embed: function (e, t, n, r) {
                var u = e.getValue();
                switch (u.type) {
                  case 'element':
                    if (yk(u) || 'interpolation' === u.type) return;
                    if (!u.isSelfClosing && hk(u, r)) {
                      var a = fk(u, r);
                      if (!a) return;
                      var i = Pk(u, r),
                        o = /^\s*$/.test(i),
                        s = '';
                      return (
                        o ||
                          (o =
                            '' ===
                            (s = n(
                              tk(i),
                              { parser: a },
                              { stripTrailingHardline: !0 }
                            ))),
                        Nk([
                          zk(u, r),
                          GT(Ik(e, r, t)),
                          o ? '' : HT,
                          s,
                          o ? '' : HT,
                          _k(u, r),
                          Hk(u, r),
                        ])
                      );
                    }
                    break;
                  case 'text':
                    if (yk(u.parent)) {
                      var l = fk(u.parent);
                      if (l) {
                        var c =
                            'markdown' === l
                              ? ak(u.value.replace(/^[^\S\n]*?\n/, ''))
                              : u.value,
                          p = { parser: l };
                        if ('html' === r.parser && 'babel' === l) {
                          var f = 'script',
                            d = u.parent.attrMap;
                          d &&
                            ('module' === d.type ||
                              ('text/babel' === d.type &&
                                'module' === d['data-type'])) &&
                            (f = 'module'),
                            (p.__babelSourceType = f);
                        }
                        return _T.concat([
                          Nk([
                            UT,
                            zk(u, r),
                            n(c, p, { stripTrailingHardline: !0 }),
                            Hk(u, r),
                          ]),
                        ]);
                      }
                    } else if ('interpolation' === u.parent.type)
                      return Nk([
                        YT(
                          Nk([
                            QT,
                            n(
                              u.value,
                              Object.assign(
                                { __isInHtmlInterpolation: !0 },
                                'angular' === r.parser
                                  ? {
                                      parser: '__ng_interpolation',
                                      trailingComma: 'none',
                                    }
                                  : 'vue' === r.parser
                                  ? { parser: '__vue_expression' }
                                  : { parser: '__js_expression' }
                              ),
                              { stripTrailingHardline: !0 }
                            ),
                          ])
                        ),
                        u.parent.next && Wk(u.parent.next) ? ' ' : QT,
                      ]);
                    break;
                  case 'attribute':
                    if (!u.value) break;
                    if (
                      /^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(
                        r.originalText.slice(
                          u.valueSpan.start.offset,
                          u.valueSpan.end.offset
                        )
                      )
                    )
                      return Nk([u.rawName, '=', u.value]);
                    if (
                      'lwc' === r.parser &&
                      /^{[\S\s]*}$/.test(
                        r.originalText.slice(
                          u.valueSpan.start.offset,
                          u.valueSpan.end.offset
                        )
                      )
                    )
                      return Nk([u.rawName, '=', u.value]);
                    var h = (function (e, t, n) {
                      var r = function (t) {
                          return new RegExp(t.join('|')).test(e.fullName);
                        },
                        u = function () {
                          return bk(e.value);
                        },
                        a = !1,
                        i = function (e, t) {
                          var n =
                            'NGRoot' === e.type
                              ? 'NGMicrosyntax' === e.node.type &&
                                1 === e.node.body.length &&
                                'NGMicrosyntaxExpression' ===
                                  e.node.body[0].type
                                ? e.node.body[0].expression
                                : e.node
                              : 'JsExpressionRoot' === e.type
                              ? e.node
                              : e;
                          !n ||
                            ('ObjectExpression' !== n.type &&
                              'ArrayExpression' !== n.type &&
                              ('__vue_expression' !== t.parser ||
                                ('TemplateLiteral' !== n.type &&
                                  'StringLiteral' !== n.type))) ||
                            (a = !0);
                        },
                        o = function (e) {
                          var t =
                            !(
                              arguments.length > 1 && void 0 !== arguments[1]
                            ) || arguments[1];
                          return GT(Nk([YT(Nk([ek, e])), t ? ek : '']));
                        },
                        s = function (e) {
                          return a
                            ? (function (e) {
                                return GT(e);
                              })(e)
                            : o(e);
                        },
                        l = function (e, n) {
                          return t(
                            e,
                            Object.assign({ __onHtmlBindingRoot: i }, n)
                          );
                        };
                      if (
                        'srcset' === e.fullName &&
                        ('img' === e.parent.fullName ||
                          'source' === e.parent.fullName)
                      )
                        return o(Tk(u()));
                      if ('class' === e.fullName && !n.parentParser) {
                        var c = u();
                        if (!c.includes('{{')) return kk(c);
                      }
                      if ('style' === e.fullName && !n.parentParser) {
                        var p = u();
                        if (!p.includes('{{'))
                          return o(
                            l(p, { parser: 'css', __isHTMLStyleAttribute: !0 })
                          );
                      }
                      if ('vue' === n.parser) {
                        if ('v-for' === e.fullName) return Sk(u(), l);
                        if (gk(e) || mk(e, n)) return wk(u(), l);
                        if (r(['^@', '^v-on:'])) {
                          var f = u();
                          return s(
                            l(f, {
                              parser: Bk(f)
                                ? '__js_expression'
                                : '__vue_event_binding',
                            })
                          );
                        }
                        if (r(['^:', '^v-bind:']))
                          return s(l(u(), { parser: '__vue_expression' }));
                        if (r(['^v-']))
                          return s(l(u(), { parser: '__js_expression' }));
                      }
                      if ('angular' === n.parser) {
                        var d = function (e, t) {
                          return l(
                            e,
                            Object.assign({}, t, { trailingComma: 'none' })
                          );
                        };
                        if (r(['^\\(.+\\)$', '^on-']))
                          return s(d(u(), { parser: '__ng_action' }));
                        if (
                          r([
                            '^\\[.+\\]$',
                            '^bind(on)?-',
                            '^ng-(if|show|hide|class|style)$',
                          ])
                        )
                          return s(d(u(), { parser: '__ng_binding' }));
                        if (r(['^i18n(-.+)?$'])) {
                          var h = u().trim();
                          return o(zT(Zk(e, h)), !h.includes('@@'));
                        }
                        if (r(['^\\*']))
                          return s(d(u(), { parser: '__ng_directive' }));
                        var g = /{{([\S\s]+?)}}/g,
                          m = u();
                        if (g.test(m)) {
                          var y = [];
                          return (
                            m.split(g).forEach(function (e, n) {
                              if (n % 2 == 0) y.push(Nk(qT(e, ZT)));
                              else
                                try {
                                  y.push(
                                    GT(
                                      Nk([
                                        '{{',
                                        YT(
                                          Nk([
                                            QT,
                                            d(e, {
                                              parser: '__ng_interpolation',
                                              __isInHtmlInterpolation: !0,
                                            }),
                                          ])
                                        ),
                                        QT,
                                        '}}',
                                      ])
                                    )
                                  );
                                } catch (t) {
                                  y.push('{{', Nk(qT(e, ZT)), '}}');
                                }
                            }),
                            GT(Nk(y))
                          );
                        }
                      }
                      return null;
                    })(
                      u,
                      function (e, t) {
                        return n(
                          e,
                          Object.assign({ __isInHtmlAttribute: !0 }, t),
                          { stripTrailingHardline: !0 }
                        );
                      },
                      r
                    );
                    if (h)
                      return Nk([
                        u.rawName,
                        '="',
                        GT(
                          $T(h, function (e) {
                            return 'string' == typeof e
                              ? e.replace(/"/g, '&quot;')
                              : e;
                          })
                        ),
                        '"',
                      ]);
                    break;
                  case 'front-matter':
                    return WT(u, n);
                }
              },
            },
            tN = {
              htmlWhitespaceSensitivity: {
                since: '1.15.0',
                category: 'HTML',
                type: 'choice',
                default: 'css',
                description: 'How to handle whitespaces in HTML.',
                choices: [
                  {
                    value: 'css',
                    description:
                      'Respect the default value of CSS display property.',
                  },
                  {
                    value: 'strict',
                    description: 'Whitespaces are considered sensitive.',
                  },
                  {
                    value: 'ignore',
                    description: 'Whitespaces are considered insensitive.',
                  },
                ],
              },
              vueIndentScriptAndStyle: {
                since: '1.19.0',
                category: 'HTML',
                type: 'boolean',
                default: !1,
                description: 'Indent script and style tags in Vue files.',
              },
            },
            nN = {
              name: 'HTML',
              type: 'markup',
              tmScope: 'text.html.basic',
              aceMode: 'html',
              codemirrorMode: 'htmlmixed',
              codemirrorMimeType: 'text/html',
              color: '#e34c26',
              aliases: ['xhtml'],
              extensions: [
                '.html',
                '.htm',
                '.html.hl',
                '.inc',
                '.st',
                '.xht',
                '.xhtml',
              ],
              languageId: 146,
            },
            rN = {
              languages: [
                Os(nN, function () {
                  return {
                    name: 'Angular',
                    since: '1.15.0',
                    parsers: ['angular'],
                    vscodeLanguageIds: ['html'],
                    extensions: ['.component.html'],
                    filenames: [],
                  };
                }),
                Os(nN, function (e) {
                  return {
                    since: '1.15.0',
                    parsers: ['html'],
                    vscodeLanguageIds: ['html'],
                    extensions: e.extensions.concat(['.mjml']),
                  };
                }),
                Os(nN, function () {
                  return {
                    name: 'Lightning Web Components',
                    since: '1.17.0',
                    parsers: ['lwc'],
                    vscodeLanguageIds: ['html'],
                    extensions: [],
                    filenames: [],
                  };
                }),
                Os(
                  {
                    name: 'Vue',
                    type: 'markup',
                    color: '#2c3e50',
                    extensions: ['.vue'],
                    tmScope: 'text.html.vue',
                    aceMode: 'html',
                    languageId: 391,
                  },
                  function () {
                    return {
                      since: '1.10.0',
                      parsers: ['vue'],
                      vscodeLanguageIds: ['vue'],
                    };
                  }
                ),
              ],
              printers: { html: eN },
              options: tN,
              parsers: {
                get html() {
                  return {}.parsers.html;
                },
                get vue() {
                  return {}.parsers.vue;
                },
                get angular() {
                  return {}.parsers.angular;
                },
                get lwc() {
                  return {}.parsers.lwc;
                },
              },
            },
            uN = function (e) {
              return /^\s*@(prettier|format)\s*$/.test(e);
            },
            aN = function (e) {
              return '# @format\n\n'.concat(e);
            },
            iN = Ut.getLast;
          function oN(e, t) {
            return e && 'string' == typeof e.type && (!t || t.includes(e.type));
          }
          function sN(e) {
            return 'prettier-ignore' === e.value.trim();
          }
          function lN(e) {
            return e && e.leadingComments && 0 !== e.leadingComments.length;
          }
          function cN(e) {
            return e && e.middleComments && 0 !== e.middleComments.length;
          }
          function pN(e) {
            return e && e.indicatorComment;
          }
          function fN(e) {
            return e && e.trailingComment;
          }
          function dN(e) {
            return e && e.endComments && 0 !== e.endComments.length;
          }
          function hN(e) {
            var t,
              n,
              r = [],
              u = g(e.split(/( +)/g));
            try {
              for (u.s(); !(n = u.n()).done; ) {
                var a = n.value;
                ' ' !== a
                  ? ' ' === t
                    ? r.push(a)
                    : r.push((r.pop() || '') + a)
                  : void 0 === t && r.unshift(''),
                  (t = a);
              }
            } catch (i) {
              u.e(i);
            } finally {
              u.f();
            }
            return (
              ' ' === t && r.push((r.pop() || '') + ' '),
              '' === r[0] && (r.shift(), r.unshift(' ' + (r.shift() || ''))),
              r
            );
          }
          var gN = {
              getLast: iN,
              getAncestorCount: function (e, t) {
                for (var n = 0, r = e.stack.length - 1, u = 0; u < r; u++) {
                  var a = e.stack[u];
                  oN(a) && t(a) && n++;
                }
                return n;
              },
              isNode: oN,
              isEmptyNode: function (e) {
                return !(
                  (e.children && 0 !== e.children.length) ||
                  (function (e) {
                    return lN(e) || cN(e) || pN(e) || fN(e) || dN(e);
                  })(e)
                );
              },
              mapNode: function e(t, n, r) {
                return n(
                  'children' in t
                    ? Object.assign({}, t, {
                        children: t.children.map(function (r) {
                          return e(r, n, t);
                        }),
                      })
                    : t,
                  r
                );
              },
              defineShortcut: function (e, t, n) {
                Object.defineProperty(e, t, { get: n, enumerable: !1 });
              },
              isNextLineEmpty: function (e, t) {
                for (
                  var n = 0, r = t.length, u = e.position.end.offset - 1;
                  u < r;
                  u++
                ) {
                  var a = t[u];
                  if (('\n' === a && n++, 1 === n && /\S/.test(a))) return !1;
                  if (2 === n) return !0;
                }
                return !1;
              },
              isLastDescendantNode: function (e) {
                switch (e.getValue().type) {
                  case 'tag':
                  case 'anchor':
                  case 'comment':
                    return !1;
                }
                for (var t = e.stack.length, n = 1; n < t; n++) {
                  var r = e.stack[n],
                    u = e.stack[n - 1];
                  if (
                    Array.isArray(u) &&
                    'number' == typeof r &&
                    r !== u.length - 1
                  )
                    return !1;
                }
                return !0;
              },
              getBlockValueLineContents: function (e, t) {
                var n,
                  r = t.parentIndent,
                  u = t.isLastDescendant,
                  a = t.options,
                  i =
                    e.position.start.line === e.position.end.line
                      ? ''
                      : a.originalText
                          .slice(e.position.start.offset, e.position.end.offset)
                          .match(/^[^\n]*?\n([\S\s]*)$/)[1],
                  o =
                    null === e.indent
                      ? (n = i.match(/^( *)\S/m))
                        ? n[1].length
                        : 1 / 0
                      : e.indent - 1 + r,
                  s = i.split('\n').map(function (e) {
                    return e.slice(o);
                  });
                return 'preserve' === a.proseWrap || 'blockLiteral' === e.type
                  ? l(
                      s.map(function (e) {
                        return 0 === e.length ? [] : [e];
                      })
                    )
                  : l(
                      s
                        .map(function (e) {
                          return 0 === e.length ? [] : hN(e);
                        })
                        .reduce(function (e, t, n) {
                          return 0 === n ||
                            0 === s[n - 1].length ||
                            0 === t.length ||
                            /^\s/.test(t[0]) ||
                            /^\s|\s$/.test(iN(e))
                            ? e.concat([t])
                            : e.concat([e.pop().concat(t)]);
                        }, [])
                        .map(function (e) {
                          return e.reduce(function (e, t) {
                            return 0 !== e.length && /\s$/.test(iN(e))
                              ? e.concat(e.pop() + ' ' + t)
                              : e.concat(t);
                          }, []);
                        })
                        .map(function (e) {
                          return 'never' === a.proseWrap ? [e.join(' ')] : e;
                        })
                    );
                function l(t) {
                  if ('keep' === e.chomping)
                    return 0 === iN(t).length ? t.slice(0, -1) : t;
                  for (
                    var n = 0, r = t.length - 1;
                    r >= 0 && 0 === t[r].length;
                    r--
                  )
                    n++;
                  return 0 === n
                    ? t
                    : n >= 2 && !u
                    ? t.slice(0, -(n - 1))
                    : t.slice(0, -n);
                }
              },
              getFlowScalarLineContents: function (e, t, n) {
                var r = t.split('\n').map(function (e, t, n) {
                  return 0 === t && t === n.length - 1
                    ? e
                    : 0 !== t && t !== n.length - 1
                    ? e.trim()
                    : 0 === t
                    ? e.trimEnd()
                    : e.trimStart();
                });
                return 'preserve' === n.proseWrap
                  ? r.map(function (e) {
                      return 0 === e.length ? [] : [e];
                    })
                  : r
                      .map(function (e) {
                        return 0 === e.length ? [] : hN(e);
                      })
                      .reduce(function (t, n, u) {
                        return 0 === u ||
                          0 === r[u - 1].length ||
                          0 === n.length ||
                          ('quoteDouble' === e && iN(iN(t)).endsWith('\\'))
                          ? t.concat([n])
                          : t.concat([t.pop().concat(n)]);
                      }, [])
                      .map(function (e) {
                        return 'never' === n.proseWrap ? [e.join(' ')] : e;
                      });
              },
              getLastDescendantNode: function e(t) {
                return 'children' in t && 0 !== t.children.length
                  ? e(iN(t.children))
                  : t;
              },
              hasPrettierIgnore: function (e) {
                var t = e.getValue();
                if ('documentBody' === t.type) {
                  var n = e.getParentNode();
                  return dN(n.head) && sN(iN(n.head.endComments));
                }
                return lN(t) && sN(iN(t.leadingComments));
              },
              hasLeadingComments: lN,
              hasMiddleComments: cN,
              hasIndicatorComment: pN,
              hasTrailingComment: fN,
              hasEndComments: dN,
            },
            mN = vn.builders,
            yN = mN.conditionalGroup,
            DN = mN.breakParent,
            vN = mN.concat,
            EN = mN.dedent,
            CN = mN.dedentToRoot,
            bN = mN.fill,
            AN = mN.group,
            FN = mN.hardline,
            xN = mN.ifBreak,
            SN = mN.join,
            wN = mN.line,
            BN = mN.lineSuffix,
            TN = mN.literalline,
            kN = mN.markAsRoot,
            NN = mN.softline,
            ON = Ut.replaceEndOfLineWith,
            PN = Ut.isPreviousLineEmpty,
            MN = aN,
            IN = uN,
            jN = function (e) {
              return e.position.start.offset;
            },
            LN = gN.getAncestorCount,
            _N = gN.getBlockValueLineContents,
            RN = gN.getFlowScalarLineContents,
            $N = gN.getLast,
            VN = gN.getLastDescendantNode,
            qN = gN.hasLeadingComments,
            WN = gN.hasMiddleComments,
            UN = gN.hasIndicatorComment,
            JN = gN.hasTrailingComment,
            zN = gN.hasEndComments,
            GN = gN.hasPrettierIgnore,
            HN = gN.isLastDescendantNode,
            XN = gN.isNextLineEmpty,
            YN = gN.isNode,
            KN = gN.isEmptyNode,
            QN = gN.defineShortcut,
            ZN = gN.mapNode;
          function eO(e) {
            switch (e.type) {
              case 'document':
                QN(e, 'head', function () {
                  return e.children[0];
                }),
                  QN(e, 'body', function () {
                    return e.children[1];
                  });
                break;
              case 'documentBody':
              case 'sequenceItem':
              case 'flowSequenceItem':
              case 'mappingKey':
              case 'mappingValue':
                QN(e, 'content', function () {
                  return e.children[0];
                });
                break;
              case 'mappingItem':
              case 'flowMappingItem':
                QN(e, 'key', function () {
                  return e.children[0];
                }),
                  QN(e, 'value', function () {
                    return e.children[1];
                  });
            }
            return e;
          }
          function tO(e, t, n, r, u) {
            switch (e.type) {
              case 'root':
                return vN([
                  SN(
                    FN,
                    n.map(function (t, r) {
                      var a = e.children[r],
                        i = e.children[r + 1];
                      return vN([
                        u(t),
                        aO(a, i)
                          ? vN([
                              FN,
                              '...',
                              JN(a)
                                ? vN([' ', n.call(u, 'trailingComment')])
                                : '',
                            ])
                          : !i || JN(i.head)
                          ? ''
                          : vN([FN, '---']),
                      ]);
                    }, 'children')
                  ),
                  0 === e.children.length ||
                  ((x = VN(e)),
                  YN(x, ['blockLiteral', 'blockFolded']) &&
                    'keep' === x.chomping)
                    ? ''
                    : FN,
                ]);
              case 'document':
                var a = t.children[n.getName() + 1];
                return SN(
                  FN,
                  [
                    'head' === iO(e, a, t, r)
                      ? SN(
                          FN,
                          [
                            0 === e.head.children.length &&
                            0 === e.head.endComments.length
                              ? ''
                              : n.call(u, 'head'),
                            vN([
                              '---',
                              JN(e.head)
                                ? vN([
                                    ' ',
                                    n.call(u, 'head', 'trailingComment'),
                                  ])
                                : '',
                            ]),
                          ].filter(Boolean)
                        )
                      : '',
                    uO(e) ? n.call(u, 'body') : '',
                  ].filter(Boolean)
                );
              case 'documentHead':
                return SN(
                  FN,
                  [].concat(n.map(u, 'children'), n.map(u, 'endComments'))
                );
              case 'documentBody':
                var i = SN(FN, n.map(u, 'children')).parts,
                  o = SN(FN, n.map(u, 'endComments')).parts,
                  s =
                    0 === i.length || 0 === o.length
                      ? ''
                      : (function (e) {
                          return YN(e, ['blockFolded', 'blockLiteral'])
                            ? 'keep' === e.chomping
                              ? ''
                              : vN([FN, FN])
                            : FN;
                        })(VN(e));
                return vN([].concat(i, s, o));
              case 'directive':
                return vN(['%', SN(' ', [e.name].concat(e.parameters))]);
              case 'comment':
                return vN(['#', e.value]);
              case 'alias':
                return vN(['*', e.value]);
              case 'tag':
                return r.originalText.slice(
                  e.position.start.offset,
                  e.position.end.offset
                );
              case 'anchor':
                return vN(['&', e.value]);
              case 'plain':
                return fO(
                  e.type,
                  r.originalText.slice(
                    e.position.start.offset,
                    e.position.end.offset
                  ),
                  r
                );
              case 'quoteDouble':
              case 'quoteSingle':
                var l = r.originalText.slice(
                  e.position.start.offset + 1,
                  e.position.end.offset - 1
                );
                if (
                  ('quoteSingle' === e.type && l.includes('\\')) ||
                  ('quoteDouble' === e.type && /\\[^"]/.test(l))
                ) {
                  var c = 'quoteDouble' === e.type ? '"' : "'";
                  return vN([c, fO(e.type, l, r), c]);
                }
                if (l.includes('"'))
                  return vN([
                    "'",
                    fO(
                      e.type,
                      'quoteDouble' === e.type
                        ? l.replace(/\\"/g, '"').replace(/'/g, "'".repeat(2))
                        : l,
                      r
                    ),
                    "'",
                  ]);
                if (l.includes("'"))
                  return vN([
                    '"',
                    fO(
                      e.type,
                      'quoteSingle' === e.type ? l.replace(/''/g, "'") : l,
                      r
                    ),
                    '"',
                  ]);
                var p = r.singleQuote ? "'" : '"';
                return vN([p, fO(e.type, l, r), p]);
              case 'blockFolded':
              case 'blockLiteral':
                var f = LN(n, function (e) {
                    return YN(e, ['sequence', 'mapping']);
                  }),
                  d = HN(n);
                return vN([
                  'blockFolded' === e.type ? '>' : '|',
                  null === e.indent ? '' : e.indent.toString(),
                  'clip' === e.chomping
                    ? ''
                    : 'keep' === e.chomping
                    ? '+'
                    : '-',
                  UN(e) ? vN([' ', n.call(u, 'indicatorComment')]) : '',
                  (null === e.indent ? EN : CN)(
                    nO(
                      null === e.indent ? r.tabWidth : e.indent - 1 + f,
                      vN(
                        _N(e, {
                          parentIndent: f,
                          isLastDescendant: d,
                          options: r,
                        }).reduce(function (t, n, r, u) {
                          return t.concat(
                            0 === r ? FN : '',
                            bN(SN(wN, n).parts),
                            r !== u.length - 1
                              ? 0 === n.length
                                ? FN
                                : kN(TN)
                              : 'keep' === e.chomping && d
                              ? 0 === n.length
                                ? CN(FN)
                                : CN(TN)
                              : ''
                          );
                        }, [])
                      )
                    )
                  ),
                ]);
              case 'sequence':
                return SN(FN, n.map(u, 'children'));
              case 'sequenceItem':
                return vN(['- ', nO(2, e.content ? n.call(u, 'content') : '')]);
              case 'mappingKey':
              case 'mappingValue':
                return e.content ? n.call(u, 'content') : '';
              case 'mapping':
                return SN(FN, n.map(u, 'children'));
              case 'mappingItem':
              case 'flowMappingItem':
                var h = KN(e.key),
                  g = KN(e.value);
                if (h && g) return vN([': ']);
                var m = n.call(u, 'key'),
                  y = n.call(u, 'value');
                if (g)
                  return 'flowMappingItem' === e.type &&
                    'flowMapping' === t.type
                    ? m
                    : 'mappingItem' !== e.type ||
                      !oO(e.key.content, r) ||
                      JN(e.key.content) ||
                      (t.tag && 'tag:yaml.org,2002:set' === t.tag.value)
                    ? vN(['? ', nO(2, m)])
                    : vN([m, sO(e) ? ' ' : '', ':']);
                if (h) return vN([': ', nO(2, y)]);
                var D = Symbol('mappingKey');
                return qN(e.value) || !rO(e.key.content)
                  ? vN([
                      '? ',
                      nO(2, m),
                      FN,
                      SN(
                        '',
                        n.map(u, 'value', 'leadingComments').map(function (e) {
                          return vN([e, FN]);
                        })
                      ),
                      ': ',
                      nO(2, y),
                    ])
                  : !(function (e) {
                      if (!e) return !0;
                      switch (e.type) {
                        case 'plain':
                        case 'quoteDouble':
                        case 'quoteSingle':
                          return e.position.start.line === e.position.end.line;
                        case 'alias':
                          return !0;
                        default:
                          return !1;
                      }
                    })(e.key.content) ||
                    qN(e.key.content) ||
                    WN(e.key.content) ||
                    JN(e.key.content) ||
                    zN(e.key) ||
                    qN(e.value.content) ||
                    WN(e.value.content) ||
                    zN(e.value) ||
                    !oO(e.value.content, r)
                  ? yN([
                      vN([
                        AN(vN([xN('? '), AN(nO(2, m), { id: D })])),
                        xN(
                          vN([FN, ': ', nO(2, y)]),
                          S(
                            vN([
                              sO(e) ? ' ' : '',
                              ':',
                              qN(e.value.content) ||
                              (zN(e.value) &&
                                e.value.content &&
                                !YN(e.value.content, [
                                  'mapping',
                                  'sequence',
                                ])) ||
                              ('mapping' === t.type &&
                                JN(e.key.content) &&
                                rO(e.value.content)) ||
                              (YN(e.value.content, ['mapping', 'sequence']) &&
                                null === e.value.content.tag &&
                                null === e.value.content.anchor)
                                ? FN
                                : e.value.content
                                ? wN
                                : '',
                              y,
                            ])
                          ),
                          { groupId: D }
                        ),
                      ]),
                    ])
                  : vN([m, sO(e) ? ' ' : '', ': ', y]);
              case 'flowMapping':
              case 'flowSequence':
                var v = 'flowMapping' === e.type ? '{' : '[',
                  E = 'flowMapping' === e.type ? '}' : ']',
                  C =
                    'flowMapping' === e.type &&
                    0 !== e.children.length &&
                    r.bracketSpacing
                      ? wN
                      : NN,
                  b =
                    0 !== e.children.length &&
                    'flowMappingItem' === (F = $N(e.children)).type &&
                    KN(F.key) &&
                    KN(F.value),
                  A = 'none' === r.trailingComma ? '' : xN(',', '');
                return vN([
                  v,
                  S(
                    vN([
                      C,
                      vN(
                        n.map(function (t, n) {
                          return vN([
                            u(t),
                            n === e.children.length - 1
                              ? ''
                              : vN([
                                  ',',
                                  wN,
                                  e.children[n].position.start.line !==
                                  e.children[n + 1].position.start.line
                                    ? pO(t, r.originalText)
                                    : '',
                                ]),
                          ]);
                        }, 'children')
                      ),
                      A,
                      zN(e) ? vN([FN, SN(FN, n.map(u, 'endComments'))]) : '',
                    ])
                  ),
                  b ? '' : C,
                  E,
                ]);
              case 'flowSequenceItem':
                return n.call(u, 'content');
              default:
                throw new Error('Unexpected node type '.concat(e.type));
            }
            var F, x;
            function S(e) {
              return mN.align(' '.repeat(r.tabWidth), e);
            }
          }
          function nO(e, t) {
            return 'number' == typeof e && e > 0
              ? mN.align(' '.repeat(e), t)
              : mN.align(e, t);
          }
          function rO(e) {
            if (!e) return !0;
            switch (e.type) {
              case 'plain':
              case 'quoteDouble':
              case 'quoteSingle':
              case 'alias':
              case 'flowMapping':
              case 'flowSequence':
                return !0;
              default:
                return !1;
            }
          }
          function uO(e) {
            return 0 !== e.body.children.length || zN(e.body);
          }
          function aO(e, t) {
            return JN(e) || (t && (0 !== t.head.children.length || zN(t.head)));
          }
          function iO(e, t, n, r) {
            return (n.children[0] === e &&
              /---(\s|$)/.test(r.originalText.slice(jN(e), jN(e) + 4))) ||
              0 !== e.head.children.length ||
              zN(e.head) ||
              JN(e.head)
              ? 'head'
              : !aO(e, t) && !!t && 'root';
          }
          function oO(e, t) {
            if (!e) return !0;
            switch (e.type) {
              case 'plain':
              case 'quoteSingle':
              case 'quoteDouble':
                break;
              case 'alias':
                return !0;
              default:
                return !1;
            }
            if ('preserve' === t.proseWrap)
              return e.position.start.line === e.position.end.line;
            if (
              /\\$/m.test(
                t.originalText.slice(
                  e.position.start.offset,
                  e.position.end.offset
                )
              )
            )
              return !1;
            switch (t.proseWrap) {
              case 'never':
                return !e.value.includes('\n');
              case 'always':
                return !/[\n ]/.test(e.value);
              default:
                return !1;
            }
          }
          function sO(e) {
            return e.key.content && 'alias' === e.key.content.type;
          }
          function lO(e) {
            return (
              zN(e) &&
              !YN(e, [
                'documentHead',
                'documentBody',
                'flowMapping',
                'flowSequence',
              ])
            );
          }
          var cO = new WeakMap();
          function pO(e, t) {
            var n,
              r = e.getValue(),
              u = e.stack[0];
            return (
              cO.has(u) ? (n = cO.get(u)) : ((n = new Set()), cO.set(u, n)),
              n.has(r.position.end.line) ||
              (n.add(r.position.end.line), !XN(r, t) || lO(e.getParentNode()))
                ? ''
                : NN
            );
          }
          function fO(e, t, n) {
            var r = RN(e, t, n);
            return SN(
              FN,
              r.map(function (e) {
                return bN(SN(wN, e).parts);
              })
            );
          }
          var dO = {
              preprocess: function (e) {
                return ZN(e, eO);
              },
              print: function (e, t, n) {
                var r = e.getValue(),
                  u = e.getParentNode(),
                  a = r.tag ? e.call(n, 'tag') : '',
                  i = r.anchor ? e.call(n, 'anchor') : '',
                  o =
                    YN(r, [
                      'mapping',
                      'sequence',
                      'comment',
                      'directive',
                      'mappingItem',
                      'sequenceItem',
                    ]) && !HN(e)
                      ? pO(e, t.originalText)
                      : '';
                return vN([
                  'mappingValue' !== r.type && qN(r)
                    ? vN([SN(FN, e.map(n, 'leadingComments')), FN])
                    : '',
                  a,
                  a && i ? ' ' : '',
                  i,
                  a || i
                    ? YN(r, ['sequence', 'mapping']) && !WN(r)
                      ? FN
                      : ' '
                    : '',
                  WN(r)
                    ? vN([
                        1 === r.middleComments.length ? '' : FN,
                        SN(FN, e.map(n, 'middleComments')),
                        FN,
                      ])
                    : '',
                  GN(e)
                    ? vN(
                        ON(
                          t.originalText
                            .slice(
                              r.position.start.offset,
                              r.position.end.offset
                            )
                            .trimEnd(),
                          TN
                        )
                      )
                    : AN(tO(r, u, e, t, n)),
                  JN(r) && !YN(r, ['document', 'documentHead'])
                    ? BN(
                        vN([
                          'mappingValue' !== r.type || r.content ? ' ' : '',
                          'mappingKey' === u.type &&
                          'mapping' === e.getParentNode(2).type &&
                          rO(r)
                            ? ''
                            : DN,
                          e.call(n, 'trailingComment'),
                        ])
                      )
                    : '',
                  lO(r)
                    ? nO(
                        'sequenceItem' === r.type ? 2 : 0,
                        vN([
                          FN,
                          SN(
                            FN,
                            e.map(function (e) {
                              return vN([
                                PN(t.originalText, e.getValue(), jN) ? FN : '',
                                n(e),
                              ]);
                            }, 'endComments')
                          ),
                        ])
                      )
                    : '',
                  o,
                ]);
              },
              massageAstNode: function (e, t) {
                if (YN(t))
                  switch ((delete t.position, t.type)) {
                    case 'comment':
                      if (IN(t.value)) return null;
                      break;
                    case 'quoteDouble':
                    case 'quoteSingle':
                      t.type = 'quote';
                  }
              },
              insertPragma: MN,
            },
            hO = {
              bracketSpacing: _C.bracketSpacing,
              singleQuote: _C.singleQuote,
              proseWrap: _C.proseWrap,
            },
            gO = o,
            mO = Ft,
            yO = [
              WC,
              kF,
              zx,
              hS,
              Gw,
              rN,
              {
                languages: [
                  Os(
                    {
                      name: 'YAML',
                      type: 'data',
                      color: '#cb171e',
                      tmScope: 'source.yaml',
                      aliases: ['yml'],
                      extensions: [
                        '.yml',
                        '.mir',
                        '.reek',
                        '.rviz',
                        '.sublime-syntax',
                        '.syntax',
                        '.yaml',
                        '.yaml-tmlanguage',
                        '.yaml.sed',
                        '.yml.mysql',
                      ],
                      filenames: [
                        '.clang-format',
                        '.clang-tidy',
                        '.gemrc',
                        'glide.lock',
                        'yarn.lock',
                      ],
                      aceMode: 'yaml',
                      codemirrorMode: 'yaml',
                      codemirrorMimeType: 'text/x-yaml',
                      languageId: 407,
                    },
                    function (e) {
                      return {
                        since: '1.14.0',
                        parsers: ['yaml'],
                        vscodeLanguageIds: [
                          'yaml',
                          'ansible',
                          'home-assistant',
                        ],
                        filenames: e.filenames.filter(function (e) {
                          return 'yarn.lock' !== e;
                        }),
                      };
                    }
                  ),
                ],
                printers: { yaml: dO },
                options: hO,
                parsers: {
                  get yaml() {
                    return {}.parsers.yaml;
                  },
                },
              },
            ].map(function (t) {
              return e(t, ['parsers']);
            });
          function DO(e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1;
            return function () {
              for (
                var n = arguments.length, r = new Array(n), u = 0;
                u < n;
                u++
              )
                r[u] = arguments[u];
              var a = r[t] || {},
                i = a.plugins || [];
              return (
                (r[t] = Object.assign({}, a, {
                  plugins: [].concat(
                    m(yO),
                    m(Array.isArray(i) ? i : Object.values(i))
                  ),
                })),
                e.apply(void 0, r)
              );
            };
          }
          var vO = DO(xs);
          return {
            formatWithCursor: vO,
            format: function (e, t) {
              return vO(e, t).formatted;
            },
            check: function (e, t) {
              return vO(e, t).formatted === e;
            },
            doc: vn,
            getSupportInfo: DO(mO, 0),
            version: gO,
            util: Ns,
            __debug: {
              parse: DO(Ss),
              formatAST: DO(ws),
              formatDoc: DO(Bs),
              printToDoc: DO(Ts),
              printDocToString: DO(ks),
            },
          };
        });
      },
      {},
    ],
    Jidm: [
      function (require, module, exports) {
        var define;
        var e;
        function n(e, n) {
          return a(e) || o(e, n) || i(e, n) || t();
        }
        function t() {
          throw new TypeError(
            'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
          );
        }
        function i(e, n) {
          if (e) {
            if ('string' == typeof e) return r(e, n);
            var t = Object.prototype.toString.call(e).slice(8, -1);
            return (
              'Object' === t && e.constructor && (t = e.constructor.name),
              'Map' === t || 'Set' === t
                ? Array.from(e)
                : 'Arguments' === t ||
                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)
                ? r(e, n)
                : void 0
            );
          }
        }
        function r(e, n) {
          (null == n || n > e.length) && (n = e.length);
          for (var t = 0, i = new Array(n); t < n; t++) i[t] = e[t];
          return i;
        }
        function o(e, n) {
          if ('undefined' != typeof Symbol && Symbol.iterator in Object(e)) {
            var t = [],
              i = !0,
              r = !1,
              o = void 0;
            try {
              for (
                var a, s = e[Symbol.iterator]();
                !(i = (a = s.next()).done) &&
                (t.push(a.value), !n || t.length !== n);
                i = !0
              );
            } catch (c) {
              (r = !0), (o = c);
            } finally {
              try {
                i || null == s.return || s.return();
              } finally {
                if (r) throw o;
              }
            }
            return t;
          }
        }
        function a(e) {
          if (Array.isArray(e)) return e;
        }
        function s(e) {
          return (s =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (e) {
                  return typeof e;
                }
              : function (e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e;
                })(e);
        }
        !(function (n, t) {
          'object' ==
            ('undefined' == typeof exports ? 'undefined' : s(exports)) &&
          'undefined' != typeof module
            ? (module.exports = t())
            : 'function' == typeof e && e.amd
            ? e(t)
            : (((n =
                'undefined' != typeof globalThis
                  ? globalThis
                  : n || self).prettierPlugins = n.prettierPlugins || {}),
              (n.prettierPlugins.graphql = t()));
        })(this, function () {
          'use strict';
          var e = function (e) {
              return 'number' == typeof e.start
                ? e.start
                : e.loc && e.loc.start;
            },
            t = function (e) {
              return 'number' == typeof e.end ? e.end : e.loc && e.loc.end;
            };
          function i(e, n, t) {
            return (
              e(
                (t = {
                  path: n,
                  exports: {},
                  require: function (e, n) {
                    return (function () {
                      throw new Error(
                        'Dynamic requires are not currently supported by @rollup/plugin-commonjs'
                      );
                    })(null == n && t.path);
                  },
                }),
                t.exports
              ),
              t.exports
            );
          }
          var r = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.SYMBOL_TO_STRING_TAG = n.SYMBOL_ASYNC_ITERATOR = n.SYMBOL_ITERATOR = void 0);
              var t =
                'function' == typeof Symbol && null != Symbol.iterator
                  ? Symbol.iterator
                  : '@@iterator';
              n.SYMBOL_ITERATOR = t;
              var i =
                'function' == typeof Symbol && null != Symbol.asyncIterator
                  ? Symbol.asyncIterator
                  : '@@asyncIterator';
              n.SYMBOL_ASYNC_ITERATOR = i;
              var r =
                'function' == typeof Symbol && null != Symbol.toStringTag
                  ? Symbol.toStringTag
                  : '@@toStringTag';
              n.SYMBOL_TO_STRING_TAG = r;
            }),
            o = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.default = void 0);
              var t =
                'function' == typeof Symbol && 'function' == typeof Symbol.for
                  ? Symbol.for('nodejs.util.inspect.custom')
                  : void 0;
              n.default = t;
            }),
            a = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.default = function (e) {
                  return (function e(n, t) {
                    switch (r(n)) {
                      case 'string':
                        return JSON.stringify(n);
                      case 'function':
                        return n.name
                          ? '[function '.concat(n.name, ']')
                          : '[function]';
                      case 'object':
                        return null === n
                          ? 'null'
                          : (function (n, t) {
                              if (-1 !== t.indexOf(n)) return '[Circular]';
                              var r = [].concat(t, [n]),
                                o = (function (e) {
                                  var n = e[String(i.default)];
                                  return 'function' == typeof n
                                    ? n
                                    : 'function' == typeof e.inspect
                                    ? e.inspect
                                    : void 0;
                                })(n);
                              if (void 0 !== o) {
                                var a = o.call(n);
                                if (a !== n)
                                  return 'string' == typeof a ? a : e(a, r);
                              } else if (Array.isArray(n))
                                return (function (n, t) {
                                  if (0 === n.length) return '[]';
                                  if (t.length > 2) return '[Array]';
                                  for (
                                    var i = Math.min(10, n.length),
                                      r = n.length - i,
                                      o = [],
                                      a = 0;
                                    a < i;
                                    ++a
                                  )
                                    o.push(e(n[a], t));
                                  return (
                                    1 === r
                                      ? o.push('... 1 more item')
                                      : r > 1 &&
                                        o.push('... '.concat(r, ' more items')),
                                    '[' + o.join(', ') + ']'
                                  );
                                })(n, r);
                              return (function (n, t) {
                                var i = Object.keys(n);
                                return 0 === i.length
                                  ? '{}'
                                  : t.length > 2
                                  ? '[' +
                                    (function (e) {
                                      var n = Object.prototype.toString
                                        .call(e)
                                        .replace(/^\[object /, '')
                                        .replace(/]$/, '');
                                      if (
                                        'Object' === n &&
                                        'function' == typeof e.constructor
                                      ) {
                                        var t = e.constructor.name;
                                        if ('string' == typeof t && '' !== t)
                                          return t;
                                      }
                                      return n;
                                    })(n) +
                                    ']'
                                  : '{ ' +
                                    i
                                      .map(function (i) {
                                        return i + ': ' + e(n[i], t);
                                      })
                                      .join(', ') +
                                    ' }';
                              })(n, r);
                            })(n, t);
                      default:
                        return String(n);
                    }
                  })(e, []);
                });
              var t,
                i = (t = o) && t.__esModule ? t : { default: t };
              function r(e) {
                return (r =
                  'function' == typeof Symbol && 'symbol' == s(Symbol.iterator)
                    ? function (e) {
                        return s(e);
                      }
                    : function (e) {
                        return e &&
                          'function' == typeof Symbol &&
                          e.constructor === Symbol &&
                          e !== Symbol.prototype
                          ? 'symbol'
                          : s(e);
                      })(e);
              }
            }),
            c = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.default = function (e, n) {
                  if (!Boolean(e)) throw new Error(n);
                });
            }),
            u = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.default = void 0),
                (n.default = function (e, n) {
                  return e instanceof n;
                });
            }),
            l = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.isSource = function (e) {
                  return (0, o.default)(e, d);
                }),
                (n.Source = void 0);
              var t = s(a),
                i = s(c),
                o = s(u);
              function s(e) {
                return e && e.__esModule ? e : { default: e };
              }
              function l(e, n) {
                for (var t = 0; t < n.length; t++) {
                  var i = n[t];
                  (i.enumerable = i.enumerable || !1),
                    (i.configurable = !0),
                    'value' in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i);
                }
              }
              var d = (function () {
                function e(e) {
                  var n =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : 'GraphQL request',
                    r =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : { line: 1, column: 1 };
                  'string' == typeof e ||
                    (0, i.default)(
                      0,
                      'Body must be a string. Received: '.concat(
                        (0, t.default)(e),
                        '.'
                      )
                    ),
                    (this.body = e),
                    (this.name = n),
                    (this.locationOffset = r),
                    this.locationOffset.line > 0 ||
                      (0, i.default)(
                        0,
                        'line in locationOffset is 1-indexed and must be positive.'
                      ),
                    this.locationOffset.column > 0 ||
                      (0, i.default)(
                        0,
                        'column in locationOffset is 1-indexed and must be positive.'
                      );
                }
                var n, o;
                return (
                  (n = e),
                  (o = [
                    {
                      key: r.SYMBOL_TO_STRING_TAG,
                      get: function () {
                        return 'Source';
                      },
                    },
                  ]) && l(n.prototype, o),
                  e
                );
              })();
              n.Source = d;
            }),
            d = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.getLocation = function (e, n) {
                  for (
                    var t, i = /\r\n|[\n\r]/g, r = 1, o = n + 1;
                    (t = i.exec(e.body)) && t.index < n;

                  )
                    (r += 1), (o = n + 1 - (t.index + t[0].length));
                  return { line: r, column: o };
                });
            }),
            p = i(function (e, n) {
              function t(e, n) {
                var t = e.locationOffset.column - 1,
                  o = r(t) + e.body,
                  a = n.line - 1,
                  s = e.locationOffset.line - 1,
                  c = n.line + s,
                  u = 1 === n.line ? t : 0,
                  l = n.column + u,
                  d = ''.concat(e.name, ':').concat(c, ':').concat(l, '\n'),
                  p = o.split(/\r\n|[\n\r]/g),
                  f = p[a];
                if (f.length > 120) {
                  for (
                    var h = Math.floor(l / 80), T = l % 80, v = [], E = 0;
                    E < f.length;
                    E += 80
                  )
                    v.push(f.slice(E, E + 80));
                  return (
                    d +
                    i(
                      [[''.concat(c), v[0]]].concat(
                        v.slice(1, h + 1).map(function (e) {
                          return ['', e];
                        }),
                        [
                          [' ', r(T - 1) + '^'],
                          ['', v[h + 1]],
                        ]
                      )
                    )
                  );
                }
                return (
                  d +
                  i([
                    [''.concat(c - 1), p[a - 1]],
                    [''.concat(c), f],
                    ['', r(l - 1) + '^'],
                    [''.concat(c + 1), p[a + 1]],
                  ])
                );
              }
              function i(e) {
                var n = e.filter(function (e) {
                    return e[0], void 0 !== e[1];
                  }),
                  t = Math.max.apply(
                    Math,
                    n.map(function (e) {
                      return e[0].length;
                    })
                  );
                return n
                  .map(function (e) {
                    var n,
                      i = e[0],
                      o = e[1];
                    return r(t - (n = i).length) + n + (o ? ' | ' + o : ' |');
                  })
                  .join('\n');
              }
              function r(e) {
                return Array(e + 1).join(' ');
              }
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.printLocation = function (e) {
                  return t(e.source, (0, d.getLocation)(e.source, e.start));
                }),
                (n.printSourceLocation = t);
            }),
            f = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.Kind = void 0);
              var t = Object.freeze({
                NAME: 'Name',
                DOCUMENT: 'Document',
                OPERATION_DEFINITION: 'OperationDefinition',
                VARIABLE_DEFINITION: 'VariableDefinition',
                SELECTION_SET: 'SelectionSet',
                FIELD: 'Field',
                ARGUMENT: 'Argument',
                FRAGMENT_SPREAD: 'FragmentSpread',
                INLINE_FRAGMENT: 'InlineFragment',
                FRAGMENT_DEFINITION: 'FragmentDefinition',
                VARIABLE: 'Variable',
                INT: 'IntValue',
                FLOAT: 'FloatValue',
                STRING: 'StringValue',
                BOOLEAN: 'BooleanValue',
                NULL: 'NullValue',
                ENUM: 'EnumValue',
                LIST: 'ListValue',
                OBJECT: 'ObjectValue',
                OBJECT_FIELD: 'ObjectField',
                DIRECTIVE: 'Directive',
                NAMED_TYPE: 'NamedType',
                LIST_TYPE: 'ListType',
                NON_NULL_TYPE: 'NonNullType',
                SCHEMA_DEFINITION: 'SchemaDefinition',
                OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',
                SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',
                OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',
                FIELD_DEFINITION: 'FieldDefinition',
                INPUT_VALUE_DEFINITION: 'InputValueDefinition',
                INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',
                UNION_TYPE_DEFINITION: 'UnionTypeDefinition',
                ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',
                ENUM_VALUE_DEFINITION: 'EnumValueDefinition',
                INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',
                DIRECTIVE_DEFINITION: 'DirectiveDefinition',
                SCHEMA_EXTENSION: 'SchemaExtension',
                SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',
                OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',
                INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',
                UNION_TYPE_EXTENSION: 'UnionTypeExtension',
                ENUM_TYPE_EXTENSION: 'EnumTypeExtension',
                INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',
              });
              n.Kind = t;
            }),
            h = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.TokenKind = void 0);
              var t = Object.freeze({
                SOF: '<SOF>',
                EOF: '<EOF>',
                BANG: '!',
                DOLLAR: '$',
                AMP: '&',
                PAREN_L: '(',
                PAREN_R: ')',
                SPREAD: '...',
                COLON: ':',
                EQUALS: '=',
                AT: '@',
                BRACKET_L: '[',
                BRACKET_R: ']',
                BRACE_L: '{',
                PIPE: '|',
                BRACE_R: '}',
                NAME: 'Name',
                INT: 'Int',
                FLOAT: 'Float',
                STRING: 'String',
                BLOCK_STRING: 'BlockString',
                COMMENT: 'Comment',
              });
              n.TokenKind = t;
            }),
            T = i(function (e, n) {
              function t(e) {
                return (t =
                  'function' == typeof Symbol && 'symbol' == s(Symbol.iterator)
                    ? function (e) {
                        return s(e);
                      }
                    : function (e) {
                        return e &&
                          'function' == typeof Symbol &&
                          e.constructor === Symbol &&
                          e !== Symbol.prototype
                          ? 'symbol'
                          : s(e);
                      })(e);
              }
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.default = function (e) {
                  return 'object' == t(e) && null !== e;
                });
            }),
            v = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.printError = y),
                (n.GraphQLError = void 0);
              var t,
                i = (t = T) && t.__esModule ? t : { default: t };
              function o(e) {
                return (o =
                  'function' == typeof Symbol && 'symbol' == s(Symbol.iterator)
                    ? function (e) {
                        return s(e);
                      }
                    : function (e) {
                        return e &&
                          'function' == typeof Symbol &&
                          e.constructor === Symbol &&
                          e !== Symbol.prototype
                          ? 'symbol'
                          : s(e);
                      })(e);
              }
              function a(e, n) {
                for (var t = 0; t < n.length; t++) {
                  var i = n[t];
                  (i.enumerable = i.enumerable || !1),
                    (i.configurable = !0),
                    'value' in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i);
                }
              }
              function c(e, n) {
                return !n || ('object' !== o(n) && 'function' != typeof n)
                  ? u(e)
                  : n;
              }
              function u(e) {
                if (void 0 === e)
                  throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called"
                  );
                return e;
              }
              function l(e) {
                var n = 'function' == typeof Map ? new Map() : void 0;
                return (l = function (e) {
                  if (
                    null === e ||
                    ((t = e),
                    -1 === Function.toString.call(t).indexOf('[native code]'))
                  )
                    return e;
                  var t;
                  if ('function' != typeof e)
                    throw new TypeError(
                      'Super expression must either be null or a function'
                    );
                  if (void 0 !== n) {
                    if (n.has(e)) return n.get(e);
                    n.set(e, i);
                  }
                  function i() {
                    return (function (e, n, t) {
                      return (f()
                        ? Reflect.construct
                        : function (e, n, t) {
                            var i = [null];
                            i.push.apply(i, n);
                            var r = new (Function.bind.apply(e, i))();
                            return t && h(r, t.prototype), r;
                          }
                      ).apply(null, arguments);
                    })(e, arguments, v(this).constructor);
                  }
                  return (
                    (i.prototype = Object.create(e.prototype, {
                      constructor: {
                        value: i,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0,
                      },
                    })),
                    h(i, e)
                  );
                })(e);
              }
              function f() {
                if ('undefined' == typeof Reflect || !Reflect.construct)
                  return !1;
                if (Reflect.construct.sham) return !1;
                if ('function' == typeof Proxy) return !0;
                try {
                  return (
                    Date.prototype.toString.call(
                      Reflect.construct(Date, [], function () {})
                    ),
                    !0
                  );
                } catch (e) {
                  return !1;
                }
              }
              function h(e, n) {
                return (h =
                  Object.setPrototypeOf ||
                  function (e, n) {
                    return (e.__proto__ = n), e;
                  })(e, n);
              }
              function v(e) {
                return (v = Object.setPrototypeOf
                  ? Object.getPrototypeOf
                  : function (e) {
                      return e.__proto__ || Object.getPrototypeOf(e);
                    })(e);
              }
              var E = (function (e) {
                !(function (e, n) {
                  if ('function' != typeof n && null !== n)
                    throw new TypeError(
                      'Super expression must either be null or a function'
                    );
                  (e.prototype = Object.create(n && n.prototype, {
                    constructor: { value: e, writable: !0, configurable: !0 },
                  })),
                    n && h(e, n);
                })(p, e);
                var n,
                  t,
                  o,
                  s,
                  l =
                    ((n = p),
                    (t = f()),
                    function () {
                      var e,
                        i = v(n);
                      if (t) {
                        var r = v(this).constructor;
                        e = Reflect.construct(i, arguments, r);
                      } else e = i.apply(this, arguments);
                      return c(this, e);
                    });
                function p(e, n, t, r, o, a, s) {
                  var f, h, T, v, E;
                  !(function (e, n) {
                    if (!(e instanceof p))
                      throw new TypeError('Cannot call a class as a function');
                  })(this),
                    (E = l.call(this, e));
                  var y,
                    m = Array.isArray(n)
                      ? 0 !== n.length
                        ? n
                        : void 0
                      : n
                      ? [n]
                      : void 0,
                    N = t;
                  !N &&
                    m &&
                    (N =
                      null === (y = m[0].loc) || void 0 === y
                        ? void 0
                        : y.source);
                  var k,
                    _ = r;
                  !_ &&
                    m &&
                    (_ = m.reduce(function (e, n) {
                      return n.loc && e.push(n.loc.start), e;
                    }, [])),
                    _ && 0 === _.length && (_ = void 0),
                    r && t
                      ? (k = r.map(function (e) {
                          return (0, d.getLocation)(t, e);
                        }))
                      : m &&
                        (k = m.reduce(function (e, n) {
                          return (
                            n.loc &&
                              e.push(
                                (0, d.getLocation)(n.loc.source, n.loc.start)
                              ),
                            e
                          );
                        }, []));
                  var O = s;
                  if (null == O && null != a) {
                    var I = a.extensions;
                    (0, i.default)(I) && (O = I);
                  }
                  return (
                    Object.defineProperties(u(E), {
                      name: { value: 'GraphQLError' },
                      message: { value: e, enumerable: !0, writable: !0 },
                      locations: {
                        value: null !== (f = k) && void 0 !== f ? f : void 0,
                        enumerable: null != k,
                      },
                      path: {
                        value: null != o ? o : void 0,
                        enumerable: null != o,
                      },
                      nodes: { value: null != m ? m : void 0 },
                      source: {
                        value: null !== (h = N) && void 0 !== h ? h : void 0,
                      },
                      positions: {
                        value: null !== (T = _) && void 0 !== T ? T : void 0,
                      },
                      originalError: { value: a },
                      extensions: {
                        value: null !== (v = O) && void 0 !== v ? v : void 0,
                        enumerable: null != O,
                      },
                    }),
                    (null == a ? void 0 : a.stack)
                      ? (Object.defineProperty(u(E), 'stack', {
                          value: a.stack,
                          writable: !0,
                          configurable: !0,
                        }),
                        c(E))
                      : (Error.captureStackTrace
                          ? Error.captureStackTrace(u(E), p)
                          : Object.defineProperty(u(E), 'stack', {
                              value: Error().stack,
                              writable: !0,
                              configurable: !0,
                            }),
                        E)
                  );
                }
                return (
                  (o = p),
                  (s = [
                    {
                      key: 'toString',
                      value: function () {
                        return y(this);
                      },
                    },
                    {
                      key: r.SYMBOL_TO_STRING_TAG,
                      get: function () {
                        return 'Object';
                      },
                    },
                  ]) && a(o.prototype, s),
                  p
                );
              })(l(Error));
              function y(e) {
                var n = e.message;
                if (e.nodes)
                  for (var t = 0, i = e.nodes; t < i.length; t++) {
                    var r = i[t];
                    r.loc && (n += '\n\n' + (0, p.printLocation)(r.loc));
                  }
                else if (e.source && e.locations)
                  for (var o = 0, a = e.locations; o < a.length; o++) {
                    var s = a[o];
                    n += '\n\n' + (0, p.printSourceLocation)(e.source, s);
                  }
                return n;
              }
              n.GraphQLError = E;
            }),
            E = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.syntaxError = function (e, n, t) {
                  return new v.GraphQLError(
                    'Syntax Error: '.concat(t),
                    void 0,
                    e,
                    [n]
                  );
                });
            }),
            y = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.default = function (e, n) {
                  if (!Boolean(e))
                    throw new Error(
                      null != n ? n : 'Unexpected invariant triggered.'
                    );
                });
            }),
            m = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.default = function (e) {
                  var n = e.prototype.toJSON;
                  'function' == typeof n || (0, t.default)(0),
                    (e.prototype.inspect = n),
                    i.default && (e.prototype[i.default] = n);
                });
              var t = r(y),
                i = r(o);
              function r(e) {
                return e && e.__esModule ? e : { default: e };
              }
            }),
            N = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.isNode = function (e) {
                  return null != e && 'string' == typeof e.kind;
                }),
                (n.Token = n.Location = void 0);
              var t,
                i = (t = m) && t.__esModule ? t : { default: t },
                r = (function () {
                  function e(e, n, t) {
                    (this.start = e.start),
                      (this.end = n.end),
                      (this.startToken = e),
                      (this.endToken = n),
                      (this.source = t);
                  }
                  return (
                    (e.prototype.toJSON = function () {
                      return { start: this.start, end: this.end };
                    }),
                    e
                  );
                })();
              (n.Location = r), (0, i.default)(r);
              var o = (function () {
                function e(e, n, t, i, r, o, a) {
                  (this.kind = e),
                    (this.start = n),
                    (this.end = t),
                    (this.line = i),
                    (this.column = r),
                    (this.value = a),
                    (this.prev = o),
                    (this.next = null);
                }
                return (
                  (e.prototype.toJSON = function () {
                    return {
                      kind: this.kind,
                      value: this.value,
                      line: this.line,
                      column: this.column,
                    };
                  }),
                  e
                );
              })();
              (n.Token = o), (0, i.default)(o);
            }),
            k = i(function (e, n) {
              function t(e) {
                for (var n = 0; n < e.length; ++n)
                  if (' ' !== e[n] && '\t' !== e[n]) return !1;
                return !0;
              }
              function i(e) {
                for (
                  var n, t = !0, i = !0, r = 0, o = null, a = 0;
                  a < e.length;
                  ++a
                )
                  switch (e.charCodeAt(a)) {
                    case 13:
                      10 === e.charCodeAt(a + 1) && ++a;
                    case 10:
                      (t = !1), (i = !0), (r = 0);
                      break;
                    case 9:
                    case 32:
                      ++r;
                      break;
                    default:
                      i && !t && (null === o || r < o) && (o = r), (i = !1);
                  }
                return null !== (n = o) && void 0 !== n ? n : 0;
              }
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.dedentBlockStringValue = function (e) {
                  var n = e.split(/\r\n|[\n\r]/g),
                    r = i(e);
                  if (0 !== r)
                    for (var o = 1; o < n.length; o++) n[o] = n[o].slice(r);
                  for (var a = 0; a < n.length && t(n[a]); ) ++a;
                  for (var s = n.length; s > a && t(n[s - 1]); ) --s;
                  return n.slice(a, s).join('\n');
                }),
                (n.getBlockStringIndentation = i),
                (n.printBlockString = function (e) {
                  var n =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : '',
                    t =
                      arguments.length > 2 &&
                      void 0 !== arguments[2] &&
                      arguments[2],
                    i = -1 === e.indexOf('\n'),
                    r = ' ' === e[0] || '\t' === e[0],
                    o = '"' === e[e.length - 1],
                    a = '\\' === e[e.length - 1],
                    s = !i || o || a || t,
                    c = '';
                  return (
                    !s || (i && r) || (c += '\n' + n),
                    (c += n ? e.replace(/\n/g, '\n' + n) : e),
                    s && (c += '\n'),
                    '"""' + c.replace(/"""/g, '\\"""') + '"""'
                  );
                });
            }),
            _ = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.isPunctuatorTokenKind = function (e) {
                  return (
                    e === h.TokenKind.BANG ||
                    e === h.TokenKind.DOLLAR ||
                    e === h.TokenKind.AMP ||
                    e === h.TokenKind.PAREN_L ||
                    e === h.TokenKind.PAREN_R ||
                    e === h.TokenKind.SPREAD ||
                    e === h.TokenKind.COLON ||
                    e === h.TokenKind.EQUALS ||
                    e === h.TokenKind.AT ||
                    e === h.TokenKind.BRACKET_L ||
                    e === h.TokenKind.BRACKET_R ||
                    e === h.TokenKind.BRACE_L ||
                    e === h.TokenKind.PIPE ||
                    e === h.TokenKind.BRACE_R
                  );
                }),
                (n.Lexer = void 0);
              var t = (function () {
                function e(e) {
                  var n = new N.Token(h.TokenKind.SOF, 0, 0, 0, 0, null);
                  (this.source = e),
                    (this.lastToken = n),
                    (this.token = n),
                    (this.line = 1),
                    (this.lineStart = 0);
                }
                var n = e.prototype;
                return (
                  (n.advance = function () {
                    return (
                      (this.lastToken = this.token),
                      (this.token = this.lookahead())
                    );
                  }),
                  (n.lookahead = function () {
                    var e = this.token;
                    if (e.kind !== h.TokenKind.EOF)
                      do {
                        var n;
                        e =
                          null !== (n = e.next) && void 0 !== n
                            ? n
                            : (e.next = r(this, e));
                      } while (e.kind === h.TokenKind.COMMENT);
                    return e;
                  }),
                  e
                );
              })();
              function i(e) {
                return isNaN(e)
                  ? h.TokenKind.EOF
                  : e < 127
                  ? JSON.stringify(String.fromCharCode(e))
                  : '"\\u'.concat(
                      ('00' + e.toString(16).toUpperCase()).slice(-4),
                      '"'
                    );
              }
              function r(e, n) {
                for (
                  var t = e.source, i = t.body, r = i.length, c = n.end;
                  c < r;

                ) {
                  var d = i.charCodeAt(c),
                    f = e.line,
                    T = 1 + c - e.lineStart;
                  switch (d) {
                    case 65279:
                    case 9:
                    case 32:
                    case 44:
                      ++c;
                      continue;
                    case 10:
                      ++c, ++e.line, (e.lineStart = c);
                      continue;
                    case 13:
                      10 === i.charCodeAt(c + 1) ? (c += 2) : ++c,
                        ++e.line,
                        (e.lineStart = c);
                      continue;
                    case 33:
                      return new N.Token(h.TokenKind.BANG, c, c + 1, f, T, n);
                    case 35:
                      return a(t, c, f, T, n);
                    case 36:
                      return new N.Token(h.TokenKind.DOLLAR, c, c + 1, f, T, n);
                    case 38:
                      return new N.Token(h.TokenKind.AMP, c, c + 1, f, T, n);
                    case 40:
                      return new N.Token(
                        h.TokenKind.PAREN_L,
                        c,
                        c + 1,
                        f,
                        T,
                        n
                      );
                    case 41:
                      return new N.Token(
                        h.TokenKind.PAREN_R,
                        c,
                        c + 1,
                        f,
                        T,
                        n
                      );
                    case 46:
                      if (
                        46 === i.charCodeAt(c + 1) &&
                        46 === i.charCodeAt(c + 2)
                      )
                        return new N.Token(
                          h.TokenKind.SPREAD,
                          c,
                          c + 3,
                          f,
                          T,
                          n
                        );
                      break;
                    case 58:
                      return new N.Token(h.TokenKind.COLON, c, c + 1, f, T, n);
                    case 61:
                      return new N.Token(h.TokenKind.EQUALS, c, c + 1, f, T, n);
                    case 64:
                      return new N.Token(h.TokenKind.AT, c, c + 1, f, T, n);
                    case 91:
                      return new N.Token(
                        h.TokenKind.BRACKET_L,
                        c,
                        c + 1,
                        f,
                        T,
                        n
                      );
                    case 93:
                      return new N.Token(
                        h.TokenKind.BRACKET_R,
                        c,
                        c + 1,
                        f,
                        T,
                        n
                      );
                    case 123:
                      return new N.Token(
                        h.TokenKind.BRACE_L,
                        c,
                        c + 1,
                        f,
                        T,
                        n
                      );
                    case 124:
                      return new N.Token(h.TokenKind.PIPE, c, c + 1, f, T, n);
                    case 125:
                      return new N.Token(
                        h.TokenKind.BRACE_R,
                        c,
                        c + 1,
                        f,
                        T,
                        n
                      );
                    case 34:
                      return 34 === i.charCodeAt(c + 1) &&
                        34 === i.charCodeAt(c + 2)
                        ? l(t, c, f, T, n, e)
                        : u(t, c, f, T, n);
                    case 45:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                      return s(t, c, d, f, T, n);
                    case 65:
                    case 66:
                    case 67:
                    case 68:
                    case 69:
                    case 70:
                    case 71:
                    case 72:
                    case 73:
                    case 74:
                    case 75:
                    case 76:
                    case 77:
                    case 78:
                    case 79:
                    case 80:
                    case 81:
                    case 82:
                    case 83:
                    case 84:
                    case 85:
                    case 86:
                    case 87:
                    case 88:
                    case 89:
                    case 90:
                    case 95:
                    case 97:
                    case 98:
                    case 99:
                    case 100:
                    case 101:
                    case 102:
                    case 103:
                    case 104:
                    case 105:
                    case 106:
                    case 107:
                    case 108:
                    case 109:
                    case 110:
                    case 111:
                    case 112:
                    case 113:
                    case 114:
                    case 115:
                    case 116:
                    case 117:
                    case 118:
                    case 119:
                    case 120:
                    case 121:
                    case 122:
                      return p(t, c, f, T, n);
                  }
                  throw (0, E.syntaxError)(t, c, o(d));
                }
                var v = e.line,
                  y = 1 + c - e.lineStart;
                return new N.Token(h.TokenKind.EOF, r, r, v, y, n);
              }
              function o(e) {
                return e < 32 && 9 !== e && 10 !== e && 13 !== e
                  ? 'Cannot contain the invalid character '.concat(i(e), '.')
                  : 39 === e
                  ? 'Unexpected single quote character (\'), did you mean to use a double quote (")?'
                  : 'Cannot parse the unexpected character '.concat(i(e), '.');
              }
              function a(e, n, t, i, r) {
                var o,
                  a = e.body,
                  s = n;
                do {
                  o = a.charCodeAt(++s);
                } while (!isNaN(o) && (o > 31 || 9 === o));
                return new N.Token(
                  h.TokenKind.COMMENT,
                  n,
                  s,
                  t,
                  i,
                  r,
                  a.slice(n + 1, s)
                );
              }
              function s(e, n, t, r, o, a) {
                var s = e.body,
                  u = t,
                  l = n,
                  d = !1;
                if ((45 === u && (u = s.charCodeAt(++l)), 48 === u)) {
                  if ((u = s.charCodeAt(++l)) >= 48 && u <= 57)
                    throw (0, E.syntaxError)(
                      e,
                      l,
                      'Invalid number, unexpected digit after 0: '.concat(
                        i(u),
                        '.'
                      )
                    );
                } else (l = c(e, l, u)), (u = s.charCodeAt(l));
                if (
                  (46 === u &&
                    ((d = !0),
                    (u = s.charCodeAt(++l)),
                    (l = c(e, l, u)),
                    (u = s.charCodeAt(l))),
                  (69 !== u && 101 !== u) ||
                    ((d = !0),
                    (43 !== (u = s.charCodeAt(++l)) && 45 !== u) ||
                      (u = s.charCodeAt(++l)),
                    (l = c(e, l, u)),
                    (u = s.charCodeAt(l))),
                  46 === u ||
                    95 === u ||
                    (u >= 65 && u <= 90) ||
                    (u >= 97 && u <= 122))
                )
                  throw (0, E.syntaxError)(
                    e,
                    l,
                    'Invalid number, expected digit but got: '.concat(i(u), '.')
                  );
                return new N.Token(
                  d ? h.TokenKind.FLOAT : h.TokenKind.INT,
                  n,
                  l,
                  r,
                  o,
                  a,
                  s.slice(n, l)
                );
              }
              function c(e, n, t) {
                var r = e.body,
                  o = n,
                  a = t;
                if (a >= 48 && a <= 57) {
                  do {
                    a = r.charCodeAt(++o);
                  } while (a >= 48 && a <= 57);
                  return o;
                }
                throw (0,
                E.syntaxError)(e, o, 'Invalid number, expected digit but got: '.concat(i(a), '.'));
              }
              function u(e, n, t, r, o) {
                for (
                  var a, s, c, u, l = e.body, p = n + 1, f = p, T = 0, v = '';
                  p < l.length &&
                  !isNaN((T = l.charCodeAt(p))) &&
                  10 !== T &&
                  13 !== T;

                ) {
                  if (34 === T)
                    return (
                      (v += l.slice(f, p)),
                      new N.Token(h.TokenKind.STRING, n, p + 1, t, r, o, v)
                    );
                  if (T < 32 && 9 !== T)
                    throw (0, E.syntaxError)(
                      e,
                      p,
                      'Invalid character within String: '.concat(i(T), '.')
                    );
                  if ((++p, 92 === T)) {
                    switch (((v += l.slice(f, p - 1)), (T = l.charCodeAt(p)))) {
                      case 34:
                        v += '"';
                        break;
                      case 47:
                        v += '/';
                        break;
                      case 92:
                        v += '\\';
                        break;
                      case 98:
                        v += '\b';
                        break;
                      case 102:
                        v += '\f';
                        break;
                      case 110:
                        v += '\n';
                        break;
                      case 114:
                        v += '\r';
                        break;
                      case 116:
                        v += '\t';
                        break;
                      case 117:
                        var y =
                          ((a = l.charCodeAt(p + 1)),
                          (s = l.charCodeAt(p + 2)),
                          (c = l.charCodeAt(p + 3)),
                          (u = l.charCodeAt(p + 4)),
                          (d(a) << 12) | (d(s) << 8) | (d(c) << 4) | d(u));
                        if (y < 0) {
                          var m = l.slice(p + 1, p + 5);
                          throw (0, E.syntaxError)(
                            e,
                            p,
                            'Invalid character escape sequence: \\u'.concat(
                              m,
                              '.'
                            )
                          );
                        }
                        (v += String.fromCharCode(y)), (p += 4);
                        break;
                      default:
                        throw (0, E.syntaxError)(
                          e,
                          p,
                          'Invalid character escape sequence: \\'.concat(
                            String.fromCharCode(T),
                            '.'
                          )
                        );
                    }
                    f = ++p;
                  }
                }
                throw (0, E.syntaxError)(e, p, 'Unterminated string.');
              }
              function l(e, n, t, r, o, a) {
                for (
                  var s = e.body, c = n + 3, u = c, l = 0, d = '';
                  c < s.length && !isNaN((l = s.charCodeAt(c)));

                ) {
                  if (
                    34 === l &&
                    34 === s.charCodeAt(c + 1) &&
                    34 === s.charCodeAt(c + 2)
                  )
                    return (
                      (d += s.slice(u, c)),
                      new N.Token(
                        h.TokenKind.BLOCK_STRING,
                        n,
                        c + 3,
                        t,
                        r,
                        o,
                        (0, k.dedentBlockStringValue)(d)
                      )
                    );
                  if (l < 32 && 9 !== l && 10 !== l && 13 !== l)
                    throw (0, E.syntaxError)(
                      e,
                      c,
                      'Invalid character within String: '.concat(i(l), '.')
                    );
                  10 === l
                    ? (++c, ++a.line, (a.lineStart = c))
                    : 13 === l
                    ? (10 === s.charCodeAt(c + 1) ? (c += 2) : ++c,
                      ++a.line,
                      (a.lineStart = c))
                    : 92 === l &&
                      34 === s.charCodeAt(c + 1) &&
                      34 === s.charCodeAt(c + 2) &&
                      34 === s.charCodeAt(c + 3)
                    ? ((d += s.slice(u, c) + '"""'), (u = c += 4))
                    : ++c;
                }
                throw (0, E.syntaxError)(e, c, 'Unterminated string.');
              }
              function d(e) {
                return e >= 48 && e <= 57
                  ? e - 48
                  : e >= 65 && e <= 70
                  ? e - 55
                  : e >= 97 && e <= 102
                  ? e - 87
                  : -1;
              }
              function p(e, n, t, i, r) {
                for (
                  var o = e.body, a = o.length, s = n + 1, c = 0;
                  s !== a &&
                  !isNaN((c = o.charCodeAt(s))) &&
                  (95 === c ||
                    (c >= 48 && c <= 57) ||
                    (c >= 65 && c <= 90) ||
                    (c >= 97 && c <= 122));

                )
                  ++s;
                return new N.Token(
                  h.TokenKind.NAME,
                  n,
                  s,
                  t,
                  i,
                  r,
                  o.slice(n, s)
                );
              }
              n.Lexer = t;
            }),
            O = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.DirectiveLocation = void 0);
              var t = Object.freeze({
                QUERY: 'QUERY',
                MUTATION: 'MUTATION',
                SUBSCRIPTION: 'SUBSCRIPTION',
                FIELD: 'FIELD',
                FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',
                FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',
                INLINE_FRAGMENT: 'INLINE_FRAGMENT',
                VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',
                SCHEMA: 'SCHEMA',
                SCALAR: 'SCALAR',
                OBJECT: 'OBJECT',
                FIELD_DEFINITION: 'FIELD_DEFINITION',
                ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',
                INTERFACE: 'INTERFACE',
                UNION: 'UNION',
                ENUM: 'ENUM',
                ENUM_VALUE: 'ENUM_VALUE',
                INPUT_OBJECT: 'INPUT_OBJECT',
                INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION',
              });
              n.DirectiveLocation = t;
            }),
            I = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.parse = function (e, n) {
                  return new t(e, n).parseDocument();
                }),
                (n.parseValue = function (e, n) {
                  var i = new t(e, n);
                  i.expectToken(h.TokenKind.SOF);
                  var r = i.parseValueLiteral(!1);
                  return i.expectToken(h.TokenKind.EOF), r;
                }),
                (n.parseType = function (e, n) {
                  var i = new t(e, n);
                  i.expectToken(h.TokenKind.SOF);
                  var r = i.parseTypeReference();
                  return i.expectToken(h.TokenKind.EOF), r;
                }),
                (n.Parser = void 0);
              var t = (function () {
                function e(e, n) {
                  var t = (0, l.isSource)(e) ? e : new l.Source(e);
                  (this._lexer = new _.Lexer(t)), (this._options = n);
                }
                var n = e.prototype;
                return (
                  (n.parseName = function () {
                    var e = this.expectToken(h.TokenKind.NAME);
                    return {
                      kind: f.Kind.NAME,
                      value: e.value,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseDocument = function () {
                    var e = this._lexer.token;
                    return {
                      kind: f.Kind.DOCUMENT,
                      definitions: this.many(
                        h.TokenKind.SOF,
                        this.parseDefinition,
                        h.TokenKind.EOF
                      ),
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseDefinition = function () {
                    if (this.peek(h.TokenKind.NAME))
                      switch (this._lexer.token.value) {
                        case 'query':
                        case 'mutation':
                        case 'subscription':
                          return this.parseOperationDefinition();
                        case 'fragment':
                          return this.parseFragmentDefinition();
                        case 'schema':
                        case 'scalar':
                        case 'type':
                        case 'interface':
                        case 'union':
                        case 'enum':
                        case 'input':
                        case 'directive':
                          return this.parseTypeSystemDefinition();
                        case 'extend':
                          return this.parseTypeSystemExtension();
                      }
                    else {
                      if (this.peek(h.TokenKind.BRACE_L))
                        return this.parseOperationDefinition();
                      if (this.peekDescription())
                        return this.parseTypeSystemDefinition();
                    }
                    throw this.unexpected();
                  }),
                  (n.parseOperationDefinition = function () {
                    var e = this._lexer.token;
                    if (this.peek(h.TokenKind.BRACE_L))
                      return {
                        kind: f.Kind.OPERATION_DEFINITION,
                        operation: 'query',
                        name: void 0,
                        variableDefinitions: [],
                        directives: [],
                        selectionSet: this.parseSelectionSet(),
                        loc: this.loc(e),
                      };
                    var n,
                      t = this.parseOperationType();
                    return (
                      this.peek(h.TokenKind.NAME) && (n = this.parseName()),
                      {
                        kind: f.Kind.OPERATION_DEFINITION,
                        operation: t,
                        name: n,
                        variableDefinitions: this.parseVariableDefinitions(),
                        directives: this.parseDirectives(!1),
                        selectionSet: this.parseSelectionSet(),
                        loc: this.loc(e),
                      }
                    );
                  }),
                  (n.parseOperationType = function () {
                    var e = this.expectToken(h.TokenKind.NAME);
                    switch (e.value) {
                      case 'query':
                        return 'query';
                      case 'mutation':
                        return 'mutation';
                      case 'subscription':
                        return 'subscription';
                    }
                    throw this.unexpected(e);
                  }),
                  (n.parseVariableDefinitions = function () {
                    return this.optionalMany(
                      h.TokenKind.PAREN_L,
                      this.parseVariableDefinition,
                      h.TokenKind.PAREN_R
                    );
                  }),
                  (n.parseVariableDefinition = function () {
                    var e = this._lexer.token;
                    return {
                      kind: f.Kind.VARIABLE_DEFINITION,
                      variable: this.parseVariable(),
                      type:
                        (this.expectToken(h.TokenKind.COLON),
                        this.parseTypeReference()),
                      defaultValue: this.expectOptionalToken(h.TokenKind.EQUALS)
                        ? this.parseValueLiteral(!0)
                        : void 0,
                      directives: this.parseDirectives(!0),
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseVariable = function () {
                    var e = this._lexer.token;
                    return (
                      this.expectToken(h.TokenKind.DOLLAR),
                      {
                        kind: f.Kind.VARIABLE,
                        name: this.parseName(),
                        loc: this.loc(e),
                      }
                    );
                  }),
                  (n.parseSelectionSet = function () {
                    var e = this._lexer.token;
                    return {
                      kind: f.Kind.SELECTION_SET,
                      selections: this.many(
                        h.TokenKind.BRACE_L,
                        this.parseSelection,
                        h.TokenKind.BRACE_R
                      ),
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseSelection = function () {
                    return this.peek(h.TokenKind.SPREAD)
                      ? this.parseFragment()
                      : this.parseField();
                  }),
                  (n.parseField = function () {
                    var e,
                      n,
                      t = this._lexer.token,
                      i = this.parseName();
                    return (
                      this.expectOptionalToken(h.TokenKind.COLON)
                        ? ((e = i), (n = this.parseName()))
                        : (n = i),
                      {
                        kind: f.Kind.FIELD,
                        alias: e,
                        name: n,
                        arguments: this.parseArguments(!1),
                        directives: this.parseDirectives(!1),
                        selectionSet: this.peek(h.TokenKind.BRACE_L)
                          ? this.parseSelectionSet()
                          : void 0,
                        loc: this.loc(t),
                      }
                    );
                  }),
                  (n.parseArguments = function (e) {
                    var n = e ? this.parseConstArgument : this.parseArgument;
                    return this.optionalMany(
                      h.TokenKind.PAREN_L,
                      n,
                      h.TokenKind.PAREN_R
                    );
                  }),
                  (n.parseArgument = function () {
                    var e = this._lexer.token,
                      n = this.parseName();
                    return (
                      this.expectToken(h.TokenKind.COLON),
                      {
                        kind: f.Kind.ARGUMENT,
                        name: n,
                        value: this.parseValueLiteral(!1),
                        loc: this.loc(e),
                      }
                    );
                  }),
                  (n.parseConstArgument = function () {
                    var e = this._lexer.token;
                    return {
                      kind: f.Kind.ARGUMENT,
                      name: this.parseName(),
                      value:
                        (this.expectToken(h.TokenKind.COLON),
                        this.parseValueLiteral(!0)),
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseFragment = function () {
                    var e = this._lexer.token;
                    this.expectToken(h.TokenKind.SPREAD);
                    var n = this.expectOptionalKeyword('on');
                    return !n && this.peek(h.TokenKind.NAME)
                      ? {
                          kind: f.Kind.FRAGMENT_SPREAD,
                          name: this.parseFragmentName(),
                          directives: this.parseDirectives(!1),
                          loc: this.loc(e),
                        }
                      : {
                          kind: f.Kind.INLINE_FRAGMENT,
                          typeCondition: n ? this.parseNamedType() : void 0,
                          directives: this.parseDirectives(!1),
                          selectionSet: this.parseSelectionSet(),
                          loc: this.loc(e),
                        };
                  }),
                  (n.parseFragmentDefinition = function () {
                    var e,
                      n = this._lexer.token;
                    return (
                      this.expectKeyword('fragment'),
                      !0 ===
                      (null === (e = this._options) || void 0 === e
                        ? void 0
                        : e.experimentalFragmentVariables)
                        ? {
                            kind: f.Kind.FRAGMENT_DEFINITION,
                            name: this.parseFragmentName(),
                            variableDefinitions: this.parseVariableDefinitions(),
                            typeCondition:
                              (this.expectKeyword('on'), this.parseNamedType()),
                            directives: this.parseDirectives(!1),
                            selectionSet: this.parseSelectionSet(),
                            loc: this.loc(n),
                          }
                        : {
                            kind: f.Kind.FRAGMENT_DEFINITION,
                            name: this.parseFragmentName(),
                            typeCondition:
                              (this.expectKeyword('on'), this.parseNamedType()),
                            directives: this.parseDirectives(!1),
                            selectionSet: this.parseSelectionSet(),
                            loc: this.loc(n),
                          }
                    );
                  }),
                  (n.parseFragmentName = function () {
                    if ('on' === this._lexer.token.value)
                      throw this.unexpected();
                    return this.parseName();
                  }),
                  (n.parseValueLiteral = function (e) {
                    var n = this._lexer.token;
                    switch (n.kind) {
                      case h.TokenKind.BRACKET_L:
                        return this.parseList(e);
                      case h.TokenKind.BRACE_L:
                        return this.parseObject(e);
                      case h.TokenKind.INT:
                        return (
                          this._lexer.advance(),
                          { kind: f.Kind.INT, value: n.value, loc: this.loc(n) }
                        );
                      case h.TokenKind.FLOAT:
                        return (
                          this._lexer.advance(),
                          {
                            kind: f.Kind.FLOAT,
                            value: n.value,
                            loc: this.loc(n),
                          }
                        );
                      case h.TokenKind.STRING:
                      case h.TokenKind.BLOCK_STRING:
                        return this.parseStringLiteral();
                      case h.TokenKind.NAME:
                        switch ((this._lexer.advance(), n.value)) {
                          case 'true':
                            return {
                              kind: f.Kind.BOOLEAN,
                              value: !0,
                              loc: this.loc(n),
                            };
                          case 'false':
                            return {
                              kind: f.Kind.BOOLEAN,
                              value: !1,
                              loc: this.loc(n),
                            };
                          case 'null':
                            return { kind: f.Kind.NULL, loc: this.loc(n) };
                          default:
                            return {
                              kind: f.Kind.ENUM,
                              value: n.value,
                              loc: this.loc(n),
                            };
                        }
                      case h.TokenKind.DOLLAR:
                        if (!e) return this.parseVariable();
                    }
                    throw this.unexpected();
                  }),
                  (n.parseStringLiteral = function () {
                    var e = this._lexer.token;
                    return (
                      this._lexer.advance(),
                      {
                        kind: f.Kind.STRING,
                        value: e.value,
                        block: e.kind === h.TokenKind.BLOCK_STRING,
                        loc: this.loc(e),
                      }
                    );
                  }),
                  (n.parseList = function (e) {
                    var n = this,
                      t = this._lexer.token;
                    return {
                      kind: f.Kind.LIST,
                      values: this.any(
                        h.TokenKind.BRACKET_L,
                        function () {
                          return n.parseValueLiteral(e);
                        },
                        h.TokenKind.BRACKET_R
                      ),
                      loc: this.loc(t),
                    };
                  }),
                  (n.parseObject = function (e) {
                    var n = this,
                      t = this._lexer.token;
                    return {
                      kind: f.Kind.OBJECT,
                      fields: this.any(
                        h.TokenKind.BRACE_L,
                        function () {
                          return n.parseObjectField(e);
                        },
                        h.TokenKind.BRACE_R
                      ),
                      loc: this.loc(t),
                    };
                  }),
                  (n.parseObjectField = function (e) {
                    var n = this._lexer.token,
                      t = this.parseName();
                    return (
                      this.expectToken(h.TokenKind.COLON),
                      {
                        kind: f.Kind.OBJECT_FIELD,
                        name: t,
                        value: this.parseValueLiteral(e),
                        loc: this.loc(n),
                      }
                    );
                  }),
                  (n.parseDirectives = function (e) {
                    for (var n = []; this.peek(h.TokenKind.AT); )
                      n.push(this.parseDirective(e));
                    return n;
                  }),
                  (n.parseDirective = function (e) {
                    var n = this._lexer.token;
                    return (
                      this.expectToken(h.TokenKind.AT),
                      {
                        kind: f.Kind.DIRECTIVE,
                        name: this.parseName(),
                        arguments: this.parseArguments(e),
                        loc: this.loc(n),
                      }
                    );
                  }),
                  (n.parseTypeReference = function () {
                    var e,
                      n = this._lexer.token;
                    return (
                      this.expectOptionalToken(h.TokenKind.BRACKET_L)
                        ? ((e = this.parseTypeReference()),
                          this.expectToken(h.TokenKind.BRACKET_R),
                          (e = {
                            kind: f.Kind.LIST_TYPE,
                            type: e,
                            loc: this.loc(n),
                          }))
                        : (e = this.parseNamedType()),
                      this.expectOptionalToken(h.TokenKind.BANG)
                        ? {
                            kind: f.Kind.NON_NULL_TYPE,
                            type: e,
                            loc: this.loc(n),
                          }
                        : e
                    );
                  }),
                  (n.parseNamedType = function () {
                    var e = this._lexer.token;
                    return {
                      kind: f.Kind.NAMED_TYPE,
                      name: this.parseName(),
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseTypeSystemDefinition = function () {
                    var e = this.peekDescription()
                      ? this._lexer.lookahead()
                      : this._lexer.token;
                    if (e.kind === h.TokenKind.NAME)
                      switch (e.value) {
                        case 'schema':
                          return this.parseSchemaDefinition();
                        case 'scalar':
                          return this.parseScalarTypeDefinition();
                        case 'type':
                          return this.parseObjectTypeDefinition();
                        case 'interface':
                          return this.parseInterfaceTypeDefinition();
                        case 'union':
                          return this.parseUnionTypeDefinition();
                        case 'enum':
                          return this.parseEnumTypeDefinition();
                        case 'input':
                          return this.parseInputObjectTypeDefinition();
                        case 'directive':
                          return this.parseDirectiveDefinition();
                      }
                    throw this.unexpected(e);
                  }),
                  (n.peekDescription = function () {
                    return (
                      this.peek(h.TokenKind.STRING) ||
                      this.peek(h.TokenKind.BLOCK_STRING)
                    );
                  }),
                  (n.parseDescription = function () {
                    if (this.peekDescription())
                      return this.parseStringLiteral();
                  }),
                  (n.parseSchemaDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription();
                    this.expectKeyword('schema');
                    var t = this.parseDirectives(!0),
                      i = this.many(
                        h.TokenKind.BRACE_L,
                        this.parseOperationTypeDefinition,
                        h.TokenKind.BRACE_R
                      );
                    return {
                      kind: f.Kind.SCHEMA_DEFINITION,
                      description: n,
                      directives: t,
                      operationTypes: i,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseOperationTypeDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseOperationType();
                    this.expectToken(h.TokenKind.COLON);
                    var t = this.parseNamedType();
                    return {
                      kind: f.Kind.OPERATION_TYPE_DEFINITION,
                      operation: n,
                      type: t,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseScalarTypeDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription();
                    this.expectKeyword('scalar');
                    var t = this.parseName(),
                      i = this.parseDirectives(!0);
                    return {
                      kind: f.Kind.SCALAR_TYPE_DEFINITION,
                      description: n,
                      name: t,
                      directives: i,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseObjectTypeDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription();
                    this.expectKeyword('type');
                    var t = this.parseName(),
                      i = this.parseImplementsInterfaces(),
                      r = this.parseDirectives(!0),
                      o = this.parseFieldsDefinition();
                    return {
                      kind: f.Kind.OBJECT_TYPE_DEFINITION,
                      description: n,
                      name: t,
                      interfaces: i,
                      directives: r,
                      fields: o,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseImplementsInterfaces = function () {
                    var e;
                    if (!this.expectOptionalKeyword('implements')) return [];
                    if (
                      !0 ===
                      (null === (e = this._options) || void 0 === e
                        ? void 0
                        : e.allowLegacySDLImplementsInterfaces)
                    ) {
                      var n = [];
                      this.expectOptionalToken(h.TokenKind.AMP);
                      do {
                        n.push(this.parseNamedType());
                      } while (
                        this.expectOptionalToken(h.TokenKind.AMP) ||
                        this.peek(h.TokenKind.NAME)
                      );
                      return n;
                    }
                    return this.delimitedMany(
                      h.TokenKind.AMP,
                      this.parseNamedType
                    );
                  }),
                  (n.parseFieldsDefinition = function () {
                    var e;
                    return !0 ===
                      (null === (e = this._options) || void 0 === e
                        ? void 0
                        : e.allowLegacySDLEmptyFields) &&
                      this.peek(h.TokenKind.BRACE_L) &&
                      this._lexer.lookahead().kind === h.TokenKind.BRACE_R
                      ? (this._lexer.advance(), this._lexer.advance(), [])
                      : this.optionalMany(
                          h.TokenKind.BRACE_L,
                          this.parseFieldDefinition,
                          h.TokenKind.BRACE_R
                        );
                  }),
                  (n.parseFieldDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription(),
                      t = this.parseName(),
                      i = this.parseArgumentDefs();
                    this.expectToken(h.TokenKind.COLON);
                    var r = this.parseTypeReference(),
                      o = this.parseDirectives(!0);
                    return {
                      kind: f.Kind.FIELD_DEFINITION,
                      description: n,
                      name: t,
                      arguments: i,
                      type: r,
                      directives: o,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseArgumentDefs = function () {
                    return this.optionalMany(
                      h.TokenKind.PAREN_L,
                      this.parseInputValueDef,
                      h.TokenKind.PAREN_R
                    );
                  }),
                  (n.parseInputValueDef = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription(),
                      t = this.parseName();
                    this.expectToken(h.TokenKind.COLON);
                    var i,
                      r = this.parseTypeReference();
                    this.expectOptionalToken(h.TokenKind.EQUALS) &&
                      (i = this.parseValueLiteral(!0));
                    var o = this.parseDirectives(!0);
                    return {
                      kind: f.Kind.INPUT_VALUE_DEFINITION,
                      description: n,
                      name: t,
                      type: r,
                      defaultValue: i,
                      directives: o,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseInterfaceTypeDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription();
                    this.expectKeyword('interface');
                    var t = this.parseName(),
                      i = this.parseImplementsInterfaces(),
                      r = this.parseDirectives(!0),
                      o = this.parseFieldsDefinition();
                    return {
                      kind: f.Kind.INTERFACE_TYPE_DEFINITION,
                      description: n,
                      name: t,
                      interfaces: i,
                      directives: r,
                      fields: o,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseUnionTypeDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription();
                    this.expectKeyword('union');
                    var t = this.parseName(),
                      i = this.parseDirectives(!0),
                      r = this.parseUnionMemberTypes();
                    return {
                      kind: f.Kind.UNION_TYPE_DEFINITION,
                      description: n,
                      name: t,
                      directives: i,
                      types: r,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseUnionMemberTypes = function () {
                    return this.expectOptionalToken(h.TokenKind.EQUALS)
                      ? this.delimitedMany(
                          h.TokenKind.PIPE,
                          this.parseNamedType
                        )
                      : [];
                  }),
                  (n.parseEnumTypeDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription();
                    this.expectKeyword('enum');
                    var t = this.parseName(),
                      i = this.parseDirectives(!0),
                      r = this.parseEnumValuesDefinition();
                    return {
                      kind: f.Kind.ENUM_TYPE_DEFINITION,
                      description: n,
                      name: t,
                      directives: i,
                      values: r,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseEnumValuesDefinition = function () {
                    return this.optionalMany(
                      h.TokenKind.BRACE_L,
                      this.parseEnumValueDefinition,
                      h.TokenKind.BRACE_R
                    );
                  }),
                  (n.parseEnumValueDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription(),
                      t = this.parseName(),
                      i = this.parseDirectives(!0);
                    return {
                      kind: f.Kind.ENUM_VALUE_DEFINITION,
                      description: n,
                      name: t,
                      directives: i,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseInputObjectTypeDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription();
                    this.expectKeyword('input');
                    var t = this.parseName(),
                      i = this.parseDirectives(!0),
                      r = this.parseInputFieldsDefinition();
                    return {
                      kind: f.Kind.INPUT_OBJECT_TYPE_DEFINITION,
                      description: n,
                      name: t,
                      directives: i,
                      fields: r,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseInputFieldsDefinition = function () {
                    return this.optionalMany(
                      h.TokenKind.BRACE_L,
                      this.parseInputValueDef,
                      h.TokenKind.BRACE_R
                    );
                  }),
                  (n.parseTypeSystemExtension = function () {
                    var e = this._lexer.lookahead();
                    if (e.kind === h.TokenKind.NAME)
                      switch (e.value) {
                        case 'schema':
                          return this.parseSchemaExtension();
                        case 'scalar':
                          return this.parseScalarTypeExtension();
                        case 'type':
                          return this.parseObjectTypeExtension();
                        case 'interface':
                          return this.parseInterfaceTypeExtension();
                        case 'union':
                          return this.parseUnionTypeExtension();
                        case 'enum':
                          return this.parseEnumTypeExtension();
                        case 'input':
                          return this.parseInputObjectTypeExtension();
                      }
                    throw this.unexpected(e);
                  }),
                  (n.parseSchemaExtension = function () {
                    var e = this._lexer.token;
                    this.expectKeyword('extend'), this.expectKeyword('schema');
                    var n = this.parseDirectives(!0),
                      t = this.optionalMany(
                        h.TokenKind.BRACE_L,
                        this.parseOperationTypeDefinition,
                        h.TokenKind.BRACE_R
                      );
                    if (0 === n.length && 0 === t.length)
                      throw this.unexpected();
                    return {
                      kind: f.Kind.SCHEMA_EXTENSION,
                      directives: n,
                      operationTypes: t,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseScalarTypeExtension = function () {
                    var e = this._lexer.token;
                    this.expectKeyword('extend'), this.expectKeyword('scalar');
                    var n = this.parseName(),
                      t = this.parseDirectives(!0);
                    if (0 === t.length) throw this.unexpected();
                    return {
                      kind: f.Kind.SCALAR_TYPE_EXTENSION,
                      name: n,
                      directives: t,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseObjectTypeExtension = function () {
                    var e = this._lexer.token;
                    this.expectKeyword('extend'), this.expectKeyword('type');
                    var n = this.parseName(),
                      t = this.parseImplementsInterfaces(),
                      i = this.parseDirectives(!0),
                      r = this.parseFieldsDefinition();
                    if (0 === t.length && 0 === i.length && 0 === r.length)
                      throw this.unexpected();
                    return {
                      kind: f.Kind.OBJECT_TYPE_EXTENSION,
                      name: n,
                      interfaces: t,
                      directives: i,
                      fields: r,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseInterfaceTypeExtension = function () {
                    var e = this._lexer.token;
                    this.expectKeyword('extend'),
                      this.expectKeyword('interface');
                    var n = this.parseName(),
                      t = this.parseImplementsInterfaces(),
                      i = this.parseDirectives(!0),
                      r = this.parseFieldsDefinition();
                    if (0 === t.length && 0 === i.length && 0 === r.length)
                      throw this.unexpected();
                    return {
                      kind: f.Kind.INTERFACE_TYPE_EXTENSION,
                      name: n,
                      interfaces: t,
                      directives: i,
                      fields: r,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseUnionTypeExtension = function () {
                    var e = this._lexer.token;
                    this.expectKeyword('extend'), this.expectKeyword('union');
                    var n = this.parseName(),
                      t = this.parseDirectives(!0),
                      i = this.parseUnionMemberTypes();
                    if (0 === t.length && 0 === i.length)
                      throw this.unexpected();
                    return {
                      kind: f.Kind.UNION_TYPE_EXTENSION,
                      name: n,
                      directives: t,
                      types: i,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseEnumTypeExtension = function () {
                    var e = this._lexer.token;
                    this.expectKeyword('extend'), this.expectKeyword('enum');
                    var n = this.parseName(),
                      t = this.parseDirectives(!0),
                      i = this.parseEnumValuesDefinition();
                    if (0 === t.length && 0 === i.length)
                      throw this.unexpected();
                    return {
                      kind: f.Kind.ENUM_TYPE_EXTENSION,
                      name: n,
                      directives: t,
                      values: i,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseInputObjectTypeExtension = function () {
                    var e = this._lexer.token;
                    this.expectKeyword('extend'), this.expectKeyword('input');
                    var n = this.parseName(),
                      t = this.parseDirectives(!0),
                      i = this.parseInputFieldsDefinition();
                    if (0 === t.length && 0 === i.length)
                      throw this.unexpected();
                    return {
                      kind: f.Kind.INPUT_OBJECT_TYPE_EXTENSION,
                      name: n,
                      directives: t,
                      fields: i,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseDirectiveDefinition = function () {
                    var e = this._lexer.token,
                      n = this.parseDescription();
                    this.expectKeyword('directive'),
                      this.expectToken(h.TokenKind.AT);
                    var t = this.parseName(),
                      i = this.parseArgumentDefs(),
                      r = this.expectOptionalKeyword('repeatable');
                    this.expectKeyword('on');
                    var o = this.parseDirectiveLocations();
                    return {
                      kind: f.Kind.DIRECTIVE_DEFINITION,
                      description: n,
                      name: t,
                      arguments: i,
                      repeatable: r,
                      locations: o,
                      loc: this.loc(e),
                    };
                  }),
                  (n.parseDirectiveLocations = function () {
                    return this.delimitedMany(
                      h.TokenKind.PIPE,
                      this.parseDirectiveLocation
                    );
                  }),
                  (n.parseDirectiveLocation = function () {
                    var e = this._lexer.token,
                      n = this.parseName();
                    if (void 0 !== O.DirectiveLocation[n.value]) return n;
                    throw this.unexpected(e);
                  }),
                  (n.loc = function (e) {
                    var n;
                    if (
                      !0 !==
                      (null === (n = this._options) || void 0 === n
                        ? void 0
                        : n.noLocation)
                    )
                      return new N.Location(
                        e,
                        this._lexer.lastToken,
                        this._lexer.source
                      );
                  }),
                  (n.peek = function (e) {
                    return this._lexer.token.kind === e;
                  }),
                  (n.expectToken = function (e) {
                    var n = this._lexer.token;
                    if (n.kind === e) return this._lexer.advance(), n;
                    throw (0, E.syntaxError)(
                      this._lexer.source,
                      n.start,
                      'Expected '.concat(r(e), ', found ').concat(i(n), '.')
                    );
                  }),
                  (n.expectOptionalToken = function (e) {
                    var n = this._lexer.token;
                    if (n.kind === e) return this._lexer.advance(), n;
                  }),
                  (n.expectKeyword = function (e) {
                    var n = this._lexer.token;
                    if (n.kind !== h.TokenKind.NAME || n.value !== e)
                      throw (0, E.syntaxError)(
                        this._lexer.source,
                        n.start,
                        'Expected "'.concat(e, '", found ').concat(i(n), '.')
                      );
                    this._lexer.advance();
                  }),
                  (n.expectOptionalKeyword = function (e) {
                    var n = this._lexer.token;
                    return (
                      n.kind === h.TokenKind.NAME &&
                      n.value === e &&
                      (this._lexer.advance(), !0)
                    );
                  }),
                  (n.unexpected = function (e) {
                    var n = null != e ? e : this._lexer.token;
                    return (0, E.syntaxError)(
                      this._lexer.source,
                      n.start,
                      'Unexpected '.concat(i(n), '.')
                    );
                  }),
                  (n.any = function (e, n, t) {
                    this.expectToken(e);
                    for (var i = []; !this.expectOptionalToken(t); )
                      i.push(n.call(this));
                    return i;
                  }),
                  (n.optionalMany = function (e, n, t) {
                    if (this.expectOptionalToken(e)) {
                      var i = [];
                      do {
                        i.push(n.call(this));
                      } while (!this.expectOptionalToken(t));
                      return i;
                    }
                    return [];
                  }),
                  (n.many = function (e, n, t) {
                    this.expectToken(e);
                    var i = [];
                    do {
                      i.push(n.call(this));
                    } while (!this.expectOptionalToken(t));
                    return i;
                  }),
                  (n.delimitedMany = function (e, n) {
                    this.expectOptionalToken(e);
                    var t = [];
                    do {
                      t.push(n.call(this));
                    } while (this.expectOptionalToken(e));
                    return t;
                  }),
                  e
                );
              })();
              function i(e) {
                var n = e.value;
                return r(e.kind) + (null != n ? ' "'.concat(n, '"') : '');
              }
              function r(e) {
                return (0, _.isPunctuatorTokenKind)(e) ? '"'.concat(e, '"') : e;
              }
              n.Parser = t;
            }),
            b = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.visit = function (e, n) {
                  var t =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : r,
                    a = void 0,
                    c = Array.isArray(e),
                    u = [e],
                    l = -1,
                    d = [],
                    p = void 0,
                    f = void 0,
                    h = void 0,
                    T = [],
                    v = [],
                    E = e;
                  do {
                    var y = ++l === u.length,
                      m = y && 0 !== d.length;
                    if (y) {
                      if (
                        ((f = 0 === v.length ? void 0 : T[T.length - 1]),
                        (p = h),
                        (h = v.pop()),
                        m)
                      ) {
                        if (c) p = p.slice();
                        else {
                          for (
                            var k = {}, _ = 0, O = Object.keys(p);
                            _ < O.length;
                            _++
                          ) {
                            var I = O[_];
                            k[I] = p[I];
                          }
                          p = k;
                        }
                        for (var b = 0, D = 0; D < d.length; D++) {
                          var A = d[D][0],
                            x = d[D][1];
                          c && (A -= b),
                            c && null === x
                              ? (p.splice(A, 1), b++)
                              : (p[A] = x);
                        }
                      }
                      (l = a.index),
                        (u = a.keys),
                        (d = a.edits),
                        (c = a.inArray),
                        (a = a.prev);
                    } else {
                      if (
                        ((f = h ? (c ? l : u[l]) : void 0),
                        null == (p = h ? h[f] : E))
                      )
                        continue;
                      h && T.push(f);
                    }
                    var S,
                      K = void 0;
                    if (!Array.isArray(p)) {
                      if (!(0, N.isNode)(p))
                        throw new Error(
                          'Invalid AST Node: '.concat((0, i.default)(p), '.')
                        );
                      var g = s(n, p.kind, y);
                      if (g) {
                        if ((K = g.call(n, p, f, h, T, v)) === o) break;
                        if (!1 === K) {
                          if (!y) {
                            T.pop();
                            continue;
                          }
                        } else if (void 0 !== K && (d.push([f, K]), !y)) {
                          if (!(0, N.isNode)(K)) {
                            T.pop();
                            continue;
                          }
                          p = K;
                        }
                      }
                    }
                    void 0 === K && m && d.push([f, p]),
                      y
                        ? T.pop()
                        : ((a = {
                            inArray: c,
                            index: l,
                            keys: u,
                            edits: d,
                            prev: a,
                          }),
                          (u = (c = Array.isArray(p))
                            ? p
                            : null !== (S = t[p.kind]) && void 0 !== S
                            ? S
                            : []),
                          (l = -1),
                          (d = []),
                          h && v.push(h),
                          (h = p));
                  } while (void 0 !== a);
                  return 0 !== d.length && (E = d[d.length - 1][1]), E;
                }),
                (n.visitInParallel = function (e) {
                  var n = new Array(e.length);
                  return {
                    enter: function (t) {
                      for (var i = 0; i < e.length; i++)
                        if (null == n[i]) {
                          var r = s(e[i], t.kind, !1);
                          if (r) {
                            var a = r.apply(e[i], arguments);
                            if (!1 === a) n[i] = t;
                            else if (a === o) n[i] = o;
                            else if (void 0 !== a) return a;
                          }
                        }
                    },
                    leave: function (t) {
                      for (var i = 0; i < e.length; i++)
                        if (null == n[i]) {
                          var r = s(e[i], t.kind, !0);
                          if (r) {
                            var a = r.apply(e[i], arguments);
                            if (a === o) n[i] = o;
                            else if (void 0 !== a && !1 !== a) return a;
                          }
                        } else n[i] === t && (n[i] = null);
                    },
                  };
                }),
                (n.getVisitFn = s),
                (n.BREAK = n.QueryDocumentKeys = void 0);
              var t,
                i = (t = a) && t.__esModule ? t : { default: t },
                r = {
                  Name: [],
                  Document: ['definitions'],
                  OperationDefinition: [
                    'name',
                    'variableDefinitions',
                    'directives',
                    'selectionSet',
                  ],
                  VariableDefinition: [
                    'variable',
                    'type',
                    'defaultValue',
                    'directives',
                  ],
                  Variable: ['name'],
                  SelectionSet: ['selections'],
                  Field: [
                    'alias',
                    'name',
                    'arguments',
                    'directives',
                    'selectionSet',
                  ],
                  Argument: ['name', 'value'],
                  FragmentSpread: ['name', 'directives'],
                  InlineFragment: [
                    'typeCondition',
                    'directives',
                    'selectionSet',
                  ],
                  FragmentDefinition: [
                    'name',
                    'variableDefinitions',
                    'typeCondition',
                    'directives',
                    'selectionSet',
                  ],
                  IntValue: [],
                  FloatValue: [],
                  StringValue: [],
                  BooleanValue: [],
                  NullValue: [],
                  EnumValue: [],
                  ListValue: ['values'],
                  ObjectValue: ['fields'],
                  ObjectField: ['name', 'value'],
                  Directive: ['name', 'arguments'],
                  NamedType: ['name'],
                  ListType: ['type'],
                  NonNullType: ['type'],
                  SchemaDefinition: [
                    'description',
                    'directives',
                    'operationTypes',
                  ],
                  OperationTypeDefinition: ['type'],
                  ScalarTypeDefinition: ['description', 'name', 'directives'],
                  ObjectTypeDefinition: [
                    'description',
                    'name',
                    'interfaces',
                    'directives',
                    'fields',
                  ],
                  FieldDefinition: [
                    'description',
                    'name',
                    'arguments',
                    'type',
                    'directives',
                  ],
                  InputValueDefinition: [
                    'description',
                    'name',
                    'type',
                    'defaultValue',
                    'directives',
                  ],
                  InterfaceTypeDefinition: [
                    'description',
                    'name',
                    'interfaces',
                    'directives',
                    'fields',
                  ],
                  UnionTypeDefinition: [
                    'description',
                    'name',
                    'directives',
                    'types',
                  ],
                  EnumTypeDefinition: [
                    'description',
                    'name',
                    'directives',
                    'values',
                  ],
                  EnumValueDefinition: ['description', 'name', 'directives'],
                  InputObjectTypeDefinition: [
                    'description',
                    'name',
                    'directives',
                    'fields',
                  ],
                  DirectiveDefinition: [
                    'description',
                    'name',
                    'arguments',
                    'locations',
                  ],
                  SchemaExtension: ['directives', 'operationTypes'],
                  ScalarTypeExtension: ['name', 'directives'],
                  ObjectTypeExtension: [
                    'name',
                    'interfaces',
                    'directives',
                    'fields',
                  ],
                  InterfaceTypeExtension: [
                    'name',
                    'interfaces',
                    'directives',
                    'fields',
                  ],
                  UnionTypeExtension: ['name', 'directives', 'types'],
                  EnumTypeExtension: ['name', 'directives', 'values'],
                  InputObjectTypeExtension: ['name', 'directives', 'fields'],
                };
              n.QueryDocumentKeys = r;
              var o = Object.freeze({});
              function s(e, n, t) {
                var i = e[n];
                if (i) {
                  if (!t && 'function' == typeof i) return i;
                  var r = t ? i.leave : i.enter;
                  if ('function' == typeof r) return r;
                } else {
                  var o = t ? e.leave : e.enter;
                  if (o) {
                    if ('function' == typeof o) return o;
                    var a = o[n];
                    if ('function' == typeof a) return a;
                  }
                }
              }
              n.BREAK = o;
            }),
            D = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.print = function (e) {
                  return (0, b.visit)(e, { leave: t });
                });
              var t = {
                Name: function (e) {
                  return e.value;
                },
                Variable: function (e) {
                  return '$' + e.name;
                },
                Document: function (e) {
                  return r(e.definitions, '\n\n') + '\n';
                },
                OperationDefinition: function (e) {
                  var n = e.operation,
                    t = e.name,
                    i = a('(', r(e.variableDefinitions, ', '), ')'),
                    o = r(e.directives, ' '),
                    s = e.selectionSet;
                  return t || o || i || 'query' !== n
                    ? r([n, r([t, i]), o, s], ' ')
                    : s;
                },
                VariableDefinition: function (e) {
                  var n = e.variable,
                    t = e.type,
                    i = e.defaultValue,
                    o = e.directives;
                  return n + ': ' + t + a(' = ', i) + a(' ', r(o, ' '));
                },
                SelectionSet: function (e) {
                  return o(e.selections);
                },
                Field: function (e) {
                  var n = e.alias,
                    t = e.name,
                    i = e.arguments,
                    o = e.directives,
                    c = e.selectionSet,
                    u = a('', n, ': ') + t,
                    l = u + a('(', r(i, ', '), ')');
                  return (
                    l.length > 80 && (l = u + a('(\n', s(r(i, '\n')), '\n)')),
                    r([l, r(o, ' '), c], ' ')
                  );
                },
                Argument: function (e) {
                  return e.name + ': ' + e.value;
                },
                FragmentSpread: function (e) {
                  return '...' + e.name + a(' ', r(e.directives, ' '));
                },
                InlineFragment: function (e) {
                  var n = e.typeCondition,
                    t = e.directives,
                    i = e.selectionSet;
                  return r(['...', a('on ', n), r(t, ' '), i], ' ');
                },
                FragmentDefinition: function (e) {
                  var n = e.name,
                    t = e.typeCondition,
                    i = e.variableDefinitions,
                    o = e.directives,
                    s = e.selectionSet;
                  return (
                    'fragment '.concat(n).concat(a('(', r(i, ', '), ')'), ' ') +
                    'on '.concat(t, ' ').concat(a('', r(o, ' '), ' ')) +
                    s
                  );
                },
                IntValue: function (e) {
                  return e.value;
                },
                FloatValue: function (e) {
                  return e.value;
                },
                StringValue: function (e, n) {
                  var t = e.value;
                  return e.block
                    ? (0, k.printBlockString)(
                        t,
                        'description' === n ? '' : '  '
                      )
                    : JSON.stringify(t);
                },
                BooleanValue: function (e) {
                  return e.value ? 'true' : 'false';
                },
                NullValue: function () {
                  return 'null';
                },
                EnumValue: function (e) {
                  return e.value;
                },
                ListValue: function (e) {
                  return '[' + r(e.values, ', ') + ']';
                },
                ObjectValue: function (e) {
                  return '{' + r(e.fields, ', ') + '}';
                },
                ObjectField: function (e) {
                  return e.name + ': ' + e.value;
                },
                Directive: function (e) {
                  return '@' + e.name + a('(', r(e.arguments, ', '), ')');
                },
                NamedType: function (e) {
                  return e.name;
                },
                ListType: function (e) {
                  return '[' + e.type + ']';
                },
                NonNullType: function (e) {
                  return e.type + '!';
                },
                SchemaDefinition: i(function (e) {
                  var n = e.directives,
                    t = e.operationTypes;
                  return r(['schema', r(n, ' '), o(t)], ' ');
                }),
                OperationTypeDefinition: function (e) {
                  return e.operation + ': ' + e.type;
                },
                ScalarTypeDefinition: i(function (e) {
                  return r(['scalar', e.name, r(e.directives, ' ')], ' ');
                }),
                ObjectTypeDefinition: i(function (e) {
                  var n = e.name,
                    t = e.interfaces,
                    i = e.directives,
                    s = e.fields;
                  return r(
                    ['type', n, a('implements ', r(t, ' & ')), r(i, ' '), o(s)],
                    ' '
                  );
                }),
                FieldDefinition: i(function (e) {
                  var n = e.name,
                    t = e.arguments,
                    i = e.type,
                    o = e.directives;
                  return (
                    n +
                    (u(t)
                      ? a('(\n', s(r(t, '\n')), '\n)')
                      : a('(', r(t, ', '), ')')) +
                    ': ' +
                    i +
                    a(' ', r(o, ' '))
                  );
                }),
                InputValueDefinition: i(function (e) {
                  var n = e.name,
                    t = e.type,
                    i = e.defaultValue,
                    o = e.directives;
                  return r([n + ': ' + t, a('= ', i), r(o, ' ')], ' ');
                }),
                InterfaceTypeDefinition: i(function (e) {
                  var n = e.name,
                    t = e.interfaces,
                    i = e.directives,
                    s = e.fields;
                  return r(
                    [
                      'interface',
                      n,
                      a('implements ', r(t, ' & ')),
                      r(i, ' '),
                      o(s),
                    ],
                    ' '
                  );
                }),
                UnionTypeDefinition: i(function (e) {
                  var n = e.name,
                    t = e.directives,
                    i = e.types;
                  return r(
                    [
                      'union',
                      n,
                      r(t, ' '),
                      i && 0 !== i.length ? '= ' + r(i, ' | ') : '',
                    ],
                    ' '
                  );
                }),
                EnumTypeDefinition: i(function (e) {
                  var n = e.name,
                    t = e.directives,
                    i = e.values;
                  return r(['enum', n, r(t, ' '), o(i)], ' ');
                }),
                EnumValueDefinition: i(function (e) {
                  return r([e.name, r(e.directives, ' ')], ' ');
                }),
                InputObjectTypeDefinition: i(function (e) {
                  var n = e.name,
                    t = e.directives,
                    i = e.fields;
                  return r(['input', n, r(t, ' '), o(i)], ' ');
                }),
                DirectiveDefinition: i(function (e) {
                  var n = e.name,
                    t = e.arguments,
                    i = e.repeatable,
                    o = e.locations;
                  return (
                    'directive @' +
                    n +
                    (u(t)
                      ? a('(\n', s(r(t, '\n')), '\n)')
                      : a('(', r(t, ', '), ')')) +
                    (i ? ' repeatable' : '') +
                    ' on ' +
                    r(o, ' | ')
                  );
                }),
                SchemaExtension: function (e) {
                  var n = e.directives,
                    t = e.operationTypes;
                  return r(['extend schema', r(n, ' '), o(t)], ' ');
                },
                ScalarTypeExtension: function (e) {
                  return r(
                    ['extend scalar', e.name, r(e.directives, ' ')],
                    ' '
                  );
                },
                ObjectTypeExtension: function (e) {
                  var n = e.name,
                    t = e.interfaces,
                    i = e.directives,
                    s = e.fields;
                  return r(
                    [
                      'extend type',
                      n,
                      a('implements ', r(t, ' & ')),
                      r(i, ' '),
                      o(s),
                    ],
                    ' '
                  );
                },
                InterfaceTypeExtension: function (e) {
                  var n = e.name,
                    t = e.interfaces,
                    i = e.directives,
                    s = e.fields;
                  return r(
                    [
                      'extend interface',
                      n,
                      a('implements ', r(t, ' & ')),
                      r(i, ' '),
                      o(s),
                    ],
                    ' '
                  );
                },
                UnionTypeExtension: function (e) {
                  var n = e.name,
                    t = e.directives,
                    i = e.types;
                  return r(
                    [
                      'extend union',
                      n,
                      r(t, ' '),
                      i && 0 !== i.length ? '= ' + r(i, ' | ') : '',
                    ],
                    ' '
                  );
                },
                EnumTypeExtension: function (e) {
                  var n = e.name,
                    t = e.directives,
                    i = e.values;
                  return r(['extend enum', n, r(t, ' '), o(i)], ' ');
                },
                InputObjectTypeExtension: function (e) {
                  var n = e.name,
                    t = e.directives,
                    i = e.fields;
                  return r(['extend input', n, r(t, ' '), o(i)], ' ');
                },
              };
              function i(e) {
                return function (n) {
                  return r([n.description, e(n)], '\n');
                };
              }
              function r(e) {
                var n,
                  t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : '';
                return null !==
                  (n =
                    null == e
                      ? void 0
                      : e
                          .filter(function (e) {
                            return e;
                          })
                          .join(t)) && void 0 !== n
                  ? n
                  : '';
              }
              function o(e) {
                return a('{\n', s(r(e, '\n')), '\n}');
              }
              function a(e, n) {
                var t =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : '';
                return null != n && '' !== n ? e + n + t : '';
              }
              function s(e) {
                return a('  ', e.replace(/\n/g, '\n  '));
              }
              function c(e) {
                return -1 !== e.indexOf('\n');
              }
              function u(e) {
                return null != e && e.some(c);
              }
            }),
            A = i(function (e, n) {
              function t(e) {
                return (
                  e.kind === f.Kind.OPERATION_DEFINITION ||
                  e.kind === f.Kind.FRAGMENT_DEFINITION
                );
              }
              function i(e) {
                return (
                  e.kind === f.Kind.SCHEMA_DEFINITION ||
                  r(e) ||
                  e.kind === f.Kind.DIRECTIVE_DEFINITION
                );
              }
              function r(e) {
                return (
                  e.kind === f.Kind.SCALAR_TYPE_DEFINITION ||
                  e.kind === f.Kind.OBJECT_TYPE_DEFINITION ||
                  e.kind === f.Kind.INTERFACE_TYPE_DEFINITION ||
                  e.kind === f.Kind.UNION_TYPE_DEFINITION ||
                  e.kind === f.Kind.ENUM_TYPE_DEFINITION ||
                  e.kind === f.Kind.INPUT_OBJECT_TYPE_DEFINITION
                );
              }
              function o(e) {
                return e.kind === f.Kind.SCHEMA_EXTENSION || a(e);
              }
              function a(e) {
                return (
                  e.kind === f.Kind.SCALAR_TYPE_EXTENSION ||
                  e.kind === f.Kind.OBJECT_TYPE_EXTENSION ||
                  e.kind === f.Kind.INTERFACE_TYPE_EXTENSION ||
                  e.kind === f.Kind.UNION_TYPE_EXTENSION ||
                  e.kind === f.Kind.ENUM_TYPE_EXTENSION ||
                  e.kind === f.Kind.INPUT_OBJECT_TYPE_EXTENSION
                );
              }
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.isDefinitionNode = function (e) {
                  return t(e) || i(e) || o(e);
                }),
                (n.isExecutableDefinitionNode = t),
                (n.isSelectionNode = function (e) {
                  return (
                    e.kind === f.Kind.FIELD ||
                    e.kind === f.Kind.FRAGMENT_SPREAD ||
                    e.kind === f.Kind.INLINE_FRAGMENT
                  );
                }),
                (n.isValueNode = function (e) {
                  return (
                    e.kind === f.Kind.VARIABLE ||
                    e.kind === f.Kind.INT ||
                    e.kind === f.Kind.FLOAT ||
                    e.kind === f.Kind.STRING ||
                    e.kind === f.Kind.BOOLEAN ||
                    e.kind === f.Kind.NULL ||
                    e.kind === f.Kind.ENUM ||
                    e.kind === f.Kind.LIST ||
                    e.kind === f.Kind.OBJECT
                  );
                }),
                (n.isTypeNode = function (e) {
                  return (
                    e.kind === f.Kind.NAMED_TYPE ||
                    e.kind === f.Kind.LIST_TYPE ||
                    e.kind === f.Kind.NON_NULL_TYPE
                  );
                }),
                (n.isTypeSystemDefinitionNode = i),
                (n.isTypeDefinitionNode = r),
                (n.isTypeSystemExtensionNode = o),
                (n.isTypeExtensionNode = a);
            }),
            x = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                Object.defineProperty(n, 'Source', {
                  enumerable: !0,
                  get: function () {
                    return l.Source;
                  },
                }),
                Object.defineProperty(n, 'getLocation', {
                  enumerable: !0,
                  get: function () {
                    return d.getLocation;
                  },
                }),
                Object.defineProperty(n, 'printLocation', {
                  enumerable: !0,
                  get: function () {
                    return p.printLocation;
                  },
                }),
                Object.defineProperty(n, 'printSourceLocation', {
                  enumerable: !0,
                  get: function () {
                    return p.printSourceLocation;
                  },
                }),
                Object.defineProperty(n, 'Kind', {
                  enumerable: !0,
                  get: function () {
                    return f.Kind;
                  },
                }),
                Object.defineProperty(n, 'TokenKind', {
                  enumerable: !0,
                  get: function () {
                    return h.TokenKind;
                  },
                }),
                Object.defineProperty(n, 'Lexer', {
                  enumerable: !0,
                  get: function () {
                    return _.Lexer;
                  },
                }),
                Object.defineProperty(n, 'parse', {
                  enumerable: !0,
                  get: function () {
                    return I.parse;
                  },
                }),
                Object.defineProperty(n, 'parseValue', {
                  enumerable: !0,
                  get: function () {
                    return I.parseValue;
                  },
                }),
                Object.defineProperty(n, 'parseType', {
                  enumerable: !0,
                  get: function () {
                    return I.parseType;
                  },
                }),
                Object.defineProperty(n, 'print', {
                  enumerable: !0,
                  get: function () {
                    return D.print;
                  },
                }),
                Object.defineProperty(n, 'visit', {
                  enumerable: !0,
                  get: function () {
                    return b.visit;
                  },
                }),
                Object.defineProperty(n, 'visitInParallel', {
                  enumerable: !0,
                  get: function () {
                    return b.visitInParallel;
                  },
                }),
                Object.defineProperty(n, 'getVisitFn', {
                  enumerable: !0,
                  get: function () {
                    return b.getVisitFn;
                  },
                }),
                Object.defineProperty(n, 'BREAK', {
                  enumerable: !0,
                  get: function () {
                    return b.BREAK;
                  },
                }),
                Object.defineProperty(n, 'Location', {
                  enumerable: !0,
                  get: function () {
                    return N.Location;
                  },
                }),
                Object.defineProperty(n, 'Token', {
                  enumerable: !0,
                  get: function () {
                    return N.Token;
                  },
                }),
                Object.defineProperty(n, 'isDefinitionNode', {
                  enumerable: !0,
                  get: function () {
                    return A.isDefinitionNode;
                  },
                }),
                Object.defineProperty(n, 'isExecutableDefinitionNode', {
                  enumerable: !0,
                  get: function () {
                    return A.isExecutableDefinitionNode;
                  },
                }),
                Object.defineProperty(n, 'isSelectionNode', {
                  enumerable: !0,
                  get: function () {
                    return A.isSelectionNode;
                  },
                }),
                Object.defineProperty(n, 'isValueNode', {
                  enumerable: !0,
                  get: function () {
                    return A.isValueNode;
                  },
                }),
                Object.defineProperty(n, 'isTypeNode', {
                  enumerable: !0,
                  get: function () {
                    return A.isTypeNode;
                  },
                }),
                Object.defineProperty(n, 'isTypeSystemDefinitionNode', {
                  enumerable: !0,
                  get: function () {
                    return A.isTypeSystemDefinitionNode;
                  },
                }),
                Object.defineProperty(n, 'isTypeDefinitionNode', {
                  enumerable: !0,
                  get: function () {
                    return A.isTypeDefinitionNode;
                  },
                }),
                Object.defineProperty(n, 'isTypeSystemExtensionNode', {
                  enumerable: !0,
                  get: function () {
                    return A.isTypeSystemExtensionNode;
                  },
                }),
                Object.defineProperty(n, 'isTypeExtensionNode', {
                  enumerable: !0,
                  get: function () {
                    return A.isTypeExtensionNode;
                  },
                }),
                Object.defineProperty(n, 'DirectiveLocation', {
                  enumerable: !0,
                  get: function () {
                    return O.DirectiveLocation;
                  },
                });
            }),
            S = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.locatedError = function (e, n, t) {
                  var r,
                    o =
                      e instanceof Error
                        ? e
                        : new Error(
                            'Unexpected error value: ' + (0, i.default)(e)
                          );
                  return Array.isArray(o.path)
                    ? o
                    : new v.GraphQLError(
                        o.message,
                        null !== (r = o.nodes) && void 0 !== r ? r : n,
                        o.source,
                        o.positions,
                        t,
                        o
                      );
                });
              var t,
                i = (t = a) && t.__esModule ? t : { default: t };
            }),
            K = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                (n.formatError = function (e) {
                  var n;
                  e || (0, i.default)(0, 'Received null or undefined error.');
                  var t =
                      null !== (n = e.message) && void 0 !== n
                        ? n
                        : 'An unknown error occurred.',
                    r = e.locations,
                    o = e.path,
                    a = e.extensions;
                  return a
                    ? { message: t, locations: r, path: o, extensions: a }
                    : { message: t, locations: r, path: o };
                });
              var t,
                i = (t = c) && t.__esModule ? t : { default: t };
            }),
            g = i(function (e, n) {
              Object.defineProperty(n, '__esModule', { value: !0 }),
                Object.defineProperty(n, 'GraphQLError', {
                  enumerable: !0,
                  get: function () {
                    return v.GraphQLError;
                  },
                }),
                Object.defineProperty(n, 'printError', {
                  enumerable: !0,
                  get: function () {
                    return v.printError;
                  },
                }),
                Object.defineProperty(n, 'syntaxError', {
                  enumerable: !0,
                  get: function () {
                    return E.syntaxError;
                  },
                }),
                Object.defineProperty(n, 'locatedError', {
                  enumerable: !0,
                  get: function () {
                    return S.locatedError;
                  },
                }),
                Object.defineProperty(n, 'formatError', {
                  enumerable: !0,
                  get: function () {
                    return K.formatError;
                  },
                });
            });
          return {
            parsers: {
              graphql: {
                parse: function (e) {
                  var t = x;
                  try {
                    var r = (function (e, n) {
                      var t = {
                        allowLegacySDLImplementsInterfaces: !1,
                        experimentalFragmentVariables: !0,
                      };
                      try {
                        return e(n, t);
                      } catch (i) {
                        return (
                          (t.allowLegacySDLImplementsInterfaces = !0), e(n, t)
                        );
                      }
                    })(t.parse, e);
                    return (
                      (r.comments = (function (e) {
                        for (
                          var n = [], t = r.loc.startToken.next;
                          '<EOF>' !== t.kind;

                        )
                          'Comment' === t.kind &&
                            (Object.assign(t, { column: t.column - 1 }),
                            n.push(t)),
                            (t = t.next);
                        return n;
                      })()),
                      (function e(n) {
                        if (n && 'object' == s(n))
                          for (var t in (delete n.startToken,
                          delete n.endToken,
                          delete n.prev,
                          delete n.next,
                          n))
                            e(n[t]);
                        return n;
                      })(r),
                      r
                    );
                  } catch (e) {
                    if (e instanceof g.GraphQLError)
                      throw (function (e, n) {
                        var t = new SyntaxError(
                          e + ' (' + n.start.line + ':' + n.start.column + ')'
                        );
                        return (t.loc = n), t;
                      })(e.message, { start: n(e.locations, 1)[0] });
                    throw e;
                  }
                },
                astFormat: 'graphql',
                hasPragma: function (e) {
                  return /^\s*#[^\S\n]*@(format|prettier)\s*(\n|$)/.test(e);
                },
                locStart: e,
                locEnd: t,
              },
            },
          };
        });
      },
      {},
    ],
    O0Wf: [
      function (require, module, exports) {
        'use strict';
        var t =
            (this && this.__assign) ||
            function () {
              return (t =
                Object.assign ||
                function (t) {
                  for (var e, n = 1, r = arguments.length; n < r; n++)
                    for (var i in (e = arguments[n]))
                      Object.prototype.hasOwnProperty.call(e, i) &&
                        (t[i] = e[i]);
                  return t;
                }).apply(this, arguments);
            },
          e =
            (this && this.__createBinding) ||
            (Object.create
              ? function (t, e, n, r) {
                  void 0 === r && (r = n),
                    Object.defineProperty(t, r, {
                      enumerable: !0,
                      get: function () {
                        return e[n];
                      },
                    });
                }
              : function (t, e, n, r) {
                  void 0 === r && (r = n), (t[r] = e[n]);
                }),
          n =
            (this && this.__setModuleDefault) ||
            (Object.create
              ? function (t, e) {
                  Object.defineProperty(t, 'default', {
                    enumerable: !0,
                    value: e,
                  });
                }
              : function (t, e) {
                  t.default = e;
                }),
          r =
            (this && this.__importStar) ||
            function (t) {
              if (t && t.__esModule) return t;
              var r = {};
              if (null != t)
                for (var i in t)
                  'default' !== i &&
                    Object.hasOwnProperty.call(t, i) &&
                    e(r, t, i);
              return n(r, t), r;
            },
          i =
            (this && this.__awaiter) ||
            function (t, e, n, r) {
              return new (n || (n = Promise))(function (i, o) {
                function u(t) {
                  try {
                    c(r.next(t));
                  } catch (e) {
                    o(e);
                  }
                }
                function a(t) {
                  try {
                    c(r.throw(t));
                  } catch (e) {
                    o(e);
                  }
                }
                function c(t) {
                  var e;
                  t.done
                    ? i(t.value)
                    : ((e = t.value),
                      e instanceof n
                        ? e
                        : new n(function (t) {
                            t(e);
                          })).then(u, a);
                }
                c((r = r.apply(t, e || [])).next());
              });
            },
          o =
            (this && this.__generator) ||
            function (t, e) {
              var n,
                r,
                i,
                o,
                u = {
                  label: 0,
                  sent: function () {
                    if (1 & i[0]) throw i[1];
                    return i[1];
                  },
                  trys: [],
                  ops: [],
                };
              return (
                (o = { next: a(0), throw: a(1), return: a(2) }),
                'function' == typeof Symbol &&
                  (o[Symbol.iterator] = function () {
                    return this;
                  }),
                o
              );
              function a(o) {
                return function (a) {
                  return (function (o) {
                    if (n)
                      throw new TypeError('Generator is already executing.');
                    for (; u; )
                      try {
                        if (
                          ((n = 1),
                          r &&
                            (i =
                              2 & o[0]
                                ? r.return
                                : o[0]
                                ? r.throw || ((i = r.return) && i.call(r), 0)
                                : r.next) &&
                            !(i = i.call(r, o[1])).done)
                        )
                          return i;
                        switch (
                          ((r = 0), i && (o = [2 & o[0], i.value]), o[0])
                        ) {
                          case 0:
                          case 1:
                            i = o;
                            break;
                          case 4:
                            return u.label++, { value: o[1], done: !1 };
                          case 5:
                            u.label++, (r = o[1]), (o = [0]);
                            continue;
                          case 7:
                            (o = u.ops.pop()), u.trys.pop();
                            continue;
                          default:
                            if (
                              !(i =
                                (i = u.trys).length > 0 && i[i.length - 1]) &&
                              (6 === o[0] || 2 === o[0])
                            ) {
                              u = 0;
                              continue;
                            }
                            if (
                              3 === o[0] &&
                              (!i || (o[1] > i[0] && o[1] < i[3]))
                            ) {
                              u.label = o[1];
                              break;
                            }
                            if (6 === o[0] && u.label < i[1]) {
                              (u.label = i[1]), (i = o);
                              break;
                            }
                            if (i && u.label < i[2]) {
                              (u.label = i[2]), u.ops.push(o);
                              break;
                            }
                            i[2] && u.ops.pop(), u.trys.pop();
                            continue;
                        }
                        o = e.call(t, u);
                      } catch (a) {
                        (o = [6, a]), (r = 0);
                      } finally {
                        n = i = 0;
                      }
                    if (5 & o[0]) throw o[1];
                    return { value: o[0] ? o[1] : void 0, done: !0 };
                  })([o, a]);
                };
              }
            };
        Object.defineProperty(exports, '__esModule', { value: !0 }),
          (exports.GraphQLWorker = void 0);
        var u = require('graphql-language-service'),
          a = require('./utils'),
          c = (function () {
            function e(t, e) {
              (this._ctx = t),
                (this._languageService = new u.LanguageService(
                  e.languageConfig
                )),
                (this._formattingOptions = e.formattingOptions);
            }
            return (
              (e.prototype.getSchemaResponse = function (t) {
                return i(this, void 0, void 0, function () {
                  return o(this, function (t) {
                    return [2, this._languageService.getSchemaResponse()];
                  });
                });
              }),
              (e.prototype.setSchema = function (t) {
                return i(this, void 0, void 0, function () {
                  return o(this, function (e) {
                    switch (e.label) {
                      case 0:
                        return [4, this._languageService.setSchema(t)];
                      case 1:
                        return e.sent(), [2];
                    }
                  });
                });
              }),
              (e.prototype.loadSchema = function (t) {
                return i(this, void 0, void 0, function () {
                  return o(this, function (t) {
                    return [2, this._languageService.getSchema()];
                  });
                });
              }),
              (e.prototype.doValidation = function (t) {
                return i(this, void 0, void 0, function () {
                  var e;
                  return o(this, function (n) {
                    switch (n.label) {
                      case 0:
                        return (
                          (e = this._getTextDocument(t)),
                          [4, this._languageService.getDiagnostics(t, e)]
                        );
                      case 1:
                        return [2, n.sent().map(a.toMarkerData)];
                    }
                  });
                });
              }),
              (e.prototype.doComplete = function (t, e) {
                return i(this, void 0, void 0, function () {
                  var n, r;
                  return o(this, function (i) {
                    switch (i.label) {
                      case 0:
                        return (
                          (n = this._getTextDocument(t)),
                          (r = a.toGraphQLPosition(e)),
                          [4, this._languageService.getCompletion(t, n, r)]
                        );
                      case 1:
                        return [
                          2,
                          i.sent().map(function (t) {
                            return a.toCompletion(t);
                          }),
                        ];
                    }
                  });
                });
              }),
              (e.prototype.doHover = function (t, e) {
                return i(this, void 0, void 0, function () {
                  var n, r;
                  return o(this, function (i) {
                    switch (i.label) {
                      case 0:
                        return (
                          (n = this._getTextDocument(t)),
                          (r = a.toGraphQLPosition(e)),
                          [4, this._languageService.getHover(t, n, r)]
                        );
                      case 1:
                        return [
                          2,
                          {
                            content: i.sent(),
                            range: a.toMonacoRange(
                              u.getRange(
                                { column: r.character, line: r.line },
                                n
                              )
                            ),
                          },
                        ];
                    }
                  });
                });
              }),
              (e.prototype.doFormat = function (e) {
                return i(this, void 0, void 0, function () {
                  var n, i;
                  return o(this, function (o) {
                    switch (o.label) {
                      case 0:
                        return [
                          4,
                          Promise.resolve().then(function () {
                            return r(require('prettier/standalone'));
                          }),
                        ];
                      case 1:
                        return (
                          (n = o.sent()),
                          [
                            4,
                            Promise.resolve().then(function () {
                              return r(require('prettier/parser-graphql'));
                            }),
                          ]
                        );
                      case 2:
                        return (
                          (i = o.sent()),
                          [
                            2,
                            n.format(
                              e,
                              t(t({}, this._formattingOptions), {
                                parser: 'graphql',
                                plugins: [i],
                              })
                            ),
                          ]
                        );
                    }
                  });
                });
              }),
              (e.prototype.doParse = function (t) {
                return i(this, void 0, void 0, function () {
                  return o(this, function (e) {
                    return [2, this._languageService.parse(t)];
                  });
                });
              }),
              (e.prototype._getTextDocument = function (t) {
                var e = this._ctx.getMirrorModels();
                return e.length > 0 ? e[0].getValue() : '';
              }),
              e
            );
          })();
        exports.GraphQLWorker = c;
      },
      {
        'graphql-language-service': 'li70',
        './utils': 'O3mK',
        'prettier/standalone': 'sTmO',
        'prettier/parser-graphql': 'Jidm',
      },
    ],
    ZXZ8: [
      function (require, module, exports) {
        'use strict';
        var t =
            (this && this.__extends) ||
            (function () {
              var t = function (e, n) {
                return (t =
                  Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array &&
                    function (t, e) {
                      t.__proto__ = e;
                    }) ||
                  function (t, e) {
                    for (var n in e)
                      Object.prototype.hasOwnProperty.call(e, n) &&
                        (t[n] = e[n]);
                  })(e, n);
              };
              return function (e, n) {
                function r() {
                  this.constructor = e;
                }
                t(e, n),
                  (e.prototype =
                    null === n
                      ? Object.create(n)
                      : ((r.prototype = n.prototype), new r()));
              };
            })(),
          e =
            (this && this.__assign) ||
            function () {
              return (e =
                Object.assign ||
                function (t) {
                  for (var e, n = 1, r = arguments.length; n < r; n++)
                    for (var o in (e = arguments[n]))
                      Object.prototype.hasOwnProperty.call(e, o) &&
                        (t[o] = e[o]);
                  return t;
                }).apply(this, arguments);
            },
          n =
            (this && this.__awaiter) ||
            function (t, e, n, r) {
              return new (n || (n = Promise))(function (o, i) {
                function u(t) {
                  try {
                    c(r.next(t));
                  } catch (e) {
                    i(e);
                  }
                }
                function a(t) {
                  try {
                    c(r.throw(t));
                  } catch (e) {
                    i(e);
                  }
                }
                function c(t) {
                  var e;
                  t.done
                    ? o(t.value)
                    : ((e = t.value),
                      e instanceof n
                        ? e
                        : new n(function (t) {
                            t(e);
                          })).then(u, a);
                }
                c((r = r.apply(t, e || [])).next());
              });
            },
          r =
            (this && this.__generator) ||
            function (t, e) {
              var n,
                r,
                o,
                i,
                u = {
                  label: 0,
                  sent: function () {
                    if (1 & o[0]) throw o[1];
                    return o[1];
                  },
                  trys: [],
                  ops: [],
                };
              return (
                (i = { next: a(0), throw: a(1), return: a(2) }),
                'function' == typeof Symbol &&
                  (i[Symbol.iterator] = function () {
                    return this;
                  }),
                i
              );
              function a(i) {
                return function (a) {
                  return (function (i) {
                    if (n)
                      throw new TypeError('Generator is already executing.');
                    for (; u; )
                      try {
                        if (
                          ((n = 1),
                          r &&
                            (o =
                              2 & i[0]
                                ? r.return
                                : i[0]
                                ? r.throw || ((o = r.return) && o.call(r), 0)
                                : r.next) &&
                            !(o = o.call(r, i[1])).done)
                        )
                          return o;
                        switch (
                          ((r = 0), o && (i = [2 & i[0], o.value]), i[0])
                        ) {
                          case 0:
                          case 1:
                            o = i;
                            break;
                          case 4:
                            return u.label++, { value: i[1], done: !1 };
                          case 5:
                            u.label++, (r = i[1]), (i = [0]);
                            continue;
                          case 7:
                            (i = u.ops.pop()), u.trys.pop();
                            continue;
                          default:
                            if (
                              !(o =
                                (o = u.trys).length > 0 && o[o.length - 1]) &&
                              (6 === i[0] || 2 === i[0])
                            ) {
                              u = 0;
                              continue;
                            }
                            if (
                              3 === i[0] &&
                              (!o || (i[1] > o[0] && i[1] < o[3]))
                            ) {
                              u.label = i[1];
                              break;
                            }
                            if (6 === i[0] && u.label < o[1]) {
                              (u.label = o[1]), (o = i);
                              break;
                            }
                            if (o && u.label < o[2]) {
                              (u.label = o[2]), u.ops.push(i);
                              break;
                            }
                            o[2] && u.ops.pop(), u.trys.pop();
                            continue;
                        }
                        i = e.call(t, u);
                      } catch (a) {
                        (i = [6, a]), (r = 0);
                      } finally {
                        n = o = 0;
                      }
                    if (5 & i[0]) throw i[1];
                    return { value: i[0] ? i[1] : void 0, done: !0 };
                  })([i, a]);
                };
              }
            };
        Object.defineProperty(exports, '__esModule', { value: !0 });
        var o = require('use-monaco/worker'),
          i = require('monaco-graphql/dist/GraphQLWorker');
        o.initialize(
          'graphql',
          (function (o) {
            function u(t, u) {
              var a = o.call(this, t, u) || this;
              return (
                (a.provideHover = function (t, o) {
                  return n(a, void 0, void 0, function () {
                    var n;
                    return r(this, function (r) {
                      switch (r.label) {
                        case 0:
                          return [4, this.worker.doHover(t.uri.path, o)];
                        case 1:
                          return [
                            2,
                            {
                              contents: [{ value: (n = r.sent()).content }],
                              range: e(e({}, n.range), {
                                startLineNumber: n.range.startLineNumber + 1,
                                endLineNumber: n.range.endLineNumber + 1,
                              }),
                            },
                          ];
                      }
                    });
                  });
                }),
                (a.provideDocumentFormattingEdits = function (t) {
                  return n(a, void 0, void 0, function () {
                    var e, n;
                    return r(this, function (r) {
                      switch (r.label) {
                        case 0:
                          return [4, this.worker.doFormat(t.getValue())];
                        case 1:
                          return (
                            (e = r.sent()),
                            [
                              2,
                              [
                                {
                                  range: {
                                    startLineNumber: 1,
                                    endLineNumber: (n = e.split('\n')).length,
                                    startColumn: 0,
                                    endColumn: n[n.length - 1].length,
                                  },
                                  text: e,
                                },
                              ],
                            ]
                          );
                      }
                    });
                  });
                }),
                (a.provideCompletionItems = function (t, e, o) {
                  return n(a, void 0, void 0, function () {
                    return r(this, function (n) {
                      switch (n.label) {
                        case 0:
                          return [4, this.worker.doComplete(t.uri.path, e)];
                        case 1:
                          return [2, { suggestions: n.sent() }];
                      }
                    });
                  });
                }),
                (a.resolveCompletionItem = function (t, e, o) {
                  return n(a, void 0, void 0, function () {
                    return r(this, function (t) {
                      return [2, o];
                    });
                  });
                }),
                (a.worker = new i.GraphQLWorker(t, u)),
                a.worker.loadSchema(),
                a
              );
            }
            return (
              t(u, o),
              (u.prototype.doValidation = function (t) {
                return this.worker.doValidation(t);
              }),
              u
            );
          })(o.BaseWorker)
        );
      },
      {
        'use-monaco/worker': 'P4Xe',
        'monaco-graphql/dist/GraphQLWorker': 'O0Wf',
      },
    ],
  },
  {},
  ['ZXZ8'],
  null
);
//# sourceMappingURL=/worker.js.map
